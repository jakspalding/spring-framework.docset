<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>RadioButtonsTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/RadioButtonsTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RadioButtonsTag()</Name>
      <Type>Constructor</Type>
      <Scope>RadioButtonsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/RadioButtonsTag.html</Path>
    <Anchor>RadioButtonsTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RadioButtonTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/RadioButtonTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RadioButtonTag()</Name>
      <Type>Constructor</Type>
      <Scope>RadioButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/RadioButtonTag.html</Path>
    <Anchor>RadioButtonTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>raiseMissingCookieException(String, Class)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>raiseMissingCookieException(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>raiseMissingHeaderException(String, Class)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>raiseMissingHeaderException(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>raiseMissingParameterException(String, Class)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>raiseMissingParameterException(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>raiseSessionRequiredException(String)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>raiseSessionRequiredException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawTargetAccess</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/RawTargetAccess.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RdbmsOperation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RdbmsOperation()</Name>
      <Type>Constructor</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>RdbmsOperation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>BeanExpressionContextAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanExpressionContextAccessor.html</Path>
    <Anchor>read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanFactoryAccessor.html</Path>
    <Anchor>read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>EnvironmentAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/EnvironmentAccessor.html</Path>
    <Anchor>read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>MapAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/MapAccessor.html</Path>
    <Anchor>read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(EvaluationContext, Object, String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/PropertyAccessor.html</Path>
    <Anchor>read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>ReflectivePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
    <Anchor>read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(Class&amp;lt;? extends T&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>read(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(Class&amp;lt;? extends BufferedImage&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>BufferedImageHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
    <Anchor>read(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(Class&amp;lt;? extends MultiValueMap&amp;lt;String, ?&amp;gt;&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>FormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
    <Anchor>read(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(Type, Class&amp;lt;?&amp;gt;, HttpInputMessage)</Name>
      <Type>intfm</Type>
      <Scope>GenericHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/GenericHttpMessageConverter.html</Path>
    <Anchor>read(java.lang.reflect.Type, java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(Class&amp;lt;? extends T&amp;gt;, HttpInputMessage)</Name>
      <Type>intfm</Type>
      <Scope>HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageConverter.html</Path>
    <Anchor>read(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(Type, Class&amp;lt;?&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>read(java.lang.reflect.Type, java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(Type, Class&amp;lt;?&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>read(java.lang.reflect.Type, java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(Type, Class&amp;lt;?&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2CollectionHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.html</Path>
    <Anchor>read(java.lang.reflect.Type, java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read(InputStream)</Name>
      <Type>instm</Type>
      <Scope>CommAreaRecord</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CommAreaRecord.html</Path>
    <Anchor>read(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read()</Name>
      <Type>instm</Type>
      <Scope>DelegatingServletInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/DelegatingServletInputStream.html</Path>
    <Anchor>read()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_ONLY_MARKER</Name>
      <Type>Field</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>READ_ONLY_MARKER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReadableInstantPrinter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.datetime.joda</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/ReadableInstantPrinter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReadableInstantPrinter(DateTimeFormatter)</Name>
      <Type>Constructor</Type>
      <Scope>ReadableInstantPrinter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/ReadableInstantPrinter.html</Path>
    <Anchor>ReadableInstantPrinter(org.joda.time.format.DateTimeFormatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReadablePartialPrinter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.datetime.joda</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/ReadablePartialPrinter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReadablePartialPrinter(DateTimeFormatter)</Name>
      <Type>Constructor</Type>
      <Scope>ReadablePartialPrinter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/ReadablePartialPrinter.html</Path>
    <Anchor>ReadablePartialPrinter(org.joda.time.format.DateTimeFormatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBodyContent()</Name>
      <Type>instm</Type>
      <Scope>EscapeBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EscapeBodyTag.html</Path>
    <Anchor>readBodyContent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReaderContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReaderContext(Resource, ProblemReporter, ReaderEventListener, SourceExtractor)</Name>
      <Type>Constructor</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>ReaderContext(org.springframework.core.io.Resource, org.springframework.beans.factory.parsing.ProblemReporter, org.springframework.beans.factory.parsing.ReaderEventListener, org.springframework.beans.factory.parsing.SourceExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReaderEventListener</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderEventListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromSource(Class&amp;lt;? extends T&amp;gt;, HttpHeaders, Source)</Name>
      <Type>instm</Type>
      <Scope>AbstractXmlHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html</Path>
    <Anchor>readFromSource(java.lang.Class, org.springframework.http.HttpHeaders, javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromSource(Class&amp;lt;? extends T&amp;gt;, HttpHeaders, Source)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2CollectionHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.html</Path>
    <Anchor>readFromSource(java.lang.Class, org.springframework.http.HttpHeaders, javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromSource(Class&amp;lt;?&amp;gt;, HttpHeaders, Source)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2RootElementHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html</Path>
    <Anchor>readFromSource(java.lang.Class, org.springframework.http.HttpHeaders, javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromSource(Class&amp;lt;?&amp;gt;, HttpHeaders, Source)</Name>
      <Type>instm</Type>
      <Scope>MarshallingHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/MarshallingHttpMessageConverter.html</Path>
    <Anchor>readFromSource(java.lang.Class, org.springframework.http.HttpHeaders, javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromSource(Class, HttpHeaders, Source)</Name>
      <Type>instm</Type>
      <Scope>SourceHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/SourceHttpMessageConverter.html</Path>
    <Anchor>readFromSource(java.lang.Class, org.springframework.http.HttpHeaders, javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readInternal(Class&amp;lt;? extends T&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readInternal(Class, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>ByteArrayHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ByteArrayHttpMessageConverter.html</Path>
    <Anchor>readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readInternal(Class&amp;lt;? extends T&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>AbstractWireFeedHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/AbstractWireFeedHttpMessageConverter.html</Path>
    <Anchor>readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readInternal(Class&amp;lt;?&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readInternal(Class&amp;lt;?&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readInternal(Class&amp;lt;? extends Object&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>ObjectToStringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ObjectToStringHttpMessageConverter.html</Path>
    <Anchor>readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readInternal(Class&amp;lt;? extends Resource&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>ResourceHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ResourceHttpMessageConverter.html</Path>
    <Anchor>readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readInternal(Class&amp;lt;? extends String&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>StringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/StringHttpMessageConverter.html</Path>
    <Anchor>readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readInternal(Class&amp;lt;? extends T&amp;gt;, HttpInputMessage)</Name>
      <Type>instm</Type>
      <Scope>AbstractXmlHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html</Path>
    <Anchor>readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READONLY_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>READONLY_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READONLY_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>READONLY_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READONLY_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>TextareaTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TextareaTag.html</Path>
    <Anchor>READONLY_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readOnlyHttpHeaders(HttpHeaders)</Name>
      <Type>clm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>readOnlyHttpHeaders(org.springframework.http.HttpHeaders)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPdfResource()</Name>
      <Type>instm</Type>
      <Scope>AbstractPdfStamperView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfStamperView.html</Path>
    <Anchor>readPdfResource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRemoteInvocation(Message)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerServiceExporter.html</Path>
    <Anchor>readRemoteInvocation(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRemoteInvocation(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html</Path>
    <Anchor>readRemoteInvocation(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRemoteInvocation(HttpServletRequest, InputStream)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html</Path>
    <Anchor>readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRemoteInvocation(HttpExchange)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html</Path>
    <Anchor>readRemoteInvocation(com.sun.net.httpserver.HttpExchange)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRemoteInvocation(HttpExchange, InputStream)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html</Path>
    <Anchor>readRemoteInvocation(com.sun.net.httpserver.HttpExchange, java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRemoteInvocationResult(InputStream, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>readRemoteInvocationResult(java.io.InputStream, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readResolve()</Name>
      <Type>instm</Type>
      <Scope>StaticLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StaticLabeledEnum.html</Path>
    <Anchor>readResolve()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readResponseBody(HttpInvokerClientConfiguration, HttpURLConnection)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html</Path>
    <Anchor>readResponseBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.net.HttpURLConnection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readScript(LineNumberReader)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>readScript(java.io.LineNumberReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readScript(LineNumberReader, String)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>readScript(java.io.LineNumberReader, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readWithMessageConverters(NativeWebRequest, MethodParameter, Type)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageConverterMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.html</Path>
    <Anchor>readWithMessageConverters(org.springframework.web.context.request.NativeWebRequest, org.springframework.core.MethodParameter, java.lang.reflect.Type)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readWithMessageConverters(HttpInputMessage, MethodParameter, Type)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageConverterMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.html</Path>
    <Anchor>readWithMessageConverters(org.springframework.http.HttpInputMessage, org.springframework.core.MethodParameter, java.lang.reflect.Type)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readWithMessageConverters(NativeWebRequest, MethodParameter, Type)</Name>
      <Type>instm</Type>
      <Scope>RequestResponseBodyMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.html</Path>
    <Anchor>readWithMessageConverters(org.springframework.web.context.request.NativeWebRequest, org.springframework.core.MethodParameter, java.lang.reflect.Type)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealLiteral</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/RealLiteral.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealLiteral(String, int, double)</Name>
      <Type>Constructor</Type>
      <Scope>RealLiteral</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/RealLiteral.html</Path>
    <Anchor>RealLiteral(java.lang.String, int, double)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reason(Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>reason(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reason(String)</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>reason(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rebind(String, Object)</Name>
      <Type>instm</Type>
      <Scope>JndiTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiTemplate.html</Path>
    <Anchor>rebind(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rebind(String, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>rebind(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rebind(Name, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>rebind(javax.naming.Name, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rebind()</Name>
      <Type>instm</Type>
      <Scope>JndiRmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiServiceExporter.html</Path>
    <Anchor>rebind()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive()</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive(Destination)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receive(javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive(String)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receive(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive(Destination)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receive(javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive(String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receive(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RECEIVE_TIMEOUT_INDEFINITE_WAIT</Name>
      <Type>Field</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>RECEIVE_TIMEOUT_INDEFINITE_WAIT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RECEIVE_TIMEOUT_NO_WAIT</Name>
      <Type>Field</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>RECEIVE_TIMEOUT_NO_WAIT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveAndConvert()</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receiveAndConvert()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveAndConvert(Destination)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receiveAndConvert(javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveAndConvert(String)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receiveAndConvert(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveAndConvert()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receiveAndConvert()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveAndConvert(Destination)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receiveAndConvert(javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveAndConvert(String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receiveAndConvert(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveAndExecute(Object, Session, MessageConsumer)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveMessage(MessageConsumer)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>receiveMessage(javax.jms.MessageConsumer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelected(String)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receiveSelected(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelected(Destination, String)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receiveSelected(javax.jms.Destination, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelected(String, String)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receiveSelected(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelected(String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receiveSelected(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelected(Destination, String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receiveSelected(javax.jms.Destination, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelected(String, String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receiveSelected(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelectedAndConvert(String)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receiveSelectedAndConvert(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelectedAndConvert(Destination, String)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receiveSelectedAndConvert(javax.jms.Destination, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelectedAndConvert(String, String)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>receiveSelectedAndConvert(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelectedAndConvert(String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receiveSelectedAndConvert(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelectedAndConvert(Destination, String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receiveSelectedAndConvert(javax.jms.Destination, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveSelectedAndConvert(String, String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>receiveSelectedAndConvert(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reconcileCacheManager()</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AbstractCachingConfiguration.html</Path>
    <Anchor>reconcileCacheManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reconcileColumnsToUse(List&amp;lt;String&amp;gt;, String[])</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>reconcileColumnsToUse(java.util.List, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reconcileParameters(List&amp;lt;SqlParameter&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>reconcileParameters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RecordCreator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jca.cci.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/RecordCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recordDisabled()</Name>
      <Type>instm</Type>
      <Scope>ConditionalTestCase</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/ConditionalTestCase.html</Path>
    <Anchor>recordDisabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recordDisabled(Method)</Name>
      <Type>instm</Type>
      <Scope>AbstractJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html</Path>
    <Anchor>recordDisabled(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RecordExtractor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jca.cci.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/RecordExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recordSuppressedField(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>recordSuppressedField(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recordSuppressedField(String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>recordSuppressedField(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recordSuppressedField(String)</Name>
      <Type>intfm</Type>
      <Scope>BindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingResult.html</Path>
    <Anchor>recordSuppressedField(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RecordTypeNotSupportedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jca.cci</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/RecordTypeNotSupportedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RecordTypeNotSupportedException(String, ResourceException)</Name>
      <Type>Constructor</Type>
      <Scope>RecordTypeNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/RecordTypeNotSupportedException.html</Path>
    <Anchor>RecordTypeNotSupportedException(java.lang.String, javax.resource.ResourceException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RecoverableDataAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/RecoverableDataAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RecoverableDataAccessException(String)</Name>
      <Type>Constructor</Type>
      <Scope>RecoverableDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/RecoverableDataAccessException.html</Path>
    <Anchor>RecoverableDataAccessException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RecoverableDataAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>RecoverableDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/RecoverableDataAccessException.html</Path>
    <Anchor>RecoverableDataAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recoverAfterListenerSetupFailure()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>recoverAfterListenerSetupFailure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recreate()</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationResult.html</Path>
    <Anchor>recreate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recreateRemoteInvocationResult(RemoteInvocationResult)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>recreateRemoteInvocationResult(org.springframework.remoting.support.RemoteInvocationResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recreateRemoteInvocationResult(RemoteInvocationResult)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationBasedAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedAccessor.html</Path>
    <Anchor>recreateRemoteInvocationResult(org.springframework.remoting.support.RemoteInvocationResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REDIRECT_URL_PREFIX</Name>
      <Type>Field</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>REDIRECT_URL_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectAttributes</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet.mvc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectAttributesMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RedirectAttributesMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectAttributesMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>RedirectAttributesMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RedirectAttributesMethodArgumentResolver.html</Path>
    <Anchor>RedirectAttributesMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectAttributesModelMap</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectAttributesModelMap(DataBinder)</Name>
      <Type>Constructor</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>RedirectAttributesModelMap(org.springframework.validation.DataBinder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectAttributesModelMap()</Name>
      <Type>Constructor</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>RedirectAttributesModelMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>redirectedUrl(String)</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html</Path>
    <Anchor>redirectedUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectView()</Name>
      <Type>Constructor</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>RedirectView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectView(String)</Name>
      <Type>Constructor</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>RedirectView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectView(String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>RedirectView(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectView(String, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>RedirectView(java.lang.String, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RedirectView(String, boolean, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>RedirectView(java.lang.String, boolean, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REF_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>REF_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REF_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>REF_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REF_PREFIX</Name>
      <Type>Field</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>REF_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REF_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>REF_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFERENCE_REQUEST</Name>
      <Type>Field</Type>
      <Scope>RequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
    <Anchor>REFERENCE_REQUEST</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFERENCE_SESSION</Name>
      <Type>Field</Type>
      <Scope>RequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
    <Anchor>REFERENCE_SESSION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(PortletRequest, Object, Errors)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>referenceData(javax.portlet.PortletRequest, java.lang.Object, org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(PortletRequest, Object, Errors)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>referenceData(javax.portlet.PortletRequest, java.lang.Object, org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(PortletRequest, Object, Errors, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>referenceData(javax.portlet.PortletRequest, java.lang.Object, org.springframework.validation.Errors, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(PortletRequest, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>referenceData(javax.portlet.PortletRequest, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(PortletRequest, Object, Errors)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>referenceData(javax.portlet.PortletRequest, java.lang.Object, org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>referenceData(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(HttpServletRequest, Object, Errors)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(HttpServletRequest, Object, Errors)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(HttpServletRequest, Object, Errors, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(HttpServletRequest, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>referenceData(javax.servlet.http.HttpServletRequest, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(HttpServletRequest, Object, Errors)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceData(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>referenceData(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionHelper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionHelper()</Name>
      <Type>Constructor</Type>
      <Scope>ReflectionHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.html</Path>
    <Anchor>ReflectionHelper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionHelper.ArgsMatchKind</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.ArgsMatchKind.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionHelper.ArgumentsMatchInfo</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionTestUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/ReflectionTestUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionTestUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ReflectionTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/ReflectionTestUtils.html</Path>
    <Anchor>ReflectionTestUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>ReflectionUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionUtils.FieldCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.FieldCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionUtils.FieldFilter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.FieldFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionUtils.MethodCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.MethodCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectionUtils.MethodFilter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.MethodFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveAspectJAdvisorFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveAspectJAdvisorFactory()</Name>
      <Type>Constructor</Type>
      <Scope>ReflectiveAspectJAdvisorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.html</Path>
    <Anchor>ReflectiveAspectJAdvisorFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor(MetadataAwareAspectInstanceFactory)</Name>
      <Type>Constructor</Type>
      <Scope>ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor.html</Path>
    <Anchor>ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor(org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveConstructorResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectiveConstructorResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveConstructorResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ReflectiveConstructorResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectiveConstructorResolver.html</Path>
    <Anchor>ReflectiveConstructorResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveLoadTimeWeaver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveLoadTimeWeaver()</Name>
      <Type>Constructor</Type>
      <Scope>ReflectiveLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.html</Path>
    <Anchor>ReflectiveLoadTimeWeaver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveLoadTimeWeaver(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ReflectiveLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.html</Path>
    <Anchor>ReflectiveLoadTimeWeaver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveMethodInvocation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveMethodInvocation(Object, Object, Method, Object[], Class, List&amp;lt;Object&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>ReflectiveMethodInvocation(java.lang.Object, java.lang.Object, java.lang.reflect.Method, java.lang.Object[], java.lang.Class, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveMethodResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectiveMethodResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveMethodResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ReflectiveMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectiveMethodResolver.html</Path>
    <Anchor>ReflectiveMethodResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectiveMethodResolver(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ReflectiveMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectiveMethodResolver.html</Path>
    <Anchor>ReflectiveMethodResolver(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectivePropertyAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReflectivePropertyAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>ReflectivePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
    <Anchor>ReflectivePropertyAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html</Path>
    <Anchor>refresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh()</Name>
      <Type>intfm</Type>
      <Scope>Refreshable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/Refreshable.html</Path>
    <Anchor>refresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>refresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>refresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>refresh(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh(Object, LockMode)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>refresh(java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>refresh(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh(Object, LockMode)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>refresh(java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh(Object)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>refresh(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh(Object)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>refresh(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh(Object)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>refresh(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh(Object)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>refresh(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh()</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>refresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh()</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>refresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFRESH_CHECK_DELAY_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>REFRESH_CHECK_DELAY_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFRESH_INTERVAL_PARAM</Name>
      <Type>Field</Type>
      <Scope>Log4jWebConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/Log4jWebConfigurer.html</Path>
    <Anchor>REFRESH_INTERVAL_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Refreshable</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.target.dynamic</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/Refreshable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefreshableScriptTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scripting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/RefreshableScriptTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefreshableScriptTargetSource(BeanFactory, String, ScriptFactory, ScriptSource, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>RefreshableScriptTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/RefreshableScriptTargetSource.html</Path>
    <Anchor>RefreshableScriptTargetSource(org.springframework.beans.factory.BeanFactory, java.lang.String, org.springframework.scripting.ScriptFactory, org.springframework.scripting.ScriptSource, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshAll(Collection)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>refreshAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshAll()</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>refreshAll()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshAll(Collection)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>refreshAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshAll()</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>refreshAll()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshAndRetry(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AbstractRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>refreshAndRetry(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshAndRetry(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>refreshAndRetry(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshAndRetry(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>refreshAndRetry(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshBeanFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>refreshBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshBeanFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>refreshBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshBeanFactory()</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>refreshBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshConnectionUntilSuccessful()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>refreshConnectionUntilSuccessful()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshDestination()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>refreshDestination()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshHome()</Name>
      <Type>instm</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>refreshHome()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshHome()</Name>
      <Type>instm</Type>
      <Scope>SimpleRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>refreshHome()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshProperties(String, ReloadableResourceBundleMessageSource.PropertiesHolder)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>refreshProperties(java.lang.String, org.springframework.context.support.ReloadableResourceBundleMessageSource.PropertiesHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshSharedConnection()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>refreshSharedConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RegexPatternTypeFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/RegexPatternTypeFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RegexPatternTypeFilter(Pattern)</Name>
      <Type>Constructor</Type>
      <Scope>RegexPatternTypeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/RegexPatternTypeFilter.html</Path>
    <Anchor>RegexPatternTypeFilter(java.util.regex.Pattern)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RegexpMethodPointcutAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RegexpMethodPointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RegexpMethodPointcutAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>RegexpMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RegexpMethodPointcutAdvisor.html</Path>
    <Anchor>RegexpMethodPointcutAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RegexpMethodPointcutAdvisor(Advice)</Name>
      <Type>Constructor</Type>
      <Scope>RegexpMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RegexpMethodPointcutAdvisor.html</Path>
    <Anchor>RegexpMethodPointcutAdvisor(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RegexpMethodPointcutAdvisor(String, Advice)</Name>
      <Type>Constructor</Type>
      <Scope>RegexpMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RegexpMethodPointcutAdvisor.html</Path>
    <Anchor>RegexpMethodPointcutAdvisor(java.lang.String, org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RegexpMethodPointcutAdvisor(String[], Advice)</Name>
      <Type>Constructor</Type>
      <Scope>RegexpMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RegexpMethodPointcutAdvisor.html</Path>
    <Anchor>RegexpMethodPointcutAdvisor(java.lang.String[], org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register(Class&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>AnnotatedBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
    <Anchor>register(java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register(Class&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
    <Anchor>register(java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register(Class&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.html</Path>
    <Anchor>register(java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAdvisorAdapter(AdvisorAdapter)</Name>
      <Type>intfm</Type>
      <Scope>AdvisorAdapterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapterRegistry.html</Path>
    <Anchor>registerAdvisorAdapter(org.springframework.aop.framework.adapter.AdvisorAdapter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAdvisorAdapter(AdvisorAdapter)</Name>
      <Type>instm</Type>
      <Scope>DefaultAdvisorAdapterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.html</Path>
    <Anchor>registerAdvisorAdapter(org.springframework.aop.framework.adapter.AdvisorAdapter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAfterCompletionWithExistingTransaction(Object, List&amp;lt;TransactionSynchronization&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>registerAfterCompletionWithExistingTransaction(java.lang.Object, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAfterCompletionWithExistingTransaction(Object, List&amp;lt;TransactionSynchronization&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>registerAfterCompletionWithExistingTransaction(java.lang.Object, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAlias(String, String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>registerAlias(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAlias(String, String)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>registerAlias(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAlias(String, String)</Name>
      <Type>intfm</Type>
      <Scope>AliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AliasRegistry.html</Path>
    <Anchor>registerAlias(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAlias(String, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleAliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SimpleAliasRegistry.html</Path>
    <Anchor>registerAlias(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAnnotationConfigProcessors(BeanDefinitionRegistry)</Name>
      <Type>clm</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAnnotationConfigProcessors(BeanDefinitionRegistry, Object)</Name>
      <Type>clm</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAspectJAnnotationAutoProxyCreatorIfNecessary(BeanDefinitionRegistry)</Name>
      <Type>clm</Type>
      <Scope>AopConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
    <Anchor>registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAspectJAnnotationAutoProxyCreatorIfNecessary(BeanDefinitionRegistry, Object)</Name>
      <Type>clm</Type>
      <Scope>AopConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
    <Anchor>registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAspectJAnnotationAutoProxyCreatorIfNecessary(ParserContext, Element)</Name>
      <Type>clm</Type>
      <Scope>AopNamespaceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceUtils.html</Path>
    <Anchor>registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAspectJAutoProxyCreatorIfNecessary(BeanDefinitionRegistry)</Name>
      <Type>clm</Type>
      <Scope>AopConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
    <Anchor>registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAspectJAutoProxyCreatorIfNecessary(BeanDefinitionRegistry, Object)</Name>
      <Type>clm</Type>
      <Scope>AopConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
    <Anchor>registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAspectJAutoProxyCreatorIfNecessary(ParserContext, Element)</Name>
      <Type>clm</Type>
      <Scope>AopNamespaceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceUtils.html</Path>
    <Anchor>registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAutoProxyCreatorIfNecessary(BeanDefinitionRegistry)</Name>
      <Type>clm</Type>
      <Scope>AopConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
    <Anchor>registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAutoProxyCreatorIfNecessary(BeanDefinitionRegistry, Object)</Name>
      <Type>clm</Type>
      <Scope>AopConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
    <Anchor>registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAutoProxyCreatorIfNecessary(ParserContext, Element)</Name>
      <Type>clm</Type>
      <Scope>AopNamespaceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceUtils.html</Path>
    <Anchor>registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerAutoProxyCreatorIfNecessary(ParserContext, Object)</Name>
      <Type>clm</Type>
      <Scope>AopNamespaceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceUtils.html</Path>
    <Anchor>registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBean(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AnnotatedBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
    <Anchor>registerBean(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBean(Class&amp;lt;?&amp;gt;, Class&amp;lt;? extends Annotation&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>AnnotatedBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
    <Anchor>registerBean(java.lang.Class, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBean(Class&amp;lt;?&amp;gt;, String, Class&amp;lt;? extends Annotation&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>AnnotatedBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
    <Anchor>registerBean(java.lang.Class, java.lang.String, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanComponent(BeanComponentDefinition)</Name>
      <Type>instm</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry)</Name>
      <Type>clm</Type>
      <Scope>BeanDefinitionReaderUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html</Path>
    <Anchor>registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinition(String, BeanDefinition)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinitionRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionRegistry.html</Path>
    <Anchor>registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinition(String, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinition(String, Map&amp;lt;?, ?&amp;gt;, String, String)</Name>
      <Type>instm</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>registerBeanDefinition(java.lang.String, java.util.Map, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinition(String, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>SimpleBeanDefinitionRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html</Path>
    <Anchor>registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinition(String, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitionDecorator(String, BeanDefinitionDecorator)</Name>
      <Type>instm</Type>
      <Scope>NamespaceHandlerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/NamespaceHandlerSupport.html</Path>
    <Anchor>registerBeanDefinitionDecorator(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitionDecoratorForAttribute(String, BeanDefinitionDecorator)</Name>
      <Type>instm</Type>
      <Scope>NamespaceHandlerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/NamespaceHandlerSupport.html</Path>
    <Anchor>registerBeanDefinitionDecoratorForAttribute(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitionParser(String, BeanDefinitionParser)</Name>
      <Type>instm</Type>
      <Scope>NamespaceHandlerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/NamespaceHandlerSupport.html</Path>
    <Anchor>registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(ResourceBundle)</Name>
      <Type>instm</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>registerBeanDefinitions(java.util.ResourceBundle)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(ResourceBundle, String)</Name>
      <Type>instm</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>registerBeanDefinitions(java.util.ResourceBundle, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(Map)</Name>
      <Type>instm</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>registerBeanDefinitions(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(Map, String)</Name>
      <Type>instm</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>registerBeanDefinitions(java.util.Map, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(Map, String, String)</Name>
      <Type>instm</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>registerBeanDefinitions(java.util.Map, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(Document, XmlReaderContext)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionDocumentReader.html</Path>
    <Anchor>registerBeanDefinitions(org.w3c.dom.Document, org.springframework.beans.factory.xml.XmlReaderContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(Document, XmlReaderContext)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>registerBeanDefinitions(org.w3c.dom.Document, org.springframework.beans.factory.xml.XmlReaderContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(Document, Resource)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>registerBeanDefinitions(org.w3c.dom.Document, org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(AnnotationMetadata, BeanDefinitionRegistry)</Name>
      <Type>instm</Type>
      <Scope>AutoProxyRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AutoProxyRegistrar.html</Path>
    <Anchor>registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata, org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanDefinitions(AnnotationMetadata, BeanDefinitionRegistry)</Name>
      <Type>intfm</Type>
      <Scope>ImportBeanDefinitionRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ImportBeanDefinitionRegistrar.html</Path>
    <Anchor>registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata, org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanNameOrInstance(Object, String)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>registerBeanNameOrInstance(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeanPostProcessors(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerBeans()</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>registerBeans()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCallableInterceptor(Object, CallableProcessingInterceptor)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>registerCallableInterceptor(java.lang.Object, org.springframework.web.context.request.async.CallableProcessingInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCallableInterceptors(CallableProcessingInterceptor...)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>registerCallableInterceptors(org.springframework.web.context.request.async.CallableProcessingInterceptor...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCallableInterceptors(CallableProcessingInterceptor...)</Name>
      <Type>instm</Type>
      <Scope>AsyncSupportConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/AsyncSupportConfigurer.html</Path>
    <Anchor>registerCallableInterceptors(org.springframework.web.context.request.async.CallableProcessingInterceptor...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerComponent(ComponentDefinition)</Name>
      <Type>instm</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerComponents(XmlReaderContext, Set&amp;lt;BeanDefinitionHolder&amp;gt;, Element)</Name>
      <Type>instm</Type>
      <Scope>ComponentScanBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
    <Anchor>registerComponents(org.springframework.beans.factory.xml.XmlReaderContext, java.util.Set, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerContainedBean(String, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>registerContainedBean(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerContext(String, ServletContext)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>registerContext(java.lang.String, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerContextLoaderListener(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractContextLoaderInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/AbstractContextLoaderInitializer.html</Path>
    <Anchor>registerContextLoaderListener(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerConverters(Set&amp;lt;?&amp;gt;, ConverterRegistry)</Name>
      <Type>clm</Type>
      <Scope>ConversionServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/ConversionServiceFactory.html</Path>
    <Anchor>registerConverters(java.util.Set, org.springframework.core.convert.converter.ConverterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditor(Class&amp;lt;?&amp;gt;, Class&amp;lt;? extends PropertyEditor&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>registerCustomEditor(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditor(Class&amp;lt;?&amp;gt;, Class&amp;lt;? extends PropertyEditor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>registerCustomEditor(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditor(Class&amp;lt;?&amp;gt;, PropertyEditor)</Name>
      <Type>intfm</Type>
      <Scope>PropertyEditorRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistry.html</Path>
    <Anchor>registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditor(Class&amp;lt;?&amp;gt;, String, PropertyEditor)</Name>
      <Type>intfm</Type>
      <Scope>PropertyEditorRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistry.html</Path>
    <Anchor>registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditor(Class&amp;lt;?&amp;gt;, PropertyEditor)</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditor(Class&amp;lt;?&amp;gt;, String, PropertyEditor)</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditor(Class, PropertyEditor)</Name>
      <Type>instm</Type>
      <Scope>ArgumentConvertingMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ArgumentConvertingMethodInvoker.html</Path>
    <Anchor>registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditor(Class&amp;lt;?&amp;gt;, PropertyEditor)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditor(Class&amp;lt;?&amp;gt;, String, PropertyEditor)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditors(PropertyEditorRegistry)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditors(PropertyEditorRegistry)</Name>
      <Type>intfm</Type>
      <Scope>PropertyEditorRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrar.html</Path>
    <Anchor>registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCustomEditors(PropertyEditorRegistry)</Name>
      <Type>instm</Type>
      <Scope>ResourceEditorRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ResourceEditorRegistrar.html</Path>
    <Anchor>registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDatabase(DataSource, String)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodesFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodesFactory.html</Path>
    <Anchor>registerDatabase(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDefaultEditors()</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>registerDefaultEditors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDefaultFilters()</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>registerDefaultFilters()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDeferredResultInterceptor(Object, DeferredResultProcessingInterceptor)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>registerDeferredResultInterceptor(java.lang.Object, org.springframework.web.context.request.async.DeferredResultProcessingInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDeferredResultInterceptors(DeferredResultProcessingInterceptor...)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>registerDeferredResultInterceptors(org.springframework.web.context.request.async.DeferredResultProcessingInterceptor...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDeferredResultInterceptors(DeferredResultProcessingInterceptor...)</Name>
      <Type>instm</Type>
      <Scope>AsyncSupportConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/AsyncSupportConfigurer.html</Path>
    <Anchor>registerDeferredResultInterceptors(org.springframework.web.context.request.async.DeferredResultProcessingInterceptor...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDependentBean(String, String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>registerDependentBean(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDependentBean(String, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>registerDependentBean(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDestructionCallback(String, Runnable)</Name>
      <Type>intfm</Type>
      <Scope>Scope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/Scope.html</Path>
    <Anchor>registerDestructionCallback(java.lang.String, java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDestructionCallback(String, Runnable)</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/SimpleThreadScope.html</Path>
    <Anchor>registerDestructionCallback(java.lang.String, java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDestructionCallback(String, Runnable)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestAttributesScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributesScope.html</Path>
    <Anchor>registerDestructionCallback(java.lang.String, java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDestructionCallback(String, Runnable, int)</Name>
      <Type>instm</Type>
      <Scope>FacesRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesRequestAttributes.html</Path>
    <Anchor>registerDestructionCallback(java.lang.String, java.lang.Runnable, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDestructionCallback(String, Runnable, int)</Name>
      <Type>intfm</Type>
      <Scope>RequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
    <Anchor>registerDestructionCallback(java.lang.String, java.lang.Runnable, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDestructionCallback(String, Runnable, int)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletRequestAttributes.html</Path>
    <Anchor>registerDestructionCallback(java.lang.String, java.lang.Runnable, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDestructionCallback(String, Runnable)</Name>
      <Type>instm</Type>
      <Scope>ServletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextScope.html</Path>
    <Anchor>registerDestructionCallback(java.lang.String, java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDestructionCallback(String, Runnable)</Name>
      <Type>instm</Type>
      <Scope>PortletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextScope.html</Path>
    <Anchor>registerDestructionCallback(java.lang.String, java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDestructionCallback(String, Runnable, int)</Name>
      <Type>instm</Type>
      <Scope>PortletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestAttributes.html</Path>
    <Anchor>registerDestructionCallback(java.lang.String, java.lang.Runnable, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDispatcherServlet(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.html</Path>
    <Anchor>registerDispatcherServlet(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDisposableBean(String, DisposableBean)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>registerDisposableBean(java.lang.String, org.springframework.beans.factory.DisposableBean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDisposableBeanIfNecessary(String, Object, RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>registerDisposableBeanIfNecessary(java.lang.String, java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEnvironmentBeans(ConfigurableListableBeanFactory, ServletContext)</Name>
      <Type>clm</Type>
      <Scope>WebApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationContextUtils.html</Path>
    <Anchor>registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEnvironmentBeans(ConfigurableListableBeanFactory, ServletContext, ServletConfig)</Name>
      <Type>clm</Type>
      <Scope>WebApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationContextUtils.html</Path>
    <Anchor>registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, javax.servlet.ServletContext, javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerExternallyManagedConfigMember(Member)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>registerExternallyManagedConfigMember(java.lang.reflect.Member)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerExternallyManagedDestroyMethod(String)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>registerExternallyManagedDestroyMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerExternallyManagedInitMethod(String)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>registerExternallyManagedInitMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerFormatters(FormatterRegistry)</Name>
      <Type>instm</Type>
      <Scope>DateFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatterRegistrar.html</Path>
    <Anchor>registerFormatters(org.springframework.format.FormatterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerFormatters(FormatterRegistry)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.html</Path>
    <Anchor>registerFormatters(org.springframework.format.FormatterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerFormatters(FormatterRegistry)</Name>
      <Type>intfm</Type>
      <Scope>FormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/FormatterRegistrar.html</Path>
    <Anchor>registerFormatters(org.springframework.format.FormatterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerFunction(String, Method)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>registerFunction(java.lang.String, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandler(K, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractMapBasedHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html</Path>
    <Anchor>registerHandler(K, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandler(K, Object, AbstractMapBasedHandlerMapping.PortletRequestMappingPredicate)</Name>
      <Type>instm</Type>
      <Scope>AbstractMapBasedHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html</Path>
    <Anchor>registerHandler(K, java.lang.Object, org.springframework.web.portlet.handler.AbstractMapBasedHandlerMapping.PortletRequestMappingPredicate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandler(PortletMode, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PortletModeParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
    <Anchor>registerHandler(javax.portlet.PortletMode, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandler(PortletMode, String, Object)</Name>
      <Type>instm</Type>
      <Scope>PortletModeParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
    <Anchor>registerHandler(javax.portlet.PortletMode, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandler(String[], String)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
    <Anchor>registerHandler(java.lang.String[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandler(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
    <Anchor>registerHandler(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandlerMethod(Object, Method, T)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>registerHandlerMethod(java.lang.Object, java.lang.reflect.Method, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandlers(Map&amp;lt;K, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractMapBasedHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html</Path>
    <Anchor>registerHandlers(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandlers(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html</Path>
    <Anchor>registerHandlers(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandlersByMode(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PortletModeHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeHandlerMapping.html</Path>
    <Anchor>registerHandlersByMode(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandlersByModeAndParameter(Map&amp;lt;String, Map&amp;lt;String, ?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PortletModeParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
    <Anchor>registerHandlersByModeAndParameter(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerImport(String)</Name>
      <Type>instm</Type>
      <Scope>StandardTypeLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeLocator.html</Path>
    <Anchor>registerImport(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerJobsAndTriggers()</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>registerJobsAndTriggers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerListeners()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>registerListeners()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerListeners()</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>registerListeners()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerManagedResource(Object)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>registerManagedResource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerManagedResource(Object, ObjectName)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>registerManagedResource(java.lang.Object, javax.management.ObjectName)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerManagedResource(Object)</Name>
      <Type>intfm</Type>
      <Scope>MBeanExportOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExportOperations.html</Path>
    <Anchor>registerManagedResource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerManagedResource(Object, ObjectName)</Name>
      <Type>intfm</Type>
      <Scope>MBeanExportOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExportOperations.html</Path>
    <Anchor>registerManagedResource(java.lang.Object, javax.management.ObjectName)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerMethodFilter(Class&amp;lt;?&amp;gt;, MethodFilter)</Name>
      <Type>instm</Type>
      <Scope>ReflectiveMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectiveMethodResolver.html</Path>
    <Anchor>registerMethodFilter(java.lang.Class, org.springframework.expression.MethodFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerMethodFilter(Class&amp;lt;?&amp;gt;, MethodFilter)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>registerMethodFilter(java.lang.Class, org.springframework.expression.MethodFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNamedDispatcher(String, RequestDispatcher)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>registerNamedDispatcher(java.lang.String, javax.servlet.RequestDispatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerProcessedProperty(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>registerProcessedProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerPrototype(String, Class)</Name>
      <Type>instm</Type>
      <Scope>StaticApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticApplicationContext.html</Path>
    <Anchor>registerPrototype(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerPrototype(String, Class, MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>StaticApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticApplicationContext.html</Path>
    <Anchor>registerPrototype(java.lang.String, java.lang.Class, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerPublicParameter(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>registerPublicParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequestDestructionCallback(String, Runnable)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributes.html</Path>
    <Anchor>registerRequestDestructionCallback(java.lang.String, java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerResolvableDependency(Class&amp;lt;?&amp;gt;, Object)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html</Path>
    <Anchor>registerResolvableDependency(java.lang.Class, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerResolvableDependency(Class&amp;lt;?&amp;gt;, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>registerResolvableDependency(java.lang.Class, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerScope(String, Scope)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>registerScope(java.lang.String, org.springframework.beans.factory.config.Scope)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerScope(String, Scope)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>registerScope(java.lang.String, org.springframework.beans.factory.config.Scope)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerScope(Class, String)</Name>
      <Type>instm</Type>
      <Scope>Jsr330ScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html</Path>
    <Anchor>registerScope(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerScope(String, String)</Name>
      <Type>instm</Type>
      <Scope>Jsr330ScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html</Path>
    <Anchor>registerScope(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerScriptFactoryPostProcessorIfNecessary(BeanDefinitionRegistry)</Name>
      <Type>clm</Type>
      <Scope>LangNamespaceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/config/LangNamespaceUtils.html</Path>
    <Anchor>registerScriptFactoryPostProcessorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerServletFilter(ServletContext, Filter)</Name>
      <Type>instm</Type>
      <Scope>AbstractDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.html</Path>
    <Anchor>registerServletFilter(javax.servlet.ServletContext, javax.servlet.Filter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSessionDestructionCallback(String, Runnable)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletRequestAttributes.html</Path>
    <Anchor>registerSessionDestructionCallback(java.lang.String, java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSessionDestructionCallback(String, Runnable)</Name>
      <Type>instm</Type>
      <Scope>PortletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestAttributes.html</Path>
    <Anchor>registerSessionDestructionCallback(java.lang.String, java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSharedEditor(Class&amp;lt;?&amp;gt;, PropertyEditor)</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>registerSharedEditor(java.lang.Class, java.beans.PropertyEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerShutdownHook()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>registerShutdownHook()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerShutdownHook()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>registerShutdownHook()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSingleton(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>SingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SingletonBeanRegistry.html</Path>
    <Anchor>registerSingleton(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSingleton(String, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>registerSingleton(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSingleton(String, Class)</Name>
      <Type>instm</Type>
      <Scope>StaticApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticApplicationContext.html</Path>
    <Anchor>registerSingleton(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSingleton(String, Class, MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>StaticApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticApplicationContext.html</Path>
    <Anchor>registerSingleton(java.lang.String, java.lang.Class, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSqlType(String, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractSqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.html</Path>
    <Anchor>registerSqlType(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSynchronization(Synchronization)</Name>
      <Type>instm</Type>
      <Scope>ManagedTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/ManagedTransactionAdapter.html</Path>
    <Anchor>registerSynchronization(javax.transaction.Synchronization)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerSynchronization(TransactionSynchronization)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>registerSynchronization(org.springframework.transaction.support.TransactionSynchronization)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerTasks(ScheduledExecutorTask[], ScheduledExecutorService)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
    <Anchor>registerTasks(org.springframework.scheduling.concurrent.ScheduledExecutorTask[], java.util.concurrent.ScheduledExecutorService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerTasks(ScheduledTimerTask[], Timer)</Name>
      <Type>instm</Type>
      <Scope>TimerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerFactoryBean.html</Path>
    <Anchor>registerTasks(org.springframework.scheduling.timer.ScheduledTimerTask[], java.util.Timer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerTestExecutionListeners(TestExecutionListener...)</Name>
      <Type>instm</Type>
      <Scope>TestContextManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestContextManager.html</Path>
    <Anchor>registerTestExecutionListeners(org.springframework.test.context.TestExecutionListener...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerTransactionSynchronization(LobCreator, TransactionManager)</Name>
      <Type>clm</Type>
      <Scope>LobCreatorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/LobCreatorUtils.html</Path>
    <Anchor>registerTransactionSynchronization(org.springframework.jdbc.support.lob.LobCreator, javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerTranslator(String, SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>CustomSQLExceptionTranslatorRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistry.html</Path>
    <Anchor>registerTranslator(java.lang.String, org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerTypeName(String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractSqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.html</Path>
    <Anchor>registerTypeName(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerWebApplicationScopes(ConfigurableListableBeanFactory)</Name>
      <Type>clm</Type>
      <Scope>WebApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationContextUtils.html</Path>
    <Anchor>registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerWebApplicationScopes(ConfigurableListableBeanFactory, ServletContext)</Name>
      <Type>clm</Type>
      <Scope>WebApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationContextUtils.html</Path>
    <Anchor>registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerWithGeneratedName(AbstractBeanDefinition, BeanDefinitionRegistry)</Name>
      <Type>clm</Type>
      <Scope>BeanDefinitionReaderUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html</Path>
    <Anchor>registerWithGeneratedName(org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerWithGeneratedName(BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>XmlReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlReaderContext.html</Path>
    <Anchor>registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REGISTRATION_FAIL_ON_EXISTING</Name>
      <Type>Field</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>REGISTRATION_FAIL_ON_EXISTING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REGISTRATION_IGNORE_EXISTING</Name>
      <Type>Field</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>REGISTRATION_IGNORE_EXISTING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REGISTRATION_REPLACE_EXISTING</Name>
      <Type>Field</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>REGISTRATION_REPLACE_EXISTING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RegistrationPolicy</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.jmx.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/RegistrationPolicy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reimplement(Object, Method, Object[])</Name>
      <Type>intfm</Type>
      <Scope>MethodReplacer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodReplacer.html</Path>
    <Anchor>reimplement(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REINJECT_DEPENDENCIES_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>DependencyInjectionTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html</Path>
    <Anchor>REINJECT_DEPENDENCIES_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String, Object[], String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>reject(java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>reject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>reject(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>reject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String, String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>reject(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String, Object[], String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>reject(java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>reject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String, String)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>reject(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String, Object[], String)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>reject(java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>reject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String, String)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>reject(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject(String, Object[], String)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>reject(java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectIfEmpty(Errors, String, String)</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>rejectIfEmpty(org.springframework.validation.Errors, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectIfEmpty(Errors, String, String, String)</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>rejectIfEmpty(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectIfEmpty(Errors, String, String, Object[])</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>rejectIfEmpty(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectIfEmpty(Errors, String, String, Object[], String)</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>rejectIfEmpty(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectIfEmptyOrWhitespace(Errors, String, String)</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectIfEmptyOrWhitespace(Errors, String, String, String)</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectIfEmptyOrWhitespace(Errors, String, String, Object[])</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectIfEmptyOrWhitespace(Errors, String, String, Object[], String)</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String, Object[], String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String, String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String, Object[], String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String, String)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String, Object[], String)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String, String)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectValue(String, String, Object[], String)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>relative(int)</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>relative(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>relative(int)</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>relative(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release()</Name>
      <Type>intfm</Type>
      <Scope>BeanFactoryReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/BeanFactoryReference.html</Path>
    <Anchor>release()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release()</Name>
      <Type>instm</Type>
      <Scope>ContextBeanFactoryReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextBeanFactoryReference.html</Path>
    <Anchor>release()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release()</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory.AbstractMessageEndpoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html</Path>
    <Anchor>release()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release()</Name>
      <Type>instm</Type>
      <Scope>DelegatingWork</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/DelegatingWork.html</Path>
    <Anchor>release()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release()</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>release()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release()</Name>
      <Type>instm</Type>
      <Scope>DelegatingWork</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/DelegatingWork.html</Path>
    <Anchor>release()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release()</Name>
      <Type>intfm</Type>
      <Scope>ConcurrentReferenceHashMap.Reference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Reference.html</Path>
    <Anchor>release()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseBean(InvocationContext)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanAutowiringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html</Path>
    <Anchor>releaseBean(javax.interceptor.InvocationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConnection(Connection, ConnectionFactory)</Name>
      <Type>clm</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>releaseConnection(javax.resource.cci.Connection, javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>CciDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CciDaoSupport.html</Path>
    <Anchor>releaseConnection(javax.resource.cci.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>JdbcDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/JdbcDaoSupport.html</Path>
    <Anchor>releaseConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConnection(Connection)</Name>
      <Type>intfm</Type>
      <Scope>ConnectionHandle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHandle.html</Path>
    <Anchor>releaseConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConnection(Connection, DataSource)</Name>
      <Type>clm</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>releaseConnection(java.sql.Connection, javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>SimpleConnectionHandle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleConnectionHandle.html</Path>
    <Anchor>releaseConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConnection(Connection, ConnectionFactory, boolean)</Name>
      <Type>clm</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>releaseConnection(javax.jms.Connection, javax.jms.ConnectionFactory, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseContext(Context)</Name>
      <Type>instm</Type>
      <Scope>JndiTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiTemplate.html</Path>
    <Anchor>releaseContext(javax.naming.Context)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>released()</Name>
      <Type>instm</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>released()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>released()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>released()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>released()</Name>
      <Type>intfm</Type>
      <Scope>WeakReferenceMonitor.ReleaseListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/WeakReferenceMonitor.ReleaseListener.html</Path>
    <Anchor>released()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseHeldSavepoint()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>releaseHeldSavepoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseJdbcConnection(ConnectionHandle, PersistenceManager)</Name>
      <Type>instm</Type>
      <Scope>DefaultJdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/DefaultJdoDialect.html</Path>
    <Anchor>releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.jdo.PersistenceManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseJdbcConnection(ConnectionHandle, PersistenceManager)</Name>
      <Type>intfm</Type>
      <Scope>JdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoDialect.html</Path>
    <Anchor>releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.jdo.PersistenceManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseJdbcConnection(ConnectionHandle, EntityManager)</Name>
      <Type>instm</Type>
      <Scope>DefaultJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/DefaultJpaDialect.html</Path>
    <Anchor>releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.persistence.EntityManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseJdbcConnection(ConnectionHandle, EntityManager)</Name>
      <Type>intfm</Type>
      <Scope>JpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaDialect.html</Path>
    <Anchor>releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.persistence.EntityManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releasePersistenceManager(PersistenceManager, PersistenceManagerFactory)</Name>
      <Type>clm</Type>
      <Scope>PersistenceManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html</Path>
    <Anchor>releasePersistenceManager(javax.jdo.PersistenceManager, javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releasePersistenceManager(PersistenceManager)</Name>
      <Type>instm</Type>
      <Scope>JdoDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/JdoDaoSupport.html</Path>
    <Anchor>releasePersistenceManager(javax.jdo.PersistenceManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResource(H, K)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>releaseResource(H, K)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResourcesAfterRead(Connection, Object)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.html</Path>
    <Anchor>releaseResourcesAfterRead(java.sql.Connection, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseSavepoint(Object)</Name>
      <Type>instm</Type>
      <Scope>JdbcTransactionObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html</Path>
    <Anchor>releaseSavepoint(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseSavepoint(Object)</Name>
      <Type>intfm</Type>
      <Scope>SavepointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/SavepointManager.html</Path>
    <Anchor>releaseSavepoint(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseSavepoint(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>releaseSavepoint(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseSession(Session, SessionFactory)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>releaseSession(org.hibernate.Session, org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseSession(Session)</Name>
      <Type>instm</Type>
      <Scope>HibernateDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/HibernateDaoSupport.html</Path>
    <Anchor>releaseSession(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseSessionBeanInstance(EJBLocalObject)</Name>
      <Type>instm</Type>
      <Scope>LocalSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html</Path>
    <Anchor>releaseSessionBeanInstance(javax.ejb.EJBLocalObject)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseSessionBeanInstance(EJBObject)</Name>
      <Type>instm</Type>
      <Scope>SimpleRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>releaseSessionBeanInstance(javax.ejb.EJBObject)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractLazyCreationTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractLazyCreationTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPoolingTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPoolingTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>EmptyTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/EmptyTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>HotSwappableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/HotSwappableTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>PrototypeTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/PrototypeTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>SingletonTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/SingletonTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>intfm</Type>
      <Scope>TargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/TargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectTargetSource.html</Path>
    <Anchor>releaseTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReloadableResourceBundleMessageSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReloadableResourceBundleMessageSource()</Name>
      <Type>Constructor</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>ReloadableResourceBundleMessageSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReloadableResourceBundleMessageSource.PropertiesHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.PropertiesHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReloadableResourceBundleMessageSource.PropertiesHolder(Properties, long)</Name>
      <Type>Constructor</Type>
      <Scope>ReloadableResourceBundleMessageSource.PropertiesHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.PropertiesHolder.html</Path>
    <Anchor>ReloadableResourceBundleMessageSource.PropertiesHolder(java.util.Properties, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReloadableResourceBundleMessageSource.PropertiesHolder()</Name>
      <Type>Constructor</Type>
      <Scope>ReloadableResourceBundleMessageSource.PropertiesHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.PropertiesHolder.html</Path>
    <Anchor>ReloadableResourceBundleMessageSource.PropertiesHolder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.remoting</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteAccessException(String)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteAccessException.html</Path>
    <Anchor>RemoteAccessException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteAccessException.html</Path>
    <Anchor>RemoteAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>RemoteAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteAccessor.html</Path>
    <Anchor>RemoteAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteConnectFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.remoting</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteConnectFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteConnectFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteConnectFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteConnectFailureException.html</Path>
    <Anchor>RemoteConnectFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteExporter()</Name>
      <Type>Constructor</Type>
      <Scope>RemoteExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteExporter.html</Path>
    <Anchor>RemoteExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocation()</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
    <Anchor>RemoteInvocation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocation(String, Class[], Object[])</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
    <Anchor>RemoteInvocation(java.lang.String, java.lang.Class[], java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocation(MethodInvocation)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
    <Anchor>RemoteInvocation(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationBasedAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationBasedAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocationBasedAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedAccessor.html</Path>
    <Anchor>RemoteInvocationBasedAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationBasedExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationBasedExporter()</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocationBasedExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedExporter.html</Path>
    <Anchor>RemoteInvocationBasedExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationExecutor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.remoting</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteInvocationFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocationFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteInvocationFailureException.html</Path>
    <Anchor>RemoteInvocationFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationResult</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationResult.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationResult(Object)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocationResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationResult.html</Path>
    <Anchor>RemoteInvocationResult(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationResult(Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocationResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationResult.html</Path>
    <Anchor>RemoteInvocationResult(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationSerializingExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.rmi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationSerializingExporter()</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>RemoteInvocationSerializingExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationTraceInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationTraceInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocationTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html</Path>
    <Anchor>RemoteInvocationTraceInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationTraceInterceptor(String)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocationTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html</Path>
    <Anchor>RemoteInvocationTraceInterceptor(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteInvocationUtils()</Name>
      <Type>Constructor</Type>
      <Scope>RemoteInvocationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationUtils.html</Path>
    <Anchor>RemoteInvocationUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteLookupFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.remoting</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteLookupFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteLookupFailureException(String)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteLookupFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteLookupFailureException.html</Path>
    <Anchor>RemoteLookupFailureException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteLookupFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteLookupFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteLookupFailureException.html</Path>
    <Anchor>RemoteLookupFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteProxyFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.remoting</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteProxyFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteProxyFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>RemoteProxyFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/RemoteProxyFailureException.html</Path>
    <Anchor>RemoteProxyFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemotingSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemotingSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemotingSupport()</Name>
      <Type>Constructor</Type>
      <Scope>RemotingSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemotingSupport.html</Path>
    <Anchor>RemotingSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(String)</Name>
      <Type>intfm</Type>
      <Scope>Scope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/Scope.html</Path>
    <Anchor>remove(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/SimpleThreadScope.html</Path>
    <Anchor>remove(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object, Object)</Name>
      <Type>intfm</Type>
      <Scope>ConcurrentMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConcurrentMap.html</Path>
    <Anchor>remove(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>remove(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>remove(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>remove(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>remove(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(int)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>remove(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>remove(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object)</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>remove(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove()</Name>
      <Type>instm</Type>
      <Scope>CompositeIterator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CompositeIterator.html</Path>
    <Anchor>remove()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>remove(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>remove(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object)</Name>
      <Type>instm</Type>
      <Scope>LinkedCaseInsensitiveMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedCaseInsensitiveMap.html</Path>
    <Anchor>remove(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(Object)</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>remove(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestAttributesScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributesScope.html</Path>
    <Anchor>remove(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(String)</Name>
      <Type>instm</Type>
      <Scope>SessionScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/SessionScope.html</Path>
    <Anchor>remove(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextScope.html</Path>
    <Anchor>remove(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove(String)</Name>
      <Type>instm</Type>
      <Scope>PortletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextScope.html</Path>
    <Anchor>remove(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAdvice(Advice)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>removeAdvice(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAdvice(Advice)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>removeAdvice(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAdvisor(Advisor)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>removeAdvisor(org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAdvisor(int)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>removeAdvisor(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAdvisor(Advisor)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>removeAdvisor(org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAdvisor(int)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>removeAdvisor(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAlias(String)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>removeAlias(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAlias(String)</Name>
      <Type>intfm</Type>
      <Scope>AliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AliasRegistry.html</Path>
    <Anchor>removeAlias(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAlias(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleAliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SimpleAliasRegistry.html</Path>
    <Anchor>removeAlias(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAll(Collection&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>removeAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllListeners()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/AbstractApplicationEventMulticaster.html</Path>
    <Anchor>removeAllListeners()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllListeners()</Name>
      <Type>intfm</Type>
      <Scope>ApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ApplicationEventMulticaster.html</Path>
    <Anchor>removeAllListeners()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllParameters()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>removeAllParameters()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeApplicationListener(ApplicationListener)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/AbstractApplicationEventMulticaster.html</Path>
    <Anchor>removeApplicationListener(org.springframework.context.ApplicationListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeApplicationListener(ApplicationListener)</Name>
      <Type>intfm</Type>
      <Scope>ApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ApplicationEventMulticaster.html</Path>
    <Anchor>removeApplicationListener(org.springframework.context.ApplicationListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeApplicationListenerBean(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/AbstractApplicationEventMulticaster.html</Path>
    <Anchor>removeApplicationListenerBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeApplicationListenerBean(String)</Name>
      <Type>intfm</Type>
      <Scope>ApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ApplicationEventMulticaster.html</Path>
    <Anchor>removeApplicationListenerBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>BeanMetadataAttributeAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttributeAccessor.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>intfm</Type>
      <Scope>AttributeAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessor.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>AttributeAccessorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessorSupport.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String, int)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>removeAttribute(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletContext.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String, int)</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>removeAttribute(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>ServletWrappingPortletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/ServletWrappingPortletContext.html</Path>
    <Anchor>removeAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String, int)</Name>
      <Type>instm</Type>
      <Scope>FacesRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesRequestAttributes.html</Path>
    <Anchor>removeAttribute(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String, int)</Name>
      <Type>intfm</Type>
      <Scope>RequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
    <Anchor>removeAttribute(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String, int)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletRequestAttributes.html</Path>
    <Anchor>removeAttribute(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttribute(String, int)</Name>
      <Type>instm</Type>
      <Scope>PortletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestAttributes.html</Path>
    <Anchor>removeAttribute(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttributes(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>removeAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttributes()</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>removeAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttributes()</Name>
      <Type>instm</Type>
      <Scope>ErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
    <Anchor>removeAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAttributes()</Name>
      <Type>instm</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>removeAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBeanDefinition(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinitionRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionRegistry.html</Path>
    <Anchor>removeBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>removeBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleBeanDefinitionRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html</Path>
    <Anchor>removeBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>removeBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBinding(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamespaceContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleNamespaceContext.html</Path>
    <Anchor>removeBinding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeConnectionSpecFromCurrentThread()</Name>
      <Type>instm</Type>
      <Scope>ConnectionSpecConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html</Path>
    <Anchor>removeConnectionSpecFromCurrentThread()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeConstructorResolver(ConstructorResolver)</Name>
      <Type>Constructor</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>removeConstructorResolver(org.springframework.expression.ConstructorResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeConvertible(Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConverterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConverterRegistry.html</Path>
    <Anchor>removeConvertible(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeConvertible(Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>removeConvertible(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCookie(HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>removeCookie(javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCredentialsFromCurrentThread()</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html</Path>
    <Anchor>removeCredentialsFromCurrentThread()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCredentialsFromCurrentThread()</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>removeCredentialsFromCurrentThread()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeDuplicateStrings(String[])</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>removeDuplicateStrings(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFromCache(String)</Name>
      <Type>intfm</Type>
      <Scope>CachingDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/CachingDestinationResolver.html</Path>
    <Anchor>removeFromCache(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFromCache(String)</Name>
      <Type>instm</Type>
      <Scope>JndiDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JndiDestinationResolver.html</Path>
    <Anchor>removeFromCache(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFromCache(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>removeFromCache(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFromEnvironment(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>removeFromEnvironment(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFromScope()</Name>
      <Type>instm</Type>
      <Scope>DefaultScopedObject</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/DefaultScopedObject.html</Path>
    <Anchor>removeFromScope()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFromScope()</Name>
      <Type>intfm</Type>
      <Scope>ScopedObject</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedObject.html</Path>
    <Anchor>removeFromScope()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeIfPresent(PropertySource&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>removeIfPresent(org.springframework.core.env.PropertySource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeImport(String)</Name>
      <Type>instm</Type>
      <Scope>StandardTypeLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeLocator.html</Path>
    <Anchor>removeImport(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>removeInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListener(AdvisedSupportListener)</Name>
      <Type>instm</Type>
      <Scope>ProxyCreatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyCreatorSupport.html</Path>
    <Anchor>removeListener(org.springframework.aop.framework.AdvisedSupportListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeMethodResolver(MethodResolver)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>removeMethodResolver(org.springframework.expression.MethodResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeParameter(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>removeParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removePropertyAccessor(PropertyAccessor)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>removePropertyAccessor(org.springframework.expression.PropertyAccessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removePropertyValue(PropertyValue)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>removePropertyValue(org.springframework.beans.PropertyValue)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removePropertyValue(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>removePropertyValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removePublicRenderParameter(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletURL.html</Path>
    <Anchor>removePublicRenderParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removePublicRenderParameter(String)</Name>
      <Type>instm</Type>
      <Scope>MockStateAwareResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockStateAwareResponse.html</Path>
    <Anchor>removePublicRenderParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeQualityValue()</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>removeQualityValue()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeRequestDestructionCallback(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributes.html</Path>
    <Anchor>removeRequestDestructionCallback(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSemicolonContent(String)</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>removeSemicolonContent(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSession(Object)</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>removeSession(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSessionBeanInstance(EJBObject)</Name>
      <Type>instm</Type>
      <Scope>AbstractRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>removeSessionBeanInstance(javax.ejb.EJBObject)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSessionBeanInstance(EJBLocalObject)</Name>
      <Type>instm</Type>
      <Scope>LocalSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html</Path>
    <Anchor>removeSessionBeanInstance(javax.ejb.EJBLocalObject)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSingleton(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>removeSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSingleton(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>removeSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSingleton(String)</Name>
      <Type>instm</Type>
      <Scope>FactoryBeanRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.html</Path>
    <Anchor>removeSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSingletonIfCreatedForTypeCheckOnly(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>removeSingletonIfCreatedForTypeCheckOnly(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTransformers()</Name>
      <Type>instm</Type>
      <Scope>InstrumentationLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html</Path>
    <Anchor>removeTransformers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeValue(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>removeValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeWebAppRootSystemProperty(ServletContext)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>removeWebAppRootSystemProperty(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename(String, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>rename(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename(Name, Name)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>rename(javax.naming.Name, javax.naming.Name)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render(JRExporter, JasperPrint, Writer)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>render(net.sf.jasperreports.engine.JRExporter, net.sf.jasperreports.engine.JasperPrint, java.io.Writer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render(JRExporter, JasperPrint, OutputStream)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>render(net.sf.jasperreports.engine.JRExporter, net.sf.jasperreports.engine.JasperPrint, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render(ModelAndView, PortletRequest, MimeResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>render(org.springframework.web.portlet.ModelAndView, javax.portlet.PortletRequest, javax.portlet.MimeResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render(ModelAndView, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>render(org.springframework.web.servlet.ModelAndView, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render(Map&amp;lt;String, ?&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>render(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render(Map&amp;lt;String, ?&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>intfm</Type>
      <Scope>View</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/View.html</Path>
    <Anchor>render(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderAsCsv(JasperReport, Map&amp;lt;String, Object&amp;gt;, Object, Writer)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>renderAsCsv(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.Writer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderAsCsv(JasperReport, Map&amp;lt;String, Object&amp;gt;, Object, Writer, Map&amp;lt;JRExporterParameter, Object&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>renderAsCsv(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.Writer, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderAsHtml(JasperReport, Map&amp;lt;String, Object&amp;gt;, Object, Writer)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>renderAsHtml(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.Writer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderAsHtml(JasperReport, Map&amp;lt;String, Object&amp;gt;, Object, Writer, Map&amp;lt;JRExporterParameter, Object&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>renderAsHtml(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.Writer, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderAsPdf(JasperReport, Map&amp;lt;String, Object&amp;gt;, Object, OutputStream)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>renderAsPdf(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderAsPdf(JasperReport, Map&amp;lt;String, Object&amp;gt;, Object, OutputStream, Map&amp;lt;JRExporterParameter, Object&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>renderAsPdf(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.OutputStream, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderAsXls(JasperReport, Map&amp;lt;String, Object&amp;gt;, Object, OutputStream)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>renderAsXls(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderAsXls(JasperReport, Map&amp;lt;String, Object&amp;gt;, Object, OutputStream, Map&amp;lt;JRExporterParameter, Object&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>renderAsXls(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.OutputStream, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderCancel(RenderRequest, RenderResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>renderCancel(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderDefaultContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>renderDefaultContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderDefaultContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>ErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
    <Anchor>renderDefaultContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderDefaultContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>renderDefaultContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderDefaultMessage(String, Object[], Locale)</Name>
      <Type>instm</Type>
      <Scope>MessageSourceSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/MessageSourceSupport.html</Path>
    <Anchor>renderDefaultMessage(java.lang.String, java.lang.Object[], java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderFinish(RenderRequest, RenderResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>renderFinish(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderFormSubmission(RenderRequest, RenderResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>renderFormSubmission(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderFormSubmission(RenderRequest, RenderResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>renderFormSubmission(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderFormSubmission(RenderRequest, RenderResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>renderFormSubmission(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderFromBodyContent(BodyContent, TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>renderFromBodyContent(javax.servlet.jsp.tagext.BodyContent, org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderFromBodyContent(BodyContent, TagWriter)</Name>
      <Type>instm</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>renderFromBodyContent(javax.servlet.jsp.tagext.BodyContent, org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderFromBoolean(Boolean, TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html</Path>
    <Anchor>renderFromBoolean(java.lang.Boolean, org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderFromValue(Object, TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html</Path>
    <Anchor>renderFromValue(java.lang.Object, org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderFromValue(Object, Object, TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html</Path>
    <Anchor>renderFromValue(java.lang.Object, java.lang.Object, org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderInvalidSubmit(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>renderInvalidSubmit(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderInvalidSubmit(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>renderInvalidSubmit(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderMapping</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.portlet.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/annotation/RenderMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractExcelView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractExcelView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractJExcelView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractJExcelView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractPdfStamperView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfStamperView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractPdfView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractFeedView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MarshallingView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xml/MarshallingView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedOutputModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedTemplateModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>renderMergedTemplateModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedTemplateModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>renderMergedTemplateModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderMergedTemplateModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>renderMergedTemplateModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderReport(JasperPrint, Map&amp;lt;String, Object&amp;gt;, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsSingleFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html</Path>
    <Anchor>renderReport(net.sf.jasperreports.engine.JasperPrint, java.util.Map, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderReport(JasperPrint, Map&amp;lt;String, Object&amp;gt;, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>renderReport(net.sf.jasperreports.engine.JasperPrint, java.util.Map, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderReport(JasperPrint, Map&amp;lt;String, Object&amp;gt;, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsMultiFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.html</Path>
    <Anchor>renderReport(net.sf.jasperreports.engine.JasperPrint, java.util.Map, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderReportUsingOutputStream(JRExporter, JasperPrint, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsSingleFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html</Path>
    <Anchor>renderReportUsingOutputStream(net.sf.jasperreports.engine.JRExporter, net.sf.jasperreports.engine.JasperPrint, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderReportUsingWriter(JRExporter, JasperPrint, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsSingleFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html</Path>
    <Anchor>renderReportUsingWriter(net.sf.jasperreports.engine.JRExporter, net.sf.jasperreports.engine.JasperPrint, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderView(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ViewRendererServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ViewRendererServlet.html</Path>
    <Anchor>renderView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Repeat</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/Repeat.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace(Object, Object, Object)</Name>
      <Type>intfm</Type>
      <Scope>ConcurrentMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConcurrentMap.html</Path>
    <Anchor>replace(java.lang.Object, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace(Object, Object)</Name>
      <Type>intfm</Type>
      <Scope>ConcurrentMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConcurrentMap.html</Path>
    <Anchor>replace(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace(String, PropertySource&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>replace(java.lang.String, org.springframework.core.env.PropertySource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace(Object, Object, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
    <Anchor>replace(java.lang.Object, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace(K, V, V)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>replace(K, V, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace(K, V)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>replace(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace(String, String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>replace(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceAdvisor(Advisor, Advisor)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>replaceAdvisor(org.springframework.aop.Advisor, org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceAdvisor(Advisor, Advisor)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>replaceAdvisor(org.springframework.aop.Advisor, org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REPLACED_METHOD_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>REPLACED_METHOD_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceMediaTypes(Map&amp;lt;String, MediaType&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.html</Path>
    <Anchor>replaceMediaTypes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReplaceOverride</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ReplaceOverride.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReplaceOverride(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>ReplaceOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ReplaceOverride.html</Path>
    <Anchor>ReplaceOverride(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replacePath(String)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>replacePath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replacePlaceholders(String, MethodInvocation, Object, Throwable, long)</Name>
      <Type>instm</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>replacePlaceholders(java.lang.String, org.aopalliance.intercept.MethodInvocation, java.lang.Object, java.lang.Throwable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replacePlaceholders(String, Properties)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertyPlaceholderHelper.html</Path>
    <Anchor>replacePlaceholders(java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replacePlaceholders(String, PropertyPlaceholderHelper.PlaceholderResolver)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertyPlaceholderHelper.html</Path>
    <Anchor>replacePlaceholders(java.lang.String, org.springframework.util.PropertyPlaceholderHelper.PlaceholderResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceQuery(String)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>replaceQuery(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceQueryParam(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>replaceQueryParam(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REPLACER_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>REPLACER_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceUriTemplateParams(String, List&amp;lt;Param&amp;gt;, Set&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>replaceUriTemplateParams(java.lang.String, java.util.List, java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceUriTemplateVariables(String, Map&amp;lt;String, Object&amp;gt;, Map&amp;lt;String, String&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>replaceUriTemplateVariables(java.lang.String, java.util.Map, java.util.Map, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceValidators(Validator...)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>replaceValidators(org.springframework.validation.Validator...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replicate(Object, ReplicationMode)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>replicate(java.lang.Object, org.hibernate.ReplicationMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replicate(String, Object, ReplicationMode)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>replicate(java.lang.String, java.lang.Object, org.hibernate.ReplicationMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replicate(Object, ReplicationMode)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>replicate(java.lang.Object, org.hibernate.ReplicationMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replicate(String, Object, ReplicationMode)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>replicate(java.lang.String, java.lang.Object, org.hibernate.ReplicationMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Repository</Name>
      <Type>clm</Type>
      <Scope>org.springframework.stereotype</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/stereotype/Repository.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request(HttpMethod, String, Object...)</Name>
      <Type>clm</Type>
      <Scope>MockMvcRequestBuilders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.html</Path>
    <Anchor>request(org.springframework.http.HttpMethod, java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request()</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html</Path>
    <Anchor>request()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REQUEST_CONTEXT_PAGE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>RequestContextAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/RequestContextAwareTag.html</Path>
    <Anchor>REQUEST_CONTEXT_PAGE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REQUEST_TO_VIEW_NAME_TRANSLATOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>REQUEST_TO_VIEW_NAME_TRANSLATOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestAttr(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>requestAttr(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestAttributes</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestBody</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/RequestBody.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestBuilder</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/RequestBuilder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RequestCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestCompleted()</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributes.html</Path>
    <Anchor>requestCompleted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestCondition</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestCondition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestConditionHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestConditionHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestConditionHolder(RequestCondition&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>RequestConditionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestConditionHolder.html</Path>
    <Anchor>RequestConditionHolder(org.springframework.web.servlet.mvc.condition.RequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContext(HttpServletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>RequestContext(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContext(HttpServletRequest, ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>RequestContext(javax.servlet.http.HttpServletRequest, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContext(HttpServletRequest, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>RequestContext(javax.servlet.http.HttpServletRequest, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContext(HttpServletRequest, HttpServletResponse, ServletContext, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>RequestContext(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContext()</Name>
      <Type>Constructor</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>RequestContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextAwareTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/RequestContextAwareTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextAwareTag()</Name>
      <Type>Constructor</Type>
      <Scope>RequestContextAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/RequestContextAwareTag.html</Path>
    <Anchor>RequestContextAwareTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/RequestContextFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextFilter()</Name>
      <Type>Constructor</Type>
      <Scope>RequestContextFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/RequestContextFilter.html</Path>
    <Anchor>RequestContextFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextHolder()</Name>
      <Type>Constructor</Type>
      <Scope>RequestContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextHolder.html</Path>
    <Anchor>RequestContextHolder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextListener()</Name>
      <Type>Constructor</Type>
      <Scope>RequestContextListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextListener.html</Path>
    <Anchor>RequestContextListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContextUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestContextUtils()</Name>
      <Type>Constructor</Type>
      <Scope>RequestContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContextUtils.html</Path>
    <Anchor>RequestContextUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestDataValueProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestDataValueProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestDestroyed(ServletRequestEvent)</Name>
      <Type>instm</Type>
      <Scope>RequestContextListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextListener.html</Path>
    <Anchor>requestDestroyed(javax.servlet.ServletRequestEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestDestructionCallbacks</Name>
      <Type>Field</Type>
      <Scope>AbstractRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributes.html</Path>
    <Anchor>requestDestructionCallbacks</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requested()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>requested()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHandledEvent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/RequestHandledEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHandledEvent(Object, String, String, long)</Name>
      <Type>Constructor</Type>
      <Scope>RequestHandledEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/RequestHandledEvent.html</Path>
    <Anchor>RequestHandledEvent(java.lang.Object, java.lang.String, java.lang.String, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHandledEvent(Object, String, String, long, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>RequestHandledEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/RequestHandledEvent.html</Path>
    <Anchor>RequestHandledEvent(java.lang.Object, java.lang.String, java.lang.String, long, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHeader</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/RequestHeader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHeaderMapMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMapMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHeaderMapMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>RequestHeaderMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMapMethodArgumentResolver.html</Path>
    <Anchor>RequestHeaderMapMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHeaderMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHeaderMethodArgumentResolver(ConfigurableBeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>RequestHeaderMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver.html</Path>
    <Anchor>RequestHeaderMethodArgumentResolver(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestInitialized(ServletRequestEvent)</Name>
      <Type>instm</Type>
      <Scope>RequestContextListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextListener.html</Path>
    <Anchor>requestInitialized(javax.servlet.ServletRequestEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMapping</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/RequestMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestMappingHandlerAdapter()</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>requestMappingHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMappingHandlerAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMappingHandlerAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>RequestMappingHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestMappingHandlerMapping()</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>requestMappingHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMappingHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMappingHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>RequestMappingHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMappingInfo</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMappingInfo(PatternsRequestCondition, RequestMethodsRequestCondition, ParamsRequestCondition, HeadersRequestCondition, ConsumesRequestCondition, ProducesRequestCondition, RequestCondition&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>RequestMappingInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfo.html</Path>
    <Anchor>RequestMappingInfo(org.springframework.web.servlet.mvc.condition.PatternsRequestCondition, org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition, org.springframework.web.servlet.mvc.condition.ParamsRequestCondition, org.springframework.web.servlet.mvc.condition.HeadersRequestCondition, org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition, org.springframework.web.servlet.mvc.condition.ProducesRequestCondition, org.springframework.web.servlet.mvc.condition.RequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMappingInfo(RequestMappingInfo, RequestCondition&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>RequestMappingInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfo.html</Path>
    <Anchor>RequestMappingInfo(org.springframework.web.servlet.mvc.method.RequestMappingInfo, org.springframework.web.servlet.mvc.condition.RequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMappingInfoHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMappingInfoHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>RequestMappingInfoHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.html</Path>
    <Anchor>RequestMappingInfoHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMatcher</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/RequestMatcher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMethod</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/RequestMethod.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMethodsRequestCondition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestMethodsRequestCondition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestMethodsRequestCondition(RequestMethod...)</Name>
      <Type>Constructor</Type>
      <Scope>RequestMethodsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestMethodsRequestCondition.html</Path>
    <Anchor>RequestMethodsRequestCondition(org.springframework.web.bind.annotation.RequestMethod...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestParam</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/RequestParam.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestParamMapMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestParamMapMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>RequestParamMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver.html</Path>
    <Anchor>RequestParamMapMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestParamMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestParamMethodArgumentResolver(ConfigurableBeanFactory, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>RequestParamMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.html</Path>
    <Anchor>RequestParamMethodArgumentResolver(org.springframework.beans.factory.config.ConfigurableBeanFactory, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestPart</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/RequestPart.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestPartMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestPartMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestPartMethodArgumentResolver(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>RequestPartMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestPartMethodArgumentResolver.html</Path>
    <Anchor>RequestPartMethodArgumentResolver(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestPartServletServerHttpRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/RequestPartServletServerHttpRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestPartServletServerHttpRequest(HttpServletRequest, String)</Name>
      <Type>Constructor</Type>
      <Scope>RequestPartServletServerHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/RequestPartServletServerHttpRequest.html</Path>
    <Anchor>RequestPartServletServerHttpRequest(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestPostProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.web.servlet.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/RequestPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestResponseBodyMethodProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestResponseBodyMethodProcessor(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>RequestResponseBodyMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.html</Path>
    <Anchor>RequestResponseBodyMethodProcessor(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestResponseBodyMethodProcessor(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;, ContentNegotiationManager)</Name>
      <Type>Constructor</Type>
      <Scope>RequestResponseBodyMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.html</Path>
    <Anchor>RequestResponseBodyMethodProcessor(java.util.List, org.springframework.web.accept.ContentNegotiationManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestResultMatchers</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.result</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestResultMatchers()</Name>
      <Type>Constructor</Type>
      <Scope>RequestResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
    <Anchor>RequestResultMatchers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestScope</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestScope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestScope()</Name>
      <Type>Constructor</Type>
      <Scope>RequestScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestScope.html</Path>
    <Anchor>RequestScope()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTo(Matcher&amp;lt;String&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>MockRestRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/MockRestRequestMatchers.html</Path>
    <Anchor>requestTo(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTo(String)</Name>
      <Type>clm</Type>
      <Scope>MockRestRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/MockRestRequestMatchers.html</Path>
    <Anchor>requestTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTo(URI)</Name>
      <Type>clm</Type>
      <Scope>MockRestRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/MockRestRequestMatchers.html</Path>
    <Anchor>requestTo(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestToViewNameTranslator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/RequestToViewNameTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Required</Name>
      <Type>clm</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/Required.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequiredAnnotationBeanPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequiredAnnotationBeanPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>RequiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>RequiredAnnotationBeanPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredContextClass()</Name>
      <Type>instm</Type>
      <Scope>ApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ApplicationObjectSupport.html</Path>
    <Anchor>requiredContextClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredSingleResult(Collection&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>DataAccessUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DataAccessUtils.html</Path>
    <Anchor>requiredSingleResult(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredUniqueResult(Collection&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>DataAccessUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DataAccessUtils.html</Path>
    <Anchor>requiredUniqueResult(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredViewClass()</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateViewResolver.html</Path>
    <Anchor>requiredViewClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredViewClass()</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerViewResolver.html</Path>
    <Anchor>requiredViewClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredViewClass()</Name>
      <Type>instm</Type>
      <Scope>InternalResourceViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceViewResolver.html</Path>
    <Anchor>requiredViewClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredViewClass()</Name>
      <Type>instm</Type>
      <Scope>JasperReportsViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html</Path>
    <Anchor>requiredViewClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredViewClass()</Name>
      <Type>instm</Type>
      <Scope>TilesViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesViewResolver.html</Path>
    <Anchor>requiredViewClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredViewClass()</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>requiredViewClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredViewClass()</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutViewResolver.html</Path>
    <Anchor>requiredViewClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredViewClass()</Name>
      <Type>instm</Type>
      <Scope>VelocityViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityViewResolver.html</Path>
    <Anchor>requiredViewClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiredViewClass()</Name>
      <Type>instm</Type>
      <Scope>XsltViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltViewResolver.html</Path>
    <Anchor>requiredViewClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresConfigInterface()</Name>
      <Type>instm</Type>
      <Scope>BshScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptFactory.html</Path>
    <Anchor>requiresConfigInterface()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresConfigInterface()</Name>
      <Type>instm</Type>
      <Scope>GroovyScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/groovy/GroovyScriptFactory.html</Path>
    <Anchor>requiresConfigInterface()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresConfigInterface()</Name>
      <Type>instm</Type>
      <Scope>JRubyScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/jruby/JRubyScriptFactory.html</Path>
    <Anchor>requiresConfigInterface()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresConfigInterface()</Name>
      <Type>intfm</Type>
      <Scope>ScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptFactory.html</Path>
    <Anchor>requiresConfigInterface()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresDestruction(Object, RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>requiresDestruction(java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresReader()</Name>
      <Type>instm</Type>
      <Scope>EncodedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/EncodedResource.html</Path>
    <Anchor>requiresReader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresRefresh()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html</Path>
    <Anchor>requiresRefresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresRefresh()</Name>
      <Type>instm</Type>
      <Scope>RefreshableScriptTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/RefreshableScriptTargetSource.html</Path>
    <Anchor>requiresRefresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresScriptedObjectRefresh(ScriptSource)</Name>
      <Type>instm</Type>
      <Scope>BshScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptFactory.html</Path>
    <Anchor>requiresScriptedObjectRefresh(org.springframework.scripting.ScriptSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresScriptedObjectRefresh(ScriptSource)</Name>
      <Type>instm</Type>
      <Scope>GroovyScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/groovy/GroovyScriptFactory.html</Path>
    <Anchor>requiresScriptedObjectRefresh(org.springframework.scripting.ScriptSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresScriptedObjectRefresh(ScriptSource)</Name>
      <Type>instm</Type>
      <Scope>JRubyScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/jruby/JRubyScriptFactory.html</Path>
    <Anchor>requiresScriptedObjectRefresh(org.springframework.scripting.ScriptSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requiresScriptedObjectRefresh(ScriptSource)</Name>
      <Type>intfm</Type>
      <Scope>ScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptFactory.html</Path>
    <Anchor>requiresScriptedObjectRefresh(org.springframework.scripting.ScriptSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rescheduleTaskIfNecessary(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>rescheduleTaskIfNecessary(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESERVED_DEFAULT_PROFILE_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>RESERVED_DEFAULT_PROFILE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset()</Name>
      <Type>instm</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>reset()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset()</Name>
      <Type>instm</Type>
      <Scope>MockFilterChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockFilterChain.html</Path>
    <Anchor>reset()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>reset()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset()</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>reset()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletPreferences</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletPreferences.html</Path>
    <Anchor>reset(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset()</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>reset()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset()</Name>
      <Type>intfm</Type>
      <Scope>ResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolder.html</Path>
    <Anchor>reset()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>reset()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>resetBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetBuffer()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>resetBuffer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetBuffer()</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>resetBuffer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetCachedTemplates()</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>resetCachedTemplates()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>resetConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>resetConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetConnection()</Name>
      <Type>instm</Type>
      <Scope>CachingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/CachingConnectionFactory.html</Path>
    <Anchor>resetConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>resetConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetConnectionAfterTransaction(Connection, Integer)</Name>
      <Type>clm</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>resetConnectionAfterTransaction(java.sql.Connection, java.lang.Integer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetCount()</Name>
      <Type>instm</Type>
      <Scope>DebugInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/DebugInterceptor.html</Path>
    <Anchor>resetCount()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetFilters(boolean)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>resetFilters(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetJodaTimeContext()</Name>
      <Type>clm</Type>
      <Scope>JodaTimeContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeContextHolder.html</Path>
    <Anchor>resetJodaTimeContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetLocaleContext()</Name>
      <Type>clm</Type>
      <Scope>LocaleContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/i18n/LocaleContextHolder.html</Path>
    <Anchor>resetLocaleContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetRequestAttributes()</Name>
      <Type>clm</Type>
      <Scope>RequestContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextHolder.html</Path>
    <Anchor>resetRequestAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetThreadContextClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>RemotingSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemotingSupport.html</Path>
    <Anchor>resetThreadContextClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvableToString()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageSourceResolvable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
    <Anchor>resolvableToString()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolve(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultNamespaceHandlerResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.html</Path>
    <Anchor>resolve(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolve(String)</Name>
      <Type>intfm</Type>
      <Scope>NamespaceHandlerResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/NamespaceHandlerResolver.html</Path>
    <Anchor>resolve(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolve(EvaluationContext, String)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanFactoryResolver.html</Path>
    <Anchor>resolve(org.springframework.expression.EvaluationContext, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolve(EvaluationContext, String)</Name>
      <Type>intfm</Type>
      <Scope>BeanResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/BeanResolver.html</Path>
    <Anchor>resolve(org.springframework.expression.EvaluationContext, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolve(EvaluationContext, String, List&amp;lt;TypeDescriptor&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ConstructorResolver.html</Path>
    <Anchor>resolve(org.springframework.expression.EvaluationContext, java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolve(EvaluationContext, Object, String, List&amp;lt;TypeDescriptor&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>MethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/MethodResolver.html</Path>
    <Anchor>resolve(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolve(EvaluationContext, String, List&amp;lt;TypeDescriptor&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ReflectiveConstructorResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectiveConstructorResolver.html</Path>
    <Anchor>resolve(org.springframework.expression.EvaluationContext, java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolve(EvaluationContext, Object, String, List&amp;lt;TypeDescriptor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ReflectiveMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectiveMethodResolver.html</Path>
    <Anchor>resolve(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveAction()</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>resolveAction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveAliases(StringValueResolver)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>resolveAliases(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveAliases(StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>SimpleAliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SimpleAliasRegistry.html</Path>
    <Anchor>resolveAliases(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, NativeWebRequest)</Name>
      <Type>intfm</Type>
      <Scope>WebArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractNamedValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractWebArgumentResolverAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractWebArgumentResolverAdapter.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>ErrorsMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ErrorsMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>MapMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/MapMethodProcessor.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>ModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>ModelMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelMethodProcessor.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>RequestHeaderMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMapMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>RequestParamMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>SessionStatusMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionStatusMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>intfm</Type>
      <Scope>HandlerMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodArgumentResolverComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>HttpEntityMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>MatrixVariableMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMapMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>PathVariableMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMapMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RedirectAttributesMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>RequestPartMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestPartMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>RequestResponseBodyMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletRequestMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>ServletResponseMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletResponseMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArgument(MethodParameter, ModelAndViewContainer, NativeWebRequest, WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilderMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.html</Path>
    <Anchor>resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArguments(Object[], Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractMessageSource.html</Path>
    <Anchor>resolveArguments(java.lang.Object[], java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArguments(Object[], Locale)</Name>
      <Type>instm</Type>
      <Scope>MessageSourceSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/MessageSourceSupport.html</Path>
    <Anchor>resolveArguments(java.lang.Object[], java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveArguments(Object)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>resolveArguments(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveBasePackage(String)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>resolveBasePackage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveBean()</Name>
      <Type>instm</Type>
      <Scope>ControllerAdviceBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/ControllerAdviceBean.html</Path>
    <Anchor>resolveBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveBeanClass(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>resolveBeanClass(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveBeanClass(RootBeanDefinition, String, Class&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveBeforeInstantiation(String, RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>resolveBeforeInstantiation(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveClass(ObjectStreamClass)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableObjectInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConfigurableObjectInputStream.html</Path>
    <Anchor>resolveClass(java.io.ObjectStreamClass)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveClassName(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/MethodInvokingFactoryBean.html</Path>
    <Anchor>resolveClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveClassName(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>resolveClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveClassName(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/MethodInvokingRunnable.html</Path>
    <Anchor>resolveClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveClassName(String, ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>resolveClassName(java.lang.String, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveClassName(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>resolveClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCode(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractMessageSource.html</Path>
    <Anchor>resolveCode(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCode(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>resolveCode(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCode(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>resolveCode(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCode(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>StaticMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticMessageSource.html</Path>
    <Anchor>resolveCode(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCodeWithoutArguments(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractMessageSource.html</Path>
    <Anchor>resolveCodeWithoutArguments(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCodeWithoutArguments(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>resolveCodeWithoutArguments(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCodeWithoutArguments(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>resolveCodeWithoutArguments(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCodeWithoutArguments(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>StaticMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticMessageSource.html</Path>
    <Anchor>resolveCodeWithoutArguments(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCommonArgument(MethodParameter, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>resolveCommonArgument(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCommonArgument(MethodParameter, NativeWebRequest, Exception)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>resolveCommonArgument(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCommonArgument(MethodParameter, NativeWebRequest, Exception)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>resolveCommonArgument(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveContextualObject(String)</Name>
      <Type>intfm</Type>
      <Scope>Scope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/Scope.html</Path>
    <Anchor>resolveContextualObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveContextualObject(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/SimpleThreadScope.html</Path>
    <Anchor>resolveContextualObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveContextualObject(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestAttributesScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributesScope.html</Path>
    <Anchor>resolveContextualObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveContextualObject(String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextScope.html</Path>
    <Anchor>resolveContextualObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveContextualObject(String)</Name>
      <Type>instm</Type>
      <Scope>PortletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextScope.html</Path>
    <Anchor>resolveContextualObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCookieValue(String, Class, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>resolveCookieValue(java.lang.String, java.lang.Class, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCssClass()</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>resolveCssClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveCssClass()</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>resolveCssClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDefaultResponseDestination(Session)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>resolveDefaultResponseDestination(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDefaultValue(String)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>resolveDefaultValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDependency(DependencyDescriptor, String)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDependency(DependencyDescriptor, String, Set&amp;lt;String&amp;gt;, TypeConverter)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String, java.util.Set, org.springframework.beans.TypeConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDependency(DependencyDescriptor, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDependency(DependencyDescriptor, String, Set&amp;lt;String&amp;gt;, TypeConverter)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String, java.util.Set, org.springframework.beans.TypeConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDestinationName(Session, String, boolean)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html</Path>
    <Anchor>resolveDestinationName(javax.jms.Session, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDestinationName(Session, String, boolean)</Name>
      <Type>intfm</Type>
      <Scope>DestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DestinationResolver.html</Path>
    <Anchor>resolveDestinationName(javax.jms.Session, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDestinationName(Session, String, boolean)</Name>
      <Type>instm</Type>
      <Scope>DynamicDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DynamicDestinationResolver.html</Path>
    <Anchor>resolveDestinationName(javax.jms.Session, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDestinationName(Session, String)</Name>
      <Type>instm</Type>
      <Scope>JmsDestinationAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JmsDestinationAccessor.html</Path>
    <Anchor>resolveDestinationName(javax.jms.Session, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveDestinationName(Session, String, boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JndiDestinationResolver.html</Path>
    <Anchor>resolveDestinationName(javax.jms.Session, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEmbeddedValue(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>resolveEmbeddedValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEmbeddedValue(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>resolveEmbeddedValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEmbeddedValue(String)</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatAnnotationFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateTimeFormatAnnotationFormatterFactory.html</Path>
    <Anchor>resolveEmbeddedValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEmbeddedValue(String)</Name>
      <Type>instm</Type>
      <Scope>JodaDateTimeFormatAnnotationFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaDateTimeFormatAnnotationFormatterFactory.html</Path>
    <Anchor>resolveEmbeddedValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEmbeddedValue(String)</Name>
      <Type>instm</Type>
      <Scope>NumberFormatAnnotationFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/NumberFormatAnnotationFormatterFactory.html</Path>
    <Anchor>resolveEmbeddedValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEmbeddedValuesInPatterns(String[])</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>resolveEmbeddedValuesInPatterns(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEntity(String, String)</Name>
      <Type>instm</Type>
      <Scope>BeansDtdResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeansDtdResolver.html</Path>
    <Anchor>resolveEntity(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEntity(String, String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingEntityResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DelegatingEntityResolver.html</Path>
    <Anchor>resolveEntity(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEntity(String, String)</Name>
      <Type>instm</Type>
      <Scope>PluggableSchemaResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/PluggableSchemaResolver.html</Path>
    <Anchor>resolveEntity(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveEntity(String, String)</Name>
      <Type>instm</Type>
      <Scope>ResourceEntityResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ResourceEntityResolver.html</Path>
    <Anchor>resolveEntity(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveException(RenderRequest, RenderResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>resolveException(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveException(ResourceRequest, ResourceResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>resolveException(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveException(RenderRequest, RenderResponse, Object, Exception)</Name>
      <Type>intfm</Type>
      <Scope>HandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerExceptionResolver.html</Path>
    <Anchor>resolveException(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveException(ResourceRequest, ResourceResponse, Object, Exception)</Name>
      <Type>intfm</Type>
      <Scope>HandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerExceptionResolver.html</Path>
    <Anchor>resolveException(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>resolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>HandlerExceptionResolverComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerExceptionResolverComposite.html</Path>
    <Anchor>resolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>intfm</Type>
      <Scope>HandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerExceptionResolver.html</Path>
    <Anchor>resolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveFallbackIfPossible(String, ClassNotFoundException)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableObjectInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConfigurableObjectInputStream.html</Path>
    <Anchor>resolveFallbackIfPossible(java.lang.String, java.lang.ClassNotFoundException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveFallbackIfPossible(String, ClassNotFoundException)</Name>
      <Type>instm</Type>
      <Scope>CodebaseAwareObjectInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html</Path>
    <Anchor>resolveFallbackIfPossible(java.lang.String, java.lang.ClassNotFoundException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveFileExtensions(MediaType)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManager.html</Path>
    <Anchor>resolveFileExtensions(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveFileExtensions(MediaType)</Name>
      <Type>instm</Type>
      <Scope>MappingMediaTypeFileExtensionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.html</Path>
    <Anchor>resolveFileExtensions(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveFileExtensions(MediaType)</Name>
      <Type>intfm</Type>
      <Scope>MediaTypeFileExtensionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/MediaTypeFileExtensionResolver.html</Path>
    <Anchor>resolveFileExtensions(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveFor()</Name>
      <Type>instm</Type>
      <Scope>LabelTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/LabelTag.html</Path>
    <Anchor>resolveFor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveId(Element, AbstractBeanDefinition, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveId(Element, AbstractBeanDefinition, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManagerBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/config/JtaTransactionManagerBeanDefinitionParser.html</Path>
    <Anchor>resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveId()</Name>
      <Type>instm</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>resolveId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveId()</Name>
      <Type>instm</Type>
      <Scope>AbstractMultiCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html</Path>
    <Anchor>resolveId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveId()</Name>
      <Type>instm</Type>
      <Scope>OptionsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionsTag.html</Path>
    <Anchor>resolveId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveLocale(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AcceptHeaderLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.html</Path>
    <Anchor>resolveLocale(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveLocale(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CookieLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/CookieLocaleResolver.html</Path>
    <Anchor>resolveLocale(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveLocale(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>FixedLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/FixedLocaleResolver.html</Path>
    <Anchor>resolveLocale(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveLocale(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>SessionLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/SessionLocaleResolver.html</Path>
    <Anchor>resolveLocale(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveLocale(HttpServletRequest)</Name>
      <Type>intfm</Type>
      <Scope>LocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/LocaleResolver.html</Path>
    <Anchor>resolveLocale(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveLocale(TilesRequestContext)</Name>
      <Type>instm</Type>
      <Scope>SpringLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SpringLocaleResolver.html</Path>
    <Anchor>resolveLocale(org.apache.tiles.context.TilesRequestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveLocale(Request)</Name>
      <Type>instm</Type>
      <Scope>SpringLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SpringLocaleResolver.html</Path>
    <Anchor>resolveLocale(org.apache.tiles.request.Request)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMediaTypes(NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractMappingContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.html</Path>
    <Anchor>resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMediaTypes(NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManager.html</Path>
    <Anchor>resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMediaTypes(NativeWebRequest)</Name>
      <Type>intfm</Type>
      <Scope>ContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationStrategy.html</Path>
    <Anchor>resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMediaTypes(NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>FixedContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/FixedContentNegotiationStrategy.html</Path>
    <Anchor>resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMediaTypes(NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HeaderContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/HeaderContentNegotiationStrategy.html</Path>
    <Anchor>resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessage()</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>resolveMessage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String, String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String)</Name>
      <Type>intfm</Type>
      <Scope>BindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingResult.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String, String)</Name>
      <Type>intfm</Type>
      <Scope>BindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingResult.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String, String, String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String, java.lang.String, java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String, String)</Name>
      <Type>intfm</Type>
      <Scope>MessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/MessageCodesResolver.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMessageCodes(String, String, String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>MessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/MessageCodesResolver.html</Path>
    <Anchor>resolveMessageCodes(java.lang.String, java.lang.String, java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMethod(Exception)</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExceptionHandlerMethodResolver.html</Path>
    <Anchor>resolveMethod(java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveModelAndView(Method, Class, Object, ExtendedModelMap, NativeWebRequest)</Name>
      <Type>intfm</Type>
      <Scope>ModelAndViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html</Path>
    <Anchor>resolveModelAndView(java.lang.reflect.Method, java.lang.Class, java.lang.Object, org.springframework.ui.ExtendedModelMap, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveModelAttribute()</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>resolveModelAttribute()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMultipart(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
    <Anchor>resolveMultipart(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMultipart(HttpServletRequest)</Name>
      <Type>intfm</Type>
      <Scope>MultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/MultipartResolver.html</Path>
    <Anchor>resolveMultipart(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMultipart(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>StandardServletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StandardServletMultipartResolver.html</Path>
    <Anchor>resolveMultipart(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMultipart(ActionRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsPortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
    <Anchor>resolveMultipart(javax.portlet.ActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveMultipart(ActionRequest)</Name>
      <Type>intfm</Type>
      <Scope>PortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/PortletMultipartResolver.html</Path>
    <Anchor>resolveMultipart(javax.portlet.ActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveName(String, MethodParameter, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractNamedValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.html</Path>
    <Anchor>resolveName(java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveName(String, MethodParameter, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ExpressionValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExpressionValueMethodArgumentResolver.html</Path>
    <Anchor>resolveName(java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveName(String, MethodParameter, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>RequestHeaderMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver.html</Path>
    <Anchor>resolveName(java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveName(String, MethodParameter, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>RequestParamMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.html</Path>
    <Anchor>resolveName(java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveName(String, MethodParameter, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>MatrixVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMethodArgumentResolver.html</Path>
    <Anchor>resolveName(java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveName(String, MethodParameter, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>PathVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMethodArgumentResolver.html</Path>
    <Anchor>resolveName(java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveName(String, MethodParameter, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ServletCookieValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletCookieValueMethodArgumentResolver.html</Path>
    <Anchor>resolveName(java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveNestedPlaceholders(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>resolveNestedPlaceholders(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveOriginal(FacesContext, String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingVariableResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingVariableResolver.html</Path>
    <Anchor>resolveOriginal(javax.faces.context.FacesContext, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveParameterType(MethodParameter, Class)</Name>
      <Type>clm</Type>
      <Scope>GenericTypeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/GenericTypeResolver.html</Path>
    <Anchor>resolveParameterType(org.springframework.core.MethodParameter, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePath(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html</Path>
    <Anchor>resolvePath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePath(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceEditor.html</Path>
    <Anchor>resolvePath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePath(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourceArrayPropertyEditor.html</Path>
    <Anchor>resolvePath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePathVariable(String, Class, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>resolvePathVariable(java.lang.String, java.lang.Class, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholder(String, Properties)</Name>
      <Type>instm</Type>
      <Scope>PreferencesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html</Path>
    <Anchor>resolvePlaceholder(java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholder(String, String, Preferences)</Name>
      <Type>instm</Type>
      <Scope>PreferencesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html</Path>
    <Anchor>resolvePlaceholder(java.lang.String, java.lang.String, java.util.prefs.Preferences)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholder(String, Properties, int)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>resolvePlaceholder(java.lang.String, java.util.Properties, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholder(String, Properties)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>resolvePlaceholder(java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholder(String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyPlaceholderHelper.PlaceholderResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertyPlaceholderHelper.PlaceholderResolver.html</Path>
    <Anchor>resolvePlaceholder(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholder(String, Properties)</Name>
      <Type>instm</Type>
      <Scope>ServletContextPropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html</Path>
    <Anchor>resolvePlaceholder(java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholder(String, ServletContext, boolean)</Name>
      <Type>instm</Type>
      <Scope>ServletContextPropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html</Path>
    <Anchor>resolvePlaceholder(java.lang.String, javax.servlet.ServletContext, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholders(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>resolvePlaceholders(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholders(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>resolvePlaceholders(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholders(String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertyResolver.html</Path>
    <Anchor>resolvePlaceholders(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholders(String)</Name>
      <Type>clm</Type>
      <Scope>SystemPropertyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SystemPropertyUtils.html</Path>
    <Anchor>resolvePlaceholders(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePlaceholders(String, boolean)</Name>
      <Type>clm</Type>
      <Scope>SystemPropertyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SystemPropertyUtils.html</Path>
    <Anchor>resolvePlaceholders(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePrimitiveClassName(String)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>resolvePrimitiveClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolvePrimitiveIfNecessary(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>resolvePrimitiveIfNecessary(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveProxyClass(String[])</Name>
      <Type>instm</Type>
      <Scope>ConfigurableObjectInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConfigurableObjectInputStream.html</Path>
    <Anchor>resolveProxyClass(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveProxyTargetClass(BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>resolveProxyTargetClass(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveQueue(Session)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>resolveQueue(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveQueue(Session, String)</Name>
      <Type>instm</Type>
      <Scope>DynamicDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DynamicDestinationResolver.html</Path>
    <Anchor>resolveQueue(javax.jms.Session, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveQueueName(Session, String)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>resolveQueueName(javax.jms.Session, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolver</Name>
      <Type>Field</Type>
      <Scope>SpringWildcardServletTilesApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SpringWildcardServletTilesApplicationContext.html</Path>
    <Anchor>resolver</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveReference(String)</Name>
      <Type>instm</Type>
      <Scope>FacesRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesRequestAttributes.html</Path>
    <Anchor>resolveReference(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveReference(String)</Name>
      <Type>intfm</Type>
      <Scope>RequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
    <Anchor>resolveReference(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveReference(String)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletRequestAttributes.html</Path>
    <Anchor>resolveReference(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveReference(String)</Name>
      <Type>instm</Type>
      <Scope>PortletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestAttributes.html</Path>
    <Anchor>resolveReference(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveRefreshCheckDelay(BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>resolveRefreshCheckDelay(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveRequestBody(MethodParameter, NativeWebRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>resolveRequestBody(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveRequiredPlaceholders(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>resolveRequiredPlaceholders(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveRequiredPlaceholders(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>resolveRequiredPlaceholders(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveRequiredPlaceholders(String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertyResolver.html</Path>
    <Anchor>resolveRequiredPlaceholders(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveResponseStatus(ResponseStatus, HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>ResponseStatusExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html</Path>
    <Anchor>resolveResponseStatus(org.springframework.web.bind.annotation.ResponseStatus, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveReturnType(Method, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>GenericTypeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/GenericTypeResolver.html</Path>
    <Anchor>resolveReturnType(java.lang.reflect.Method, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveReturnTypeArgument(Method, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>GenericTypeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/GenericTypeResolver.html</Path>
    <Anchor>resolveReturnTypeArgument(java.lang.reflect.Method, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveReturnTypeForGenericMethod(Method, Object[])</Name>
      <Type>clm</Type>
      <Scope>GenericTypeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/GenericTypeResolver.html</Path>
    <Anchor>resolveReturnTypeForGenericMethod(java.lang.reflect.Method, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveRootDirResource(Resource)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>resolveRootDirResource(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveScopeMetadata(BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AnnotationScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationScopeMetadataResolver.html</Path>
    <Anchor>resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveScopeMetadata(BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>Jsr330ScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html</Path>
    <Anchor>resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveScopeMetadata(BeanDefinition)</Name>
      <Type>intfm</Type>
      <Scope>ScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ScopeMetadataResolver.html</Path>
    <Anchor>resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveScopeName(String)</Name>
      <Type>instm</Type>
      <Scope>Jsr330ScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html</Path>
    <Anchor>resolveScopeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveSignature(String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>resolveSignature(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveSpecifiedDataSource(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>resolveSpecifiedDataSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveSpecifiedLookupKey(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>resolveSpecifiedLookupKey(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveSpecifiedLookupKey(Object)</Name>
      <Type>instm</Type>
      <Scope>IsolationLevelDataSourceRouter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/IsolationLevelDataSourceRouter.html</Path>
    <Anchor>resolveSpecifiedLookupKey(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveSpringBean(FacesContext, String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingVariableResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingVariableResolver.html</Path>
    <Anchor>resolveSpringBean(javax.faces.context.FacesContext, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveStandardArgument(Class&amp;lt;?&amp;gt;, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>resolveStandardArgument(java.lang.Class, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveStandardArgument(Class&amp;lt;?&amp;gt;, NativeWebRequest, Exception)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>resolveStandardArgument(java.lang.Class, org.springframework.web.context.request.NativeWebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveStandardArgument(Class&amp;lt;?&amp;gt;, NativeWebRequest, Exception)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>resolveStandardArgument(java.lang.Class, org.springframework.web.context.request.NativeWebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveStringValue(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionVisitor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionVisitor.html</Path>
    <Anchor>resolveStringValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveStringValue(String)</Name>
      <Type>intfm</Type>
      <Scope>StringValueResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringValueResolver.html</Path>
    <Anchor>resolveStringValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveSystemProperty(String)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>resolveSystemProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveTargetType(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>resolveTargetType(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveThemeName(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CookieThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/CookieThemeResolver.html</Path>
    <Anchor>resolveThemeName(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveThemeName(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>FixedThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/FixedThemeResolver.html</Path>
    <Anchor>resolveThemeName(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveThemeName(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>SessionThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/SessionThemeResolver.html</Path>
    <Anchor>resolveThemeName(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveThemeName(HttpServletRequest)</Name>
      <Type>intfm</Type>
      <Scope>ThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ThemeResolver.html</Path>
    <Anchor>resolveThemeName(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveTopic(Session, String)</Name>
      <Type>instm</Type>
      <Scope>DynamicDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DynamicDestinationResolver.html</Path>
    <Anchor>resolveTopic(javax.jms.Session, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveType(Type, Map&amp;lt;TypeVariable, Type&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>GenericTypeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/GenericTypeResolver.html</Path>
    <Anchor>resolveType(java.lang.reflect.Type, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveTypeArgument(Class, Class)</Name>
      <Type>clm</Type>
      <Scope>GenericTypeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/GenericTypeResolver.html</Path>
    <Anchor>resolveTypeArgument(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveTypeArguments(Class, Class)</Name>
      <Type>clm</Type>
      <Scope>GenericTypeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/GenericTypeResolver.html</Path>
    <Anchor>resolveTypeArguments(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveValue(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionVisitor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionVisitor.html</Path>
    <Anchor>resolveValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveVariable(FacesContext, String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingVariableResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingVariableResolver.html</Path>
    <Anchor>resolveVariable(javax.faces.context.FacesContext, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveVariable(FacesContext, String)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanVariableResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/SpringBeanVariableResolver.html</Path>
    <Anchor>resolveVariable(javax.faces.context.FacesContext, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveVariable(FacesContext, String)</Name>
      <Type>instm</Type>
      <Scope>WebApplicationContextVariableResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/WebApplicationContextVariableResolver.html</Path>
    <Anchor>resolveVariable(javax.faces.context.FacesContext, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveViewName(String, Map, PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>resolveViewName(java.lang.String, java.util.Map, javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveViewName(String, Map&amp;lt;String, Object&amp;gt;, Locale, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>resolveViewName(java.lang.String, java.util.Map, java.util.Locale, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveViewName(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>resolveViewName(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveViewName(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>BeanNameViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/BeanNameViewResolver.html</Path>
    <Anchor>resolveViewName(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveViewName(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>resolveViewName(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveViewName(String, Locale)</Name>
      <Type>intfm</Type>
      <Scope>ViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ViewResolver.html</Path>
    <Anchor>resolveViewName(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveWiringInfo(Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationBeanWiringInfoResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AnnotationBeanWiringInfoResolver.html</Path>
    <Anchor>resolveWiringInfo(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveWiringInfo(Object)</Name>
      <Type>intfm</Type>
      <Scope>BeanWiringInfoResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfoResolver.html</Path>
    <Anchor>resolveWiringInfo(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveWiringInfo(Object)</Name>
      <Type>instm</Type>
      <Scope>ClassNameBeanWiringInfoResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/ClassNameBeanWiringInfoResolver.html</Path>
    <Anchor>resolveWiringInfo(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resort()</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>resort()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Resource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/Resource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESOURCE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>RESOURCE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESOURCE_PARAM_NAME</Name>
      <Type>Field</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>RESOURCE_PARAM_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESOURCE_URL_DELIMITERS</Name>
      <Type>Field</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>RESOURCE_URL_DELIMITERS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/ResourceAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAccessException(String)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/ResourceAccessException.html</Path>
    <Anchor>ResourceAccessException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAccessException(String, IOException)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/ResourceAccessException.html</Path>
    <Anchor>ResourceAccessException(java.lang.String, java.io.IOException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAdapterApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/ResourceAdapterApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAdapterApplicationContext(BootstrapContext)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceAdapterApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/ResourceAdapterApplicationContext.html</Path>
    <Anchor>ResourceAdapterApplicationContext(javax.resource.spi.BootstrapContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAdapterFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAdapterFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceAdapterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
    <Anchor>ResourceAdapterFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAllocationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jms</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/ResourceAllocationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAllocationException(ResourceAllocationException)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceAllocationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/ResourceAllocationException.html</Path>
    <Anchor>ResourceAllocationException(javax.jms.ResourceAllocationException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceArrayPropertyEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourceArrayPropertyEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceArrayPropertyEditor()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourceArrayPropertyEditor.html</Path>
    <Anchor>ResourceArrayPropertyEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceArrayPropertyEditor(ResourcePatternResolver)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourceArrayPropertyEditor.html</Path>
    <Anchor>ResourceArrayPropertyEditor(org.springframework.core.io.support.ResourcePatternResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceArrayPropertyEditor(ResourcePatternResolver, PropertyResolver)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourceArrayPropertyEditor.html</Path>
    <Anchor>ResourceArrayPropertyEditor(org.springframework.core.io.support.ResourcePatternResolver, org.springframework.core.env.PropertyResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceArrayPropertyEditor(ResourcePatternResolver, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourceArrayPropertyEditor.html</Path>
    <Anchor>ResourceArrayPropertyEditor(org.springframework.core.io.support.ResourcePatternResolver, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceArrayPropertyEditor(ResourcePatternResolver, PropertyResolver, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourceArrayPropertyEditor.html</Path>
    <Anchor>ResourceArrayPropertyEditor(org.springframework.core.io.support.ResourcePatternResolver, org.springframework.core.env.PropertyResolver, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceAwareController</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/ResourceAwareController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceBundleEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ResourceBundleEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceBundleEditor()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceBundleEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ResourceBundleEditor.html</Path>
    <Anchor>ResourceBundleEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceBundleMessageSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceBundleMessageSource()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>ResourceBundleMessageSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceBundleThemeSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/ResourceBundleThemeSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceBundleThemeSource()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceBundleThemeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/ResourceBundleThemeSource.html</Path>
    <Anchor>ResourceBundleThemeSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceBundleViewResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceBundleViewResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>ResourceBundleViewResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceDatabasePopulator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.init</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceDatabasePopulator()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
    <Anchor>ResourceDatabasePopulator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEditor()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceEditor.html</Path>
    <Anchor>ResourceEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEditor(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceEditor.html</Path>
    <Anchor>ResourceEditor(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEditor(ResourceLoader, PropertyResolver)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceEditor.html</Path>
    <Anchor>ResourceEditor(org.springframework.core.io.ResourceLoader, org.springframework.core.env.PropertyResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEditor(ResourceLoader, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceEditor.html</Path>
    <Anchor>ResourceEditor(org.springframework.core.io.ResourceLoader, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEditor(ResourceLoader, PropertyResolver, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceEditor.html</Path>
    <Anchor>ResourceEditor(org.springframework.core.io.ResourceLoader, org.springframework.core.env.PropertyResolver, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEditorRegistrar</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ResourceEditorRegistrar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEditorRegistrar(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceEditorRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ResourceEditorRegistrar.html</Path>
    <Anchor>ResourceEditorRegistrar(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEditorRegistrar(ResourceLoader, PropertyResolver)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceEditorRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ResourceEditorRegistrar.html</Path>
    <Anchor>ResourceEditorRegistrar(org.springframework.core.io.ResourceLoader, org.springframework.core.env.PropertyResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEntityResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ResourceEntityResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceEntityResolver(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceEntityResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ResourceEntityResolver.html</Path>
    <Anchor>ResourceEntityResolver(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resourceHandlerMapping()</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>resourceHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHandlerRegistration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHandlerRegistration(ResourceLoader, String...)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceHandlerRegistration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.html</Path>
    <Anchor>ResourceHandlerRegistration(org.springframework.core.io.ResourceLoader, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHandlerRegistry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHandlerRegistry(ApplicationContext, ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceHandlerRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.html</Path>
    <Anchor>ResourceHandlerRegistry(org.springframework.context.ApplicationContext, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHolder</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHolderSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHolderSupport()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>ResourceHolderSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHolderSynchronization</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHolderSynchronization(H, K)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>ResourceHolderSynchronization(H, K)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ResourceHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ResourceHttpMessageConverter.html</Path>
    <Anchor>ResourceHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHttpRequestHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.resource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceHttpRequestHandler()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html</Path>
    <Anchor>ResourceHttpRequestHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceLoader</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resourceLoader</Name>
      <Type>Field</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>resourceLoader</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceLoaderAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ResourceLoaderAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceLoaderClassLoadHelper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceLoaderClassLoadHelper()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceLoaderClassLoadHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html</Path>
    <Anchor>ResourceLoaderClassLoadHelper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceLoaderClassLoadHelper(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceLoaderClassLoadHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html</Path>
    <Anchor>ResourceLoaderClassLoadHelper(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceMapping</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.portlet.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/annotation/ResourceMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceOverridingShadowingClassLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ResourceOverridingShadowingClassLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceOverridingShadowingClassLoader(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceOverridingShadowingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ResourceOverridingShadowingClassLoader.html</Path>
    <Anchor>ResourceOverridingShadowingClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePatternResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.io.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePatternResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePatternUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePatternUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePatternUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ResourcePatternUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePatternUtils.html</Path>
    <Anchor>ResourcePatternUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePropertySource(String, EncodedResource)</Name>
      <Type>Constructor</Type>
      <Scope>ResourcePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePropertySource.html</Path>
    <Anchor>ResourcePropertySource(java.lang.String, org.springframework.core.io.support.EncodedResource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePropertySource(EncodedResource)</Name>
      <Type>Constructor</Type>
      <Scope>ResourcePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePropertySource.html</Path>
    <Anchor>ResourcePropertySource(org.springframework.core.io.support.EncodedResource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePropertySource(String, Resource)</Name>
      <Type>Constructor</Type>
      <Scope>ResourcePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePropertySource.html</Path>
    <Anchor>ResourcePropertySource(java.lang.String, org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePropertySource(Resource)</Name>
      <Type>Constructor</Type>
      <Scope>ResourcePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePropertySource.html</Path>
    <Anchor>ResourcePropertySource(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePropertySource(String, String, ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ResourcePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePropertySource.html</Path>
    <Anchor>ResourcePropertySource(java.lang.String, java.lang.String, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePropertySource(String, ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ResourcePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePropertySource.html</Path>
    <Anchor>ResourcePropertySource(java.lang.String, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePropertySource(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>ResourcePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePropertySource.html</Path>
    <Anchor>ResourcePropertySource(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourcePropertySource(String)</Name>
      <Type>Constructor</Type>
      <Scope>ResourcePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePropertySource.html</Path>
    <Anchor>ResourcePropertySource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceScriptSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scripting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ResourceScriptSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceScriptSource(Resource)</Name>
      <Type>Constructor</Type>
      <Scope>ResourceScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ResourceScriptSource.html</Path>
    <Anchor>ResourceScriptSource(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceServlet</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceServlet()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>ResourceServlet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceTransactionManager</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResourceUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>ResourceUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESPONSE_HANDLED</Name>
      <Type>Field</Type>
      <Scope>CallableProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptor.html</Path>
    <Anchor>RESPONSE_HANDLED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESPONSE_STATUS_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>View</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/View.html</Path>
    <Anchor>RESPONSE_STATUS_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseActions</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/ResponseActions.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseBody</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/ResponseBody.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseCreator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/ResponseCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseEntity</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/ResponseEntity.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseEntity(HttpStatus)</Name>
      <Type>Constructor</Type>
      <Scope>ResponseEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/ResponseEntity.html</Path>
    <Anchor>ResponseEntity(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseEntity(T, HttpStatus)</Name>
      <Type>Constructor</Type>
      <Scope>ResponseEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/ResponseEntity.html</Path>
    <Anchor>ResponseEntity(T, org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseEntity(MultiValueMap&amp;lt;String, String&amp;gt;, HttpStatus)</Name>
      <Type>Constructor</Type>
      <Scope>ResponseEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/ResponseEntity.html</Path>
    <Anchor>ResponseEntity(org.springframework.util.MultiValueMap, org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseEntity(T, MultiValueMap&amp;lt;String, String&amp;gt;, HttpStatus)</Name>
      <Type>Constructor</Type>
      <Scope>ResponseEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/ResponseEntity.html</Path>
    <Anchor>ResponseEntity(T, org.springframework.util.MultiValueMap, org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseEntityExceptionHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseEntityExceptionHandler()</Name>
      <Type>Constructor</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>ResponseEntityExceptionHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseErrorHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/ResponseErrorHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseExtractor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/ResponseExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseStatus</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/ResponseStatus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseStatusExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResponseStatusExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ResponseStatusExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html</Path>
    <Anchor>ResponseStatusExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestClientException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestClientException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestClientException(String)</Name>
      <Type>Constructor</Type>
      <Scope>RestClientException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestClientException.html</Path>
    <Anchor>RestClientException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestClientException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>RestClientException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestClientException.html</Path>
    <Anchor>RestClientException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestGatewaySupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.client.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/support/RestGatewaySupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestGatewaySupport()</Name>
      <Type>Constructor</Type>
      <Scope>RestGatewaySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/support/RestGatewaySupport.html</Path>
    <Anchor>RestGatewaySupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestGatewaySupport(ClientHttpRequestFactory)</Name>
      <Type>Constructor</Type>
      <Scope>RestGatewaySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/support/RestGatewaySupport.html</Path>
    <Anchor>RestGatewaySupport(org.springframework.http.client.ClientHttpRequestFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestOperations</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestTemplate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestTemplate()</Name>
      <Type>Constructor</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>RestTemplate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestTemplate(ClientHttpRequestFactory)</Name>
      <Type>Constructor</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>RestTemplate(org.springframework.http.client.ClientHttpRequestFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESULT_NONE</Name>
      <Type>Field</Type>
      <Scope>CallableProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptor.html</Path>
    <Anchor>RESULT_NONE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultActions</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/ResultActions.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/ResultHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultMatcher</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/ResultMatcher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetExtractor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetSupportingSqlParameter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetSupportingSqlParameter(String, int)</Name>
      <Type>Constructor</Type>
      <Scope>ResultSetSupportingSqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html</Path>
    <Anchor>ResultSetSupportingSqlParameter(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetSupportingSqlParameter(String, int, int)</Name>
      <Type>Constructor</Type>
      <Scope>ResultSetSupportingSqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html</Path>
    <Anchor>ResultSetSupportingSqlParameter(java.lang.String, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetSupportingSqlParameter(String, int, String)</Name>
      <Type>Constructor</Type>
      <Scope>ResultSetSupportingSqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html</Path>
    <Anchor>ResultSetSupportingSqlParameter(java.lang.String, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetSupportingSqlParameter(String, int, ResultSetExtractor)</Name>
      <Type>Constructor</Type>
      <Scope>ResultSetSupportingSqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html</Path>
    <Anchor>ResultSetSupportingSqlParameter(java.lang.String, int, org.springframework.jdbc.core.ResultSetExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetSupportingSqlParameter(String, int, RowCallbackHandler)</Name>
      <Type>Constructor</Type>
      <Scope>ResultSetSupportingSqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html</Path>
    <Anchor>ResultSetSupportingSqlParameter(java.lang.String, int, org.springframework.jdbc.core.RowCallbackHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetSupportingSqlParameter(String, int, RowMapper)</Name>
      <Type>Constructor</Type>
      <Scope>ResultSetSupportingSqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html</Path>
    <Anchor>ResultSetSupportingSqlParameter(java.lang.String, int, org.springframework.jdbc.core.RowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetWrappingSqlRowSet</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.rowset</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetWrappingSqlRowSet(ResultSet)</Name>
      <Type>Constructor</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>ResultSetWrappingSqlRowSet(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetWrappingSqlRowSetMetaData</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.rowset</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultSetWrappingSqlRowSetMetaData(ResultSetMetaData)</Name>
      <Type>Constructor</Type>
      <Scope>ResultSetWrappingSqlRowSetMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html</Path>
    <Anchor>ResultSetWrappingSqlRowSetMetaData(java.sql.ResultSetMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resume(Object, AbstractPlatformTransactionManager.SuspendedResourcesHolder)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>resume(java.lang.Object, org.springframework.transaction.support.AbstractPlatformTransactionManager.SuspendedResourcesHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resume()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>resume()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resume()</Name>
      <Type>intfm</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>resume()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resume()</Name>
      <Type>instm</Type>
      <Scope>TransactionSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationAdapter.html</Path>
    <Anchor>resume()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resumePausedTasks()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>resumePausedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainAll(Collection&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>retainAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rethrowException(Throwable)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>rethrowException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rethrowRuntimeException(Throwable)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>rethrowRuntimeException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveAndUpdate(HttpServletRequest, HttpServletResponse)</Name>
      <Type>intfm</Type>
      <Scope>FlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMapManager.html</Path>
    <Anchor>retrieveAndUpdate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveAndUpdate(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractFlashMapManager.html</Path>
    <Anchor>retrieveAndUpdate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveAttribute(WebRequest, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSessionAttributeStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultSessionAttributeStore.html</Path>
    <Anchor>retrieveAttribute(org.springframework.web.context.request.WebRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveAttribute(WebRequest, String)</Name>
      <Type>intfm</Type>
      <Scope>SessionAttributeStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SessionAttributeStore.html</Path>
    <Anchor>retrieveAttribute(org.springframework.web.context.request.WebRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveAttributes(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>SessionAttributesHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionAttributesHandler.html</Path>
    <Anchor>retrieveAttributes(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveFlashMaps(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractFlashMapManager.html</Path>
    <Anchor>retrieveFlashMaps(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveFlashMaps(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>SessionFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/SessionFlashMapManager.html</Path>
    <Anchor>retrieveFlashMaps(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveLastModifiedTime()</Name>
      <Type>instm</Type>
      <Scope>ResourceScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ResourceScriptSource.html</Path>
    <Anchor>retrieveLastModifiedTime()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveMatchingFiles(File, String)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>retrieveMatchingFiles(java.io.File, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveProfileValueSource(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ProfileValueUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/ProfileValueUtils.html</Path>
    <Anchor>retrieveProfileValueSource(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveTransactionManager()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>retrieveTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveTransactionManager()</Name>
      <Type>instm</Type>
      <Scope>WebLogicJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebLogicJtaTransactionManager.html</Path>
    <Anchor>retrieveTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveTransactionSynchronizationRegistry()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>retrieveTransactionSynchronizationRegistry()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveUserTransaction()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>retrieveUserTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveUserTransaction()</Name>
      <Type>instm</Type>
      <Scope>OC4JJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html</Path>
    <Anchor>retrieveUserTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retrieveUserTransaction()</Name>
      <Type>instm</Type>
      <Scope>WebLogicJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebLogicJtaTransactionManager.html</Path>
    <Anchor>retrieveUserTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>returnedClass()</Name>
      <Type>instm</Type>
      <Scope>BlobByteArrayType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobByteArrayType.html</Path>
    <Anchor>returnedClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>returnedClass()</Name>
      <Type>instm</Type>
      <Scope>BlobSerializableType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobSerializableType.html</Path>
    <Anchor>returnedClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>returnedClass()</Name>
      <Type>instm</Type>
      <Scope>BlobStringType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobStringType.html</Path>
    <Anchor>returnedClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>returnedClass()</Name>
      <Type>instm</Type>
      <Scope>ClobStringType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/ClobStringType.html</Path>
    <Anchor>returnedClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>returningResultSet(String, RowMapper)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>returningResultSet(java.lang.String, org.springframework.jdbc.core.RowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>returningResultSet(String, ParameterizedRowMapper)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>returningResultSet(java.lang.String, org.springframework.jdbc.core.simple.ParameterizedRowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>returningResultSet(String, RowMapper)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>returningResultSet(java.lang.String, org.springframework.jdbc.core.RowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>returningResultSet(String, ParameterizedRowMapper)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>returningResultSet(java.lang.String, org.springframework.jdbc.core.simple.ParameterizedRowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiBasedExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.rmi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiBasedExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiBasedExporter()</Name>
      <Type>Constructor</Type>
      <Scope>RmiBasedExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiBasedExporter.html</Path>
    <Anchor>RmiBasedExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiClientInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.rmi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiClientInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>RmiClientInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiClientInterceptorUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.rmi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptorUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiClientInterceptorUtils()</Name>
      <Type>Constructor</Type>
      <Scope>RmiClientInterceptorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptorUtils.html</Path>
    <Anchor>RmiClientInterceptorUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiInvocationHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.remoting.rmi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiInvocationHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.rmi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>RmiProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiProxyFactoryBean.html</Path>
    <Anchor>RmiProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiRegistryFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.rmi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiRegistryFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>RmiRegistryFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
    <Anchor>RmiRegistryFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.rmi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RmiServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>RmiServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Role</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Role.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROLE_APPLICATION</Name>
      <Type>Field</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>ROLE_APPLICATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROLE_GETTER</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>ROLE_GETTER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROLE_INFRASTRUCTURE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>ROLE_INFRASTRUCTURE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROLE_OPERATION</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>ROLE_OPERATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROLE_SETTER</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>ROLE_SETTER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROLE_SUPPORT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>ROLE_SUPPORT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Rollback</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/Rollback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollback()</Name>
      <Type>instm</Type>
      <Scope>ManagedTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/ManagedTransactionAdapter.html</Path>
    <Anchor>rollback()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollback()</Name>
      <Type>instm</Type>
      <Scope>UserTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/UserTransactionAdapter.html</Path>
    <Anchor>rollback()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollback(TransactionStatus)</Name>
      <Type>intfm</Type>
      <Scope>PlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/PlatformTransactionManager.html</Path>
    <Anchor>rollback(org.springframework.transaction.TransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollback(TransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>rollback(org.springframework.transaction.TransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROLLBACK_ON_RUNTIME_EXCEPTIONS</Name>
      <Type>Field</Type>
      <Scope>RollbackRuleAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RollbackRuleAttribute.html</Path>
    <Anchor>ROLLBACK_ON_RUNTIME_EXCEPTIONS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackIfNecessary(Session)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>rollbackIfNecessary(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackIfNecessary(Session)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>rollbackIfNecessary(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackOn(Throwable)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/DefaultTransactionAttribute.html</Path>
    <Anchor>rollbackOn(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackOn(Throwable)</Name>
      <Type>instm</Type>
      <Scope>DelegatingTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/DelegatingTransactionAttribute.html</Path>
    <Anchor>rollbackOn(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackOn(Throwable)</Name>
      <Type>instm</Type>
      <Scope>RuleBasedTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html</Path>
    <Anchor>rollbackOn(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackOn(Throwable)</Name>
      <Type>intfm</Type>
      <Scope>TransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAttribute.html</Path>
    <Anchor>rollbackOn(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackOnExceptionIfNecessary(Session, Throwable)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>rollbackOnExceptionIfNecessary(javax.jms.Session, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RollbackRuleAttribute</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RollbackRuleAttribute.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RollbackRuleAttribute(Class)</Name>
      <Type>Constructor</Type>
      <Scope>RollbackRuleAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RollbackRuleAttribute.html</Path>
    <Anchor>RollbackRuleAttribute(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RollbackRuleAttribute(String)</Name>
      <Type>Constructor</Type>
      <Scope>RollbackRuleAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RollbackRuleAttribute.html</Path>
    <Anchor>RollbackRuleAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackToHeldSavepoint()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>rollbackToHeldSavepoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackToSavepoint(Object)</Name>
      <Type>instm</Type>
      <Scope>JdbcTransactionObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html</Path>
    <Anchor>rollbackToSavepoint(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackToSavepoint(Object)</Name>
      <Type>intfm</Type>
      <Scope>SavepointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/SavepointManager.html</Path>
    <Anchor>rollbackToSavepoint(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rollbackToSavepoint(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>rollbackToSavepoint(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/WebApplicationContext.html</Path>
    <Anchor>ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rootBeanDefinition(Class)</Name>
      <Type>clm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>rootBeanDefinition(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rootBeanDefinition(Class, String)</Name>
      <Type>clm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>rootBeanDefinition(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rootBeanDefinition(String)</Name>
      <Type>clm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>rootBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rootBeanDefinition(String, String)</Name>
      <Type>clm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>rootBeanDefinition(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition()</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(Class)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(Class, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(Class, int)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(java.lang.Class, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(Class, int, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(java.lang.Class, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(Class, MutablePropertyValues)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(java.lang.Class, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(Class, MutablePropertyValues, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(java.lang.Class, org.springframework.beans.MutablePropertyValues, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(Class, ConstructorArgumentValues, MutablePropertyValues)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(java.lang.Class, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(String)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(String, ConstructorArgumentValues, MutablePropertyValues)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(java.lang.String, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootBeanDefinition(RootBeanDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>RootBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootClassFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RootClassFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootClassFilter(Class)</Name>
      <Type>Constructor</Type>
      <Scope>RootClassFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RootClassFilter.html</Path>
    <Anchor>RootClassFilter(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowCallbackHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowCallbackHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowCountCallbackHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowCountCallbackHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowCountCallbackHandler()</Name>
      <Type>Constructor</Type>
      <Scope>RowCountCallbackHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowCountCallbackHandler.html</Path>
    <Anchor>RowCountCallbackHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowMapper</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowMapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowMapperResultSetExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowMapperResultSetExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowMapperResultSetExtractor(RowMapper&amp;lt;T&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>RowMapperResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowMapperResultSetExtractor.html</Path>
    <Anchor>RowMapperResultSetExtractor(org.springframework.jdbc.core.RowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowMapperResultSetExtractor(RowMapper&amp;lt;T&amp;gt;, int)</Name>
      <Type>Constructor</Type>
      <Scope>RowMapperResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowMapperResultSetExtractor.html</Path>
    <Anchor>RowMapperResultSetExtractor(org.springframework.jdbc.core.RowMapper, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROWS_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>TextareaTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TextareaTag.html</Path>
    <Anchor>ROWS_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RssChannelHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter.feed</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/RssChannelHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RssChannelHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>RssChannelHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/RssChannelHttpMessageConverter.html</Path>
    <Anchor>RssChannelHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RuleBasedTransactionAttribute</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RuleBasedTransactionAttribute()</Name>
      <Type>Constructor</Type>
      <Scope>RuleBasedTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html</Path>
    <Anchor>RuleBasedTransactionAttribute()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RuleBasedTransactionAttribute(RuleBasedTransactionAttribute)</Name>
      <Type>Constructor</Type>
      <Scope>RuleBasedTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html</Path>
    <Anchor>RuleBasedTransactionAttribute(org.springframework.transaction.interceptor.RuleBasedTransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RuleBasedTransactionAttribute(int, List&amp;lt;RollbackRuleAttribute&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>RuleBasedTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html</Path>
    <Anchor>RuleBasedTransactionAttribute(int, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run()</Name>
      <Type>instm</Type>
      <Scope>DelegatingWork</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/DelegatingWork.html</Path>
    <Anchor>run()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run()</Name>
      <Type>instm</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>run()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run(int)</Name>
      <Type>instm</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>run(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run(Object...)</Name>
      <Type>instm</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>run(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run()</Name>
      <Type>instm</Type>
      <Scope>DelegatingWork</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/DelegatingWork.html</Path>
    <Anchor>run()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run()</Name>
      <Type>instm</Type>
      <Scope>DelegatingErrorHandlingRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/DelegatingErrorHandlingRunnable.html</Path>
    <Anchor>run()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run()</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/MethodInvokingRunnable.html</Path>
    <Anchor>run()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run()</Name>
      <Type>instm</Type>
      <Scope>ScheduledMethodRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/ScheduledMethodRunnable.html</Path>
    <Anchor>run()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run()</Name>
      <Type>instm</Type>
      <Scope>DelegatingTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/DelegatingTimerTask.html</Path>
    <Anchor>run()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run(RunNotifier)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>run(org.junit.runner.notification.RunNotifier)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run(IHookCallBack, ITestResult)</Name>
      <Type>instm</Type>
      <Scope>AbstractTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
    <Anchor>run(org.testng.IHookCallBack, org.testng.ITestResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RunAfterTestClassCallbacks</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit4.statements</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunAfterTestClassCallbacks.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RunAfterTestClassCallbacks(Statement, TestContextManager)</Name>
      <Type>Constructor</Type>
      <Scope>RunAfterTestClassCallbacks</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunAfterTestClassCallbacks.html</Path>
    <Anchor>RunAfterTestClassCallbacks(org.junit.runners.model.Statement, org.springframework.test.context.TestContextManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RunAfterTestMethodCallbacks</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit4.statements</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunAfterTestMethodCallbacks.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RunAfterTestMethodCallbacks(Statement, Object, Method, TestContextManager)</Name>
      <Type>Constructor</Type>
      <Scope>RunAfterTestMethodCallbacks</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunAfterTestMethodCallbacks.html</Path>
    <Anchor>RunAfterTestMethodCallbacks(org.junit.runners.model.Statement, java.lang.Object, java.lang.reflect.Method, org.springframework.test.context.TestContextManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runAfterTransactionMethods(TestContext)</Name>
      <Type>instm</Type>
      <Scope>TransactionalTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/TransactionalTestExecutionListener.html</Path>
    <Anchor>runAfterTransactionMethods(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runBare()</Name>
      <Type>instm</Type>
      <Scope>AbstractAnnotationAwareTransactionalTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
    <Anchor>runBare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runBare()</Name>
      <Type>instm</Type>
      <Scope>ConditionalTestCase</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/ConditionalTestCase.html</Path>
    <Anchor>runBare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runBare()</Name>
      <Type>instm</Type>
      <Scope>AbstractJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html</Path>
    <Anchor>runBare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runBare()</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>runBare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RunBeforeTestClassCallbacks</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit4.statements</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunBeforeTestClassCallbacks.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RunBeforeTestClassCallbacks(Statement, TestContextManager)</Name>
      <Type>Constructor</Type>
      <Scope>RunBeforeTestClassCallbacks</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunBeforeTestClassCallbacks.html</Path>
    <Anchor>RunBeforeTestClassCallbacks(org.junit.runners.model.Statement, org.springframework.test.context.TestContextManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RunBeforeTestMethodCallbacks</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit4.statements</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunBeforeTestMethodCallbacks.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RunBeforeTestMethodCallbacks(Statement, Object, Method, TestContextManager)</Name>
      <Type>Constructor</Type>
      <Scope>RunBeforeTestMethodCallbacks</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunBeforeTestMethodCallbacks.html</Path>
    <Anchor>RunBeforeTestMethodCallbacks(org.junit.runners.model.Statement, java.lang.Object, java.lang.reflect.Method, org.springframework.test.context.TestContextManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runBeforeTransactionMethods(TestContext)</Name>
      <Type>instm</Type>
      <Scope>TransactionalTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/TransactionalTestExecutionListener.html</Path>
    <Anchor>runBeforeTransactionMethods(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runChild(FrameworkMethod, RunNotifier)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>runChild(org.junit.runners.model.FrameworkMethod, org.junit.runner.notification.RunNotifier)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runGeneric()</Name>
      <Type>instm</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>runGeneric()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runGeneric(int)</Name>
      <Type>instm</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>runGeneric(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runGeneric(Object[])</Name>
      <Type>instm</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>runGeneric(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runInThread(Runnable)</Name>
      <Type>instm</Type>
      <Scope>LocalTaskExecutorThreadPool</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html</Path>
    <Anchor>runInThread(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runningAllowed()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>runningAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTest()</Name>
      <Type>instm</Type>
      <Scope>AssertThrows</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AssertThrows.html</Path>
    <Anchor>runTest()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RuntimeBeanNameReference</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanNameReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RuntimeBeanNameReference(String)</Name>
      <Type>Constructor</Type>
      <Scope>RuntimeBeanNameReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanNameReference.html</Path>
    <Anchor>RuntimeBeanNameReference(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RuntimeBeanReference</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RuntimeBeanReference(String)</Name>
      <Type>Constructor</Type>
      <Scope>RuntimeBeanReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanReference.html</Path>
    <Anchor>RuntimeBeanReference(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RuntimeBeanReference(String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>RuntimeBeanReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanReference.html</Path>
    <Anchor>RuntimeBeanReference(java.lang.String, boolean)</Anchor>
  </Token>
</Tokens>
