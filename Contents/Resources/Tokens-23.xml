<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>waitForAll(Collection, long)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>waitForAll(java.util.Collection, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitForAny(Collection, long)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>waitForAny(java.util.Collection, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning(Problem)</Name>
      <Type>instm</Type>
      <Scope>FailFastProblemReporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/FailFastProblemReporter.html</Path>
    <Anchor>warning(org.springframework.beans.factory.parsing.Problem)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning(Problem)</Name>
      <Type>intfm</Type>
      <Scope>ProblemReporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ProblemReporter.html</Path>
    <Anchor>warning(org.springframework.beans.factory.parsing.Problem)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>warning(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning(String, Object, Throwable)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>warning(java.lang.String, java.lang.Object, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning(String, Object, ParseState)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>warning(java.lang.String, java.lang.Object, org.springframework.beans.factory.parsing.ParseState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning(String, Object, ParseState, Throwable)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>warning(java.lang.String, java.lang.Object, org.springframework.beans.factory.parsing.ParseState, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning(SAXParseException)</Name>
      <Type>instm</Type>
      <Scope>SimpleSaxErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleSaxErrorHandler.html</Path>
    <Anchor>warning(org.xml.sax.SAXParseException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning(TransformerException)</Name>
      <Type>instm</Type>
      <Scope>SimpleTransformErrorListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleTransformErrorListener.html</Path>
    <Anchor>warning(javax.xml.transform.TransformerException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wasCleared()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>wasCleared()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wasCleared()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>wasCleared()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wasDataUpdated()</Name>
      <Type>clm</Type>
      <Scope>IncorrectUpdateSemanticsDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectUpdateSemanticsDataAccessException.html</Path>
    <Anchor>wasDataUpdated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wasDataUpdated()</Name>
      <Type>clm</Type>
      <Scope>JdbcUpdateAffectedIncorrectNumberOfRowsException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/JdbcUpdateAffectedIncorrectNumberOfRowsException.html</Path>
    <Anchor>wasDataUpdated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wasFailure()</Name>
      <Type>instm</Type>
      <Scope>RequestHandledEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/RequestHandledEvent.html</Path>
    <Anchor>wasFailure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wasNull()</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>wasNull()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wasNull()</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>wasNull()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WeakReferenceMonitor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/WeakReferenceMonitor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WeakReferenceMonitor()</Name>
      <Type>Constructor</Type>
      <Scope>WeakReferenceMonitor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/WeakReferenceMonitor.html</Path>
    <Anchor>WeakReferenceMonitor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WeakReferenceMonitor.ReleaseListener</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/WeakReferenceMonitor.ReleaseListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WeavingTransformer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/WeavingTransformer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WeavingTransformer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/WeavingTransformer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WeavingTransformer(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>WeavingTransformer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/WeavingTransformer.html</Path>
    <Anchor>WeavingTransformer(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WEB_APP_ROOT_KEY_PARAM</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>WEB_APP_ROOT_KEY_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WEB_APPLICATION_CONTEXT_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>WEB_APPLICATION_CONTEXT_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WEB_APPLICATION_CONTEXT_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>WEB_APPLICATION_CONTEXT_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WEB_APPLICATION_CONTEXT_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>ViewRendererServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ViewRendererServlet.html</Path>
    <Anchor>WEB_APPLICATION_CONTEXT_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WEB_APPLICATION_CONTEXT_VARIABLE_NAME</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContextFacesELResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.html</Path>
    <Anchor>WEB_APPLICATION_CONTEXT_VARIABLE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WEB_APPLICATION_CONTEXT_VARIABLE_NAME</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContextVariableResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/WebApplicationContextVariableResolver.html</Path>
    <Anchor>WEB_APPLICATION_CONTEXT_VARIABLE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WEB_ASYNC_MANAGER_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebAsyncUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncUtils.html</Path>
    <Anchor>WEB_ASYNC_MANAGER_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAppConfiguration</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.context.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/WebAppConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>webAppContextSetup(WebApplicationContext)</Name>
      <Type>clm</Type>
      <Scope>MockMvcBuilders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/MockMvcBuilders.html</Path>
    <Anchor>webAppContextSetup(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationContext</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/WebApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationContextFacesELResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.jsf.el</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationContextFacesELResolver()</Name>
      <Type>Constructor</Type>
      <Scope>WebApplicationContextFacesELResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.html</Path>
    <Anchor>WebApplicationContextFacesELResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationContextUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationContextUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationContextUtils()</Name>
      <Type>Constructor</Type>
      <Scope>WebApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationContextUtils.html</Path>
    <Anchor>WebApplicationContextUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationContextVariableResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.jsf</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/WebApplicationContextVariableResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationContextVariableResolver(VariableResolver)</Name>
      <Type>Constructor</Type>
      <Scope>WebApplicationContextVariableResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/WebApplicationContextVariableResolver.html</Path>
    <Anchor>WebApplicationContextVariableResolver(javax.faces.el.VariableResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationInitializer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/WebApplicationInitializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationObjectSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationObjectSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebApplicationObjectSupport()</Name>
      <Type>Constructor</Type>
      <Scope>WebApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationObjectSupport.html</Path>
    <Anchor>WebApplicationObjectSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAppRootListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebAppRootListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAppRootListener()</Name>
      <Type>Constructor</Type>
      <Scope>WebAppRootListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebAppRootListener.html</Path>
    <Anchor>WebAppRootListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebArgumentResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAsyncManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAsyncTask</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncTask.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAsyncTask(Callable&amp;lt;V&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>WebAsyncTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncTask.html</Path>
    <Anchor>WebAsyncTask(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAsyncTask(long, Callable&amp;lt;V&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>WebAsyncTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncTask.html</Path>
    <Anchor>WebAsyncTask(long, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAsyncTask(Long, String, Callable&amp;lt;V&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>WebAsyncTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncTask.html</Path>
    <Anchor>WebAsyncTask(java.lang.Long, java.lang.String, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAsyncTask(Long, AsyncTaskExecutor, Callable&amp;lt;V&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>WebAsyncTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncTask.html</Path>
    <Anchor>WebAsyncTask(java.lang.Long, org.springframework.core.task.AsyncTaskExecutor, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAsyncUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebAsyncUtils()</Name>
      <Type>Constructor</Type>
      <Scope>WebAsyncUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncUtils.html</Path>
    <Anchor>WebAsyncUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebBindingInitializer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebBindingInitializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebContentGenerator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebContentGenerator()</Name>
      <Type>Constructor</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>WebContentGenerator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebContentGenerator(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>WebContentGenerator(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebContentGenerator(String...)</Name>
      <Type>Constructor</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>WebContentGenerator(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebContentInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebContentInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>WebContentInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
    <Anchor>WebContentInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebDataBinder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebDataBinder(Object)</Name>
      <Type>Constructor</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>WebDataBinder(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebDataBinder(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>WebDataBinder(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebDataBinderFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebDataBinderFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebDelegatingSmartContextLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/WebDelegatingSmartContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebDelegatingSmartContextLoader()</Name>
      <Type>Constructor</Type>
      <Scope>WebDelegatingSmartContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/WebDelegatingSmartContextLoader.html</Path>
    <Anchor>WebDelegatingSmartContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebLogicJtaTransactionManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.jta</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebLogicJtaTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebLogicJtaTransactionManager()</Name>
      <Type>Constructor</Type>
      <Scope>WebLogicJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebLogicJtaTransactionManager.html</Path>
    <Anchor>WebLogicJtaTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebLogicLoadTimeWeaver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading.weblogic</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/weblogic/WebLogicLoadTimeWeaver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebLogicLoadTimeWeaver()</Name>
      <Type>Constructor</Type>
      <Scope>WebLogicLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/weblogic/WebLogicLoadTimeWeaver.html</Path>
    <Anchor>WebLogicLoadTimeWeaver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebLogicLoadTimeWeaver(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>WebLogicLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/weblogic/WebLogicLoadTimeWeaver.html</Path>
    <Anchor>WebLogicLoadTimeWeaver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebLogicNativeJdbcExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.nativejdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebLogicNativeJdbcExtractor()</Name>
      <Type>Constructor</Type>
      <Scope>WebLogicNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html</Path>
    <Anchor>WebLogicNativeJdbcExtractor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebMergedContextConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/WebMergedContextConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebMergedContextConfiguration(Class&amp;lt;?&amp;gt;, String[], Class&amp;lt;?&amp;gt;[], Set&amp;lt;Class&amp;lt;? extends ApplicationContextInitializer&amp;lt;? extends ConfigurableApplicationContext&amp;gt;&amp;gt;&amp;gt;, String[], String, ContextLoader)</Name>
      <Type>Constructor</Type>
      <Scope>WebMergedContextConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/WebMergedContextConfiguration.html</Path>
    <Anchor>WebMergedContextConfiguration(java.lang.Class, java.lang.String[], java.lang.Class[], java.util.Set, java.lang.String[], java.lang.String, org.springframework.test.context.ContextLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebMvcConfigurationSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebMvcConfigurationSupport()</Name>
      <Type>Constructor</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>WebMvcConfigurationSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebMvcConfigurer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebMvcConfigurerAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebMvcConfigurerAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>WebMvcConfigurerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequest</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/WebRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequestDataBinder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebRequestDataBinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequestDataBinder(Object)</Name>
      <Type>Constructor</Type>
      <Scope>WebRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebRequestDataBinder.html</Path>
    <Anchor>WebRequestDataBinder(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequestDataBinder(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>WebRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebRequestDataBinder.html</Path>
    <Anchor>WebRequestDataBinder(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequestHandlerInterceptorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequestHandlerInterceptorAdapter(WebRequestInterceptor)</Name>
      <Type>Constructor</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>WebRequestHandlerInterceptorAdapter(org.springframework.web.context.request.WebRequestInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequestHandlerInterceptorAdapter(WebRequestInterceptor, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>WebRequestHandlerInterceptorAdapter(org.springframework.web.context.request.WebRequestInterceptor, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequestHandlerInterceptorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequestHandlerInterceptorAdapter(WebRequestInterceptor)</Name>
      <Type>Constructor</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>WebRequestHandlerInterceptorAdapter(org.springframework.web.context.request.WebRequestInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebRequestInterceptor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/WebRequestInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereDataSourceAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/WebSphereDataSourceAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereDataSourceAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>WebSphereDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/WebSphereDataSourceAdapter.html</Path>
    <Anchor>WebSphereDataSourceAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereLoadTimeWeaver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading.websphere</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/websphere/WebSphereLoadTimeWeaver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereLoadTimeWeaver()</Name>
      <Type>Constructor</Type>
      <Scope>WebSphereLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/websphere/WebSphereLoadTimeWeaver.html</Path>
    <Anchor>WebSphereLoadTimeWeaver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereLoadTimeWeaver(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>WebSphereLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/websphere/WebSphereLoadTimeWeaver.html</Path>
    <Anchor>WebSphereLoadTimeWeaver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereMBeanServerFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereMBeanServerFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>WebSphereMBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.html</Path>
    <Anchor>WebSphereMBeanServerFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereNativeJdbcExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.nativejdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereNativeJdbcExtractor()</Name>
      <Type>Constructor</Type>
      <Scope>WebSphereNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html</Path>
    <Anchor>WebSphereNativeJdbcExtractor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereUowTransactionManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.jta</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereUowTransactionManager()</Name>
      <Type>Constructor</Type>
      <Scope>WebSphereUowTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
    <Anchor>WebSphereUowTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebSphereUowTransactionManager(UOWManager)</Name>
      <Type>Constructor</Type>
      <Scope>WebSphereUowTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
    <Anchor>WebSphereUowTransactionManager(com.ibm.wsspi.uow.UOWManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebUtils()</Name>
      <Type>Constructor</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>WebUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>with(RequestPostProcessor)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>with(org.springframework.test.web.servlet.request.RequestPostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withAfterClasses(Statement)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>withAfterClasses(org.junit.runners.model.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withAfters(FrameworkMethod, Object, Statement)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>withAfters(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withBadRequest()</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withBadRequest()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withBeforeClasses(Statement)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>withBeforeClasses(org.junit.runners.model.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withBefores(FrameworkMethod, Object, Statement)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>withBefores(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withCatalogName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>withCatalogName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withCatalogName(String)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>withCatalogName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withCatalogName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>withCatalogName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withCatalogName(String)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>withCatalogName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withCreatedEntity(URI)</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withCreatedEntity(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withFunctionName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>withFunctionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withFunctionName(String)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>withFunctionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withNoContent()</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withNoContent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withoutProcedureColumnMetaDataAccess()</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>withoutProcedureColumnMetaDataAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withoutProcedureColumnMetaDataAccess()</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>withoutProcedureColumnMetaDataAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withoutTableColumnMetaDataAccess()</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>withoutTableColumnMetaDataAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withoutTableColumnMetaDataAccess()</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>withoutTableColumnMetaDataAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withPotentialRepeat(FrameworkMethod, Object, Statement)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>withPotentialRepeat(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withPotentialTimeout(FrameworkMethod, Object, Statement)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>withPotentialTimeout(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withProcedureName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>withProcedureName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withProcedureName(String)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>withProcedureName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/env/MockEnvironment.html</Path>
    <Anchor>withProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withProperty(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/env/MockPropertySource.html</Path>
    <Anchor>withProperty(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withReturnValue()</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>withReturnValue()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withReturnValue()</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>withReturnValue()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withSchemaName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>withSchemaName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withSchemaName(String)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>withSchemaName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withSchemaName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>withSchemaName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withSchemaName(String)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>withSchemaName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withServerError()</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withServerError()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withStatus(HttpStatus)</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withStatus(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withSuccess()</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withSuccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withSuccess(String, MediaType)</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withSuccess(java.lang.String, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withSuccess(byte[], MediaType)</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withSuccess(byte[], org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withSuccess(Resource, MediaType)</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withSuccess(org.springframework.core.io.Resource, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withTableName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>withTableName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withTableName(String)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>withTableName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withUnauthorizedRequest()</Name>
      <Type>clm</Type>
      <Scope>MockRestResponseCreators</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/MockRestResponseCreators.html</Path>
    <Anchor>withUnauthorizedRequest()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WorkManagerTaskExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.work</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WorkManagerTaskExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>WorkManagerTaskExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WorkManagerTaskExecutor(WorkManager)</Name>
      <Type>Constructor</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>WorkManagerTaskExecutor(javax.resource.spi.work.WorkManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WorkManagerTaskExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.commonj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WorkManagerTaskExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>WorkManagerTaskExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wrap(Object)</Name>
      <Type>intfm</Type>
      <Scope>AdvisorAdapterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapterRegistry.html</Path>
    <Anchor>wrap(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wrap(Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultAdvisorAdapterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.html</Path>
    <Anchor>wrap(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wrapIfNecessary(Object, String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>wrapIfNecessary(java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wrapSessionFactoryIfNecessary(SessionFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>wrapSessionFactoryIfNecessary(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WritableResource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/WritableResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(EvaluationContext, Object, String, Object)</Name>
      <Type>instm</Type>
      <Scope>BeanExpressionContextAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanExpressionContextAccessor.html</Path>
    <Anchor>write(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(EvaluationContext, Object, String, Object)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanFactoryAccessor.html</Path>
    <Anchor>write(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(EvaluationContext, Object, String, Object)</Name>
      <Type>instm</Type>
      <Scope>EnvironmentAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/EnvironmentAccessor.html</Path>
    <Anchor>write(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(EvaluationContext, Object, String, Object)</Name>
      <Type>instm</Type>
      <Scope>MapAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/MapAccessor.html</Path>
    <Anchor>write(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(EvaluationContext, Object, String, Object)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/PropertyAccessor.html</Path>
    <Anchor>write(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(EvaluationContext, Object, String, Object)</Name>
      <Type>instm</Type>
      <Scope>ReflectivePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
    <Anchor>write(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(T, MediaType, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>write(T, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(BufferedImage, MediaType, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>BufferedImageHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
    <Anchor>write(java.awt.image.BufferedImage, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(MultiValueMap&amp;lt;String, ?&amp;gt;, MediaType, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>FormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
    <Anchor>write(org.springframework.util.MultiValueMap, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(T, MediaType, HttpOutputMessage)</Name>
      <Type>intfm</Type>
      <Scope>HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageConverter.html</Path>
    <Anchor>write(T, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(OutputStream)</Name>
      <Type>instm</Type>
      <Scope>CommAreaRecord</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CommAreaRecord.html</Path>
    <Anchor>write(java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(int)</Name>
      <Type>instm</Type>
      <Scope>DelegatingServletOutputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/DelegatingServletOutputStream.html</Path>
    <Anchor>write(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(char[], int, int)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>write(char[], int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(char[], int, int)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>write(char[], int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(Writer)</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>write(java.io.Writer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(Writer, boolean)</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>write(java.io.Writer, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(char)</Name>
      <Type>instm</Type>
      <Scope>CommonsLogWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CommonsLogWriter.html</Path>
    <Anchor>write(char)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write(char[], int, int)</Name>
      <Type>instm</Type>
      <Scope>CommonsLogWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CommonsLogWriter.html</Path>
    <Anchor>write(char[], int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeAttribute(String, String)</Name>
      <Type>instm</Type>
      <Scope>TagWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TagWriter.html</Path>
    <Anchor>writeAttribute(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBodyContent(String)</Name>
      <Type>instm</Type>
      <Scope>EscapeBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EscapeBodyTag.html</Path>
    <Anchor>writeBodyContent(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeContent(HttpServletResponse, Resource)</Name>
      <Type>instm</Type>
      <Scope>ResourceHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html</Path>
    <Anchor>writeContent(javax.servlet.http.HttpServletResponse, org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeDefaultAttributes(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>writeDefaultAttributes(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeDefaultAttributes(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>writeDefaultAttributes(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInternal(T, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>writeInternal(T, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInternal(byte[], HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>ByteArrayHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ByteArrayHttpMessageConverter.html</Path>
    <Anchor>writeInternal(byte[], org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInternal(T, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>AbstractWireFeedHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/AbstractWireFeedHttpMessageConverter.html</Path>
    <Anchor>writeInternal(T, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInternal(Object, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInternal(Object, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInternal(Object, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>ObjectToStringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ObjectToStringHttpMessageConverter.html</Path>
    <Anchor>writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInternal(Resource, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>ResourceHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ResourceHttpMessageConverter.html</Path>
    <Anchor>writeInternal(org.springframework.core.io.Resource, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInternal(String, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>StringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/StringHttpMessageConverter.html</Path>
    <Anchor>writeInternal(java.lang.String, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInternal(T, HttpOutputMessage)</Name>
      <Type>instm</Type>
      <Scope>AbstractXmlHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html</Path>
    <Anchor>writeInternal(T, org.springframework.http.HttpOutputMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeMessage(String)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>writeMessage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOptionalAttribute(TagWriter, String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractFormTag.html</Path>
    <Anchor>writeOptionalAttribute(org.springframework.web.servlet.tags.form.TagWriter, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOptionalAttributes(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>writeOptionalAttributes(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOptionalAttributes(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>writeOptionalAttributes(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOptionalAttributeValue(String, String)</Name>
      <Type>instm</Type>
      <Scope>TagWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TagWriter.html</Path>
    <Anchor>writeOptionalAttributeValue(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOut(Writer)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>writeOut(java.io.Writer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeRemoteInvocation(RemoteInvocation, OutputStream)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>writeRemoteInvocation(org.springframework.remoting.support.RemoteInvocation, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeRemoteInvocationResult(Message, Session, RemoteInvocationResult)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerServiceExporter.html</Path>
    <Anchor>writeRemoteInvocationResult(javax.jms.Message, javax.jms.Session, org.springframework.remoting.support.RemoteInvocationResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html</Path>
    <Anchor>writeRemoteInvocationResult(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.remoting.support.RemoteInvocationResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult, OutputStream)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html</Path>
    <Anchor>writeRemoteInvocationResult(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.remoting.support.RemoteInvocationResult, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeRemoteInvocationResult(HttpExchange, RemoteInvocationResult)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html</Path>
    <Anchor>writeRemoteInvocationResult(com.sun.net.httpserver.HttpExchange, org.springframework.remoting.support.RemoteInvocationResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeRemoteInvocationResult(HttpExchange, RemoteInvocationResult, OutputStream)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html</Path>
    <Anchor>writeRemoteInvocationResult(com.sun.net.httpserver.HttpExchange, org.springframework.remoting.support.RemoteInvocationResult, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeReplace()</Name>
      <Type>instm</Type>
      <Scope>AbstractPrototypeBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.html</Path>
    <Anchor>writeReplace()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeReplace()</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>writeReplace()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeReplace()</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>writeReplace()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeRequestBody(HttpInvokerClientConfiguration, HttpURLConnection, ByteArrayOutputStream)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html</Path>
    <Anchor>writeRequestBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.net.HttpURLConnection, java.io.ByteArrayOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractFormTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractMultiCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractSingleCheckedElementTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>ButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>CheckboxesTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/CheckboxesTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>CheckboxTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/CheckboxTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>HiddenInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/HiddenInputTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>LabelTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/LabelTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>OptionsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionsTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>SelectTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagContent(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>TextareaTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TextareaTag.html</Path>
    <Anchor>writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagDetails(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractSingleCheckedElementTag.html</Path>
    <Anchor>writeTagDetails(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagDetails(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>CheckboxTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/CheckboxTag.html</Path>
    <Anchor>writeTagDetails(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTagDetails(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>RadioButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/RadioButtonTag.html</Path>
    <Anchor>writeTagDetails(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToLog(Log, String)</Name>
      <Type>instm</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>writeToLog(org.apache.commons.logging.Log, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToLog(Log, String, Throwable)</Name>
      <Type>instm</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>writeToLog(org.apache.commons.logging.Log, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToLog(String)</Name>
      <Type>instm</Type>
      <Scope>DeprecatedBeanWarner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DeprecatedBeanWarner.html</Path>
    <Anchor>writeToLog(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToResponse(HttpServletResponse, ByteArrayOutputStream)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>writeToResponse(javax.servlet.http.HttpServletResponse, java.io.ByteArrayOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToResult(T, HttpHeaders, Result)</Name>
      <Type>instm</Type>
      <Scope>AbstractXmlHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html</Path>
    <Anchor>writeToResult(T, org.springframework.http.HttpHeaders, javax.xml.transform.Result)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToResult(T, HttpHeaders, Result)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2CollectionHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.html</Path>
    <Anchor>writeToResult(T, org.springframework.http.HttpHeaders, javax.xml.transform.Result)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToResult(Object, HttpHeaders, Result)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2RootElementHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html</Path>
    <Anchor>writeToResult(java.lang.Object, org.springframework.http.HttpHeaders, javax.xml.transform.Result)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToResult(Object, HttpHeaders, Result)</Name>
      <Type>instm</Type>
      <Scope>MarshallingHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/MarshallingHttpMessageConverter.html</Path>
    <Anchor>writeToResult(java.lang.Object, org.springframework.http.HttpHeaders, javax.xml.transform.Result)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToResult(T, HttpHeaders, Result)</Name>
      <Type>instm</Type>
      <Scope>SourceHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/SourceHttpMessageConverter.html</Path>
    <Anchor>writeToResult(T, org.springframework.http.HttpHeaders, javax.xml.transform.Result)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeValue(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>ButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
    <Anchor>writeValue(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeValue(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>writeValue(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeValue(TagWriter)</Name>
      <Type>instm</Type>
      <Scope>PasswordInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/PasswordInputTag.html</Path>
    <Anchor>writeValue(org.springframework.web.servlet.tags.form.TagWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeWithMessageConverters(T, MethodParameter, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageConverterMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.html</Path>
    <Anchor>writeWithMessageConverters(T, org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageConverterMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.html</Path>
    <Anchor>writeWithMessageConverters(T, org.springframework.core.MethodParameter, org.springframework.http.server.ServletServerHttpRequest, org.springframework.http.server.ServletServerHttpResponse)</Anchor>
  </Token>
</Tokens>
