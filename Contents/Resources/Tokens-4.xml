<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>DaoSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.dao.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DaoSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DaoSupport()</Name>
      <Type>Constructor</Type>
      <Scope>DaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DaoSupport.html</Path>
    <Anchor>DaoSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataAccessException(String)</Name>
      <Type>Constructor</Type>
      <Scope>DataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataAccessException.html</Path>
    <Anchor>DataAccessException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>DataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataAccessException.html</Path>
    <Anchor>DataAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataAccessResourceFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataAccessResourceFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataAccessResourceFailureException(String)</Name>
      <Type>Constructor</Type>
      <Scope>DataAccessResourceFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataAccessResourceFailureException.html</Path>
    <Anchor>DataAccessResourceFailureException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataAccessResourceFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>DataAccessResourceFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataAccessResourceFailureException.html</Path>
    <Anchor>DataAccessResourceFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataAccessUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.dao.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DataAccessUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataAccessUtils()</Name>
      <Type>Constructor</Type>
      <Scope>DataAccessUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DataAccessUtils.html</Path>
    <Anchor>DataAccessUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Database</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.orm.jpa.vendor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/Database.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DatabaseMetaDataCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseMetaDataCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DatabasePopulator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.datasource.init</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DatabasePopulator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DatabasePopulatorUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.init</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DatabasePopulatorUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DatabasePopulatorUtils()</Name>
      <Type>Constructor</Type>
      <Scope>DatabasePopulatorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DatabasePopulatorUtils.html</Path>
    <Anchor>DatabasePopulatorUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DatabaseStartupValidator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseStartupValidator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DatabaseStartupValidator()</Name>
      <Type>Constructor</Type>
      <Scope>DatabaseStartupValidator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseStartupValidator.html</Path>
    <Anchor>DatabaseStartupValidator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataBinder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataBinder(Object)</Name>
      <Type>Constructor</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>DataBinder(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataBinder(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>DataBinder(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataFieldMaxValueIncrementer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DataFieldMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataIntegrityViolationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataIntegrityViolationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataIntegrityViolationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>DataIntegrityViolationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataIntegrityViolationException.html</Path>
    <Anchor>DataIntegrityViolationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataIntegrityViolationException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>DataIntegrityViolationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataIntegrityViolationException.html</Path>
    <Anchor>DataIntegrityViolationException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataRetrievalFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataRetrievalFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataRetrievalFailureException(String)</Name>
      <Type>Constructor</Type>
      <Scope>DataRetrievalFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataRetrievalFailureException.html</Path>
    <Anchor>DataRetrievalFailureException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataRetrievalFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>DataRetrievalFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DataRetrievalFailureException.html</Path>
    <Anchor>DataRetrievalFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.datasource.embedded</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/DataSourceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceInitializer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.init</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DataSourceInitializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceInitializer()</Name>
      <Type>Constructor</Type>
      <Scope>DataSourceInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DataSourceInitializer.html</Path>
    <Anchor>DataSourceInitializer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceLookup</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.datasource.lookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/DataSourceLookup.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceLookupFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc.datasource.lookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/DataSourceLookupFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceLookupFailureException(String)</Name>
      <Type>Constructor</Type>
      <Scope>DataSourceLookupFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/DataSourceLookupFailureException.html</Path>
    <Anchor>DataSourceLookupFailureException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceLookupFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>DataSourceLookupFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/DataSourceLookupFailureException.html</Path>
    <Anchor>DataSourceLookupFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceTransactionManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceTransactionManager()</Name>
      <Type>Constructor</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>DataSourceTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceTransactionManager(DataSource)</Name>
      <Type>Constructor</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>DataSourceTransactionManager(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSourceUtils()</Name>
      <Type>Constructor</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>DataSourceUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateFormatter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.datetime</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateFormatter()</Name>
      <Type>Constructor</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>DateFormatter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateFormatter(String)</Name>
      <Type>Constructor</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>DateFormatter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateFormatterRegistrar</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.datetime</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatterRegistrar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateFormatterRegistrar()</Name>
      <Type>Constructor</Type>
      <Scope>DateFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatterRegistrar.html</Path>
    <Anchor>DateFormatterRegistrar()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeFormat</Name>
      <Type>clm</Type>
      <Scope>org.springframework.format.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/annotation/DateTimeFormat.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeFormat.ISO</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.format.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/annotation/DateTimeFormat.ISO.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeFormatAnnotationFormatterFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.datetime</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateTimeFormatAnnotationFormatterFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeFormatAnnotationFormatterFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DateTimeFormatAnnotationFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateTimeFormatAnnotationFormatterFactory.html</Path>
    <Anchor>DateTimeFormatAnnotationFormatterFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeFormatterFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.datetime.joda</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeFormatterFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DateTimeFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactory.html</Path>
    <Anchor>DateTimeFormatterFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeFormatterFactory(String)</Name>
      <Type>Constructor</Type>
      <Scope>DateTimeFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactory.html</Path>
    <Anchor>DateTimeFormatterFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeFormatterFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.datetime.joda</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeFormatterFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>DateTimeFormatterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactoryBean.html</Path>
    <Anchor>DateTimeFormatterFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.datetime.joda</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTimeParser(DateTimeFormatter)</Name>
      <Type>Constructor</Type>
      <Scope>DateTimeParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeParser.html</Path>
    <Anchor>DateTimeParser(org.joda.time.format.DateTimeFormatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Db2CallMetaDataProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/Db2CallMetaDataProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Db2CallMetaDataProvider(DatabaseMetaData)</Name>
      <Type>Constructor</Type>
      <Scope>Db2CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/Db2CallMetaDataProvider.html</Path>
    <Anchor>Db2CallMetaDataProvider(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DB2MainframeSequenceMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DB2MainframeSequenceMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DB2MainframeSequenceMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>DB2MainframeSequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DB2MainframeSequenceMaxValueIncrementer.html</Path>
    <Anchor>DB2MainframeSequenceMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DB2MainframeSequenceMaxValueIncrementer(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>DB2MainframeSequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DB2MainframeSequenceMaxValueIncrementer.html</Path>
    <Anchor>DB2MainframeSequenceMaxValueIncrementer(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DB2SequenceMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DB2SequenceMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DB2SequenceMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>DB2SequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DB2SequenceMaxValueIncrementer.html</Path>
    <Anchor>DB2SequenceMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DB2SequenceMaxValueIncrementer(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>DB2SequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DB2SequenceMaxValueIncrementer.html</Path>
    <Anchor>DB2SequenceMaxValueIncrementer(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deactivate()</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContextBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContextBuilder.html</Path>
    <Anchor>deactivate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeadlockLoserDataAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DeadlockLoserDataAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeadlockLoserDataAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>DeadlockLoserDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DeadlockLoserDataAccessException.html</Path>
    <Anchor>DeadlockLoserDataAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DebugInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/DebugInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DebugInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>DebugInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/DebugInterceptor.html</Path>
    <Anchor>DebugInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DebugInterceptor(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>DebugInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/DebugInterceptor.html</Path>
    <Anchor>DebugInterceptor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareParameter(SqlParameter)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>declareParameter(org.springframework.jdbc.core.SqlParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareParameter(SqlParameter)</Name>
      <Type>instm</Type>
      <Scope>StoredProcedure</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/StoredProcedure.html</Path>
    <Anchor>declareParameter(org.springframework.jdbc.core.SqlParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareParameters(SqlParameter...)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>declareParameters(org.springframework.jdbc.core.SqlParameter...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareParameters(SqlParameter...)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>declareParameters(org.springframework.jdbc.core.SqlParameter...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeclareParentsAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/DeclareParentsAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeclareParentsAdvisor(Class, String, Class)</Name>
      <Type>Constructor</Type>
      <Scope>DeclareParentsAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/DeclareParentsAdvisor.html</Path>
    <Anchor>DeclareParentsAdvisor(java.lang.Class, java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeclareParentsAdvisor(Class, String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>DeclareParentsAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/DeclareParentsAdvisor.html</Path>
    <Anchor>DeclareParentsAdvisor(java.lang.Class, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareRoles(String...)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>declareRoles(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declaresException(Method, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>declaresException(java.lang.reflect.Method, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decode(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>decode(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decodeMatrixVariables(HttpServletRequest, MultiValueMap&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>decodeMatrixVariables(javax.servlet.http.HttpServletRequest, org.springframework.util.MultiValueMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decodePathVariables(HttpServletRequest, Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>decodePathVariables(javax.servlet.http.HttpServletRequest, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decodeRequestString(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>decodeRequestString(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorate(Node, BeanDefinitionHolder, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractInterceptorDrivenBeanDefinitionDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AbstractInterceptorDrivenBeanDefinitionDecorator.html</Path>
    <Anchor>decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorate(Node, BeanDefinitionHolder, ParserContext)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinitionDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionDecorator.html</Path>
    <Anchor>decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorate(Node, BeanDefinitionHolder, ParserContext)</Name>
      <Type>intfm</Type>
      <Scope>NamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/NamespaceHandler.html</Path>
    <Anchor>decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorate(Node, BeanDefinitionHolder, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>NamespaceHandlerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/NamespaceHandlerSupport.html</Path>
    <Anchor>decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorate(Node, BeanDefinitionHolder, ParserContext)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleConstructorNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimpleConstructorNamespaceHandler.html</Path>
    <Anchor>decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorate(Node, BeanDefinitionHolder, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>SimplePropertyNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimplePropertyNamespaceHandler.html</Path>
    <Anchor>decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateBeanDefinitionIfRequired(Element, BeanDefinitionHolder)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>decorateBeanDefinitionIfRequired(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinitionHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateBeanDefinitionIfRequired(Element, BeanDefinitionHolder, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>decorateBeanDefinitionIfRequired(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateCache(Ehcache)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>decorateCache(net.sf.ehcache.Ehcache)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateCache(Cache)</Name>
      <Type>instm</Type>
      <Scope>AbstractCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/AbstractCacheManager.html</Path>
    <Anchor>decorateCache(org.springframework.cache.Cache)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateCache(Cache)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionSupportingCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/AbstractTransactionSupportingCacheManager.html</Path>
    <Anchor>decorateCache(org.springframework.cache.Cache)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateInputStream(InputStream)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>decorateInputStream(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateInputStream(HttpServletRequest, InputStream)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html</Path>
    <Anchor>decorateInputStream(javax.servlet.http.HttpServletRequest, java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateInputStream(HttpExchange, InputStream)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html</Path>
    <Anchor>decorateInputStream(com.sun.net.httpserver.HttpExchange, java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateOutputStream(OutputStream)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>decorateOutputStream(java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateOutputStream(HttpServletRequest, HttpServletResponse, OutputStream)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html</Path>
    <Anchor>decorateOutputStream(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateOutputStream(HttpExchange, OutputStream)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html</Path>
    <Anchor>decorateOutputStream(com.sun.net.httpserver.HttpExchange, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decorateTaskWithErrorHandler(Runnable, ErrorHandler, boolean)</Name>
      <Type>clm</Type>
      <Scope>TaskUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/TaskUtils.html</Path>
    <Anchor>decorateTaskWithErrorHandler(java.lang.Runnable, org.springframework.util.ErrorHandler, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DecoratingClassLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/DecoratingClassLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DecoratingClassLoader()</Name>
      <Type>Constructor</Type>
      <Scope>DecoratingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/DecoratingClassLoader.html</Path>
    <Anchor>DecoratingClassLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DecoratingClassLoader(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>DecoratingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/DecoratingClassLoader.html</Path>
    <Anchor>DecoratingClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DecoratingNavigationHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.jsf</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DecoratingNavigationHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DecoratingNavigationHandler()</Name>
      <Type>Constructor</Type>
      <Scope>DecoratingNavigationHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DecoratingNavigationHandler.html</Path>
    <Anchor>DecoratingNavigationHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DecoratingNavigationHandler(NavigationHandler)</Name>
      <Type>Constructor</Type>
      <Scope>DecoratingNavigationHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DecoratingNavigationHandler.html</Path>
    <Anchor>DecoratingNavigationHandler(javax.faces.application.NavigationHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decreaseNestingLevel()</Name>
      <Type>instm</Type>
      <Scope>MethodParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/MethodParameter.html</Path>
    <Anchor>decreaseNestingLevel()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deepCopy(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
    <Anchor>deepCopy(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deepCopy(Object)</Name>
      <Type>instm</Type>
      <Scope>BlobByteArrayType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobByteArrayType.html</Path>
    <Anchor>deepCopy(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deepCopy(Object)</Name>
      <Type>instm</Type>
      <Scope>BlobSerializableType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobSerializableType.html</Path>
    <Anchor>deepCopy(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_ADVICE_MODE_ATTRIBUTE_NAME</Name>
      <Type>Field</Type>
      <Scope>AdviceModeImportSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AdviceModeImportSelector.html</Path>
    <Anchor>DEFAULT_ADVICE_MODE_ATTRIBUTE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_AFTER_MESSAGE_PREFIX</Name>
      <Type>Field</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>DEFAULT_AFTER_MESSAGE_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_AFTER_MESSAGE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>DEFAULT_AFTER_MESSAGE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_AOP_XML_LOCATION</Name>
      <Type>Field</Type>
      <Scope>AbstractAspectjJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractAspectjJpaTests.html</Path>
    <Anchor>DEFAULT_AOP_XML_LOCATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_ARGUMENT_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>DEFAULT_ARGUMENT_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_AUTO_GROW_COLLECTION_LIMIT</Name>
      <Type>Field</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>DEFAULT_AUTO_GROW_COLLECTION_LIMIT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_AUTOWIRE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEFAULT_AUTOWIRE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_AUTOWIRE_CANDIDATES_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEFAULT_AUTOWIRE_CANDIDATES_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_BASE_ADDRESS</Name>
      <Type>Field</Type>
      <Scope>SimpleJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter.html</Path>
    <Anchor>DEFAULT_BASE_ADDRESS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_BASENAME</Name>
      <Type>Field</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>DEFAULT_BASENAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_BATCH_SIZE</Name>
      <Type>Field</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>DEFAULT_BATCH_SIZE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_BEAN_NAME_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>PropertyOverrideConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html</Path>
    <Anchor>DEFAULT_BEAN_NAME_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_BEFORE_MESSAGE_PREFIX</Name>
      <Type>Field</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>DEFAULT_BEFORE_MESSAGE_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_BEFORE_MESSAGE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>DEFAULT_BEFORE_MESSAGE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CACHE_LIMIT</Name>
      <Type>Field</Type>
      <Scope>CachingMetadataReaderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/CachingMetadataReaderFactory.html</Path>
    <Anchor>DEFAULT_CACHE_LIMIT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CACHE_LIMIT</Name>
      <Type>Field</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>DEFAULT_CACHE_LIMIT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CACHE_LIMIT</Name>
      <Type>Field</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>DEFAULT_CACHE_LIMIT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CHARACTER_ENCODING</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>DEFAULT_CHARACTER_ENCODING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CHARSET</Name>
      <Type>Field</Type>
      <Scope>AbstractWireFeedHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/AbstractWireFeedHttpMessageConverter.html</Path>
    <Anchor>DEFAULT_CHARSET</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CHARSET</Name>
      <Type>Field</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>DEFAULT_CHARSET</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CHARSET</Name>
      <Type>Field</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>DEFAULT_CHARSET</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CHARSET</Name>
      <Type>Field</Type>
      <Scope>StringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/StringHttpMessageConverter.html</Path>
    <Anchor>DEFAULT_CHARSET</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_COMMAND_NAME</Name>
      <Type>Field</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>DEFAULT_COMMAND_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_COMMAND_NAME</Name>
      <Type>Field</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>DEFAULT_COMMAND_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_COMMAND_NAME</Name>
      <Type>Field</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>DEFAULT_COMMAND_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_COMMAND_NAME</Name>
      <Type>Field</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>DEFAULT_COMMAND_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONFIG_LOCATION</Name>
      <Type>Field</Type>
      <Scope>XmlWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/XmlWebApplicationContext.html</Path>
    <Anchor>DEFAULT_CONFIG_LOCATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONFIG_LOCATION</Name>
      <Type>Field</Type>
      <Scope>XmlPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/XmlPortletApplicationContext.html</Path>
    <Anchor>DEFAULT_CONFIG_LOCATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONFIG_LOCATION_PREFIX</Name>
      <Type>Field</Type>
      <Scope>XmlWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/XmlWebApplicationContext.html</Path>
    <Anchor>DEFAULT_CONFIG_LOCATION_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONFIG_LOCATION_PREFIX</Name>
      <Type>Field</Type>
      <Scope>XmlPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/XmlPortletApplicationContext.html</Path>
    <Anchor>DEFAULT_CONFIG_LOCATION_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONFIG_LOCATION_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>XmlWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/XmlWebApplicationContext.html</Path>
    <Anchor>DEFAULT_CONFIG_LOCATION_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONFIG_LOCATION_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>XmlPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/XmlPortletApplicationContext.html</Path>
    <Anchor>DEFAULT_CONFIG_LOCATION_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONTENT_TYPE</Name>
      <Type>Field</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>DEFAULT_CONTENT_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONTENT_TYPE</Name>
      <Type>Field</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>DEFAULT_CONTENT_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONTENT_TYPE</Name>
      <Type>Field</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>DEFAULT_CONTENT_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONTENT_TYPE</Name>
      <Type>Field</Type>
      <Scope>MarshallingView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xml/MarshallingView.html</Path>
    <Anchor>DEFAULT_CONTENT_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONTEXT_CLASS</Name>
      <Type>Field</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>DEFAULT_CONTEXT_CLASS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONTEXT_CLASS</Name>
      <Type>Field</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>DEFAULT_CONTEXT_CLASS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONTEXT_CLASS</Name>
      <Type>Field</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>DEFAULT_CONTEXT_CLASS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_CONTEXT_CONFIG_LOCATION</Name>
      <Type>Field</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>DEFAULT_CONTEXT_CONFIG_LOCATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_COOKIE_MAX_AGE</Name>
      <Type>Field</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>DEFAULT_COOKIE_MAX_AGE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_COOKIE_NAME</Name>
      <Type>Field</Type>
      <Scope>CookieLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/CookieLocaleResolver.html</Path>
    <Anchor>DEFAULT_COOKIE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_COOKIE_NAME</Name>
      <Type>Field</Type>
      <Scope>CookieThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/CookieThemeResolver.html</Path>
    <Anchor>DEFAULT_COOKIE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_COOKIE_PATH</Name>
      <Type>Field</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>DEFAULT_COOKIE_PATH</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_DEPENDENCY_CHECK_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEFAULT_DEPENDENCY_CHECK_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_DESTROY_METHOD_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEFAULT_DESTROY_METHOD_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_ENCODING</Name>
      <Type>Field</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>DEFAULT_ENCODING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_ENCODING</Name>
      <Type>Field</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>DEFAULT_ENCODING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_ENCODING</Name>
      <Type>Field</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>DEFAULT_ENCODING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_ENCODING</Name>
      <Type>Field</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>DEFAULT_ENCODING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>OpenEntityManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.html</Path>
    <Anchor>DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_EXCEPTION_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>DEFAULT_EXCEPTION_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_EXCEPTION_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>DEFAULT_EXCEPTION_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_EXCLUDED_PACKAGES</Name>
      <Type>Field</Type>
      <Scope>OverridingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/OverridingClassLoader.html</Path>
    <Anchor>DEFAULT_EXCLUDED_PACKAGES</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_EXCLUDED_PACKAGES</Name>
      <Type>Field</Type>
      <Scope>ShadowingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ShadowingClassLoader.html</Path>
    <Anchor>DEFAULT_EXCLUDED_PACKAGES</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_EXPRESSION_PREFIX</Name>
      <Type>Field</Type>
      <Scope>StandardBeanExpressionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/StandardBeanExpressionResolver.html</Path>
    <Anchor>DEFAULT_EXPRESSION_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_EXPRESSION_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>StandardBeanExpressionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/StandardBeanExpressionResolver.html</Path>
    <Anchor>DEFAULT_EXPRESSION_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_FEED_TYPE</Name>
      <Type>Field</Type>
      <Scope>AbstractAtomFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html</Path>
    <Anchor>DEFAULT_FEED_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_FIELD_DEFAULT_PREFIX</Name>
      <Type>Field</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>DEFAULT_FIELD_DEFAULT_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_FIELD_MARKER_PREFIX</Name>
      <Type>Field</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>DEFAULT_FIELD_MARKER_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_FORMAT_KEY</Name>
      <Type>Field</Type>
      <Scope>JasperReportsMultiFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.html</Path>
    <Anchor>DEFAULT_FORMAT_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_HANDLER_MAPPINGS_LOCATION</Name>
      <Type>Field</Type>
      <Scope>DefaultNamespaceHandlerResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.html</Path>
    <Anchor>DEFAULT_HANDLER_MAPPINGS_LOCATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_INDENT_AMOUNT</Name>
      <Type>Field</Type>
      <Scope>TransformerUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/TransformerUtils.html</Path>
    <Anchor>DEFAULT_INDENT_AMOUNT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_INIT_METHOD_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEFAULT_INIT_METHOD_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_INTERVAL</Name>
      <Type>Field</Type>
      <Scope>DatabaseStartupValidator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseStartupValidator.html</Path>
    <Anchor>DEFAULT_INTERVAL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_LAYOUT_KEY</Name>
      <Type>Field</Type>
      <Scope>VelocityLayoutView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutView.html</Path>
    <Anchor>DEFAULT_LAYOUT_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_LAYOUT_URL</Name>
      <Type>Field</Type>
      <Scope>VelocityLayoutView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutView.html</Path>
    <Anchor>DEFAULT_LAYOUT_URL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_LAZY_INIT_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEFAULT_LAZY_INIT_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_LOCATION</Name>
      <Type>Field</Type>
      <Scope>XmlViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/XmlViewResolver.html</Path>
    <Anchor>DEFAULT_LOCATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_MAX_LINKED_PAGES</Name>
      <Type>Field</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>DEFAULT_MAX_LINKED_PAGES</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_MERGE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEFAULT_MERGE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_METHOD_PARAM</Name>
      <Type>Field</Type>
      <Scope>HiddenHttpMethodFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/HiddenHttpMethodFilter.html</Path>
    <Anchor>DEFAULT_METHOD_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_MULTIPART_RESOLVER_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>MultipartFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/MultipartFilter.html</Path>
    <Anchor>DEFAULT_MULTIPART_RESOLVER_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_NAMESPACE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>DEFAULT_NAMESPACE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_NAMESPACE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>DEFAULT_NAMESPACE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_NAMESPACE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>DEFAULT_NAMESPACE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_NON_OPTION_ARGS_PROPERTY_NAME</Name>
      <Type>Field</Type>
      <Scope>CommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CommandLinePropertySource.html</Path>
    <Anchor>DEFAULT_NON_OPTION_ARGS_PROPERTY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_NONE</Name>
      <Type>Field</Type>
      <Scope>ValueConstants</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/ValueConstants.html</Path>
    <Anchor>DEFAULT_NONE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_OBJECT_NAME</Name>
      <Type>Field</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>DEFAULT_OBJECT_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_ORDER</Name>
      <Type>Field</Type>
      <Scope>LabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/LabeledEnum.html</Path>
    <Anchor>DEFAULT_ORDER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PAGE_SIZE</Name>
      <Type>Field</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>DEFAULT_PAGE_SIZE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PARAM_NAME</Name>
      <Type>Field</Type>
      <Scope>LocaleChangeInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/LocaleChangeInterceptor.html</Path>
    <Anchor>DEFAULT_PARAM_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PARAM_NAME</Name>
      <Type>Field</Type>
      <Scope>ParameterMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/ParameterMethodNameResolver.html</Path>
    <Anchor>DEFAULT_PARAM_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PARAM_NAME</Name>
      <Type>Field</Type>
      <Scope>ThemeChangeInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/ThemeChangeInterceptor.html</Path>
    <Anchor>DEFAULT_PARAM_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PARAMETER_NAME</Name>
      <Type>Field</Type>
      <Scope>ParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterHandlerMapping.html</Path>
    <Anchor>DEFAULT_PARAMETER_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PARAMETER_NAME</Name>
      <Type>Field</Type>
      <Scope>ParameterMappingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterMappingInterceptor.html</Path>
    <Anchor>DEFAULT_PARAMETER_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PARAMETER_NAME</Name>
      <Type>Field</Type>
      <Scope>PortletModeParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
    <Anchor>DEFAULT_PARAMETER_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PATH_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>AntPathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
    <Anchor>DEFAULT_PATH_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PERSISTENCE_MANAGER_FACTORY_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>OpenPersistenceManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/OpenPersistenceManagerInViewFilter.html</Path>
    <Anchor>DEFAULT_PERSISTENCE_MANAGER_FACTORY_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PERSISTENCE_XML_LOCATION</Name>
      <Type>Field</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>DEFAULT_PERSISTENCE_XML_LOCATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PLACEHOLDER_PREFIX</Name>
      <Type>Field</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>DEFAULT_PLACEHOLDER_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PLACEHOLDER_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>DEFAULT_PLACEHOLDER_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PORT</Name>
      <Type>Field</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>DEFAULT_PORT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PREFIX_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>ServletRequestParameterPropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestParameterPropertyValues.html</Path>
    <Anchor>DEFAULT_PREFIX_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PREFIX_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>PortletRequestParameterPropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestParameterPropertyValues.html</Path>
    <Anchor>DEFAULT_PREFIX_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PROFILES_PROPERTY_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>DEFAULT_PROFILES_PROPERTY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PROTOCOL</Name>
      <Type>Field</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>DEFAULT_PROTOCOL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_PROTOCOL</Name>
      <Type>Field</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>DEFAULT_PROTOCOL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_RECEIVE_TIMEOUT</Name>
      <Type>Field</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>DEFAULT_RECEIVE_TIMEOUT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_RECOVERY_INTERVAL</Name>
      <Type>Field</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>DEFAULT_RECOVERY_INTERVAL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_REMOTE_ADDR</Name>
      <Type>Field</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>DEFAULT_REMOTE_ADDR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_REMOTE_HOST</Name>
      <Type>Field</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>DEFAULT_REMOTE_HOST</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_ROOT</Name>
      <Type>Field</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>DEFAULT_ROOT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SCHEMA_MAPPINGS_LOCATION</Name>
      <Type>Field</Type>
      <Scope>PluggableSchemaResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/PluggableSchemaResolver.html</Path>
    <Anchor>DEFAULT_SCHEMA_MAPPINGS_LOCATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SCREEN_CONTENT_KEY</Name>
      <Type>Field</Type>
      <Scope>VelocityLayoutView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutView.html</Path>
    <Anchor>DEFAULT_SCREEN_CONTENT_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>StringArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html</Path>
    <Anchor>DEFAULT_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>LocalizedResourceHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/LocalizedResourceHelper.html</Path>
    <Anchor>DEFAULT_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SERVER_ADDR</Name>
      <Type>Field</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>DEFAULT_SERVER_ADDR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SERVER_NAME</Name>
      <Type>Field</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>DEFAULT_SERVER_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SERVER_PORT</Name>
      <Type>Field</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>DEFAULT_SERVER_PORT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SERVICE_URL</Name>
      <Type>Field</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>DEFAULT_SERVICE_URL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SERVLET_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.html</Path>
    <Anchor>DEFAULT_SERVLET_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SESSION_FACTORY_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html</Path>
    <Anchor>DEFAULT_SESSION_FACTORY_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_SESSION_FACTORY_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewFilter.html</Path>
    <Anchor>DEFAULT_SESSION_FACTORY_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_TARGET_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>DelegatingNavigationHandlerProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingNavigationHandlerProxy.html</Path>
    <Anchor>DEFAULT_TARGET_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_THEME_NAME</Name>
      <Type>Field</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>DEFAULT_THEME_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_THREAD_COUNT</Name>
      <Type>Field</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>DEFAULT_THREAD_COUNT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_THREAD_NAME_PREFIX</Name>
      <Type>Field</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>DEFAULT_THREAD_NAME_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_TIMEOUT</Name>
      <Type>Field</Type>
      <Scope>DatabaseStartupValidator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseStartupValidator.html</Path>
    <Anchor>DEFAULT_TIMEOUT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_TRANSACTION_SYNCHRONIZATION_REGISTRY_NAME</Name>
      <Type>Field</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>DEFAULT_TRANSACTION_SYNCHRONIZATION_REGISTRY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_UOW_MANAGER_NAME</Name>
      <Type>Field</Type>
      <Scope>WebSphereUowTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
    <Anchor>DEFAULT_UOW_MANAGER_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_USER_TRANSACTION_NAME</Name>
      <Type>Field</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>DEFAULT_USER_TRANSACTION_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_USERINFO_ATTRIBUTE_NAMES</Name>
      <Type>Field</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>DEFAULT_USERINFO_ATTRIBUTE_NAMES</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEFAULT_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_VALUE_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>DEFAULT_VALUE_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_VIEW_RENDERER_URL</Name>
      <Type>Field</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>DEFAULT_VIEW_RENDERER_URL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_WEB_APP_ROOT_KEY</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>DEFAULT_WEB_APP_ROOT_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAdvisorAdapterRegistry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.adapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAdvisorAdapterRegistry()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultAdvisorAdapterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.html</Path>
    <Anchor>DefaultAdvisorAdapterRegistry()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAdvisorAutoProxyCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.autoproxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAdvisorAutoProxyCreator()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html</Path>
    <Anchor>DefaultAdvisorAutoProxyCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAdvisorChainFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/DefaultAdvisorChainFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAdvisorChainFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultAdvisorChainFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/DefaultAdvisorChainFactory.html</Path>
    <Anchor>DefaultAdvisorChainFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAnnotationHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAnnotationHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>DefaultAnnotationHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAnnotationHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAnnotationHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>DefaultAnnotationHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAopProxyFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/DefaultAopProxyFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultAopProxyFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultAopProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/DefaultAopProxyFactory.html</Path>
    <Anchor>DefaultAopProxyFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultAutoCommit()</Name>
      <Type>instm</Type>
      <Scope>LazyConnectionDataSourceProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.html</Path>
    <Anchor>defaultAutoCommit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultBeanDefinitionDocumentReader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultBeanDefinitionDocumentReader()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>DefaultBeanDefinitionDocumentReader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultBeanFactoryPointcutAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultBeanFactoryPointcutAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultBeanFactoryPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor.html</Path>
    <Anchor>DefaultBeanFactoryPointcutAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultBeanNameGenerator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultBeanNameGenerator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultBeanNameGenerator()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultBeanNameGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultBeanNameGenerator.html</Path>
    <Anchor>DefaultBeanNameGenerator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultBindingErrorProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultBindingErrorProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultBindingErrorProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultBindingErrorProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultBindingErrorProcessor.html</Path>
    <Anchor>DefaultBindingErrorProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultContentType(MediaType)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.html</Path>
    <Anchor>defaultContentType(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultContextLoadTimeWeaver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.weaving</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultContextLoadTimeWeaver()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultContextLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.html</Path>
    <Anchor>DefaultContextLoadTimeWeaver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultContextLoadTimeWeaver(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultContextLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.html</Path>
    <Anchor>DefaultContextLoadTimeWeaver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultConversionService</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.convert.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/DefaultConversionService.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultConversionService()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/DefaultConversionService.html</Path>
    <Anchor>DefaultConversionService()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultDataBinderFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultDataBinderFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultDataBinderFactory(WebBindingInitializer)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultDataBinderFactory.html</Path>
    <Anchor>DefaultDataBinderFactory(org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultDeserializer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.serializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/DefaultDeserializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultDeserializer()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultDeserializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/DefaultDeserializer.html</Path>
    <Anchor>DefaultDeserializer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultDocumentLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultDocumentLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultDocumentLoader()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultDocumentLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultDocumentLoader.html</Path>
    <Anchor>DefaultDocumentLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultFormattingConversionService</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/DefaultFormattingConversionService.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultFormattingConversionService()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultFormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/DefaultFormattingConversionService.html</Path>
    <Anchor>DefaultFormattingConversionService()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultFormattingConversionService(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultFormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/DefaultFormattingConversionService.html</Path>
    <Anchor>DefaultFormattingConversionService(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultFormattingConversionService(StringValueResolver, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultFormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/DefaultFormattingConversionService.html</Path>
    <Anchor>DefaultFormattingConversionService(org.springframework.util.StringValueResolver, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultHandlerExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultHandlerExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>DefaultHandlerExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultIntroductionAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultIntroductionAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultIntroductionAdvisor(Advice)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultIntroductionAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultIntroductionAdvisor.html</Path>
    <Anchor>DefaultIntroductionAdvisor(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultIntroductionAdvisor(Advice, IntroductionInfo)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultIntroductionAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultIntroductionAdvisor.html</Path>
    <Anchor>DefaultIntroductionAdvisor(org.aopalliance.aop.Advice, org.springframework.aop.IntroductionInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultIntroductionAdvisor(DynamicIntroductionAdvice, Class)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultIntroductionAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultIntroductionAdvisor.html</Path>
    <Anchor>DefaultIntroductionAdvisor(org.springframework.aop.DynamicIntroductionAdvice, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultJdoDialect</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jdo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/DefaultJdoDialect.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultJdoDialect()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultJdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/DefaultJdoDialect.html</Path>
    <Anchor>DefaultJdoDialect()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultJdoDialect(Object)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultJdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/DefaultJdoDialect.html</Path>
    <Anchor>DefaultJdoDialect(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultJmsActivationSpecFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.listener.endpoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultJmsActivationSpecFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.html</Path>
    <Anchor>DefaultJmsActivationSpecFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultJpaDialect</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/DefaultJpaDialect.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultJpaDialect()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/DefaultJpaDialect.html</Path>
    <Anchor>DefaultJpaDialect()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultKeyGenerator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/DefaultKeyGenerator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultKeyGenerator()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultKeyGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/DefaultKeyGenerator.html</Path>
    <Anchor>DefaultKeyGenerator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultLifecycleProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultLifecycleProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultLifecycleProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultLifecycleProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultLifecycleProcessor.html</Path>
    <Anchor>DefaultLifecycleProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultListableBeanFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultListableBeanFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>DefaultListableBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultListableBeanFactory(BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>DefaultListableBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultLobHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.lob</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultLobHandler()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.html</Path>
    <Anchor>DefaultLobHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultLobHandler.DefaultLobCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.lob</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultLobHandler.DefaultLobCreator()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultLobHandler.DefaultLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html</Path>
    <Anchor>DefaultLobHandler.DefaultLobCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultLocatorFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/DefaultLocatorFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultLocatorFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultLocatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/DefaultLocatorFactory.html</Path>
    <Anchor>DefaultLocatorFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultLogger</Name>
      <Type>Field</Type>
      <Scope>AbstractTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
    <Anchor>defaultLogger</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageCodesResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageCodesResolver()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.html</Path>
    <Anchor>DefaultMessageCodesResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageCodesResolver.Format</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.Format.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageListenerContainer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageListenerContainer()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>DefaultMessageListenerContainer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageListenerContainer102</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer102.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageListenerContainer102()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer102.html</Path>
    <Anchor>DefaultMessageListenerContainer102()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageSourceResolvable</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageSourceResolvable(String)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMessageSourceResolvable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
    <Anchor>DefaultMessageSourceResolvable(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageSourceResolvable(String[])</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMessageSourceResolvable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
    <Anchor>DefaultMessageSourceResolvable(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageSourceResolvable(String[], String)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMessageSourceResolvable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
    <Anchor>DefaultMessageSourceResolvable(java.lang.String[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageSourceResolvable(String[], Object[])</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMessageSourceResolvable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
    <Anchor>DefaultMessageSourceResolvable(java.lang.String[], java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageSourceResolvable(String[], Object[], String)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMessageSourceResolvable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
    <Anchor>DefaultMessageSourceResolvable(java.lang.String[], java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMessageSourceResolvable(MessageSourceResolvable)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMessageSourceResolvable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
    <Anchor>DefaultMessageSourceResolvable(org.springframework.context.MessageSourceResolvable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMockMvcBuilder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.setup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMockMvcBuilder(WebApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
    <Anchor>DefaultMockMvcBuilder(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMultipartActionRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.multipart</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/DefaultMultipartActionRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMultipartActionRequest(ActionRequest, MultiValueMap&amp;lt;String, MultipartFile&amp;gt;, Map&amp;lt;String, String[]&amp;gt;, Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMultipartActionRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/DefaultMultipartActionRequest.html</Path>
    <Anchor>DefaultMultipartActionRequest(javax.portlet.ActionRequest, org.springframework.util.MultiValueMap, java.util.Map, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMultipartActionRequest(ActionRequest)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMultipartActionRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/DefaultMultipartActionRequest.html</Path>
    <Anchor>DefaultMultipartActionRequest(javax.portlet.ActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMultipartHttpServletRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMultipartHttpServletRequest(HttpServletRequest, MultiValueMap&amp;lt;String, MultipartFile&amp;gt;, Map&amp;lt;String, String[]&amp;gt;, Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMultipartHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest.html</Path>
    <Anchor>DefaultMultipartHttpServletRequest(javax.servlet.http.HttpServletRequest, org.springframework.util.MultiValueMap, java.util.Map, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultMultipartHttpServletRequest(HttpServletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultMultipartHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest.html</Path>
    <Anchor>DefaultMultipartHttpServletRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultNamespaceHandlerResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultNamespaceHandlerResolver()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultNamespaceHandlerResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.html</Path>
    <Anchor>DefaultNamespaceHandlerResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultNamespaceHandlerResolver(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultNamespaceHandlerResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.html</Path>
    <Anchor>DefaultNamespaceHandlerResolver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultNamespaceHandlerResolver(ClassLoader, String)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultNamespaceHandlerResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.html</Path>
    <Anchor>DefaultNamespaceHandlerResolver(java.lang.ClassLoader, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultPersistenceUnitManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa.persistenceunit</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultPersistenceUnitManager()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>DefaultPersistenceUnitManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultPointcutAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultPointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultPointcutAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultPointcutAdvisor.html</Path>
    <Anchor>DefaultPointcutAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultPointcutAdvisor(Advice)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultPointcutAdvisor.html</Path>
    <Anchor>DefaultPointcutAdvisor(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultPointcutAdvisor(Pointcut, Advice)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultPointcutAdvisor.html</Path>
    <Anchor>DefaultPointcutAdvisor(org.springframework.aop.Pointcut, org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultPropertiesPersister</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultPropertiesPersister()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>DefaultPropertiesPersister()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultRemoteInvocationExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/DefaultRemoteInvocationExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultRemoteInvocationExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultRemoteInvocationExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/DefaultRemoteInvocationExecutor.html</Path>
    <Anchor>DefaultRemoteInvocationExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultRemoteInvocationFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/DefaultRemoteInvocationFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultRemoteInvocationFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultRemoteInvocationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/DefaultRemoteInvocationFactory.html</Path>
    <Anchor>DefaultRemoteInvocationFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultRequest(RequestBuilder)</Name>
      <Type>instm</Type>
      <Scope>DefaultMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
    <Anchor>defaultRequest(org.springframework.test.web.servlet.RequestBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultRequestToViewNameTranslator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultRequestToViewNameTranslator()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>DefaultRequestToViewNameTranslator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultResourceLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DefaultResourceLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultResourceLoader()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DefaultResourceLoader.html</Path>
    <Anchor>DefaultResourceLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultResourceLoader(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DefaultResourceLoader.html</Path>
    <Anchor>DefaultResourceLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultResponseCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.client.response</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/DefaultResponseCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultResponseCreator(HttpStatus)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultResponseCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/DefaultResponseCreator.html</Path>
    <Anchor>DefaultResponseCreator(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultResponseErrorHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/DefaultResponseErrorHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultResponseErrorHandler()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultResponseErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/DefaultResponseErrorHandler.html</Path>
    <Anchor>DefaultResponseErrorHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultScopedObject</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.scope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/DefaultScopedObject.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultScopedObject(ConfigurableBeanFactory, String)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultScopedObject</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/DefaultScopedObject.html</Path>
    <Anchor>DefaultScopedObject(org.springframework.beans.factory.config.ConfigurableBeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultsDefinition</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/DefaultsDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultSerializer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.serializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/DefaultSerializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultSerializer()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultSerializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/DefaultSerializer.html</Path>
    <Anchor>DefaultSerializer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultServletHandlerConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DefaultServletHandlerConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultServletHandlerConfigurer(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultServletHandlerConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DefaultServletHandlerConfigurer.html</Path>
    <Anchor>DefaultServletHandlerConfigurer(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultServletHandlerMapping()</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>defaultServletHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultServletHttpRequestHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.resource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/DefaultServletHttpRequestHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultServletHttpRequestHandler()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultServletHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/DefaultServletHttpRequestHandler.html</Path>
    <Anchor>DefaultServletHttpRequestHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultSessionAttributeStore</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultSessionAttributeStore.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultSessionAttributeStore()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultSessionAttributeStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultSessionAttributeStore.html</Path>
    <Anchor>DefaultSessionAttributeStore()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultSingletonBeanRegistry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultSingletonBeanRegistry()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>DefaultSingletonBeanRegistry()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultsRegistered(DefaultsDefinition)</Name>
      <Type>instm</Type>
      <Scope>EmptyReaderEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/EmptyReaderEventListener.html</Path>
    <Anchor>defaultsRegistered(org.springframework.beans.factory.parsing.DefaultsDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultsRegistered(DefaultsDefinition)</Name>
      <Type>intfm</Type>
      <Scope>ReaderEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderEventListener.html</Path>
    <Anchor>defaultsRegistered(org.springframework.beans.factory.parsing.DefaultsDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultToStringStyler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.style</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultToStringStyler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultToStringStyler(ValueStyler)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultToStringStyler.html</Path>
    <Anchor>DefaultToStringStyler(org.springframework.core.style.ValueStyler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionAttribute</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/DefaultTransactionAttribute.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionAttribute()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/DefaultTransactionAttribute.html</Path>
    <Anchor>DefaultTransactionAttribute()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionAttribute(TransactionAttribute)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/DefaultTransactionAttribute.html</Path>
    <Anchor>DefaultTransactionAttribute(org.springframework.transaction.interceptor.TransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionAttribute(int)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/DefaultTransactionAttribute.html</Path>
    <Anchor>DefaultTransactionAttribute(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionDefinition()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>DefaultTransactionDefinition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionDefinition(TransactionDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>DefaultTransactionDefinition(org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionDefinition(int)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>DefaultTransactionDefinition(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultTransactionIsolation()</Name>
      <Type>instm</Type>
      <Scope>LazyConnectionDataSourceProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.html</Path>
    <Anchor>defaultTransactionIsolation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionStatus</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultTransactionStatus(Object, boolean, boolean, boolean, boolean, Object)</Name>
      <Type>Constructor</Type>
      <Scope>DefaultTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
    <Anchor>DefaultTransactionStatus(java.lang.Object, boolean, boolean, boolean, boolean, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultValueStyler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.style</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultValueStyler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultValueStyler()</Name>
      <Type>Constructor</Type>
      <Scope>DefaultValueStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultValueStyler.html</Path>
    <Anchor>DefaultValueStyler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResult</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResult()</Name>
      <Type>Constructor</Type>
      <Scope>DeferredResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.html</Path>
    <Anchor>DeferredResult()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResult(long)</Name>
      <Type>Constructor</Type>
      <Scope>DeferredResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.html</Path>
    <Anchor>DeferredResult(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResult(Long, Object)</Name>
      <Type>Constructor</Type>
      <Scope>DeferredResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.html</Path>
    <Anchor>DeferredResult(java.lang.Long, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResult.DeferredResultHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.DeferredResultHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResultMethodReturnValueHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/DeferredResultMethodReturnValueHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResultMethodReturnValueHandler()</Name>
      <Type>Constructor</Type>
      <Scope>DeferredResultMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/DeferredResultMethodReturnValueHandler.html</Path>
    <Anchor>DeferredResultMethodReturnValueHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResultProcessingInterceptor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResultProcessingInterceptorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeferredResultProcessingInterceptorAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>DeferredResultProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptorAdapter.html</Path>
    <Anchor>DeferredResultProcessingInterceptorAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegateBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AsyncAnnotationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html</Path>
    <Anchor>delegateBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatePerTargetObjectIntroductionInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatePerTargetObjectIntroductionInterceptor(Class, Class)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatePerTargetObjectIntroductionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.html</Path>
    <Anchor>DelegatePerTargetObjectIntroductionInterceptor(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingActionProxy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingActionProxy()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingActionProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionProxy.html</Path>
    <Anchor>DelegatingActionProxy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingActionUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingActionUtils()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingActionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionUtils.html</Path>
    <Anchor>DelegatingActionUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingConnectionFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/DelegatingConnectionFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingConnectionFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>DelegatingConnectionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingConnectionFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingConnectionFactory()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>DelegatingConnectionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingDataSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DelegatingDataSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingDataSource()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DelegatingDataSource.html</Path>
    <Anchor>DelegatingDataSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingDataSource(DataSource)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DelegatingDataSource.html</Path>
    <Anchor>DelegatingDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingEntityResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DelegatingEntityResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingEntityResolver(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingEntityResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DelegatingEntityResolver.html</Path>
    <Anchor>DelegatingEntityResolver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingEntityResolver(EntityResolver, EntityResolver)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingEntityResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DelegatingEntityResolver.html</Path>
    <Anchor>DelegatingEntityResolver(org.xml.sax.EntityResolver, org.xml.sax.EntityResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingErrorHandlingRunnable</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/DelegatingErrorHandlingRunnable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingErrorHandlingRunnable(Runnable, ErrorHandler)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingErrorHandlingRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/DelegatingErrorHandlingRunnable.html</Path>
    <Anchor>DelegatingErrorHandlingRunnable(java.lang.Runnable, org.springframework.util.ErrorHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingFilterProxy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingFilterProxy()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>DelegatingFilterProxy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingFilterProxy(Filter)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>DelegatingFilterProxy(javax.servlet.Filter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingFilterProxy(String)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>DelegatingFilterProxy(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingFilterProxy(String, WebApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>DelegatingFilterProxy(java.lang.String, org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingIntroductionInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DelegatingIntroductionInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingIntroductionInterceptor(Object)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingIntroductionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DelegatingIntroductionInterceptor.html</Path>
    <Anchor>DelegatingIntroductionInterceptor(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingIntroductionInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingIntroductionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DelegatingIntroductionInterceptor.html</Path>
    <Anchor>DelegatingIntroductionInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingJob</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/DelegatingJob.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingJob(Runnable)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingJob</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/DelegatingJob.html</Path>
    <Anchor>DelegatingJob(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingMessageSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DelegatingMessageSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingMessageSource()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DelegatingMessageSource.html</Path>
    <Anchor>DelegatingMessageSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingNavigationHandlerProxy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.jsf</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingNavigationHandlerProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingNavigationHandlerProxy()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingNavigationHandlerProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingNavigationHandlerProxy.html</Path>
    <Anchor>DelegatingNavigationHandlerProxy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingNavigationHandlerProxy(NavigationHandler)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingNavigationHandlerProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingNavigationHandlerProxy.html</Path>
    <Anchor>DelegatingNavigationHandlerProxy(javax.faces.application.NavigationHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingPhaseListenerMulticaster</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.jsf</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingPhaseListenerMulticaster.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingPhaseListenerMulticaster()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingPhaseListenerMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingPhaseListenerMulticaster.html</Path>
    <Anchor>DelegatingPhaseListenerMulticaster()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingRequestProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingRequestProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingRequestProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingRequestProcessor.html</Path>
    <Anchor>DelegatingRequestProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingServletInputStream</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mock.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/DelegatingServletInputStream.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingServletInputStream(InputStream)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingServletInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/DelegatingServletInputStream.html</Path>
    <Anchor>DelegatingServletInputStream(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingServletOutputStream</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mock.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/DelegatingServletOutputStream.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingServletOutputStream(OutputStream)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingServletOutputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/DelegatingServletOutputStream.html</Path>
    <Anchor>DelegatingServletOutputStream(java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingSmartContextLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DelegatingSmartContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingSmartContextLoader()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingSmartContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DelegatingSmartContextLoader.html</Path>
    <Anchor>DelegatingSmartContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingThemeSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/DelegatingThemeSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingThemeSource()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingThemeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/DelegatingThemeSource.html</Path>
    <Anchor>DelegatingThemeSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTilesRequestProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTilesRequestProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html</Path>
    <Anchor>DelegatingTilesRequestProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTimerListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.commonj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/DelegatingTimerListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTimerListener(Runnable)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/DelegatingTimerListener.html</Path>
    <Anchor>DelegatingTimerListener(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTimerTask</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.timer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/DelegatingTimerTask.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTimerTask(Runnable)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/DelegatingTimerTask.html</Path>
    <Anchor>DelegatingTimerTask(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTransactionAttribute</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/DelegatingTransactionAttribute.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTransactionAttribute(TransactionAttribute)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/DelegatingTransactionAttribute.html</Path>
    <Anchor>DelegatingTransactionAttribute(org.springframework.transaction.interceptor.TransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTransactionDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DelegatingTransactionDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingTransactionDefinition(TransactionDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DelegatingTransactionDefinition.html</Path>
    <Anchor>DelegatingTransactionDefinition(org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingVariableResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.jsf</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingVariableResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingVariableResolver(VariableResolver)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingVariableResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingVariableResolver.html</Path>
    <Anchor>DelegatingVariableResolver(javax.faces.el.VariableResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingWebMvcConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingWebMvcConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>DelegatingWebMvcConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingWork</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.work</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/DelegatingWork.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingWork(Runnable)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingWork</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/DelegatingWork.html</Path>
    <Anchor>DelegatingWork(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingWork</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.commonj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/DelegatingWork.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelegatingWork(Runnable)</Name>
      <Type>Constructor</Type>
      <Scope>DelegatingWork</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/DelegatingWork.html</Path>
    <Anchor>DelegatingWork(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>delete(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(Object, LockMode)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>delete(java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object, LockMode)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>delete(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(Object, LockMode)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>delete(java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object, LockMode)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String)</Name>
      <Type>intfm</Type>
      <Scope>SqlMapClientOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientOperations.html</Path>
    <Anchor>delete(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>SqlMapClientOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientOperations.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object, int)</Name>
      <Type>intfm</Type>
      <Scope>SqlMapClientOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientOperations.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>delete(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object, int)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object...)</Name>
      <Type>clm</Type>
      <Scope>MockMvcRequestBuilders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>delete(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>delete(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(URI)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>delete(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>delete(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>delete(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete(URI)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>delete(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteAll(Collection)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>deleteAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteAll(Collection)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>deleteAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteAny(String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>deleteAny(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteFromTables(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalDataSourceSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html</Path>
    <Anchor>deleteFromTables(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteFromTables(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html</Path>
    <Anchor>deleteFromTables(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteFromTables(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
    <Anchor>deleteFromTables(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteFromTables(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
    <Anchor>deleteFromTables(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteFromTables(JdbcTemplate, String...)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>deleteFromTables(org.springframework.jdbc.core.JdbcTemplate, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteFromTables(SimpleJdbcTemplate, String...)</Name>
      <Type>clm</Type>
      <Scope>SimpleJdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html</Path>
    <Anchor>deleteFromTables(org.springframework.jdbc.core.simple.SimpleJdbcTemplate, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deletePersistent(Object)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>deletePersistent(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deletePersistent(Object)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>deletePersistent(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deletePersistentAll(Collection)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>deletePersistentAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deletePersistentAll(Collection)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>deletePersistentAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteRecursively(File)</Name>
      <Type>clm</Type>
      <Scope>FileSystemUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileSystemUtils.html</Path>
    <Anchor>deleteRecursively(java.io.File)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delimitedListToStringArray(String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>delimitedListToStringArray(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delimitedListToStringArray(String, String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>delimitedListToStringArray(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delistResource(XAResource, int)</Name>
      <Type>instm</Type>
      <Scope>ManagedTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/ManagedTransactionAdapter.html</Path>
    <Anchor>delistResource(javax.transaction.xa.XAResource, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPENDENCY_CHECK_ALL</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>DEPENDENCY_CHECK_ALL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPENDENCY_CHECK_ALL_ATTRIBUTE_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEPENDENCY_CHECK_ALL_ATTRIBUTE_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPENDENCY_CHECK_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEPENDENCY_CHECK_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPENDENCY_CHECK_NONE</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>DEPENDENCY_CHECK_NONE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPENDENCY_CHECK_OBJECTS</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>DEPENDENCY_CHECK_OBJECTS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPENDENCY_CHECK_OBJECTS_ATTRIBUTE_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEPENDENCY_CHECK_OBJECTS_ATTRIBUTE_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPENDENCY_CHECK_SIMPLE</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>DEPENDENCY_CHECK_SIMPLE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPENDENCY_CHECK_SIMPLE_ATTRIBUTE_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEPENDENCY_CHECK_SIMPLE_ATTRIBUTE_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DependencyDescriptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DependencyDescriptor(MethodParameter, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>DependencyDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
    <Anchor>DependencyDescriptor(org.springframework.core.MethodParameter, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DependencyDescriptor(MethodParameter, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>DependencyDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
    <Anchor>DependencyDescriptor(org.springframework.core.MethodParameter, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DependencyDescriptor(Field, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>DependencyDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
    <Anchor>DependencyDescriptor(java.lang.reflect.Field, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DependencyDescriptor(Field, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>DependencyDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
    <Anchor>DependencyDescriptor(java.lang.reflect.Field, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DependencyDescriptor(DependencyDescriptor)</Name>
      <Type>Constructor</Type>
      <Scope>DependencyDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
    <Anchor>DependencyDescriptor(org.springframework.beans.factory.config.DependencyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DependencyInjectionTestExecutionListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DependencyInjectionTestExecutionListener()</Name>
      <Type>Constructor</Type>
      <Scope>DependencyInjectionTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html</Path>
    <Anchor>DependencyInjectionTestExecutionListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPENDS_ON_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DEPENDS_ON_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DependsOn</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/DependsOn.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeprecatedBeanWarner</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DeprecatedBeanWarner.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeprecatedBeanWarner()</Name>
      <Type>Constructor</Type>
      <Scope>DeprecatedBeanWarner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DeprecatedBeanWarner.html</Path>
    <Anchor>DeprecatedBeanWarner()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DerbyCallMetaDataProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/DerbyCallMetaDataProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DerbyCallMetaDataProvider(DatabaseMetaData)</Name>
      <Type>Constructor</Type>
      <Scope>DerbyCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/DerbyCallMetaDataProvider.html</Path>
    <Anchor>DerbyCallMetaDataProvider(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DerbyMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DerbyMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DerbyMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>DerbyMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DerbyMaxValueIncrementer.html</Path>
    <Anchor>DerbyMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DerbyMaxValueIncrementer(DataSource, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>DerbyMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DerbyMaxValueIncrementer.html</Path>
    <Anchor>DerbyMaxValueIncrementer(javax.sql.DataSource, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DerbyMaxValueIncrementer(DataSource, String, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>DerbyMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DerbyMaxValueIncrementer.html</Path>
    <Anchor>DerbyMaxValueIncrementer(javax.sql.DataSource, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DerbyTableMetaDataProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DerbyTableMetaDataProvider(DatabaseMetaData)</Name>
      <Type>Constructor</Type>
      <Scope>DerbyTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.html</Path>
    <Anchor>DerbyTableMetaDataProvider(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DESCRIPTION_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DESCRIPTION_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DescriptiveResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DescriptiveResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DescriptiveResource(String)</Name>
      <Type>Constructor</Type>
      <Scope>DescriptiveResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DescriptiveResource.html</Path>
    <Anchor>DescriptiveResource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize(InputStream)</Name>
      <Type>instm</Type>
      <Scope>DefaultDeserializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/DefaultDeserializer.html</Path>
    <Anchor>deserialize(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize(InputStream)</Name>
      <Type>intfm</Type>
      <Scope>Deserializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/Deserializer.html</Path>
    <Anchor>deserialize(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize(byte[])</Name>
      <Type>clm</Type>
      <Scope>SerializationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SerializationUtils.html</Path>
    <Anchor>deserialize(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Deserializer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.serializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/Deserializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeState(Serializable)</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>deserializeState(java.io.Serializable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeserializingConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.serializer.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/DeserializingConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeserializingConverter()</Name>
      <Type>Constructor</Type>
      <Scope>DeserializingConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/DeserializingConverter.html</Path>
    <Anchor>DeserializingConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeserializingConverter(Deserializer&amp;lt;Object&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>DeserializingConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/DeserializingConverter.html</Path>
    <Anchor>DeserializingConverter(org.springframework.core.serializer.Deserializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestinationResolutionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jms.support.destination</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DestinationResolutionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestinationResolutionException(String)</Name>
      <Type>Constructor</Type>
      <Scope>DestinationResolutionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DestinationResolutionException.html</Path>
    <Anchor>DestinationResolutionException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestinationResolutionException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>DestinationResolutionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DestinationResolutionException.html</Path>
    <Anchor>DestinationResolutionException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestinationResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.support.destination</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DestinationResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ThreadLocalTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/ThreadLocalTargetSource.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>AbstractFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>intfm</Type>
      <Scope>DisposableBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/DisposableBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>BeanConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanConfigurerSupport.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>EhCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>JCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheManagerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>DefaultContextLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>SimpleRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>CommonsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ResourceAdapterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>DataSourceInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DataSourceInitializer.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/NotificationListenerRegistrar.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>MBeanServerConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>MBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>LocalPersistenceManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ServletEndpointSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/ServletEndpointSupport.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>JndiRmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiServiceExporter.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>RmiRegistryFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ScheduledAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>TimerManagerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerAccessor.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>TimerManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ForkJoinPoolFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/TaskExecutorFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>TimerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerFactoryBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ServletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextScope.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>CompositeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CompositeFilter.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>GenericFilterBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/GenericFilterBean.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>PortletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextScope.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ServletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletWrappingController.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>XmlViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/XmlViewResolver.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy()</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>destroy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DESTROY_METHOD_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>DESTROY_METHOD_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyBean(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>destroyBean(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyBean(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>destroyBean(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyBean(String, Object, RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>destroyBean(java.lang.String, java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyBean(String, DisposableBean)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>destroyBean(java.lang.String, org.springframework.beans.factory.DisposableBean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyBeans()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>destroyBeans()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyDefinition(BeanFactory, String)</Name>
      <Type>instm</Type>
      <Scope>SingletonBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html</Path>
    <Anchor>destroyDefinition(org.springframework.beans.factory.BeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyDefinition(BeanFactory, String)</Name>
      <Type>instm</Type>
      <Scope>ContextSingletonBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html</Path>
    <Anchor>destroyDefinition(org.springframework.beans.factory.BeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyDelegate(Filter)</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>destroyDelegate(javax.servlet.Filter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyInstance(T)</Name>
      <Type>instm</Type>
      <Scope>AbstractFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
    <Anchor>destroyInstance(T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyObject(Object)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>destroyObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyPrototypeInstance(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPrototypeBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.html</Path>
    <Anchor>destroyPrototypeInstance(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyScopedBean(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>destroyScopedBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyScopedBean(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>destroyScopedBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroySingleton(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>destroySingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroySingletons()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>destroySingletons()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroySingletons()</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>destroySingletons()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroySubcontext(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>destroySubcontext(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroySubcontext(Name)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>destroySubcontext(javax.naming.Name)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DESTRUCTION_CALLBACK_NAME_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ServletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletRequestAttributes.html</Path>
    <Anchor>DESTRUCTION_CALLBACK_NAME_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DESTRUCTION_CALLBACK_NAME_PREFIX</Name>
      <Type>Field</Type>
      <Scope>PortletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestAttributes.html</Path>
    <Anchor>DESTRUCTION_CALLBACK_NAME_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestructionAwareBeanPostProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DestructionAwareBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestructionCallbackBindingListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/DestructionCallbackBindingListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestructionCallbackBindingListener(Runnable)</Name>
      <Type>Constructor</Type>
      <Scope>DestructionCallbackBindingListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/DestructionCallbackBindingListener.html</Path>
    <Anchor>DestructionCallbackBindingListener(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachCopy(T)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>detachCopy(T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachCopy(T)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>detachCopy(T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachCopyAll(Collection&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>detachCopyAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachCopyAll(Collection&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>detachCopyAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectDefaultConfigurationClasses(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AnnotationConfigContextLoader.html</Path>
    <Anchor>detectDefaultConfigurationClasses(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectDefaultConfigurationClasses(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationConfigContextLoaderUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AnnotationConfigContextLoaderUtils.html</Path>
    <Anchor>detectDefaultConfigurationClasses(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectDefaultConfigurationClasses(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigWebContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/AnnotationConfigWebContextLoader.html</Path>
    <Anchor>detectDefaultConfigurationClasses(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectHandlerMethods(Class&amp;lt;?&amp;gt;, String, RequestMapping)</Name>
      <Type>instm</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>detectHandlerMethods(java.lang.Class, java.lang.String, org.springframework.web.bind.annotation.RequestMapping)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectHandlerMethods(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>detectHandlerMethods(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectHandlers()</Name>
      <Type>instm</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>detectHandlers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectHandlers()</Name>
      <Type>instm</Type>
      <Scope>AbstractDetectingUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.html</Path>
    <Anchor>detectHandlers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectMappedInterceptors(List&amp;lt;MappedInterceptor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>detectMappedInterceptors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectPersistenceExceptionTranslators(ListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>PersistenceExceptionTranslationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
    <Anchor>detectPersistenceExceptionTranslators(org.springframework.beans.factory.ListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectValidationMode(Resource)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>detectValidationMode(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectValidationMode(InputStream)</Name>
      <Type>instm</Type>
      <Scope>XmlValidationModeDetector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/XmlValidationModeDetector.html</Path>
    <Anchor>detectValidationMode(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineActionBeanName(ActionMapping)</Name>
      <Type>instm</Type>
      <Scope>DelegatingActionProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionProxy.html</Path>
    <Anchor>determineActionBeanName(org.apache.struts.action.ActionMapping)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineActionBeanName(ActionMapping)</Name>
      <Type>clm</Type>
      <Scope>DelegatingActionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionUtils.html</Path>
    <Anchor>determineActionBeanName(org.apache.struts.action.ActionMapping)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineActionBeanName(ActionMapping)</Name>
      <Type>instm</Type>
      <Scope>DelegatingRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingRequestProcessor.html</Path>
    <Anchor>determineActionBeanName(org.apache.struts.action.ActionMapping)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineActionBeanName(ActionMapping)</Name>
      <Type>instm</Type>
      <Scope>DelegatingTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html</Path>
    <Anchor>determineActionBeanName(org.apache.struts.action.ActionMapping)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineActivationSpecClass(ResourceAdapter)</Name>
      <Type>instm</Type>
      <Scope>DefaultJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.html</Path>
    <Anchor>determineActivationSpecClass(javax.resource.spi.ResourceAdapter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineActivationSpecClass(ResourceAdapter)</Name>
      <Type>instm</Type>
      <Scope>StandardJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html</Path>
    <Anchor>determineActivationSpecClass(javax.resource.spi.ResourceAdapter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineAsyncExecutor(Method)</Name>
      <Type>instm</Type>
      <Scope>AsyncExecutionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.html</Path>
    <Anchor>determineAsyncExecutor(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineBeanNameFromAnnotation(AnnotatedBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AnnotationBeanNameGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationBeanNameGenerator.html</Path>
    <Anchor>determineBeanNameFromAnnotation(org.springframework.beans.factory.annotation.AnnotatedBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineCacheOperations(AnnotatedElement)</Name>
      <Type>instm</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>determineCacheOperations(java.lang.reflect.AnnotatedElement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineCandidateConstructors(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>determineCandidateConstructors(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineCandidateConstructors(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>Constructor</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>determineCandidateConstructors(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineCandidateConstructors(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>Constructor</Type>
      <Scope>InstantiationAwareBeanPostProcessorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html</Path>
    <Anchor>determineCandidateConstructors(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineCandidateConstructors(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>Constructor</Type>
      <Scope>SmartInstantiationAwareBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html</Path>
    <Anchor>determineCandidateConstructors(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineConstructorsFromBeanPostProcessors(Class, String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>determineConstructorsFromBeanPostProcessors(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineContextClass(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>determineContextClass(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineContextInitializerClasses(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>determineContextInitializerClasses(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineCurrentLookupKey()</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>determineCurrentLookupKey()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineCurrentLookupKey()</Name>
      <Type>instm</Type>
      <Scope>IsolationLevelDataSourceRouter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/IsolationLevelDataSourceRouter.html</Path>
    <Anchor>determineCurrentLookupKey()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineDatabaseDialectClass(Database)</Name>
      <Type>instm</Type>
      <Scope>HibernateJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter.html</Path>
    <Anchor>determineDatabaseDialectClass(org.springframework.orm.jpa.vendor.Database)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineDatabaseDictionary(Database)</Name>
      <Type>instm</Type>
      <Scope>OpenJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/OpenJpaVendorAdapter.html</Path>
    <Anchor>determineDatabaseDictionary(org.springframework.orm.jpa.vendor.Database)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineDefaultLocale(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CookieLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/CookieLocaleResolver.html</Path>
    <Anchor>determineDefaultLocale(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineDefaultLocale(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>SessionLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/SessionLocaleResolver.html</Path>
    <Anchor>determineDefaultLocale(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineEncoding(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
    <Anchor>determineEncoding(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineEncoding(ActionRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsPortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
    <Anchor>determineEncoding(javax.portlet.ActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineEncoding(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>determineEncoding(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determinePersistenceUnitInfo(PersistenceUnitManager)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>determinePersistenceUnitInfo(org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determinePrimaryCandidate(Map&amp;lt;String, Object&amp;gt;, DependencyDescriptor)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>determinePrimaryCandidate(java.util.Map, org.springframework.beans.factory.config.DependencyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineRequiredStatus(Annotation)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>determineRequiredStatus(java.lang.annotation.Annotation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineResourceUrl(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>determineResourceUrl(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineRootDir(String)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>determineRootDir(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineServiceLocatorExceptionConstructor(Class)</Name>
      <Type>Constructor</Type>
      <Scope>ServiceLocatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
    <Anchor>determineServiceLocatorExceptionConstructor(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineStatusCode(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>determineStatusCode(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineTargetDatabaseName(Database)</Name>
      <Type>instm</Type>
      <Scope>EclipseLinkJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/EclipseLinkJpaVendorAdapter.html</Path>
    <Anchor>determineTargetDatabaseName(org.springframework.orm.jpa.vendor.Database)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineTargetDatabaseName(Database)</Name>
      <Type>instm</Type>
      <Scope>TopLinkJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/TopLinkJpaVendorAdapter.html</Path>
    <Anchor>determineTargetDatabaseName(org.springframework.orm.jpa.vendor.Database)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineTargetDataSource()</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>determineTargetDataSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineTimeout(TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>determineTimeout(org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineTransactionAttribute(AnnotatedElement)</Name>
      <Type>instm</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>determineTransactionAttribute(java.lang.reflect.AnnotatedElement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineTransactionManager(TransactionAttribute)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>determineTransactionManager(org.springframework.transaction.interceptor.TransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineUrlsForHandler(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractDetectingUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.html</Path>
    <Anchor>determineUrlsForHandler(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineUrlsForHandler(String)</Name>
      <Type>instm</Type>
      <Scope>BeanNameUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/BeanNameUrlHandlerMapping.html</Path>
    <Anchor>determineUrlsForHandler(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineUrlsForHandler(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>determineUrlsForHandler(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineUrlsForHandler(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractControllerUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
    <Anchor>determineUrlsForHandler(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineUrlsForHandlerMethods(Class&amp;lt;?&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>determineUrlsForHandlerMethods(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineUrlsForHandlerMethods(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>determineUrlsForHandlerMethods(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineValidationGroups(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>MethodValidationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/MethodValidationInterceptor.html</Path>
    <Anchor>determineValidationGroups(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineViewName(Exception, PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>determineViewName(java.lang.Exception, javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>determineViewName(Exception, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>determineViewName(java.lang.Exception, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DigestUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DigestUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DigestUtils()</Name>
      <Type>Constructor</Type>
      <Scope>DigestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DigestUtils.html</Path>
    <Anchor>DigestUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DIR_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>DIR_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectFieldAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/DirectFieldAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectFieldAccessor(Object)</Name>
      <Type>Constructor</Type>
      <Scope>DirectFieldAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/DirectFieldAccessor.html</Path>
    <Anchor>DirectFieldAccessor(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectFieldBindingResult</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DirectFieldBindingResult.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectFieldBindingResult(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>DirectFieldBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DirectFieldBindingResult.html</Path>
    <Anchor>DirectFieldBindingResult(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirtiesContext</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/DirtiesContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirtiesContext.ClassMode</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/DirtiesContext.ClassMode.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirtiesContextTestExecutionListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DirtiesContextTestExecutionListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirtiesContextTestExecutionListener()</Name>
      <Type>Constructor</Type>
      <Scope>DirtiesContextTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DirtiesContextTestExecutionListener.html</Path>
    <Anchor>DirtiesContextTestExecutionListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirtyContext(TestContext)</Name>
      <Type>instm</Type>
      <Scope>DirtiesContextTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DirtiesContextTestExecutionListener.html</Path>
    <Anchor>dirtyContext(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DISABLED_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>DISABLED_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DISABLED_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>ButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
    <Anchor>DISABLED_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DISABLED_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>HiddenInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/HiddenInputTag.html</Path>
    <Anchor>DISABLED_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableFilters(Session)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>disableFilters(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableIndenting(Transformer)</Name>
      <Type>clm</Type>
      <Scope>TransformerUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/TransformerUtils.html</Path>
    <Anchor>disableIndenting(javax.xml.transform.Transformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disassemble(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
    <Anchor>disassemble(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatch()</Name>
      <Type>intfm</Type>
      <Scope>AsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/AsyncWebRequest.html</Path>
    <Anchor>dispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatch()</Name>
      <Type>instm</Type>
      <Scope>NoSupportAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/NoSupportAsyncWebRequest.html</Path>
    <Anchor>dispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatch()</Name>
      <Type>instm</Type>
      <Scope>StandardServletAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.html</Path>
    <Anchor>dispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatchActionSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DispatchActionSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatchActionSupport()</Name>
      <Type>Constructor</Type>
      <Scope>DispatchActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DispatchActionSupport.html</Path>
    <Anchor>DispatchActionSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatcherPortlet</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatcherPortlet()</Name>
      <Type>Constructor</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>DispatcherPortlet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatcherServlet</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatcherServlet()</Name>
      <Type>Constructor</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>DispatcherServlet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatcherServlet(WebApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>DispatcherServlet(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatcherServletWebRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/DispatcherServletWebRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatcherServletWebRequest(HttpServletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>DispatcherServletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/DispatcherServletWebRequest.html</Path>
    <Anchor>DispatcherServletWebRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DispatcherServletWebRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>Constructor</Type>
      <Scope>DispatcherServletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/DispatcherServletWebRequest.html</Path>
    <Anchor>DispatcherServletWebRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchOptions(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
    <Anchor>dispatchOptions(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DISPLAY_VALUE_VARIABLE_NAME</Name>
      <Type>Field</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>DISPLAY_VALUE_VARIABLE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisposableBean</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/DisposableBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisposableSqlTypeValue</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/DisposableSqlTypeValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DO_NOT_PROXY</Name>
      <Type>Field</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>DO_NOT_PROXY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doActionService(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>doActionService(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doActionService(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>doActionService(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doAfterBody()</Name>
      <Type>instm</Type>
      <Scope>EscapeBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EscapeBodyTag.html</Path>
    <Anchor>doAfterBody()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doAutowireBean(Object)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanAutowiringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html</Path>
    <Anchor>doAutowireBean(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBegin(Object, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBegin(Object, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBegin(Object, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBegin(Object, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBegin(Object, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBegin(Object, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBegin(Object, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBegin(Object, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBegin(Object, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBind(MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>doBind(org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBind(WebDataBinder, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>doBind(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doBind(MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>doBind(org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCatch(Throwable)</Name>
      <Type>instm</Type>
      <Scope>NestedPathTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/NestedPathTag.html</Path>
    <Anchor>doCatch(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCatch(Throwable)</Name>
      <Type>instm</Type>
      <Scope>RequestContextAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/RequestContextAwareTag.html</Path>
    <Anchor>doCatch(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCleanupAfterCompletion(Object)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>doCleanupAfterCompletion(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCleanupAfterCompletion(Object)</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>doCleanupAfterCompletion(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCleanupAfterCompletion(Object)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>doCleanupAfterCompletion(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCleanupAfterCompletion(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>doCleanupAfterCompletion(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCleanupAfterCompletion(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>doCleanupAfterCompletion(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCleanupAfterCompletion(Object)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>doCleanupAfterCompletion(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCleanupAfterCompletion(Object)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>doCleanupAfterCompletion(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCleanupAfterCompletion(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>doCleanupAfterCompletion(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doClearAttributes(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>doClearAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doClose()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>doClose()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCloseConnection(Connection, DataSource)</Name>
      <Type>clm</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>doCloseConnection(java.sql.Connection, javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>doCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>doCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>doCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>doCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>doCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>doCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>doCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>doCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doConvertFromMessage(Message)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>doConvertFromMessage(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCreateBean(String, RootBeanDefinition, Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>doCreateBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCreateConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>doCreateConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCreateConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>doCreateConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCreateConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory102.html</Path>
    <Anchor>doCreateConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCreateConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>doCreateConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCreateProducer(Session, Destination)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>doCreateProducer(javax.jms.Session, javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCreateProducer(Session, Destination)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate102.html</Path>
    <Anchor>doCreateProducer(javax.jms.Session, javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCreateQueueConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>doCreateQueueConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doCreateTopicConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>doCreateTopicConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DocumentDefaultsDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DocumentDefaultsDefinition()</Name>
      <Type>Constructor</Type>
      <Scope>DocumentDefaultsDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
    <Anchor>DocumentDefaultsDefinition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DocumentLoader</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doDelete(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>doDelete(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doDispatch(PortletRequestDispatcher, PortletRequest, MimeResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>doDispatch(javax.portlet.PortletRequestDispatcher, javax.portlet.PortletRequest, javax.portlet.MimeResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doDispatch(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>doDispatch(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doDispatch(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>doDispatch(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>BindErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindErrorsTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>BindTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>EvalTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EvalTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>ButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>LabelTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/LabelTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>SelectTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>NestedPathTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/NestedPathTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>ParamTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/ParamTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEndTag()</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>doEndTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotContain(String, String, String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>doesNotContain(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotContain(String, String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>doesNotContain(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotExist(String)</Name>
      <Type>instm</Type>
      <Scope>JsonPathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/JsonPathExpectationsHelper.html</Path>
    <Anchor>doesNotExist(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotExist(String)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>doesNotExist(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotExist()</Name>
      <Type>instm</Type>
      <Scope>JsonPathRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/JsonPathRequestMatchers.html</Path>
    <Anchor>doesNotExist()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotExist()</Name>
      <Type>instm</Type>
      <Scope>XpathRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/XpathRequestMatchers.html</Path>
    <Anchor>doesNotExist()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotExist(String)</Name>
      <Type>instm</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>doesNotExist(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotExist()</Name>
      <Type>instm</Type>
      <Scope>JsonPathResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/JsonPathResultMatchers.html</Path>
    <Anchor>doesNotExist()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotExist()</Name>
      <Type>instm</Type>
      <Scope>XpathResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/XpathResultMatchers.html</Path>
    <Anchor>doesNotExist()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesNotHoldNonDefaultSession()</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>doesNotHoldNonDefaultSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEvaluate(String, Class, FunctionMapper)</Name>
      <Type>instm</Type>
      <Scope>MockExpressionEvaluator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockExpressionEvaluator.html</Path>
    <Anchor>doEvaluate(java.lang.String, java.lang.Class, javax.servlet.jsp.el.FunctionMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEventService(EventRequest, EventResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>doEventService(javax.portlet.EventRequest, javax.portlet.EventResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doEventService(EventRequest, EventResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>doEventService(javax.portlet.EventRequest, javax.portlet.EventResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>doExecute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecute(InteractionSpec, Record, Record, RecordExtractor&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>doExecute(javax.resource.cci.InteractionSpec, javax.resource.cci.Record, javax.resource.cci.Record, org.springframework.jca.cci.core.RecordExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecute(SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>doExecute(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecute(Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>doExecute(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecute(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>doExecute(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecute(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>doExecute(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecute(SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>doExecute(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecute(HibernateCallback&amp;lt;T&amp;gt;, boolean, boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>doExecute(org.springframework.orm.hibernate3.HibernateCallback, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecute(URI, HttpMethod, RequestCallback, ResponseExtractor&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>doExecute(java.net.URI, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteAndReturnKey(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>doExecuteAndReturnKey(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteAndReturnKey(SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>doExecuteAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteAndReturnKeyHolder(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>doExecuteAndReturnKeyHolder(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteAndReturnKeyHolder(SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>doExecuteAndReturnKeyHolder(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteBatch(Map&amp;lt;String, Object&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>doExecuteBatch(java.util.Map[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteBatch(SqlParameterSource[])</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>doExecuteBatch(org.springframework.jdbc.core.namedparam.SqlParameterSource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteListener(Session, Message)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>doExecuteListener(javax.jms.Session, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteRequest(Session, Queue, Message)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>doExecuteRequest(javax.jms.Session, javax.jms.Queue, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteRequest(HttpInvokerClientConfiguration, ByteArrayOutputStream)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>doExecuteRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.io.ByteArrayOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteRequest(HttpInvokerClientConfiguration, ByteArrayOutputStream)</Name>
      <Type>instm</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>doExecuteRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.io.ByteArrayOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteRequest(HttpInvokerClientConfiguration, ByteArrayOutputStream)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>doExecuteRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.io.ByteArrayOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doExecuteRequest(HttpInvokerClientConfiguration, ByteArrayOutputStream)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html</Path>
    <Anchor>doExecuteRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.io.ByteArrayOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFail()</Name>
      <Type>instm</Type>
      <Scope>AssertThrows</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AssertThrows.html</Path>
    <Anchor>doFail()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilter(ServletRequest, ServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MockFilterChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockFilterChain.html</Path>
    <Anchor>doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilter(ServletRequest, ServletResponse)</Name>
      <Type>instm</Type>
      <Scope>PassThroughFilterChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/PassThroughFilterChain.html</Path>
    <Anchor>doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilter(ServletRequest, ServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>CompositeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CompositeFilter.html</Path>
    <Anchor>doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilter(ServletRequest, ServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilter(ServletRequest, ServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>OncePerRequestFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/OncePerRequestFilter.html</Path>
    <Anchor>doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>OpenPersistenceManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/OpenPersistenceManagerInViewFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>CharacterEncodingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CharacterEncodingFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>HiddenHttpMethodFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/HiddenHttpMethodFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>HttpPutFormContentFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/HttpPutFormContentFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>OncePerRequestFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/OncePerRequestFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>RequestContextFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/RequestContextFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>ShallowEtagHeaderFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/ShallowEtagHeaderFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>MultipartFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/MultipartFilter.html</Path>
    <Anchor>doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFinally()</Name>
      <Type>instm</Type>
      <Scope>BindErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindErrorsTag.html</Path>
    <Anchor>doFinally()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFinally()</Name>
      <Type>instm</Type>
      <Scope>BindTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindTag.html</Path>
    <Anchor>doFinally()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFinally()</Name>
      <Type>instm</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>doFinally()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFinally()</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>doFinally()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFinally()</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>doFinally()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFinally()</Name>
      <Type>instm</Type>
      <Scope>LabelTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/LabelTag.html</Path>
    <Anchor>doFinally()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFinally()</Name>
      <Type>instm</Type>
      <Scope>SelectTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
    <Anchor>doFinally()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFinally()</Name>
      <Type>instm</Type>
      <Scope>NestedPathTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/NestedPathTag.html</Path>
    <Anchor>doFinally()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFinally()</Name>
      <Type>instm</Type>
      <Scope>RequestContextAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/RequestContextAwareTag.html</Path>
    <Anchor>doFinally()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFindMatchingFileSystemResources(File, String)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>doFindMatchingFileSystemResources(java.io.File, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFindMatchingMethod(Object[])</Name>
      <Type>instm</Type>
      <Scope>ArgumentConvertingMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ArgumentConvertingMethodInvoker.html</Path>
    <Anchor>doFindMatchingMethod(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFindPathMatchingFileResources(Resource, String)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>doFindPathMatchingFileResources(org.springframework.core.io.Resource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFindPathMatchingFileResources(Resource, String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResourcePatternResolver.html</Path>
    <Anchor>doFindPathMatchingFileResources(org.springframework.core.io.Resource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFindPathMatchingFileResources(Resource, String)</Name>
      <Type>instm</Type>
      <Scope>PortletContextResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResourcePatternResolver.html</Path>
    <Anchor>doFindPathMatchingFileResources(org.springframework.core.io.Resource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doFindPathMatchingJarResources(Resource, String)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>doFindPathMatchingJarResources(org.springframework.core.io.Resource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGet(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>LiveBeansViewServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/LiveBeansViewServlet.html</Path>
    <Anchor>doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGet(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGet(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGet(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ViewRendererServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ViewRendererServlet.html</Path>
    <Anchor>doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetActiveProfiles()</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>doGetActiveProfiles()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetBean(String, Class&amp;lt;T&amp;gt;, Object[], boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>doGetBean(java.lang.String, java.lang.Class, java.lang.Object[], boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetBundle(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>doGetBundle(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetConnection(ConnectionFactory)</Name>
      <Type>clm</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>doGetConnection(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetConnection(ConnectionSpec)</Name>
      <Type>instm</Type>
      <Scope>ConnectionSpecConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html</Path>
    <Anchor>doGetConnection(javax.resource.cci.ConnectionSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetConnection(DataSource)</Name>
      <Type>clm</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>doGetConnection(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>IsolationLevelDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/IsolationLevelDataSourceAdapter.html</Path>
    <Anchor>doGetConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html</Path>
    <Anchor>doGetConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>WebSphereDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/WebSphereDataSourceAdapter.html</Path>
    <Anchor>doGetConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetDefaultProfiles()</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>doGetDefaultProfiles()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetJtaTransaction(UserTransaction)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doGetJtaTransaction(javax.transaction.UserTransaction)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetNativeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>C3P0NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html</Path>
    <Anchor>doGetNativeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetNativeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>CommonsDbcpNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/CommonsDbcpNativeJdbcExtractor.html</Path>
    <Anchor>doGetNativeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetNativeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>JBossNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/JBossNativeJdbcExtractor.html</Path>
    <Anchor>doGetNativeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetNativeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>Jdbc4NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/Jdbc4NativeJdbcExtractor.html</Path>
    <Anchor>doGetNativeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetNativeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>NativeJdbcExtractorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html</Path>
    <Anchor>doGetNativeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetNativeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>WebLogicNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html</Path>
    <Anchor>doGetNativeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetNativeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>WebSphereNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html</Path>
    <Anchor>doGetNativeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetPath(Object)</Name>
      <Type>clm</Type>
      <Scope>VfsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/VfsUtils.html</Path>
    <Anchor>doGetPath(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetPersistenceManager(PersistenceManagerFactory, boolean)</Name>
      <Type>clm</Type>
      <Scope>PersistenceManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html</Path>
    <Anchor>doGetPersistenceManager(javax.jdo.PersistenceManagerFactory, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetSession(SessionFactory, boolean)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>doGetSession(org.hibernate.SessionFactory, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransaction()</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>doGetTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransaction()</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>doGetTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransaction()</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>doGetTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransaction()</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>doGetTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransaction()</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>doGetTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransaction()</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>doGetTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransaction()</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>doGetTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransaction()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doGetTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransaction()</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>doGetTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransactionalEntityManager(EntityManagerFactory, Map)</Name>
      <Type>clm</Type>
      <Scope>EntityManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryUtils.html</Path>
    <Anchor>doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransactionalSession(ConnectionFactory, ConnectionFactoryUtils.ResourceFactory)</Name>
      <Type>clm</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>doGetTransactionalSession(javax.jms.ConnectionFactory, org.springframework.jms.connection.ConnectionFactoryUtils.ResourceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetTransactionalSession(ConnectionFactory, ConnectionFactoryUtils.ResourceFactory, boolean)</Name>
      <Type>clm</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>doGetTransactionalSession(javax.jms.ConnectionFactory, org.springframework.jms.connection.ConnectionFactoryUtils.ResourceFactory, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doGetVisitorAttribute()</Name>
      <Type>clm</Type>
      <Scope>VfsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/VfsUtils.html</Path>
    <Anchor>doGetVisitorAttribute()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doHandle(PortletRequest, PortletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>doHandle(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInCallableStatement(CallableStatement)</Name>
      <Type>intfm</Type>
      <Scope>CallableStatementCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCallback.html</Path>
    <Anchor>doInCallableStatement(java.sql.CallableStatement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInConnection(Connection, ConnectionFactory)</Name>
      <Type>intfm</Type>
      <Scope>ConnectionCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/ConnectionCallback.html</Path>
    <Anchor>doInConnection(javax.resource.cci.Connection, javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInConnection(Connection)</Name>
      <Type>intfm</Type>
      <Scope>ConnectionCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ConnectionCallback.html</Path>
    <Anchor>doInConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInContext(Context)</Name>
      <Type>intfm</Type>
      <Scope>JndiCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiCallback.html</Path>
    <Anchor>doInContext(javax.naming.Context)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInHibernate(Session)</Name>
      <Type>intfm</Type>
      <Scope>HibernateCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateCallback.html</Path>
    <Anchor>doInHibernate(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInInteraction(Interaction, ConnectionFactory)</Name>
      <Type>intfm</Type>
      <Scope>InteractionCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/InteractionCallback.html</Path>
    <Anchor>doInInteraction(javax.resource.cci.Interaction, javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInitBody()</Name>
      <Type>instm</Type>
      <Scope>EscapeBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EscapeBodyTag.html</Path>
    <Anchor>doInitBody()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInitBody()</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>doInitBody()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInitialize()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>doInitialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInitialize()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>doInitialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInitialize()</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>doInitialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInJdo(PersistenceManager)</Name>
      <Type>intfm</Type>
      <Scope>JdoCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoCallback.html</Path>
    <Anchor>doInJdo(javax.jdo.PersistenceManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInJms(Session, QueueBrowser)</Name>
      <Type>intfm</Type>
      <Scope>BrowserCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/BrowserCallback.html</Path>
    <Anchor>doInJms(javax.jms.Session, javax.jms.QueueBrowser)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInJms(Session, MessageProducer)</Name>
      <Type>intfm</Type>
      <Scope>ProducerCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/ProducerCallback.html</Path>
    <Anchor>doInJms(javax.jms.Session, javax.jms.MessageProducer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInJms(Session)</Name>
      <Type>intfm</Type>
      <Scope>SessionCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/SessionCallback.html</Path>
    <Anchor>doInJms(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInJpa(EntityManager)</Name>
      <Type>intfm</Type>
      <Scope>JpaCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaCallback.html</Path>
    <Anchor>doInJpa(javax.persistence.EntityManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInPreparedStatement(PreparedStatement)</Name>
      <Type>intfm</Type>
      <Scope>PreparedStatementCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCallback.html</Path>
    <Anchor>doInPreparedStatement(java.sql.PreparedStatement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInPreparedStatement(PreparedStatement)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobCreatingPreparedStatementCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobCreatingPreparedStatementCallback.html</Path>
    <Anchor>doInPreparedStatement(java.sql.PreparedStatement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInSqlMapClient(SqlMapExecutor)</Name>
      <Type>intfm</Type>
      <Scope>SqlMapClientCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientCallback.html</Path>
    <Anchor>doInSqlMapClient(com.ibatis.sqlmap.client.SqlMapExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInStatement(Statement)</Name>
      <Type>intfm</Type>
      <Scope>StatementCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/StatementCallback.html</Path>
    <Anchor>doInStatement(java.sql.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInTransaction(TransactionStatus)</Name>
      <Type>intfm</Type>
      <Scope>TransactionCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionCallback.html</Path>
    <Anchor>doInTransaction(org.springframework.transaction.TransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInTransaction(TransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>TransactionCallbackWithoutResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionCallbackWithoutResult.html</Path>
    <Anchor>doInTransaction(org.springframework.transaction.TransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInTransactionWithoutResult(TransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>TransactionCallbackWithoutResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionCallbackWithoutResult.html</Path>
    <Anchor>doInTransactionWithoutResult(org.springframework.transaction.TransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AbstractRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>SimpleRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(HessianSkeleton, InputStream, OutputStream)</Name>
      <Type>instm</Type>
      <Scope>HessianExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
    <Anchor>doInvoke(com.caucho.hessian.server.HessianSkeleton, java.io.InputStream, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation, Remote)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation, java.rmi.Remote)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation, Object)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation, Object)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation, RmiInvocationHandler)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation, org.springframework.remoting.rmi.RmiInvocationHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation, Remote)</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation, java.rmi.Remote)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation, RmiInvocationHandler)</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation, org.springframework.remoting.rmi.RmiInvocationHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvoke(MethodInvocation, Remote)</Name>
      <Type>clm</Type>
      <Scope>RmiClientInterceptorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptorUtils.html</Path>
    <Anchor>doInvoke(org.aopalliance.intercept.MethodInvocation, java.rmi.Remote)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvokeListener(SessionAwareMessageListener, Session, Message)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>doInvokeListener(org.springframework.jms.listener.SessionAwareMessageListener, javax.jms.Session, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doInvokeListener(MessageListener, Message)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>doInvokeListener(javax.jms.MessageListener, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doJtaBegin(JtaTransactionObject, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doJtaBegin(org.springframework.transaction.jta.JtaTransactionObject, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doJtaBegin(JtaTransactionObject, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>OC4JJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html</Path>
    <Anchor>doJtaBegin(org.springframework.transaction.jta.JtaTransactionObject, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doJtaBegin(JtaTransactionObject, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>WebLogicJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebLogicJtaTransactionManager.html</Path>
    <Anchor>doJtaBegin(org.springframework.transaction.jta.JtaTransactionObject, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doJtaResume(JtaTransactionObject, Object)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doJtaResume(org.springframework.transaction.jta.JtaTransactionObject, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doJtaResume(JtaTransactionObject, Object)</Name>
      <Type>instm</Type>
      <Scope>WebLogicJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebLogicJtaTransactionManager.html</Path>
    <Anchor>doJtaResume(org.springframework.transaction.jta.JtaTransactionObject, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doJtaSuspend(JtaTransactionObject)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doJtaSuspend(org.springframework.transaction.jta.JtaTransactionObject)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doLoad(Properties, Reader)</Name>
      <Type>instm</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>doLoad(java.util.Properties, java.io.Reader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doLoadBeanDefinitions(InputSource, Resource)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>doLoadBeanDefinitions(org.xml.sax.InputSource, org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>domain(String, Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>domain(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>domain(String, String)</Name>
      <Type>instm</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>domain(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doMatch(String, String, boolean, Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AntPathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
    <Anchor>doMatch(java.lang.String, java.lang.String, boolean, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DomUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/DomUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DomUtils()</Name>
      <Type>Constructor</Type>
      <Scope>DomUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/DomUtils.html</Path>
    <Anchor>DomUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dontIgnore(IMessage.Kind)</Name>
      <Type>instm</Type>
      <Scope>AspectJWeaverMessageHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html</Path>
    <Anchor>dontIgnore(org.aspectj.bridge.IMessage.Kind)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doOptions(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>doOptions(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doParse(Element, ParserContext, BeanDefinitionBuilder)</Name>
      <Type>instm</Type>
      <Scope>AbstractSimpleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html</Path>
    <Anchor>doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doParse(Element, ParserContext, BeanDefinitionBuilder)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSingleBeanDefinitionParser.html</Path>
    <Anchor>doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doParse(Element, BeanDefinitionBuilder)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSingleBeanDefinitionParser.html</Path>
    <Anchor>doParse(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doParse(Element, ParserContext, BeanDefinitionBuilder)</Name>
      <Type>instm</Type>
      <Scope>ExecutorBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ExecutorBeanDefinitionParser.html</Path>
    <Anchor>doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doParse(Element, ParserContext, BeanDefinitionBuilder)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTasksBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.html</Path>
    <Anchor>doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doParse(Element, BeanDefinitionBuilder)</Name>
      <Type>instm</Type>
      <Scope>SchedulerBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/SchedulerBeanDefinitionParser.html</Path>
    <Anchor>doParse(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doParseExpression(String, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>TemplateAwareExpressionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/TemplateAwareExpressionParser.html</Path>
    <Anchor>doParseExpression(java.lang.String, org.springframework.expression.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doParseExpression(String, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>SpelExpressionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpressionParser.html</Path>
    <Anchor>doParseExpression(java.lang.String, org.springframework.expression.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doPerform(ComponentContext, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ComponentControllerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html</Path>
    <Anchor>doPerform(org.apache.struts.tiles.ComponentContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doPost(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doPost(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ViewRendererServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ViewRendererServlet.html</Path>
    <Anchor>doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doProceed(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>DelegatePerTargetObjectIntroductionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.html</Path>
    <Anchor>doProceed(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doProceed(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>DelegatingIntroductionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DelegatingIntroductionInterceptor.html</Path>
    <Anchor>doProceed(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doProcessProperties(ConfigurableListableBeanFactory, StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>doProcessProperties(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doPut(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>doPut(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doReadRemoteInvocation(ObjectInputStream)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>doReadRemoteInvocation(java.io.ObjectInputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doReadRemoteInvocationResult(ObjectInputStream)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>doReadRemoteInvocationResult(java.io.ObjectInputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doReceive(Session, Destination, String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>doReceive(javax.jms.Session, javax.jms.Destination, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doReceive(Session, MessageConsumer)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>doReceive(javax.jms.Session, javax.jms.MessageConsumer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doReceiveAndExecute(Object, Session, MessageConsumer, TransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>doReceiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer, org.springframework.transaction.TransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRegister(Object, ObjectName)</Name>
      <Type>instm</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>doRegister(java.lang.Object, javax.management.ObjectName)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRegisterAfterCompletionWithJtaTransaction(JtaTransactionObject, List&amp;lt;TransactionSynchronization&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doRegisterAfterCompletionWithJtaTransaction(org.springframework.transaction.jta.JtaTransactionObject, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRegisterAfterCompletionWithJtaTransaction(JtaTransactionObject, List&amp;lt;TransactionSynchronization&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebSphereUowTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
    <Anchor>doRegisterAfterCompletionWithJtaTransaction(org.springframework.transaction.jta.JtaTransactionObject, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRegisterBeanDefinitions(Element)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>doRegisterBeanDefinitions(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doReleaseBean(Object)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanAutowiringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html</Path>
    <Anchor>doReleaseBean(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doReleaseConnection(Connection, ConnectionFactory)</Name>
      <Type>clm</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>doReleaseConnection(javax.resource.cci.Connection, javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doReleaseConnection(Connection, DataSource)</Name>
      <Type>clm</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>doReleaseConnection(java.sql.Connection, javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doReleasePersistenceManager(PersistenceManager, PersistenceManagerFactory)</Name>
      <Type>clm</Type>
      <Scope>PersistenceManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html</Path>
    <Anchor>doReleasePersistenceManager(javax.jdo.PersistenceManager, javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRender(View, Map, PortletRequest, MimeResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>doRender(org.springframework.web.servlet.View, java.util.Map, javax.portlet.PortletRequest, javax.portlet.MimeResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRender(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>doRender(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRender(Context, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutView.html</Path>
    <Anchor>doRender(org.apache.velocity.context.Context, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRender(Context, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>doRender(org.apache.velocity.context.Context, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRenderService(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>doRenderService(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRenderService(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>doRenderService(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRescheduleTask(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>doRescheduleTask(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRescheduleTask(Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>doRescheduleTask(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveDependency(DependencyDescriptor, Class&amp;lt;?&amp;gt;, String, Set&amp;lt;String&amp;gt;, TypeConverter)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.Class, java.lang.String, java.util.Set, org.springframework.beans.TypeConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveException(PortletRequest, MimeResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>doResolveException(javax.portlet.PortletRequest, javax.portlet.MimeResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveException(PortletRequest, MimeResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>doResolveException(javax.portlet.PortletRequest, javax.portlet.MimeResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveException(PortletRequest, MimeResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>doResolveException(javax.portlet.PortletRequest, javax.portlet.MimeResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodExceptionResolver.html</Path>
    <Anchor>doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>ResponseStatusExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html</Path>
    <Anchor>doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveHandlerMethodException(HttpServletRequest, HttpServletResponse, HandlerMethod, Exception)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodExceptionResolver.html</Path>
    <Anchor>doResolveHandlerMethodException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.method.HandlerMethod, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResolveHandlerMethodException(HttpServletRequest, HttpServletResponse, HandlerMethod, Exception)</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>doResolveHandlerMethodException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.method.HandlerMethod, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResourceService(ResourceRequest, ResourceResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>doResourceService(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResourceService(ResourceRequest, ResourceResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>doResourceService(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResume(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>doResume(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResume(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>doResume(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResume(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>doResume(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResume(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>doResume(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResume(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>doResume(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResume(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>doResume(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResume(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>doResume(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResume(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doResume(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doResume(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>doResume(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRetrieveMatchingFiles(String, File, Set&amp;lt;File&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>doRetrieveMatchingFiles(java.lang.String, java.io.File, java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRetrieveMatchingPortletContextResources(PortletContext, String, String, Set&amp;lt;Resource&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PortletContextResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResourcePatternResolver.html</Path>
    <Anchor>doRetrieveMatchingPortletContextResources(javax.portlet.PortletContext, java.lang.String, java.lang.String, java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRetrieveMatchingServletContextResources(ServletContext, String, String, Set&amp;lt;Resource&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ServletContextResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResourcePatternResolver.html</Path>
    <Anchor>doRetrieveMatchingServletContextResources(javax.servlet.ServletContext, java.lang.String, java.lang.String, java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRollback(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>doRollback(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRollback(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>doRollback(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRollback(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>doRollback(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRollback(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>doRollback(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRollback(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>doRollback(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRollback(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>doRollback(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRollback(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>doRollback(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRollback(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doRollback(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doRollback(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>doRollback(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doScan(String...)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>doScan(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSend(Session, Destination, MessageCreator)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>doSend(javax.jms.Session, javax.jms.Destination, org.springframework.jms.core.MessageCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSend(MessageProducer, Message)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>doSend(javax.jms.MessageProducer, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSend(MessageProducer, Message)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate102.html</Path>
    <Anchor>doSend(javax.jms.MessageProducer, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSend(MimeMessage[], Object[])</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>doSend(javax.mail.internet.MimeMessage[], java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doService(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>doService(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doService(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>doService(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetNestedPath(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>doSetNestedPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetRollbackOnly(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetRollbackOnly(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetRollbackOnly(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetRollbackOnly(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetRollbackOnly(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetRollbackOnly(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetRollbackOnly(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetRollbackOnly(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSetRollbackOnly(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doShutdown()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>doShutdown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doShutdown()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>doShutdown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doShutdown()</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>doShutdown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSort(List&amp;lt;E&amp;gt;, SortDefinition)</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>doSort(java.util.List, org.springframework.beans.support.SortDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStart()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>doStart()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStart()</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>doStart()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTag()</Name>
      <Type>instm</Type>
      <Scope>NestedPathTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/NestedPathTag.html</Path>
    <Anchor>doStartTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTag()</Name>
      <Type>instm</Type>
      <Scope>RequestContextAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/RequestContextAwareTag.html</Path>
    <Anchor>doStartTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>BindErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindErrorsTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>BindTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>EscapeBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EscapeBodyTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>EvalTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EvalTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>AbstractFormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractFormTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>HtmlEscapeTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/HtmlEscapeTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>RequestContextAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/RequestContextAwareTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>TransformTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/TransformTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStartTagInternal()</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>doStartTagInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStop()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>doStop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doStore(Properties, Writer, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>doStore(java.util.Properties, java.io.Writer, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSubmitAction(Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>doSubmitAction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSubmitAction(Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>doSubmitAction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSuspend(Object)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>doSuspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSuspend(Object)</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>doSuspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSuspend(Object)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>doSuspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSuspend(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>doSuspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSuspend(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>doSuspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSuspend(Object)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>doSuspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSuspend(Object)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>doSuspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSuspend(Object)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>doSuspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doSuspend(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>doSuspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doTask(int, Object, ConcurrentReferenceHashMap&amp;lt;K, V&amp;gt;.Task&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap.Segment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Segment.html</Path>
    <Anchor>doTask(int, java.lang.Object, org.springframework.util.ConcurrentReferenceHashMap.Task)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doTrace(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>doTrace(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doTransform(Map&amp;lt;String, Object&amp;gt;, Source, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>doTransform(java.util.Map, javax.xml.transform.Source, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doTransform(Source, Map&amp;lt;String, Object&amp;gt;, Result, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>doTransform(javax.xml.transform.Source, java.util.Map, javax.xml.transform.Result, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doTranslate(String, String, SQLException)</Name>
      <Type>instm</Type>
      <Scope>AbstractFallbackSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/AbstractFallbackSQLExceptionTranslator.html</Path>
    <Anchor>doTranslate(java.lang.String, java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doTranslate(String, String, SQLException)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>doTranslate(java.lang.String, java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doTranslate(String, String, SQLException)</Name>
      <Type>instm</Type>
      <Scope>SQLExceptionSubclassTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLExceptionSubclassTranslator.html</Path>
    <Anchor>doTranslate(java.lang.String, java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doTranslate(String, String, SQLException)</Name>
      <Type>instm</Type>
      <Scope>SQLStateSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLStateSQLExceptionTranslator.html</Path>
    <Anchor>doTranslate(java.lang.String, java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doUnregister(ObjectName)</Name>
      <Type>instm</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>doUnregister(javax.management.ObjectName)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doValidate(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html</Path>
    <Anchor>doValidate(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWith(Field)</Name>
      <Type>intfm</Type>
      <Scope>ReflectionUtils.FieldCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.FieldCallback.html</Path>
    <Anchor>doWith(java.lang.reflect.Field)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWith(Method)</Name>
      <Type>intfm</Type>
      <Scope>ReflectionUtils.MethodCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.MethodCallback.html</Path>
    <Anchor>doWith(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWithFields(Class&amp;lt;?&amp;gt;, ReflectionUtils.FieldCallback)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>doWithFields(java.lang.Class, org.springframework.util.ReflectionUtils.FieldCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWithFields(Class&amp;lt;?&amp;gt;, ReflectionUtils.FieldCallback, ReflectionUtils.FieldFilter)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>doWithFields(java.lang.Class, org.springframework.util.ReflectionUtils.FieldCallback, org.springframework.util.ReflectionUtils.FieldFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWithMethods(Class&amp;lt;?&amp;gt;, ReflectionUtils.MethodCallback)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>doWithMethods(java.lang.Class, org.springframework.util.ReflectionUtils.MethodCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWithMethods(Class&amp;lt;?&amp;gt;, ReflectionUtils.MethodCallback, ReflectionUtils.MethodFilter)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>doWithMethods(java.lang.Class, org.springframework.util.ReflectionUtils.MethodCallback, org.springframework.util.ReflectionUtils.MethodFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWithRequest(ClientHttpRequest)</Name>
      <Type>intfm</Type>
      <Scope>RequestCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RequestCallback.html</Path>
    <Anchor>doWithRequest(org.springframework.http.client.ClientHttpRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWork(Work)</Name>
      <Type>instm</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>doWork(javax.resource.spi.work.Work)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWork(Work, long, ExecutionContext, WorkListener)</Name>
      <Type>instm</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>doWork(javax.resource.spi.work.Work, long, javax.resource.spi.work.ExecutionContext, javax.resource.spi.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWork(Work)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>doWork(javax.resource.spi.work.Work)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWork(Work, long, ExecutionContext, WorkListener)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>doWork(javax.resource.spi.work.Work, long, javax.resource.spi.work.ExecutionContext, javax.resource.spi.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWriteRemoteInvocation(RemoteInvocation, ObjectOutputStream)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>doWriteRemoteInvocation(org.springframework.remoting.support.RemoteInvocation, java.io.ObjectOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doWriteRemoteInvocationResult(RemoteInvocationResult, ObjectOutputStream)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>doWriteRemoteInvocationResult(org.springframework.remoting.support.RemoteInvocationResult, java.io.ObjectOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DriverManagerDataSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DriverManagerDataSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DriverManagerDataSource()</Name>
      <Type>Constructor</Type>
      <Scope>DriverManagerDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DriverManagerDataSource.html</Path>
    <Anchor>DriverManagerDataSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DriverManagerDataSource(String)</Name>
      <Type>Constructor</Type>
      <Scope>DriverManagerDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DriverManagerDataSource.html</Path>
    <Anchor>DriverManagerDataSource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DriverManagerDataSource(String, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>DriverManagerDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DriverManagerDataSource.html</Path>
    <Anchor>DriverManagerDataSource(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DriverManagerDataSource(String, Properties)</Name>
      <Type>Constructor</Type>
      <Scope>DriverManagerDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DriverManagerDataSource.html</Path>
    <Anchor>DriverManagerDataSource(java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DriverManagerDataSource(String, String, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>DriverManagerDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DriverManagerDataSource.html</Path>
    <Anchor>DriverManagerDataSource(java.lang.String, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropDatabaseSchema()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>dropDatabaseSchema()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropTables(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
    <Anchor>dropTables(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropTables(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
    <Anchor>dropTables(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropTables(JdbcTemplate, String...)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>dropTables(org.springframework.jdbc.core.JdbcTemplate, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DTD_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>DelegatingEntityResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DelegatingEntityResolver.html</Path>
    <Anchor>DTD_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DuplicateKeyException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DuplicateKeyException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DuplicateKeyException(String)</Name>
      <Type>Constructor</Type>
      <Scope>DuplicateKeyException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DuplicateKeyException.html</Path>
    <Anchor>DuplicateKeyException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DuplicateKeyException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>DuplicateKeyException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/DuplicateKeyException.html</Path>
    <Anchor>DuplicateKeyException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicDestinationResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.support.destination</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DynamicDestinationResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicDestinationResolver()</Name>
      <Type>Constructor</Type>
      <Scope>DynamicDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/DynamicDestinationResolver.html</Path>
    <Anchor>DynamicDestinationResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicIntroductionAdvice</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/DynamicIntroductionAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicMethodMatcher</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DynamicMethodMatcher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicMethodMatcher()</Name>
      <Type>Constructor</Type>
      <Scope>DynamicMethodMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DynamicMethodMatcher.html</Path>
    <Anchor>DynamicMethodMatcher()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicMethodMatcherPointcut</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DynamicMethodMatcherPointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicMethodMatcherPointcut()</Name>
      <Type>Constructor</Type>
      <Scope>DynamicMethodMatcherPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DynamicMethodMatcherPointcut.html</Path>
    <Anchor>DynamicMethodMatcherPointcut()</Anchor>
  </Token>
</Tokens>
