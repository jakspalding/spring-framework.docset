<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>sameResourceFactory(ResourceTransactionManager, Object)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationUtils.html</Path>
    <Anchor>sameResourceFactory(org.springframework.transaction.support.ResourceTransactionManager, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>save(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>save(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>save(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>save(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveOrUpdate(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>saveOrUpdate(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveOrUpdate(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>saveOrUpdate(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveOrUpdate(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>saveOrUpdate(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveOrUpdate(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>saveOrUpdate(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveOrUpdateAll(Collection)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>saveOrUpdateAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveOrUpdateAll(Collection)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>saveOrUpdateAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveOutputFlashMap(FlashMap, HttpServletRequest, HttpServletResponse)</Name>
      <Type>intfm</Type>
      <Scope>FlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMapManager.html</Path>
    <Anchor>saveOutputFlashMap(org.springframework.web.servlet.FlashMap, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveOutputFlashMap(FlashMap, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractFlashMapManager.html</Path>
    <Anchor>saveOutputFlashMap(org.springframework.web.servlet.FlashMap, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAVEPOINT_NAME_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>SAVEPOINT_NAME_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SavepointManager</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/SavepointManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SaxResourceUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.oxm.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/SaxResourceUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SaxResourceUtils()</Name>
      <Type>Constructor</Type>
      <Scope>SaxResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/SaxResourceUtils.html</Path>
    <Anchor>SaxResourceUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scan(String...)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
    <Anchor>scan(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scan(String...)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>scan(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scan(String...)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.html</Path>
    <Anchor>scan(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScannedGenericBeanDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ScannedGenericBeanDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScannedGenericBeanDefinition(MetadataReader)</Name>
      <Type>Constructor</Type>
      <Scope>ScannedGenericBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ScannedGenericBeanDefinition.html</Path>
    <Anchor>ScannedGenericBeanDefinition(org.springframework.core.type.classreading.MetadataReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scanPackages(AnnotationConfiguration)</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>scanPackages(org.hibernate.cfg.AnnotationConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scanPackages(String...)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.html</Path>
    <Anchor>scanPackages(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Runnable, Trigger)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerTaskScheduler.html</Path>
    <Anchor>schedule(java.lang.Runnable, org.springframework.scheduling.Trigger)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Runnable, Date)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerTaskScheduler.html</Path>
    <Anchor>schedule(java.lang.Runnable, java.util.Date)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Work)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>schedule(commonj.work.Work)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Work, WorkListener)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>schedule(commonj.work.Work, commonj.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Runnable, Trigger)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>schedule(java.lang.Runnable, org.springframework.scheduling.Trigger)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Runnable, Date)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>schedule(java.lang.Runnable, java.util.Date)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Runnable, Trigger)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>schedule(java.lang.Runnable, org.springframework.scheduling.Trigger)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Runnable, Date)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>schedule(java.lang.Runnable, java.util.Date)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Runnable, Trigger)</Name>
      <Type>intfm</Type>
      <Scope>TaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/TaskScheduler.html</Path>
    <Anchor>schedule(java.lang.Runnable, org.springframework.scheduling.Trigger)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule(Runnable, Date)</Name>
      <Type>intfm</Type>
      <Scope>TaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/TaskScheduler.html</Path>
    <Anchor>schedule(java.lang.Runnable, java.util.Date)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleAtFixedRate(Runnable, Date, long)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerTaskScheduler.html</Path>
    <Anchor>scheduleAtFixedRate(java.lang.Runnable, java.util.Date, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleAtFixedRate(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerTaskScheduler.html</Path>
    <Anchor>scheduleAtFixedRate(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleAtFixedRate(Runnable, Date, long)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>scheduleAtFixedRate(java.lang.Runnable, java.util.Date, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleAtFixedRate(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>scheduleAtFixedRate(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleAtFixedRate(Runnable, Date, long)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>scheduleAtFixedRate(java.lang.Runnable, java.util.Date, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleAtFixedRate(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>scheduleAtFixedRate(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleAtFixedRate(Runnable, Date, long)</Name>
      <Type>intfm</Type>
      <Scope>TaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/TaskScheduler.html</Path>
    <Anchor>scheduleAtFixedRate(java.lang.Runnable, java.util.Date, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleAtFixedRate(Runnable, long)</Name>
      <Type>intfm</Type>
      <Scope>TaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/TaskScheduler.html</Path>
    <Anchor>scheduleAtFixedRate(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scheduled</Name>
      <Type>clm</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/Scheduled.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationDrivenBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/AnnotationDrivenBeanDefinitionParser.html</Path>
    <Anchor>SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledAnnotationBeanPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledAnnotationBeanPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html</Path>
    <Anchor>ScheduledAnnotationBeanPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduledAnnotationProcessor()</Name>
      <Type>instm</Type>
      <Scope>SchedulingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/SchedulingConfiguration.html</Path>
    <Anchor>scheduledAnnotationProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledExecutorFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledExecutorFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
    <Anchor>ScheduledExecutorFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledExecutorTask</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledExecutorTask()</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>ScheduledExecutorTask()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledExecutorTask(Runnable)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>ScheduledExecutorTask(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledExecutorTask(Runnable, long)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>ScheduledExecutorTask(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledExecutorTask(Runnable, long, long, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>ScheduledExecutorTask(java.lang.Runnable, long, long, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledMethodRunnable</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/ScheduledMethodRunnable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledMethodRunnable(Object, Method)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledMethodRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/ScheduledMethodRunnable.html</Path>
    <Anchor>ScheduledMethodRunnable(java.lang.Object, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledMethodRunnable(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledMethodRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/ScheduledMethodRunnable.html</Path>
    <Anchor>ScheduledMethodRunnable(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTaskRegistrar</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTaskRegistrar()</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>ScheduledTaskRegistrar()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTasksBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTasksBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTasksBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.html</Path>
    <Anchor>ScheduledTasksBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.commonj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerListener()</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>ScheduledTimerListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerListener(TimerListener)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>ScheduledTimerListener(commonj.timers.TimerListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerListener(TimerListener, long)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>ScheduledTimerListener(commonj.timers.TimerListener, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerListener(TimerListener, long, long, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>ScheduledTimerListener(commonj.timers.TimerListener, long, long, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerListener(Runnable)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>ScheduledTimerListener(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerListener(Runnable, long)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>ScheduledTimerListener(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerListener(Runnable, long, long, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>ScheduledTimerListener(java.lang.Runnable, long, long, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerTask</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.timer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerTask()</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>ScheduledTimerTask()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerTask(TimerTask)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>ScheduledTimerTask(java.util.TimerTask)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerTask(TimerTask, long)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>ScheduledTimerTask(java.util.TimerTask, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerTask(TimerTask, long, long, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>ScheduledTimerTask(java.util.TimerTask, long, long, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerTask(Runnable)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>ScheduledTimerTask(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerTask(Runnable, long)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>ScheduledTimerTask(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScheduledTimerTask(Runnable, long, long, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>ScheduledTimerTask(java.lang.Runnable, long, long, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleNewInvokerIfAppropriate()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>scheduleNewInvokerIfAppropriate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulerAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulerAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>SchedulerAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulerAccessorBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessorBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulerAccessorBean()</Name>
      <Type>Constructor</Type>
      <Scope>SchedulerAccessorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessorBean.html</Path>
    <Anchor>SchedulerAccessorBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulerBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/SchedulerBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulerBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>SchedulerBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/SchedulerBeanDefinitionParser.html</Path>
    <Anchor>SchedulerBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulerContextAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerContextAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulerFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulerFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>SchedulerFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleTasks()</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>scheduleTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWithFixedDelay(Runnable, Date, long)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerTaskScheduler.html</Path>
    <Anchor>scheduleWithFixedDelay(java.lang.Runnable, java.util.Date, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWithFixedDelay(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerTaskScheduler.html</Path>
    <Anchor>scheduleWithFixedDelay(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWithFixedDelay(Runnable, Date, long)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>scheduleWithFixedDelay(java.lang.Runnable, java.util.Date, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWithFixedDelay(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>scheduleWithFixedDelay(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWithFixedDelay(Runnable, Date, long)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>scheduleWithFixedDelay(java.lang.Runnable, java.util.Date, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWithFixedDelay(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>scheduleWithFixedDelay(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWithFixedDelay(Runnable, Date, long)</Name>
      <Type>intfm</Type>
      <Scope>TaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/TaskScheduler.html</Path>
    <Anchor>scheduleWithFixedDelay(java.lang.Runnable, java.util.Date, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWithFixedDelay(Runnable, long)</Name>
      <Type>intfm</Type>
      <Scope>TaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/TaskScheduler.html</Path>
    <Anchor>scheduleWithFixedDelay(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWork(Work)</Name>
      <Type>instm</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>scheduleWork(javax.resource.spi.work.Work)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWork(Work, long, ExecutionContext, WorkListener)</Name>
      <Type>instm</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>scheduleWork(javax.resource.spi.work.Work, long, javax.resource.spi.work.ExecutionContext, javax.resource.spi.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWork(Work)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>scheduleWork(javax.resource.spi.work.Work)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheduleWork(Work, long, ExecutionContext, WorkListener)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>scheduleWork(javax.resource.spi.work.Work, long, javax.resource.spi.work.ExecutionContext, javax.resource.spi.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulingAwareRunnable</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.scheduling</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/SchedulingAwareRunnable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulingConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/SchedulingConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulingConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>SchedulingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/SchedulingConfiguration.html</Path>
    <Anchor>SchedulingConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulingConfigurer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/SchedulingConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulingException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.scheduling</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/SchedulingException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulingException(String)</Name>
      <Type>Constructor</Type>
      <Scope>SchedulingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/SchedulingException.html</Path>
    <Anchor>SchedulingException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulingException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>SchedulingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/SchedulingException.html</Path>
    <Anchor>SchedulingException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchedulingTaskExecutor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.scheduling</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/SchedulingTaskExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaNameToUse(String)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>schemaNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaNameToUse(String)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>schemaNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaNameToUse(String)</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>schemaNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaNameToUse(String)</Name>
      <Type>intfm</Type>
      <Scope>TableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProvider.html</Path>
    <Anchor>schemaNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scheme(String)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>scheme(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemeSpecificPart(String)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>schemeSpecificPart(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scope</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/Scope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scope</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Scope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_APPLICATION</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/WebApplicationContext.html</Path>
    <Anchor>SCOPE_APPLICATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_APPLICATION</Name>
      <Type>Field</Type>
      <Scope>TagUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/TagUtils.html</Path>
    <Anchor>SCOPE_APPLICATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>SCOPE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_DEFAULT</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>SCOPE_DEFAULT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_GLOBAL_SESSION</Name>
      <Type>Field</Type>
      <Scope>RequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
    <Anchor>SCOPE_GLOBAL_SESSION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_GLOBAL_SESSION</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/WebApplicationContext.html</Path>
    <Anchor>SCOPE_GLOBAL_SESSION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_KEY</Name>
      <Type>Field</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>SCOPE_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_PAGE</Name>
      <Type>Field</Type>
      <Scope>TagUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/TagUtils.html</Path>
    <Anchor>SCOPE_PAGE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_PROTOTYPE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>SCOPE_PROTOTYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_PROTOTYPE</Name>
      <Type>Field</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>SCOPE_PROTOTYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_REQUEST</Name>
      <Type>Field</Type>
      <Scope>RequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
    <Anchor>SCOPE_REQUEST</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_REQUEST</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/WebApplicationContext.html</Path>
    <Anchor>SCOPE_REQUEST</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_REQUEST</Name>
      <Type>Field</Type>
      <Scope>TagUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/TagUtils.html</Path>
    <Anchor>SCOPE_REQUEST</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_SESSION</Name>
      <Type>Field</Type>
      <Scope>RequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
    <Anchor>SCOPE_SESSION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_SESSION</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/WebApplicationContext.html</Path>
    <Anchor>SCOPE_SESSION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_SESSION</Name>
      <Type>Field</Type>
      <Scope>TagUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/TagUtils.html</Path>
    <Anchor>SCOPE_SESSION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_SINGLETON</Name>
      <Type>Field</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>SCOPE_SINGLETON</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SCOPE_SINGLETON</Name>
      <Type>Field</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>SCOPE_SINGLETON</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scopeAnnotationType</Name>
      <Type>Field</Type>
      <Scope>AnnotationScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationScopeMetadataResolver.html</Path>
    <Anchor>scopeAnnotationType</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedBeanInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/ScopedBeanInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedBeanInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>ScopedBeanInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/ScopedBeanInterceptor.html</Path>
    <Anchor>ScopedBeanInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedObject</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.scope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedObject.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.scope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ScopedProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedProxyFactoryBean.html</Path>
    <Anchor>ScopedProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedProxyMode</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ScopedProxyMode.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedProxyUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.scope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedProxyUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedProxyUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ScopedProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedProxyUtils.html</Path>
    <Anchor>ScopedProxyUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopeMetadata</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ScopeMetadata.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopeMetadata()</Name>
      <Type>Constructor</Type>
      <Scope>ScopeMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ScopeMetadata.html</Path>
    <Anchor>ScopeMetadata()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopeMetadataResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ScopeMetadataResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptCompilationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.scripting</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptCompilationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptCompilationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>ScriptCompilationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptCompilationException.html</Path>
    <Anchor>ScriptCompilationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptCompilationException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ScriptCompilationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptCompilationException.html</Path>
    <Anchor>ScriptCompilationException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptCompilationException(ScriptSource, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ScriptCompilationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptCompilationException.html</Path>
    <Anchor>ScriptCompilationException(org.springframework.scripting.ScriptSource, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptCompilationException(ScriptSource, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ScriptCompilationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptCompilationException.html</Path>
    <Anchor>ScriptCompilationException(org.springframework.scripting.ScriptSource, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.scripting</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptFactoryPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scripting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptFactoryPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>ScriptFactoryPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptingDefaultsParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scripting.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/config/ScriptingDefaultsParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptingDefaultsParser()</Name>
      <Type>Constructor</Type>
      <Scope>ScriptingDefaultsParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/config/ScriptingDefaultsParser.html</Path>
    <Anchor>ScriptingDefaultsParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptSource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.scripting</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptStatementFailedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc.datasource.init</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ScriptStatementFailedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScriptStatementFailedException(String, int, EncodedResource, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ScriptStatementFailedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ScriptStatementFailedException.html</Path>
    <Anchor>ScriptStatementFailedException(java.lang.String, int, org.springframework.core.io.support.EncodedResource, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>secure(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>secure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>secure(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>secure(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SecurityContextProvider</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SecurityContextProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SELECTED_CONTENT_TYPE</Name>
      <Type>Field</Type>
      <Scope>View</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/View.html</Path>
    <Anchor>SELECTED_CONTENT_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectImports(AdviceMode)</Name>
      <Type>instm</Type>
      <Scope>CachingConfigurationSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/CachingConfigurationSelector.html</Path>
    <Anchor>selectImports(org.springframework.context.annotation.AdviceMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectImports(AnnotationMetadata)</Name>
      <Type>instm</Type>
      <Scope>AdviceModeImportSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AdviceModeImportSelector.html</Path>
    <Anchor>selectImports(org.springframework.core.type.AnnotationMetadata)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectImports(AdviceMode)</Name>
      <Type>instm</Type>
      <Scope>AdviceModeImportSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AdviceModeImportSelector.html</Path>
    <Anchor>selectImports(org.springframework.context.annotation.AdviceMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectImports(AnnotationMetadata)</Name>
      <Type>intfm</Type>
      <Scope>ImportSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ImportSelector.html</Path>
    <Anchor>selectImports(org.springframework.core.type.AnnotationMetadata)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectImports(AdviceMode)</Name>
      <Type>instm</Type>
      <Scope>AsyncConfigurationSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncConfigurationSelector.html</Path>
    <Anchor>selectImports(org.springframework.context.annotation.AdviceMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectImports(AdviceMode)</Name>
      <Type>instm</Type>
      <Scope>TransactionManagementConfigurationSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/TransactionManagementConfigurationSelector.html</Path>
    <Anchor>selectImports(org.springframework.context.annotation.AdviceMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Selection</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Selection.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Selection(boolean, int, int, SpelNodeImpl)</Name>
      <Type>Constructor</Type>
      <Scope>Selection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Selection.html</Path>
    <Anchor>Selection(boolean, int, int, org.springframework.expression.spel.ast.SpelNodeImpl)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectMethods(Class&amp;lt;?&amp;gt;, ReflectionUtils.MethodFilter)</Name>
      <Type>clm</Type>
      <Scope>HandlerMethodSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethodSelector.html</Path>
    <Anchor>selectMethods(java.lang.Class, org.springframework.util.ReflectionUtils.MethodFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SelectTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SelectTag()</Name>
      <Type>Constructor</Type>
      <Scope>SelectTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
    <Anchor>SelectTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SelfNaming</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jmx.export.naming</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/SelfNaming.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MessageCreator)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>send(org.springframework.jms.core.MessageCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(Destination, MessageCreator)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>send(javax.jms.Destination, org.springframework.jms.core.MessageCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(String, MessageCreator)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>send(java.lang.String, org.springframework.jms.core.MessageCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MessageCreator)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>send(org.springframework.jms.core.MessageCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(Destination, MessageCreator)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>send(javax.jms.Destination, org.springframework.jms.core.MessageCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(String, MessageCreator)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>send(java.lang.String, org.springframework.jms.core.MessageCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MimeMessage)</Name>
      <Type>intfm</Type>
      <Scope>JavaMailSender</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSender.html</Path>
    <Anchor>send(javax.mail.internet.MimeMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MimeMessage[])</Name>
      <Type>intfm</Type>
      <Scope>JavaMailSender</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSender.html</Path>
    <Anchor>send(javax.mail.internet.MimeMessage[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MimeMessagePreparator)</Name>
      <Type>intfm</Type>
      <Scope>JavaMailSender</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSender.html</Path>
    <Anchor>send(org.springframework.mail.javamail.MimeMessagePreparator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MimeMessagePreparator[])</Name>
      <Type>intfm</Type>
      <Scope>JavaMailSender</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSender.html</Path>
    <Anchor>send(org.springframework.mail.javamail.MimeMessagePreparator[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(SimpleMailMessage)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>send(org.springframework.mail.SimpleMailMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(SimpleMailMessage[])</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>send(org.springframework.mail.SimpleMailMessage[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MimeMessage)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>send(javax.mail.internet.MimeMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MimeMessage[])</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>send(javax.mail.internet.MimeMessage[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MimeMessagePreparator)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>send(org.springframework.mail.javamail.MimeMessagePreparator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(MimeMessagePreparator[])</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>send(org.springframework.mail.javamail.MimeMessagePreparator[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(SimpleMailMessage)</Name>
      <Type>intfm</Type>
      <Scope>MailSender</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailSender.html</Path>
    <Anchor>send(org.springframework.mail.SimpleMailMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send(SimpleMailMessage[])</Name>
      <Type>intfm</Type>
      <Scope>MailSender</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailSender.html</Path>
    <Anchor>send(org.springframework.mail.SimpleMailMessage[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError(int, String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>sendError(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError(int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>sendError(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendNotification(Notification)</Name>
      <Type>instm</Type>
      <Scope>ModelMBeanNotificationPublisher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/notification/ModelMBeanNotificationPublisher.html</Path>
    <Anchor>sendNotification(javax.management.Notification)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendNotification(Notification)</Name>
      <Type>intfm</Type>
      <Scope>NotificationPublisher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/notification/NotificationPublisher.html</Path>
    <Anchor>sendNotification(javax.management.Notification)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendRedirect(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>sendRedirect(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendRedirect(String)</Name>
      <Type>instm</Type>
      <Scope>MockActionResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockActionResponse.html</Path>
    <Anchor>sendRedirect(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendRedirect(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockActionResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockActionResponse.html</Path>
    <Anchor>sendRedirect(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendRedirect(HttpServletRequest, HttpServletResponse, String, boolean)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendResponse(Session, Destination, Message)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>sendResponse(javax.jms.Session, javax.jms.Destination, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendResponse(Session, Destination, Message)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter102.html</Path>
    <Anchor>sendResponse(javax.jms.Session, javax.jms.Destination, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendServerError(Exception, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>sendServerError(java.lang.Exception, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>DefaultAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html</Path>
    <Anchor>SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializationFailedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.core.serializer.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/SerializationFailedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializationFailedException(String)</Name>
      <Type>Constructor</Type>
      <Scope>SerializationFailedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/SerializationFailedException.html</Path>
    <Anchor>SerializationFailedException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializationFailedException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>SerializationFailedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/SerializationFailedException.html</Path>
    <Anchor>SerializationFailedException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializationUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SerializationUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializationUtils()</Name>
      <Type>Constructor</Type>
      <Scope>SerializationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SerializationUtils.html</Path>
    <Anchor>SerializationUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize(Object, OutputStream)</Name>
      <Type>instm</Type>
      <Scope>DefaultSerializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/DefaultSerializer.html</Path>
    <Anchor>serialize(java.lang.Object, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize(T, OutputStream)</Name>
      <Type>intfm</Type>
      <Scope>Serializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/Serializer.html</Path>
    <Anchor>serialize(T, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize(Object)</Name>
      <Type>clm</Type>
      <Scope>SerializationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SerializationUtils.html</Path>
    <Anchor>serialize(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Serializer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.serializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/Serializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeState()</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>serializeState()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializingConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.serializer.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/SerializingConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializingConverter()</Name>
      <Type>Constructor</Type>
      <Scope>SerializingConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/SerializingConverter.html</Path>
    <Anchor>SerializingConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializingConverter(Serializer&amp;lt;Object&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>SerializingConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/SerializingConverter.html</Path>
    <Anchor>SerializingConverter(org.springframework.core.serializer.Serializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>series()</Name>
      <Type>clm</Type>
      <Scope>HttpStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpStatus.html</Path>
    <Anchor>series()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <Type>Field</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>server</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveResource(ResourceRequest, ResourceResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>serveResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveResource(ResourceRequest, ResourceResponse, PortletContext)</Name>
      <Type>clm</Type>
      <Scope>PortletUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/util/PortletUtils.html</Path>
    <Anchor>serveResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServerHttpRequest</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http.server</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServerHttpRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServerHttpResponse</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http.server</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServerHttpResponse.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Service</Name>
      <Type>clm</Type>
      <Scope>org.springframework.stereotype</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/stereotype/Service.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>service(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>HttpRequestHandlerServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/HttpRequestHandlerServlet.html</Path>
    <Anchor>service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>service(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServiceFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.serviceloader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/ServiceFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServiceFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/ServiceFactoryBean.html</Path>
    <Anchor>ServiceFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServiceListFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.serviceloader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/ServiceListFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServiceListFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ServiceListFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/ServiceListFactoryBean.html</Path>
    <Anchor>ServiceListFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServiceLoaderFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.serviceloader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/ServiceLoaderFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServiceLoaderFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ServiceLoaderFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/ServiceLoaderFactoryBean.html</Path>
    <Anchor>ServiceLoaderFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServiceLocatorFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServiceLocatorFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ServiceLocatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
    <Anchor>ServiceLocatorFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SERVLET_CONFIG_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>ConfigurableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebApplicationContext.html</Path>
    <Anchor>SERVLET_CONFIG_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SERVLET_CONFIG_PROPERTY_SOURCE_NAME</Name>
      <Type>Field</Type>
      <Scope>StandardServletEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StandardServletEnvironment.html</Path>
    <Anchor>SERVLET_CONFIG_PROPERTY_SOURCE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SERVLET_CONTEXT_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/WebApplicationContext.html</Path>
    <Anchor>SERVLET_CONTEXT_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SERVLET_CONTEXT_PREFIX</Name>
      <Type>Field</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>SERVLET_CONTEXT_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SERVLET_CONTEXT_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>SERVLET_CONTEXT_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SERVLET_CONTEXT_PROPERTY_SOURCE_NAME</Name>
      <Type>Field</Type>
      <Scope>StandardServletEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StandardServletEnvironment.html</Path>
    <Anchor>SERVLET_CONTEXT_PROPERTY_SOURCE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletConfigAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ServletConfigAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletConfigPropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletConfigPropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletConfigPropertySource(String, ServletConfig)</Name>
      <Type>Constructor</Type>
      <Scope>ServletConfigPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletConfigPropertySource.html</Path>
    <Anchor>ServletConfigPropertySource(java.lang.String, javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextAttributeExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAttributeExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextAttributeExporter()</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextAttributeExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAttributeExporter.html</Path>
    <Anchor>ServletContextAttributeExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextAttributeFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAttributeFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextAttributeFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextAttributeFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAttributeFactoryBean.html</Path>
    <Anchor>ServletContextAttributeFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ServletContextAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextAwareProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAwareProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextAwareProcessor(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAwareProcessor.html</Path>
    <Anchor>ServletContextAwareProcessor(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextAwareProcessor(ServletConfig)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAwareProcessor.html</Path>
    <Anchor>ServletContextAwareProcessor(javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextAwareProcessor(ServletContext, ServletConfig)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAwareProcessor.html</Path>
    <Anchor>ServletContextAwareProcessor(javax.servlet.ServletContext, javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextFactoryBean.html</Path>
    <Anchor>ServletContextFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextLiveBeansView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextLiveBeansView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextLiveBeansView(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextLiveBeansView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextLiveBeansView.html</Path>
    <Anchor>ServletContextLiveBeansView(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextParameterFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextParameterFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextParameterFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextParameterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextParameterFactoryBean.html</Path>
    <Anchor>ServletContextParameterFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextPropertyPlaceholderConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextPropertyPlaceholderConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextPropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html</Path>
    <Anchor>ServletContextPropertyPlaceholderConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextPropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextPropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextPropertySource(String, ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextPropertySource.html</Path>
    <Anchor>ServletContextPropertySource(java.lang.String, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextRequestLoggingFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/ServletContextRequestLoggingFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextRequestLoggingFilter()</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/ServletContextRequestLoggingFilter.html</Path>
    <Anchor>ServletContextRequestLoggingFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextResource(ServletContext, String)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResource.html</Path>
    <Anchor>ServletContextResource(javax.servlet.ServletContext, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextResourceLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResourceLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextResourceLoader(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResourceLoader.html</Path>
    <Anchor>ServletContextResourceLoader(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextResourcePatternResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResourcePatternResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextResourcePatternResolver(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResourcePatternResolver.html</Path>
    <Anchor>ServletContextResourcePatternResolver(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextResourcePatternResolver(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResourcePatternResolver.html</Path>
    <Anchor>ServletContextResourcePatternResolver(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextScope</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextScope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletContextScope(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ServletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextScope.html</Path>
    <Anchor>ServletContextScope(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletCookieValueMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletCookieValueMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletCookieValueMethodArgumentResolver(ConfigurableBeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>ServletCookieValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletCookieValueMethodArgumentResolver.html</Path>
    <Anchor>ServletCookieValueMethodArgumentResolver(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletEndpointSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.jaxrpc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/ServletEndpointSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletEndpointSupport()</Name>
      <Type>Constructor</Type>
      <Scope>ServletEndpointSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/ServletEndpointSupport.html</Path>
    <Anchor>ServletEndpointSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletForwardingController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletForwardingController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletForwardingController()</Name>
      <Type>Constructor</Type>
      <Scope>ServletForwardingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletForwardingController.html</Path>
    <Anchor>ServletForwardingController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletInvocableHandlerMethod</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletInvocableHandlerMethod(Object, Method)</Name>
      <Type>Constructor</Type>
      <Scope>ServletInvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.html</Path>
    <Anchor>ServletInvocableHandlerMethod(java.lang.Object, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletInvocableHandlerMethod(HandlerMethod)</Name>
      <Type>Constructor</Type>
      <Scope>ServletInvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.html</Path>
    <Anchor>ServletInvocableHandlerMethod(org.springframework.web.method.HandlerMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletModelAttributeMethodProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletModelAttributeMethodProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletModelAttributeMethodProcessor(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ServletModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletModelAttributeMethodProcessor.html</Path>
    <Anchor>ServletModelAttributeMethodProcessor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>servletPath(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>servletPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletPathExtensionContentNegotiationStrategy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.accept</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ServletPathExtensionContentNegotiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletPathExtensionContentNegotiationStrategy(ServletContext, Map&amp;lt;String, MediaType&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ServletPathExtensionContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ServletPathExtensionContentNegotiationStrategy.html</Path>
    <Anchor>ServletPathExtensionContentNegotiationStrategy(javax.servlet.ServletContext, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletPathExtensionContentNegotiationStrategy(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ServletPathExtensionContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ServletPathExtensionContentNegotiationStrategy.html</Path>
    <Anchor>ServletPathExtensionContentNegotiationStrategy(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestAttributes</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletRequestAttributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestAttributes(HttpServletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletRequestAttributes.html</Path>
    <Anchor>ServletRequestAttributes(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestBindingException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestBindingException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestBindingException(String)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestBindingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestBindingException.html</Path>
    <Anchor>ServletRequestBindingException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestBindingException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestBindingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestBindingException.html</Path>
    <Anchor>ServletRequestBindingException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestDataBinder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestDataBinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestDataBinder(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestDataBinder.html</Path>
    <Anchor>ServletRequestDataBinder(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestDataBinder(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestDataBinder.html</Path>
    <Anchor>ServletRequestDataBinder(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestDataBinderFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletRequestDataBinderFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestDataBinderFactory(List&amp;lt;InvocableHandlerMethod&amp;gt;, WebBindingInitializer)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletRequestDataBinderFactory.html</Path>
    <Anchor>ServletRequestDataBinderFactory(java.util.List, org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestHandledEvent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletRequestHandledEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestHandledEvent(Object, String, String, String, String, String, String, long)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestHandledEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletRequestHandledEvent.html</Path>
    <Anchor>ServletRequestHandledEvent(java.lang.Object, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestHandledEvent(Object, String, String, String, String, String, String, long, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestHandledEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletRequestHandledEvent.html</Path>
    <Anchor>ServletRequestHandledEvent(java.lang.Object, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletRequestMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletRequestMethodArgumentResolver.html</Path>
    <Anchor>ServletRequestMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestParameterPropertyValues</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestParameterPropertyValues.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestParameterPropertyValues(ServletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestParameterPropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestParameterPropertyValues.html</Path>
    <Anchor>ServletRequestParameterPropertyValues(javax.servlet.ServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestParameterPropertyValues(ServletRequest, String)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestParameterPropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestParameterPropertyValues.html</Path>
    <Anchor>ServletRequestParameterPropertyValues(javax.servlet.ServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestParameterPropertyValues(ServletRequest, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestParameterPropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestParameterPropertyValues.html</Path>
    <Anchor>ServletRequestParameterPropertyValues(javax.servlet.ServletRequest, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletRequestUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ServletRequestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestUtils.html</Path>
    <Anchor>ServletRequestUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletResponseMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletResponseMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletResponseMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ServletResponseMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletResponseMethodArgumentResolver.html</Path>
    <Anchor>ServletResponseMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletServerHttpRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.server</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServletServerHttpRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletServerHttpRequest(HttpServletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>ServletServerHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServletServerHttpRequest.html</Path>
    <Anchor>ServletServerHttpRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletServerHttpResponse</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.server</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServletServerHttpResponse.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletServerHttpResponse(HttpServletResponse)</Name>
      <Type>Constructor</Type>
      <Scope>ServletServerHttpResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServletServerHttpResponse.html</Path>
    <Anchor>ServletServerHttpResponse(javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletTestExecutionListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/ServletTestExecutionListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletTestExecutionListener()</Name>
      <Type>Constructor</Type>
      <Scope>ServletTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/ServletTestExecutionListener.html</Path>
    <Anchor>ServletTestExecutionListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletUriComponentsBuilder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletUriComponentsBuilder()</Name>
      <Type>Constructor</Type>
      <Scope>ServletUriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
    <Anchor>ServletUriComponentsBuilder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletWebArgumentResolverAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletWebArgumentResolverAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletWebArgumentResolverAdapter(WebArgumentResolver)</Name>
      <Type>Constructor</Type>
      <Scope>ServletWebArgumentResolverAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletWebArgumentResolverAdapter.html</Path>
    <Anchor>ServletWebArgumentResolverAdapter(org.springframework.web.bind.support.WebArgumentResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletWebRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletWebRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletWebRequest(HttpServletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>ServletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletWebRequest.html</Path>
    <Anchor>ServletWebRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletWebRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>Constructor</Type>
      <Scope>ServletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletWebRequest.html</Path>
    <Anchor>ServletWebRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletWrappingController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletWrappingController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletWrappingController()</Name>
      <Type>Constructor</Type>
      <Scope>ServletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletWrappingController.html</Path>
    <Anchor>ServletWrappingController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletWrappingPortletContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mock.web.portlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/ServletWrappingPortletContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServletWrappingPortletContext(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ServletWrappingPortletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/ServletWrappingPortletContext.html</Path>
    <Anchor>ServletWrappingPortletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>session(MockHttpSession)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>session(org.springframework.mock.web.MockHttpSession)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SESSION_COOKIE_NAME</Name>
      <Type>Field</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>SESSION_COOKIE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SESSION_MUTEX_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>SESSION_MUTEX_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SESSION_SYNCHRONIZATION_ORDER</Name>
      <Type>Field</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>SESSION_SYNCHRONIZATION_ORDER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SESSION_SYNCHRONIZATION_ORDER</Name>
      <Type>Field</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionFactoryUtils.html</Path>
    <Anchor>SESSION_SYNCHRONIZATION_ORDER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sessionAttr(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>sessionAttr(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sessionAttribute(String, Matcher&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
    <Anchor>sessionAttribute(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sessionAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>RequestResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
    <Anchor>sessionAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionAttributes</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/SessionAttributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionAttributesHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionAttributesHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionAttributesHandler(Class&amp;lt;?&amp;gt;, SessionAttributeStore)</Name>
      <Type>Constructor</Type>
      <Scope>SessionAttributesHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionAttributesHandler.html</Path>
    <Anchor>SessionAttributesHandler(java.lang.Class, org.springframework.web.bind.support.SessionAttributeStore)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionAttributeStore</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SessionAttributeStore.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sessionAttrs(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>sessionAttrs(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionAwareMessageListener</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SessionAwareMessageListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/SessionCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sessionCreated(HttpSessionEvent)</Name>
      <Type>instm</Type>
      <Scope>HttpSessionMutexListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HttpSessionMutexListener.html</Path>
    <Anchor>sessionCreated(javax.servlet.http.HttpSessionEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sessionDestroyed(HttpSessionEvent)</Name>
      <Type>instm</Type>
      <Scope>HttpSessionMutexListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HttpSessionMutexListener.html</Path>
    <Anchor>sessionDestroyed(javax.servlet.http.HttpSessionEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionFactoryUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionFactoryUtils()</Name>
      <Type>Constructor</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>SessionFactoryUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionFactoryUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionFactoryUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionFactoryUtils()</Name>
      <Type>Constructor</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionFactoryUtils.html</Path>
    <Anchor>SessionFactoryUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionFlashMapManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/SessionFlashMapManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionFlashMapManager()</Name>
      <Type>Constructor</Type>
      <Scope>SessionFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/SessionFlashMapManager.html</Path>
    <Anchor>SessionFlashMapManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionHolder(Session)</Name>
      <Type>Constructor</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>SessionHolder(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionHolder(Object, Session)</Name>
      <Type>Constructor</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>SessionHolder(java.lang.Object, org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionHolder(Session)</Name>
      <Type>Constructor</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionHolder.html</Path>
    <Anchor>SessionHolder(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionLocaleResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.i18n</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/SessionLocaleResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionLocaleResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SessionLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/SessionLocaleResolver.html</Path>
    <Anchor>SessionLocaleResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionProxy</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SessionProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionScope</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/SessionScope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionScope()</Name>
      <Type>Constructor</Type>
      <Scope>SessionScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/SessionScope.html</Path>
    <Anchor>SessionScope()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionScope(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>SessionScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/SessionScope.html</Path>
    <Anchor>SessionScope(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionStatus</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SessionStatus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionStatusMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionStatusMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionStatusMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SessionStatusMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionStatusMethodArgumentResolver.html</Path>
    <Anchor>SessionStatusMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionThemeResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.theme</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/SessionThemeResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionThemeResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SessionThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/SessionThemeResolver.html</Path>
    <Anchor>SessionThemeResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set(String, String)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>set(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set(int, E)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>set(int, E)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set(K, V)</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>set(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set(K, V)</Name>
      <Type>intfm</Type>
      <Scope>MultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MultiValueMap.html</Path>
    <Anchor>set(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set$AroundClosure(AroundClosure)</Name>
      <Type>instm</Type>
      <Scope>MethodInvocationProceedingJoinPoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.html</Path>
    <Anchor>set$AroundClosure(org.aspectj.runtime.internal.AroundClosure)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SET_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>SET_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAbstract(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setAbstract(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAbstract(boolean)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setAbstract(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAccept(List&amp;lt;MediaType&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setAccept(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAcceptCharset(List&amp;lt;Charset&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setAcceptCharset(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAcceptCharset(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setAcceptCharset(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAcceptGzipEncoding(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>setAcceptGzipEncoding(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAcceptMessagesWhileStopping(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setAcceptMessagesWhileStopping(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAcceptProxyClasses(boolean)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>setAcceptProxyClasses(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAccessCallParameterMetaData(boolean)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>setAccessCallParameterMetaData(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAccessCallParameterMetaData(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>setAccessCallParameterMetaData(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAccesskey(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>setAccesskey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAccessTableColumnMetaData(boolean)</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>setAccessTableColumnMetaData(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAccessTableColumnMetaData(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>setAccessTableColumnMetaData(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAcknowledgeMode(int)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setAcknowledgeMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAcknowledgeModeName(String)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setAcknowledgeModeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAction(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setAction(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActivationSpec(ActivationSpec)</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>setActivationSpec(javax.resource.spi.ActivationSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActivationSpecClass(Class)</Name>
      <Type>instm</Type>
      <Scope>StandardJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html</Path>
    <Anchor>setActivationSpecClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActivationSpecConfig(JmsActivationSpecConfig)</Name>
      <Type>instm</Type>
      <Scope>JmsMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.html</Path>
    <Anchor>setActivationSpecConfig(org.springframework.jms.listener.endpoint.JmsActivationSpecConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActivationSpecFactory(JmsActivationSpecFactory)</Name>
      <Type>instm</Type>
      <Scope>JmsMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.html</Path>
    <Anchor>setActivationSpecFactory(org.springframework.jms.listener.endpoint.JmsActivationSpecFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveProfiles(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>setActiveProfiles(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveProfiles(String...)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurableEnvironment.html</Path>
    <Anchor>setActiveProfiles(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActualTransactionActive(boolean)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>setActualTransactionActive(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdapters(XmlAdapter&amp;lt;?, ?&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setAdapters(javax.xml.bind.annotation.adapters.XmlAdapter[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdvice(Advice)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.html</Path>
    <Anchor>setAdvice(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdvice(Advice)</Name>
      <Type>instm</Type>
      <Scope>AbstractGenericPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractGenericPointcutAdvisor.html</Path>
    <Anchor>setAdvice(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdvice(Advice)</Name>
      <Type>instm</Type>
      <Scope>StaticMethodMatcherPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.html</Path>
    <Anchor>setAdvice(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdviceBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.html</Path>
    <Anchor>setAdviceBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdvisorAdapterRegistry(AdvisorAdapterRegistry)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdvisorAdapterRegistry(AdvisorAdapterRegistry)</Name>
      <Type>instm</Type>
      <Scope>AdvisorAdapterRegistrationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapterRegistrationManager.html</Path>
    <Anchor>setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdvisorAdapterRegistry(AdvisorAdapterRegistry)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdvisorAdapterRegistry(AdvisorAdapterRegistry)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdvisorBeanNamePrefix(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html</Path>
    <Anchor>setAdvisorBeanNamePrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAdvisorChainFactory(AdvisorChainFactory)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>setAdvisorChainFactory(org.springframework.aop.framework.AdvisorChainFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAfterInitialization(boolean)</Name>
      <Type>instm</Type>
      <Scope>BeanValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html</Path>
    <Anchor>setAfterInitialization(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAfterMessagePrefix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>setAfterMessagePrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAfterMessageSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>setAfterMessageSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAgentId(String)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setAgentId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAgentId(String)</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/NotificationListenerRegistrar.html</Path>
    <Anchor>setAgentId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAgentId(String)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerFactoryBean.html</Path>
    <Anchor>setAgentId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAliases(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setAliases(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAliasesByType(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setAliasesByType(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAll(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setAll(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAll(Map&amp;lt;K, V&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>setAll(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAll(Map&amp;lt;K, V&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>MultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MultiValueMap.html</Path>
    <Anchor>setAll(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllow(Set&amp;lt;HttpMethod&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setAllow(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowBeanDefinitionOverriding(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>setAllowBeanDefinitionOverriding(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowBeanDefinitionOverriding(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>setAllowBeanDefinitionOverriding(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowBeanDefinitionOverriding(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>setAllowBeanDefinitionOverriding(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCircularReferences(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>setAllowCircularReferences(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCircularReferences(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>setAllowCircularReferences(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCircularReferences(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>setAllowCircularReferences(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCoreThreadTimeOut(boolean)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setAllowCoreThreadTimeOut(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCoreThreadTimeOut(boolean)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>setAllowCoreThreadTimeOut(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCoreThreadTimeOut(boolean)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setAllowCoreThreadTimeOut(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCreate(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>setAllowCreate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCreate(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>setAllowCreate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCreate(boolean)</Name>
      <Type>instm</Type>
      <Scope>SpringPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html</Path>
    <Anchor>setAllowCreate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCreate(boolean)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwarePersistenceManagerFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy.html</Path>
    <Anchor>setAllowCreate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowCustomIsolationLevels(boolean)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setAllowCustomIsolationLevels(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowDirtyBack(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setAllowDirtyBack(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowDirtyBack(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setAllowDirtyBack(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowDirtyForward(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setAllowDirtyForward(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowDirtyForward(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setAllowDirtyForward(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowDuplicateParameters(boolean)</Name>
      <Type>instm</Type>
      <Scope>PortletModeParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
    <Anchor>setAllowDuplicateParameters(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowEagerClassLoading(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>setAllowEagerClassLoading(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowEagerInit(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setAllowEagerInit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowedFields(String...)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setAllowedFields(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowedResources(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>setAllowedResources(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowNullValues(boolean)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheFactoryBean.html</Path>
    <Anchor>setAllowNullValues(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowNullValues(boolean)</Name>
      <Type>instm</Type>
      <Scope>JCacheCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheCacheManager.html</Path>
    <Anchor>setAllowNullValues(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowRawInjectionDespiteWrapping(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>setAllowRawInjectionDespiteWrapping(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowRequestOverride(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>setAllowRequestOverride(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowRequestOverride(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateViewResolver.html</Path>
    <Anchor>setAllowRequestOverride(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowSessionOverride(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>setAllowSessionOverride(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowSessionOverride(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateViewResolver.html</Path>
    <Anchor>setAllowSessionOverride(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlt(String)</Name>
      <Type>instm</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>setAlt(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysCreate(boolean)</Name>
      <Type>instm</Type>
      <Scope>RmiRegistryFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
    <Anchor>setAlwaysCreate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysCreateRegistry(boolean)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setAlwaysCreateRegistry(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysInclude(boolean)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>setAlwaysInclude(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysInclude(boolean)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceViewResolver.html</Path>
    <Anchor>setAlwaysInclude(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysMustRevalidate(boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>setAlwaysMustRevalidate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysTranslate(boolean)</Name>
      <Type>instm</Type>
      <Scope>PersistenceExceptionTranslationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
    <Anchor>setAlwaysTranslate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseFullPath(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setAlwaysUseFullPath(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseFullPath(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractUrlViewController.html</Path>
    <Anchor>setAlwaysUseFullPath(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseFullPath(boolean)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setAlwaysUseFullPath(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseFullPath(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/AbstractUrlMethodNameResolver.html</Path>
    <Anchor>setAlwaysUseFullPath(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseFullPath(boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
    <Anchor>setAlwaysUseFullPath(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseFullPath(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setAlwaysUseFullPath(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseFullPath(boolean)</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>setAlwaysUseFullPath(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseJndiLookup(boolean)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>setAlwaysUseJndiLookup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseMessageFormat(boolean)</Name>
      <Type>instm</Type>
      <Scope>MessageSourceSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/MessageSourceSupport.html</Path>
    <Anchor>setAlwaysUseMessageFormat(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlwaysUseNewSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>setAlwaysUseNewSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAnnotatedClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setAnnotatedClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAnnotatedClasses(Class[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>setAnnotatedClasses(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAnnotatedClasses(Class&amp;lt;?&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setAnnotatedClasses(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAnnotatedClasses(Class&amp;lt;?&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setAnnotatedClasses(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAnnotatedPackages(String[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>setAnnotatedPackages(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAnnotatedPackages(String[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setAnnotatedPackages(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAnnotationIntrospector(AnnotationIntrospector)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAnnotationIntrospector(AnnotationIntrospector)</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAopProxyFactory(AopProxyFactory)</Name>
      <Type>instm</Type>
      <Scope>ProxyCreatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyCreatorSupport.html</Path>
    <Anchor>setAopProxyFactory(org.springframework.aop.framework.AopProxyFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>intfm</Type>
      <Scope>ApplicationContextAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationContextAware.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>ApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ApplicationObjectSupport.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>LiveBeansView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/LiveBeansView.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>ScheduledAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLifecycleScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ContextLifecycleScheduledTaskRegistrar.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>JobDetailBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailBean.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>setApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContextJobDataKey(String)</Name>
      <Type>instm</Type>
      <Scope>JobDetailBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailBean.html</Path>
    <Anchor>setApplicationContextJobDataKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContextJobDataKey(String)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setApplicationContextJobDataKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationContextSchedulerContextKey(String)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setApplicationContextSchedulerContextKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationEventClass(Class)</Name>
      <Type>instm</Type>
      <Scope>EventPublicationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/EventPublicationInterceptor.html</Path>
    <Anchor>setApplicationEventClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationEventPublisher(ApplicationEventPublisher)</Name>
      <Type>intfm</Type>
      <Scope>ApplicationEventPublisherAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationEventPublisherAware.html</Path>
    <Anchor>setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplicationEventPublisher(ApplicationEventPublisher)</Name>
      <Type>instm</Type>
      <Scope>EventPublicationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/EventPublicationInterceptor.html</Path>
    <Anchor>setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplyCommonInterceptorsFirst(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>setApplyCommonInterceptorsFirst(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplyLastModified(boolean)</Name>
      <Type>instm</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>setApplyLastModified(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApplyWebRequestInterceptorsToRenderPhaseOnly(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setApplyWebRequestInterceptorsToRenderPhaseOnly(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArgumentNames(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>setArgumentNames(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArgumentNamesFromStringArray(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>setArgumentNamesFromStringArray(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArgumentResolvers(List&amp;lt;HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>setArgumentResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArgumentResolvers(List&amp;lt;HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setArgumentResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArguments(Object[])</Name>
      <Type>instm</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>setArguments(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArguments(Object[])</Name>
      <Type>intfm</Type>
      <Scope>ProxyMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/ProxyMethodInvocation.html</Path>
    <Anchor>setArguments(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArguments(Object[])</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
    <Anchor>setArguments(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArguments(Object[])</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>setArguments(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArguments(Object)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>setArguments(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setArgumentSeparator(String)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>setArgumentSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAscending(boolean)</Name>
      <Type>instm</Type>
      <Scope>MutableSortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/MutableSortDefinition.html</Path>
    <Anchor>setAscending(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAscending(boolean)</Name>
      <Type>instm</Type>
      <Scope>InvertibleComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InvertibleComparator.html</Path>
    <Anchor>setAscending(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAscendingOrder(int)</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>setAscendingOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleBeanFactoryAwareAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/SimpleBeanFactoryAwareAspectInstanceFactory.html</Path>
    <Anchor>setAspectBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectJAdvisorFactory(AspectJAdvisorFactory)</Name>
      <Type>instm</Type>
      <Scope>AnnotationAwareAspectJAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html</Path>
    <Anchor>setAspectJAdvisorFactory(org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>setAspectName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAssembler(MBeanInfoAssembler)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setAssembler(org.springframework.jmx.export.assembler.MBeanInfoAssembler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>ByteArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ByteArrayPropertyEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>CharacterEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CharacterEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>CharArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CharArrayPropertyEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>CharsetEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CharsetEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>ClassArrayEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ClassArrayEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>ClassEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ClassEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>CurrencyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CurrencyEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>CustomBooleanEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomBooleanEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>CustomCollectionEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomCollectionEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>CustomDateEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomDateEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>CustomMapEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomMapEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>CustomNumberEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomNumberEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>FileEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/FileEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>InputSourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/InputSourceEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>InputStreamEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/InputStreamEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>LocaleEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/LocaleEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>PatternEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/PatternEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>PropertiesEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/PropertiesEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ResourceBundleEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>StringArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>StringTrimmerEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringTrimmerEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>TimeZoneEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/TimeZoneEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>URIEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URIEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>URLEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URLEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>UUIDEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/UUIDEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>PropertyValuesEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValuesEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>ConvertingPropertyEditorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/ConvertingPropertyEditorAdapter.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourceArrayPropertyEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>MediaTypeEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaTypeEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>JndiTemplateEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiTemplateEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>InternetAddressEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/InternetAddressEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>TransactionAttributeEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAttributeEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>TransactionAttributeSourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAttributeSourceEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsText(String)</Name>
      <Type>instm</Type>
      <Scope>StringMultipartFileEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StringMultipartFileEditor.html</Path>
    <Anchor>setAsText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsyncAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AsyncAnnotationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html</Path>
    <Anchor>setAsyncAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsyncAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AsyncAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationBeanPostProcessor.html</Path>
    <Anchor>setAsyncAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsyncMode(boolean)</Name>
      <Type>instm</Type>
      <Scope>ForkJoinPoolFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.html</Path>
    <Anchor>setAsyncMode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsyncRequestTimeout(long)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setAsyncRequestTimeout(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsyncRequestTimeout(long)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setAsyncRequestTimeout(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsyncTaskExecutor(AsyncTaskExecutor)</Name>
      <Type>instm</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>setAsyncTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsyncWebRequest(AsyncWebRequest)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>setAsyncWebRequest(org.springframework.web.context.request.async.AsyncWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>BeanMetadataAttributeAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttributeAccessor.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>AttributeAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessor.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AttributeAccessorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessorSupport.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(Attribute)</Name>
      <Type>instm</Type>
      <Scope>SpringModelMBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/SpringModelMBean.html</Path>
    <Anchor>setAttribute(javax.management.Attribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object, int)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockPortletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletContext.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object, int)</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ServletWrappingPortletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/ServletWrappingPortletContext.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object, int)</Name>
      <Type>instm</Type>
      <Scope>FacesRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesRequestAttributes.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object, int)</Name>
      <Type>intfm</Type>
      <Scope>RequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestAttributes.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object, int)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletRequestAttributes.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ContextExposingHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ContextExposingHttpServletRequest.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttribute(String, Object, int)</Name>
      <Type>instm</Type>
      <Scope>PortletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestAttributes.html</Path>
    <Anchor>setAttribute(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributeName(String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextAttributeFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAttributeFactoryBean.html</Path>
    <Anchor>setAttributeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributeNamePrefix(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSessionAttributeStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultSessionAttributeStore.html</Path>
    <Anchor>setAttributeNamePrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributes(AttributeList)</Name>
      <Type>instm</Type>
      <Scope>SpringModelMBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/SpringModelMBean.html</Path>
    <Anchor>setAttributes(javax.management.AttributeList)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributes(Map&amp;lt;String, Serializable&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
    <Anchor>setAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributes(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ServletContextAttributeExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAttributeExporter.html</Path>
    <Anchor>setAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributes(Properties)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>setAttributes(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributes(Properties)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setAttributes(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributesCSV(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>setAttributesCSV(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributesMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>setAttributesMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributesMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setAttributesMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributeSource(JmxAttributeSource)</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>setAttributeSource(org.springframework.jmx.export.metadata.JmxAttributeSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttributeSource(JmxAttributeSource)</Name>
      <Type>instm</Type>
      <Scope>MetadataNamingStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/MetadataNamingStrategy.html</Path>
    <Anchor>setAttributeSource(org.springframework.jmx.export.metadata.JmxAttributeSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAuthenticator(Authenticator)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>setAuthenticator(com.sun.net.httpserver.Authenticator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAuthenticator(Authenticator)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>setAuthenticator(com.sun.net.httpserver.Authenticator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAuthorizedRoles(String[])</Name>
      <Type>instm</Type>
      <Scope>UserRoleAuthorizationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/UserRoleAuthorizationInterceptor.html</Path>
    <Anchor>setAuthorizedRoles(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAuthorizedRoles(String[])</Name>
      <Type>instm</Type>
      <Scope>UserRoleAuthorizationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/UserRoleAuthorizationInterceptor.html</Path>
    <Anchor>setAuthorizedRoles(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAuthType(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setAuthType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAuthType(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setAuthType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoCommit(boolean)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>setAutoCommit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutocomplete(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setAutocomplete(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutocomplete(String)</Name>
      <Type>instm</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>setAutocomplete(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetect(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setAutodetect(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetectAnnotations(boolean)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setAutodetectAnnotations(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetectDataSource(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setAutodetectDataSource(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetectDataSource(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>setAutodetectDataSource(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetectDataSource(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>setAutodetectDataSource(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoDetectFields(boolean)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setAutoDetectFields(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoDetectFields(boolean)</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setAutoDetectFields(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoDetectGettersSetters(boolean)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setAutoDetectGettersSetters(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoDetectGettersSetters(boolean)</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setAutoDetectGettersSetters(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetectInterfaces(boolean)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setAutodetectInterfaces(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetectMode(int)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setAutodetectMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetectModeName(String)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setAutodetectModeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetectTransactionManager(boolean)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setAutodetectTransactionManager(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutodetectUserTransaction(boolean)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setAutodetectUserTransaction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoGrowCollectionLimit(int)</Name>
      <Type>intfm</Type>
      <Scope>BeanWrapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapper.html</Path>
    <Anchor>setAutoGrowCollectionLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoGrowCollectionLimit(int)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>setAutoGrowCollectionLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoGrowCollectionLimit(int)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setAutoGrowCollectionLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoGrowNestedPaths(boolean)</Name>
      <Type>intfm</Type>
      <Scope>BeanWrapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapper.html</Path>
    <Anchor>setAutoGrowNestedPaths(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoGrowNestedPaths(boolean)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>setAutoGrowNestedPaths(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoGrowNestedPaths(boolean)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setAutoGrowNestedPaths(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoGrowNestedPaths(boolean)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>setAutoGrowNestedPaths(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>setAutoStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>setAutoStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setAutoStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowire(String)</Name>
      <Type>instm</Type>
      <Scope>DocumentDefaultsDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
    <Anchor>setAutowire(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowireCandidate(boolean)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>setAutowireCandidate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowireCandidate(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setAutowireCandidate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowireCandidatePatterns(String[])</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>setAutowireCandidatePatterns(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowireCandidateResolver(AutowireCandidateResolver)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>setAutowireCandidateResolver(org.springframework.beans.factory.support.AutowireCandidateResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowireCandidates(String)</Name>
      <Type>instm</Type>
      <Scope>DocumentDefaultsDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
    <Anchor>setAutowireCandidates(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowiredAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>setAutowiredAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowiredAnnotationTypes(Set&amp;lt;Class&amp;lt;? extends Annotation&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>setAutowiredAnnotationTypes(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowireMode(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setAutowireMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowireMode(int)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setAutowireMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowireMode(int)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionDefaults</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionDefaults.html</Path>
    <Anchor>setAutowireMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutowireMode(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>setAutowireMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAwaitTerminationSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>setAwaitTerminationSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBacklog(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>setBacklog(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBacklog(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>setBacklog(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBadSqlGrammarCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setBadSqlGrammarCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBaseAddress(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter.html</Path>
    <Anchor>setBaseAddress(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBasename(String)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>setBasename(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBasename(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>setBasename(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBasename(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>setBasename(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBasenamePrefix(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleThemeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/ResourceBundleThemeSource.html</Path>
    <Anchor>setBasenamePrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBasenames(String...)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>setBasenames(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBasenames(String...)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>setBasenames(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBasenames(String[])</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>setBasenames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBasePackage(String)</Name>
      <Type>instm</Type>
      <Scope>ControllerClassNameHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html</Path>
    <Anchor>setBasePackage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBasePath(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>setBasePath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBatchSize(int)</Name>
      <Type>instm</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>setBatchSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setBcc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(String[])</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setBcc(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(InternetAddress)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setBcc(javax.mail.internet.InternetAddress)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(InternetAddress[])</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setBcc(javax.mail.internet.InternetAddress[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setBcc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(String[])</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setBcc(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(String)</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setBcc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(String[])</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setBcc(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setBcc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBcc(String[])</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setBcc(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setBeanClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisingBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractAdvisingBeanPostProcessor.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>CustomAutowireConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>intfm</Type>
      <Scope>BeanClassLoaderAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanClassLoaderAware.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>CustomEditorConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomEditorConfigurer.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>CustomScopeConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomScopeConfigurer.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>FieldRetrievingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/MethodInvokingFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractServiceLoaderBasedFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/AbstractServiceLoaderBasedFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinitionReader.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>JCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheManagerFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>LoadTimeWeavingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/LoadTimeWeavingConfiguration.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AspectJWeavingEnabler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/AspectJWeavingEnabler.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>DefaultContextLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>LocalStatelessSessionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>SimpleRemoteStatelessSessionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteStatelessSessionProxyFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerProxyFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>MBeanProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanProxyFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>InterfaceBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>LocalPersistenceManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortProxyFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiProxyFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>RemotingSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemotingSupport.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/MethodInvokingRunnable.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>BshScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptFactory.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>GroovyScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/groovy/GroovyScriptFactory.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>JRubyScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/jruby/JRubyScriptFactory.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>setBeanClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassName(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>setBeanClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanClassName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setBeanClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanDefinitionDefaults(BeanDefinitionDefaults)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>setBeanDefinitionDefaults(org.springframework.beans.factory.support.BeanDefinitionDefaults)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanExpressionResolver(BeanExpressionResolver)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>setBeanExpressionResolver(org.springframework.beans.factory.config.BeanExpressionResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanExpressionResolver(BeanExpressionResolver)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>setBeanExpressionResolver(org.springframework.beans.factory.config.BeanExpressionResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>MethodLocatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/MethodLocatingFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>SimpleBeanFactoryAwareAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/SimpleBeanFactoryAwareAspectInstanceFactory.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AsyncExecutionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>ScopedProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedProxyFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractPoolingTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPoolingTargetSource.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractPrototypeBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>QualifierAnnotationAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>RequiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>intfm</Type>
      <Scope>BeanFactoryAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryAware.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>BeanReferenceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/MethodInvokingFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>PropertyPathFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPathFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>ServiceLocatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>BeanConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanConfigurerSupport.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>MBeanExportConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/MBeanExportConfiguration.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/AbstractApplicationEventMulticaster.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>DefaultLifecycleProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultLifecycleProcessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>LoadTimeWeaverAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/LoadTimeWeaverAwareProcessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>PersistenceExceptionTranslationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/annotation/PersistenceExceptionTranslationPostProcessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>PersistenceExceptionTranslationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryDataSourceLookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AnnotationJmxAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/annotation/AnnotationMBeanExporter.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>EntityManagerFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryAccessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AsyncAnnotationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AsyncAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationBeanPostProcessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessorBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>GroovyScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/groovy/GroovyScriptFactory.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>TransactionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncTask.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactoryLocator(BeanFactoryLocator)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnterpriseBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractEnterpriseBean.html</Path>
    <Anchor>setBeanFactoryLocator(org.springframework.beans.factory.access.BeanFactoryLocator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanFactoryLocatorKey(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnterpriseBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractEnterpriseBean.html</Path>
    <Anchor>setBeanFactoryLocatorKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanNameAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanNameAware.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>FieldRetrievingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>PropertyPathFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPathFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>FilterDefinitionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>TypeDefinitionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/TypeDefinitionBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/TaskExecutorFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>JobDetailBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>TimerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerFactoryBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>GenericFilterBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/GenericFilterBean.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>ServletForwardingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletForwardingController.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>ServletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletWrappingController.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>setBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanNameGenerator(BeanNameGenerator)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinitionReader.html</Path>
    <Anchor>setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanNameGenerator(BeanNameGenerator)</Name>
      <Type>instm</Type>
      <Scope>AnnotatedBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
    <Anchor>setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanNameGenerator(BeanNameGenerator)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
    <Anchor>setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanNameGenerator(BeanNameGenerator)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanNameGenerator(BeanNameGenerator)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanNameGenerator(BeanNameGenerator)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.html</Path>
    <Anchor>setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanNames(String[])</Name>
      <Type>instm</Type>
      <Scope>BeanNameAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/BeanNameAutoProxyCreator.html</Path>
    <Anchor>setBeanNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanNameSeparator(String)</Name>
      <Type>instm</Type>
      <Scope>PropertyOverrideConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html</Path>
    <Anchor>setBeanNameSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanResolver(BeanResolver)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setBeanResolver(org.springframework.expression.BeanResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeans(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setBeans(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeanWiringInfoResolver(BeanWiringInfoResolver)</Name>
      <Type>instm</Type>
      <Scope>BeanConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanConfigurerSupport.html</Path>
    <Anchor>setBeanWiringInfoResolver(org.springframework.beans.factory.wiring.BeanWiringInfoResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeforeInvocation(boolean)</Name>
      <Type>instm</Type>
      <Scope>CacheEvictOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheEvictOperation.html</Path>
    <Anchor>setBeforeInvocation(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeforeMessagePrefix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>setBeforeMessagePrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBeforeMessageSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>setBeforeMessageSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindEmptyMultipartFiles(boolean)</Name>
      <Type>instm</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>setBindEmptyMultipartFiles(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindingErrorProcessor(BindingErrorProcessor)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindingErrorProcessor(BindingErrorProcessor)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindingErrorProcessor(BindingErrorProcessor)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindingErrorProcessor(BindingErrorProcessor)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindingName(String)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setBindingName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindings(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamespaceContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleNamespaceContext.html</Path>
    <Anchor>setBindings(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindingType(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>setBindingType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindOnNewForm(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>setBindOnNewForm(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBindOnNewForm(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>setBindOnNewForm(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlobAsBinaryStream(PreparedStatement, int, InputStream, int)</Name>
      <Type>instm</Type>
      <Scope>DefaultLobHandler.DefaultLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html</Path>
    <Anchor>setBlobAsBinaryStream(java.sql.PreparedStatement, int, java.io.InputStream, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlobAsBinaryStream(PreparedStatement, int, InputStream, int)</Name>
      <Type>intfm</Type>
      <Scope>LobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/LobCreator.html</Path>
    <Anchor>setBlobAsBinaryStream(java.sql.PreparedStatement, int, java.io.InputStream, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlobAsBinaryStream(PreparedStatement, int, InputStream, int)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler.OracleLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html</Path>
    <Anchor>setBlobAsBinaryStream(java.sql.PreparedStatement, int, java.io.InputStream, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlobAsBytes(PreparedStatement, int, byte[])</Name>
      <Type>instm</Type>
      <Scope>DefaultLobHandler.DefaultLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html</Path>
    <Anchor>setBlobAsBytes(java.sql.PreparedStatement, int, byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlobAsBytes(PreparedStatement, int, byte[])</Name>
      <Type>intfm</Type>
      <Scope>LobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/LobCreator.html</Path>
    <Anchor>setBlobAsBytes(java.sql.PreparedStatement, int, byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlobAsBytes(PreparedStatement, int, byte[])</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler.OracleLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html</Path>
    <Anchor>setBlobAsBytes(java.sql.PreparedStatement, int, byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlocking(boolean)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setBlocking(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlockUntilCompleted(boolean)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>setBlockUntilCompleted(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlockUntilStarted(boolean)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>setBlockUntilStarted(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBodyContent(BodyContent)</Name>
      <Type>instm</Type>
      <Scope>EscapeBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EscapeBodyTag.html</Path>
    <Anchor>setBodyContent(javax.servlet.jsp.tagext.BodyContent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBodyContent(BodyContent)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>setBodyContent(javax.servlet.jsp.tagext.BodyContent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBootstrapCacheLoader(BootstrapCacheLoader)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setBootstrapCacheLoader(net.sf.ehcache.bootstrap.BootstrapCacheLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBootstrapContext(BootstrapContext)</Name>
      <Type>intfm</Type>
      <Scope>BootstrapContextAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/BootstrapContextAware.html</Path>
    <Anchor>setBootstrapContext(javax.resource.spi.BootstrapContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBootstrapContext(BootstrapContext)</Name>
      <Type>instm</Type>
      <Scope>ResourceAdapterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
    <Anchor>setBootstrapContext(javax.resource.spi.BootstrapContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBootstrapContext(BootstrapContext)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>setBootstrapContext(javax.resource.spi.BootstrapContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferRequestBody(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimpleClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/SimpleClientHttpRequestFactory.html</Path>
    <Anchor>setBufferRequestBody(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize(int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setBufferSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize(int)</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>setBufferSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBundleClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>setBundleClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBundleClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>setBundleClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBusinessInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>LocalStatelessSessionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html</Path>
    <Anchor>setBusinessInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBusinessInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>SimpleRemoteStatelessSessionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteStatelessSessionProxyFactoryBean.html</Path>
    <Anchor>setBusinessInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCache(boolean)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.html</Path>
    <Anchor>setCache(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCache(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JndiDestinationResolver.html</Path>
    <Anchor>setCache(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCache(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>setCache(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCache(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectTargetSource.html</Path>
    <Anchor>setCache(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCache(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>setCache(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCache(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setCache(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheability(String)</Name>
      <Type>instm</Type>
      <Scope>MockResourceRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockResourceRequest.html</Path>
    <Anchor>setCacheability(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheability(String)</Name>
      <Type>instm</Type>
      <Scope>MockResourceURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockResourceURL.html</Path>
    <Anchor>setCacheability(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheableMappingLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setCacheableMappingLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheableMappingLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setCacheableMappingLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheBeanMetadata(boolean)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>setCacheBeanMetadata(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheBeanMetadata(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>setCacheBeanMetadata(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheConsumers(boolean)</Name>
      <Type>instm</Type>
      <Scope>CachingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/CachingConnectionFactory.html</Path>
    <Anchor>setCacheConsumers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheControl(String)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setCacheControl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheDir(File)</Name>
      <Type>instm</Type>
      <Scope>BufferedImageHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
    <Anchor>setCacheDir(java.io.File)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheEntryFactory(CacheEntryFactory)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setCacheEntryFactory(net.sf.ehcache.constructs.blocking.CacheEntryFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheEventListeners(Set&amp;lt;CacheEventListener&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setCacheEventListeners(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheHome(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>setCacheHome(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheLevel(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setCacheLevel(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheLevelName(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setCacheLevelName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheLimit(int)</Name>
      <Type>instm</Type>
      <Scope>CachingMetadataReaderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/CachingMetadataReaderFactory.html</Path>
    <Anchor>setCacheLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheLimit(int)</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>setCacheLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheLimit(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>setCacheLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheManager(CacheManager)</Name>
      <Type>instm</Type>
      <Scope>EhCacheCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheCacheManager.html</Path>
    <Anchor>setCacheManager(net.sf.ehcache.CacheManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheManager(CacheManager)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setCacheManager(net.sf.ehcache.CacheManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheManager(CacheManager)</Name>
      <Type>instm</Type>
      <Scope>CacheAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.html</Path>
    <Anchor>setCacheManager(org.springframework.cache.CacheManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheManager(CacheManager)</Name>
      <Type>instm</Type>
      <Scope>JCacheCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheCacheManager.html</Path>
    <Anchor>setCacheManager(javax.cache.CacheManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheManagerName(String)</Name>
      <Type>instm</Type>
      <Scope>EhCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html</Path>
    <Anchor>setCacheManagerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheManagerName(String)</Name>
      <Type>instm</Type>
      <Scope>JCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheManagerFactoryBean.html</Path>
    <Anchor>setCacheManagerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheManagers(Collection&amp;lt;CacheManager&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CompositeCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/CompositeCacheManager.html</Path>
    <Anchor>setCacheManagers(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>WebContentInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
    <Anchor>setCacheMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheName(String)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setCacheName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheName(String)</Name>
      <Type>instm</Type>
      <Scope>CacheOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperation.html</Path>
    <Anchor>setCacheName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheNames(Collection&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheManager.html</Path>
    <Anchor>setCacheNames(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheNames(String[])</Name>
      <Type>instm</Type>
      <Scope>CacheOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperation.html</Path>
    <Anchor>setCacheNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheOperationSource(CacheOperationSource)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryCacheOperationSourceAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/BeanFactoryCacheOperationSourceAdvisor.html</Path>
    <Anchor>setCacheOperationSource(org.springframework.cache.interceptor.CacheOperationSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheOperationSources(CacheOperationSource...)</Name>
      <Type>instm</Type>
      <Scope>CacheAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.html</Path>
    <Anchor>setCacheOperationSources(org.springframework.cache.interceptor.CacheOperationSource...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheOperationSources(CacheOperationSource...)</Name>
      <Type>instm</Type>
      <Scope>CacheProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheProxyFactoryBean.html</Path>
    <Anchor>setCacheOperationSources(org.springframework.cache.interceptor.CacheOperationSource...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCachePeriod(Integer)</Name>
      <Type>instm</Type>
      <Scope>ResourceHandlerRegistration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.html</Path>
    <Anchor>setCachePeriod(java.lang.Integer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheProducers(boolean)</Name>
      <Type>instm</Type>
      <Scope>CachingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/CachingConnectionFactory.html</Path>
    <Anchor>setCacheProducers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheProvider(CacheProvider)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setCacheProvider(org.hibernate.cache.CacheProvider)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheQueries(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>setCacheQueries(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheRegionFactory(Object)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setCacheRegionFactory(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaches(Collection&amp;lt;? extends Cache&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/SimpleCacheManager.html</Path>
    <Anchor>setCaches(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>setCacheSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>setCacheSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>setCacheSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>setCacheSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheSecondsForSessionAttributeHandlers(int)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCacheSecondsForSessionAttributeHandlers(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheSecondsForSessionAttributeHandlers(int)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCacheSecondsForSessionAttributeHandlers(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheSecondsForSessionAttributeHandlers(int)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setCacheSecondsForSessionAttributeHandlers(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheSessionBean(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimpleRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>setCacheSessionBean(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheSize(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractColumnMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractColumnMaxValueIncrementer.html</Path>
    <Anchor>setCacheSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheStub(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>setCacheStub(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheStub(boolean)</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>setCacheStub(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheTemplate(boolean)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>setCacheTemplate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheTemplates(boolean)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>setCacheTemplates(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheTemplates(boolean)</Name>
      <Type>instm</Type>
      <Scope>XsltViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltViewResolver.html</Path>
    <Anchor>setCacheTemplates(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheUnresolved(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>setCacheUnresolved(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheUserTransaction(boolean)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setCacheUserTransaction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCacheWide(boolean)</Name>
      <Type>instm</Type>
      <Scope>CacheEvictOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheEvictOperation.html</Path>
    <Anchor>setCacheWide(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCalendars(Map&amp;lt;String, Calendar&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setCalendars(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCallableInterceptors(List&amp;lt;CallableProcessingInterceptor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setCallableInterceptors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCallableStatementType(Class&amp;lt;? extends CallableStatement&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jdbc4NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/Jdbc4NativeJdbcExtractor.html</Path>
    <Anchor>setCallableStatementType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCancelParamKey(String)</Name>
      <Type>instm</Type>
      <Scope>CancellableFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/CancellableFormController.html</Path>
    <Anchor>setCancelParamKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCancelRenderParameter(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setCancelRenderParameter(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCancelView(String)</Name>
      <Type>instm</Type>
      <Scope>CancellableFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/CancellableFormController.html</Path>
    <Anchor>setCancelView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCannotAcquireLockCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setCannotAcquireLockCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCannotSerializeTransactionCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setCannotSerializeTransactionCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaseSensitive(boolean)</Name>
      <Type>instm</Type>
      <Scope>ControllerClassNameHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html</Path>
    <Anchor>setCaseSensitive(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCatalogName(String)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>setCatalogName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCatalogName(String)</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>setCatalogName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCatalogName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>setCatalogName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCatalogName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>setCatalogName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCategory(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedMetric</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedMetric.html</Path>
    <Anchor>setCategory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setCc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(String[])</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setCc(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(InternetAddress)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setCc(javax.mail.internet.InternetAddress)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(InternetAddress[])</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setCc(javax.mail.internet.InternetAddress[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setCc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(String[])</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setCc(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(String)</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setCc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(String[])</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setCc(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setCc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCc(String[])</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setCc(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCciTemplate(CciTemplate)</Name>
      <Type>instm</Type>
      <Scope>CciDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CciDaoSupport.html</Path>
    <Anchor>setCciTemplate(org.springframework.jca.cci.core.CciTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCciTemplate(CciTemplate)</Name>
      <Type>instm</Type>
      <Scope>EisOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/EisOperation.html</Path>
    <Anchor>setCciTemplate(org.springframework.jca.cci.core.CciTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCharacterEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setCharacterEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCharacterEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setCharacterEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCharacterEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>MockClientDataRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockClientDataRequest.html</Path>
    <Anchor>setCharacterEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCharacterEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>setCharacterEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCharset(Charset)</Name>
      <Type>instm</Type>
      <Scope>FormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
    <Anchor>setCharset(java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCharset(Charset)</Name>
      <Type>instm</Type>
      <Scope>HttpPutFormContentFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/HttpPutFormContentFilter.html</Path>
    <Anchor>setCharset(java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCheckForXmlRootElement(boolean)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setCheckForXmlRootElement(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCheckFullyPopulated(boolean)</Name>
      <Type>instm</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>setCheckFullyPopulated(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCheckRefresh(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setCheckRefresh(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCheckRefresh(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>setCheckRefresh(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCheckWriteOperations(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>setCheckWriteOperations(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChronology(Chronology)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeContext.html</Path>
    <Anchor>setChronology(org.joda.time.Chronology)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChunkedPost(boolean)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setChunkedPost(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChunkSize(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/SimpleClientHttpRequestFactory.html</Path>
    <Anchor>setChunkSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClasses(Class&amp;lt;?&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>setClasses(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClassesToBeBound(Class&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setClassesToBeBound(java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClassFilter(ClassFilter)</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcutAdvisor.html</Path>
    <Anchor>setClassFilter(org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClassFilter(ClassFilter)</Name>
      <Type>instm</Type>
      <Scope>StaticMethodMatcherPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcherPointcut.html</Path>
    <Anchor>setClassFilter(org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClassFilter(ClassFilter)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryCacheOperationSourceAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/BeanFactoryCacheOperationSourceAdvisor.html</Path>
    <Anchor>setClassFilter(org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClassFilter(ClassFilter)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryTransactionAttributeSourceAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor.html</Path>
    <Anchor>setClassFilter(org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClassFilter(ClassFilter)</Name>
      <Type>instm</Type>
      <Scope>TransactionAttributeSourceAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAttributeSourceAdvisor.html</Path>
    <Anchor>setClassFilter(org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>DefaultResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DefaultResourceLoader.html</Path>
    <Anchor>setClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCleanupAfterInclude(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>setCleanupAfterInclude(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClearCollections(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setClearCollections(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClearOnFlush(boolean)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setClearOnFlush(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClientId(String)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>setClientId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClientId(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>setClientId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClientId(String)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setClientId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClientSocketFactory(RMIClientSocketFactory)</Name>
      <Type>instm</Type>
      <Scope>RmiRegistryFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
    <Anchor>setClientSocketFactory(java.rmi.server.RMIClientSocketFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClientSocketFactory(RMIClientSocketFactory)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setClientSocketFactory(java.rmi.server.RMIClientSocketFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClobAsAsciiStream(PreparedStatement, int, InputStream, int)</Name>
      <Type>instm</Type>
      <Scope>DefaultLobHandler.DefaultLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html</Path>
    <Anchor>setClobAsAsciiStream(java.sql.PreparedStatement, int, java.io.InputStream, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClobAsAsciiStream(PreparedStatement, int, InputStream, int)</Name>
      <Type>intfm</Type>
      <Scope>LobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/LobCreator.html</Path>
    <Anchor>setClobAsAsciiStream(java.sql.PreparedStatement, int, java.io.InputStream, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClobAsAsciiStream(PreparedStatement, int, InputStream, int)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler.OracleLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html</Path>
    <Anchor>setClobAsAsciiStream(java.sql.PreparedStatement, int, java.io.InputStream, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClobAsCharacterStream(PreparedStatement, int, Reader, int)</Name>
      <Type>instm</Type>
      <Scope>DefaultLobHandler.DefaultLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html</Path>
    <Anchor>setClobAsCharacterStream(java.sql.PreparedStatement, int, java.io.Reader, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClobAsCharacterStream(PreparedStatement, int, Reader, int)</Name>
      <Type>intfm</Type>
      <Scope>LobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/LobCreator.html</Path>
    <Anchor>setClobAsCharacterStream(java.sql.PreparedStatement, int, java.io.Reader, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClobAsCharacterStream(PreparedStatement, int, Reader, int)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler.OracleLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html</Path>
    <Anchor>setClobAsCharacterStream(java.sql.PreparedStatement, int, java.io.Reader, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClobAsString(PreparedStatement, int, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultLobHandler.DefaultLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html</Path>
    <Anchor>setClobAsString(java.sql.PreparedStatement, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClobAsString(PreparedStatement, int, String)</Name>
      <Type>intfm</Type>
      <Scope>LobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/LobCreator.html</Path>
    <Anchor>setClobAsString(java.sql.PreparedStatement, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClobAsString(PreparedStatement, int, String)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler.OracleLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html</Path>
    <Anchor>setClobAsString(java.sql.PreparedStatement, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCode(String)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>setCode(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCodebaseUrl(String)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html</Path>
    <Anchor>setCodebaseUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCollectionCacheStrategies(Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setCollectionCacheStrategies(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCols(String)</Name>
      <Type>instm</Type>
      <Scope>TextareaTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TextareaTag.html</Path>
    <Anchor>setCols(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColumnName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractColumnMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractColumnMaxValueIncrementer.html</Path>
    <Anchor>setColumnName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColumnNames(List&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>setColumnNames(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCommandClass(Class)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setCommandClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCommandClass(Class)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setCommandClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCommandInSession(ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
    <Anchor>setCommandInSession(javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCommandName(String)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setCommandName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCommandName(String)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setCommandName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCommandName(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setCommandName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCommentPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
    <Anchor>setCommentPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCommitted(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setCommitted(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCommitted(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>setCommitted(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setComparator(int, Comparator&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>setComparator(int, java.util.Comparator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setComparator(int, Comparator&amp;lt;T&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>setComparator(int, java.util.Comparator, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setComplete()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalDataSourceSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html</Path>
    <Anchor>setComplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setComplete()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>setComplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setComplete()</Name>
      <Type>intfm</Type>
      <Scope>SessionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SessionStatus.html</Path>
    <Anchor>setComplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setComplete()</Name>
      <Type>instm</Type>
      <Scope>SimpleSessionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SimpleSessionStatus.html</Path>
    <Anchor>setComplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCompleteAutoload(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setCompleteAutoload(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCompleteAutoload(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>setCompleteAutoload(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCompleted()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>setCompleted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrency(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setConcurrency(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrency(String)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setConcurrency(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrency(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>setConcurrency(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrencyLimit(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>setConcurrencyLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrencyLimit(int)</Name>
      <Type>instm</Type>
      <Scope>ConcurrencyThrottleSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrencyThrottleSupport.html</Path>
    <Anchor>setConcurrencyLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrent(boolean)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>setConcurrent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrentConsumers(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setConcurrentConsumers(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrentConsumers(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>setConcurrentConsumers(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrentExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>setConcurrentExecutor(edu.emory.mathcs.backport.java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConcurrentExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>setConcurrentExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCondition(String)</Name>
      <Type>instm</Type>
      <Scope>CacheOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperation.html</Path>
    <Anchor>setCondition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>EhCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html</Path>
    <Anchor>setConfigLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html</Path>
    <Anchor>setConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setConfigLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setConfigLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>setConfigLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>LocalPersistenceManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html</Path>
    <Anchor>setConfigLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setConfigLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setConfigLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>setConfigLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebApplicationContext.html</Path>
    <Anchor>setConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.html</Path>
    <Anchor>setConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>GenericWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/GenericWebApplicationContext.html</Path>
    <Anchor>setConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>StaticWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
    <Anchor>setConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html</Path>
    <Anchor>setConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>setConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html</Path>
    <Anchor>setConfigLocations(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setConfigLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setConfigLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>setConfigLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(String[])</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebApplicationContext.html</Path>
    <Anchor>setConfigLocations(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(String[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.html</Path>
    <Anchor>setConfigLocations(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(String[])</Name>
      <Type>instm</Type>
      <Scope>GenericWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/GenericWebApplicationContext.html</Path>
    <Anchor>setConfigLocations(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(String[])</Name>
      <Type>instm</Type>
      <Scope>StaticWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
    <Anchor>setConfigLocations(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(String[])</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html</Path>
    <Anchor>setConfigLocations(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigLocations(String[])</Name>
      <Type>instm</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>setConfigLocations(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfiguration(Configuration)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerConfigurer.html</Path>
    <Anchor>setConfiguration(freemarker.template.Configuration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfiguration(Configuration)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>setConfiguration(freemarker.template.Configuration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigurationClass(Class)</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>setConfigurationClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigurationClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setConfigurationClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigurers(List&amp;lt;WebMvcConfigurer&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>setConfigurers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>setConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>setConnectionFactory(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>setConnectionFactory(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>CciDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CciDaoSupport.html</Path>
    <Anchor>setConnectionFactory(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>EisOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/EisOperation.html</Path>
    <Anchor>setConnectionFactory(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>setConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>JmsGatewaySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/support/JmsGatewaySupport.html</Path>
    <Anchor>setConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>setConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>setConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionHolder(ConnectionHolder)</Name>
      <Type>instm</Type>
      <Scope>JdbcTransactionObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html</Path>
    <Anchor>setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionManager(ConnectionManager)</Name>
      <Type>instm</Type>
      <Scope>LocalConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/LocalConnectionFactoryBean.html</Path>
    <Anchor>setConnectionManager(javax.resource.spi.ConnectionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>AbstractDriverBasedDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDriverBasedDataSource.html</Path>
    <Anchor>setConnectionProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionSpec(ConnectionSpec)</Name>
      <Type>instm</Type>
      <Scope>ConnectionSpecConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html</Path>
    <Anchor>setConnectionSpec(javax.resource.cci.ConnectionSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionSpec(ConnectionSpec)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>setConnectionSpec(javax.resource.cci.ConnectionSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionSpecForCurrentThread(ConnectionSpec)</Name>
      <Type>instm</Type>
      <Scope>ConnectionSpecConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html</Path>
    <Anchor>setConnectionSpecForCurrentThread(javax.resource.cci.ConnectionSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectionType(Class&amp;lt;? extends Connection&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jdbc4NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/Jdbc4NativeJdbcExtractor.html</Path>
    <Anchor>setConnectionType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectLazily(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>setConnectLazily(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectOnStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setConnectOnStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectOnStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html</Path>
    <Anchor>setConnectOnStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>CommonsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
    <Anchor>setConnectTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>setConnectTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/SimpleClientHttpRequestFactory.html</Path>
    <Anchor>setConnectTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>setConnectTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>setConnectTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConnectTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html</Path>
    <Anchor>setConnectTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConstraintValidatorFactory(ConstraintValidatorFactory)</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>setConstraintValidatorFactory(javax.validation.ConstraintValidatorFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConstructorArgumentValues(ConstructorArgumentValues)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setConstructorArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConstructorResolvers(List&amp;lt;ConstructorResolver&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setConstructorResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContent(byte[])</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setContent(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContent(byte[])</Name>
      <Type>instm</Type>
      <Scope>MockClientDataRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockClientDataRequest.html</Path>
    <Anchor>setContent(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentDispositionFormData(String, String)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setContentDispositionFormData(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentDispositionMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsMultiFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.html</Path>
    <Anchor>setContentDispositionMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentLength(long)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setContentLength(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentLength(int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setContentLength(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentLength(int)</Name>
      <Type>instm</Type>
      <Scope>MockResourceResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockResourceResponse.html</Path>
    <Anchor>setContentLength(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentNegotiationManager(ContentNegotiationManager)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentNegotiationManager(ContentNegotiationManager)</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentNegotiationManager(ContentNegotiationManager)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentNegotiationManager(ContentNegotiationManager)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentNegotiationManager(ContentNegotiationManager)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(MediaType)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setContentType(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>MockClientDataRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockClientDataRequest.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentType(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContext(String)</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>setContext(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>setContextAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setContextAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextClass(Class)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>setContextClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setContextClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextClass(Class)</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>setContextClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextClassName(String)</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>setContextClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>setContextConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>setContextConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setContextConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>setContextConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextId(String)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setContextId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextInitializerClasses(String)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setContextInitializerClasses(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextInitializers(ApplicationContextInitializer&amp;lt;ConfigurableApplicationContext&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setContextInitializers(org.springframework.context.ApplicationContextInitializer...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextOverride(boolean)</Name>
      <Type>instm</Type>
      <Scope>ServletContextPropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html</Path>
    <Anchor>setContextOverride(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextPath(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setContextPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextPath(String)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>setContextPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextPath(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setContextPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextPath(String)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setContextPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextPaths(String...)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setContextPaths(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContextRelative(boolean)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>setContextRelative(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContexts(Map&amp;lt;String, HttpHandler&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>setContexts(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContinueOnError(boolean)</Name>
      <Type>instm</Type>
      <Scope>ResourceDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
    <Anchor>setContinueOnError(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContinueScheduledExecutionAfterException(boolean)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
    <Anchor>setContinueScheduledExecutionAfterException(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(ConversionService)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/ConfigurablePropertyAccessor.html</Path>
    <Anchor>setConversionService(org.springframework.core.convert.ConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(ConversionService)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>setConversionService(org.springframework.core.convert.ConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(ConversionService)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>setConversionService(org.springframework.core.convert.ConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(ConversionService)</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>setConversionService(org.springframework.core.convert.ConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(ConfigurableConversionService)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>setConversionService(org.springframework.core.convert.support.ConfigurableConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(ConfigurableConversionService)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>setConversionService(org.springframework.core.convert.support.ConfigurableConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(ConfigurableConversionService)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurablePropertyResolver.html</Path>
    <Anchor>setConversionService(org.springframework.core.convert.support.ConfigurableConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(FormattingConversionService)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setConversionService(org.springframework.format.support.FormattingConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(ConversionService)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setConversionService(org.springframework.core.convert.ConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConversionService(ConversionService)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>setConversionService(org.springframework.core.convert.ConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConverted()</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>setConverted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConvertedExporterParameters(Map&amp;lt;JRExporterParameter, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>setConvertedExporterParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConvertedValue(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>setConvertedValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConvertedValue(Object)</Name>
      <Type>instm</Type>
      <Scope>PropertyValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
    <Anchor>setConvertedValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConverters(Set&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ConversionServiceFactoryBean.html</Path>
    <Anchor>setConverters(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConverters(Set&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
    <Anchor>setConverters(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConverters(ConverterMatcher[])</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setConverters(com.thoughtworks.xstream.converters.ConverterMatcher[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCookieDomain(String)</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>setCookieDomain(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCookieHttpOnly(boolean)</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>setCookieHttpOnly(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCookieMaxAge(Integer)</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>setCookieMaxAge(java.lang.Integer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCookieName(String)</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>setCookieName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCookiePath(String)</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>setCookiePath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCookies(Cookie...)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setCookies(javax.servlet.http.Cookie...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCookies(Cookie...)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setCookies(javax.servlet.http.Cookie...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCookieSecure(boolean)</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>setCookieSecure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCorePoolSize(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setCorePoolSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCorePoolSize(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>setCorePoolSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCorePoolSize(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setCorePoolSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCredentialsForCurrentThread(String, String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html</Path>
    <Anchor>setCredentialsForCurrentThread(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCredentialsForCurrentThread(String, String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>setCredentialsForCurrentThread(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCronExpression(String)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setCronExpression(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCronTasks(Map&amp;lt;Runnable, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setCronTasks(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCronTasksList(List&amp;lt;CronTask&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setCronTasksList(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCssClass(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setCssClass(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCssErrorClass(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setCssErrorClass(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCssErrorClass(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setCssErrorClass(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCssStyle(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setCssStyle(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrency(Currency)</Name>
      <Type>instm</Type>
      <Scope>CurrencyFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/CurrencyFormatter.html</Path>
    <Anchor>setCurrency(java.util.Currency)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrencyTimeLimit(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmxAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/AbstractJmxAttribute.html</Path>
    <Anchor>setCurrencyTimeLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentlyInCreation(String, boolean)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>setCurrentlyInCreation(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentlyInCreation(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>setCurrentlyInCreation(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentTransactionIsolationLevel(Integer)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>setCurrentTransactionIsolationLevel(java.lang.Integer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentTransactionName(String)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>setCurrentTransactionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentTransactionReadOnly(boolean)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>setCurrentTransactionReadOnly(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolver(WebArgumentResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolver(WebArgumentResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolver(WebArgumentResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolver(WebArgumentResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolvers(HandlerMethodArgumentResolver...)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setCustomArgumentResolvers(org.springframework.web.method.support.HandlerMethodArgumentResolver...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolvers(WebArgumentResolver[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolvers(WebArgumentResolver[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolvers(WebArgumentResolver[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolvers(WebArgumentResolver[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolvers(List&amp;lt;HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>setCustomArgumentResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomArgumentResolvers(List&amp;lt;HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setCustomArgumentResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomEditors(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CustomEditorConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomEditorConfigurer.html</Path>
    <Anchor>setCustomEditors(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomModelAndViewResolver(ModelAndViewResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCustomModelAndViewResolver(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomModelAndViewResolver(ModelAndViewResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCustomModelAndViewResolver(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomModelAndViewResolvers(ModelAndViewResolver[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCustomModelAndViewResolvers(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomModelAndViewResolvers(ModelAndViewResolver[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setCustomModelAndViewResolvers(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setCustomProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomProperties(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setCustomProperties(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomPropertyMap(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setCustomPropertyMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomQualifierTypes(Set)</Name>
      <Type>instm</Type>
      <Scope>CustomAutowireConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html</Path>
    <Anchor>setCustomQualifierTypes(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomReturnValueHandlers(HandlerMethodReturnValueHandler...)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setCustomReturnValueHandlers(org.springframework.web.method.support.HandlerMethodReturnValueHandler...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomReturnValueHandlers(List&amp;lt;HandlerMethodReturnValueHandler&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>setCustomReturnValueHandlers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomReturnValueHandlers(List&amp;lt;HandlerMethodReturnValueHandler&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setCustomReturnValueHandlers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomSqlExceptionTranslator(SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setCustomSqlExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomSqlExceptionTranslatorClass(Class&amp;lt;? extends SQLExceptionTranslator&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setCustomSqlExceptionTranslatorClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomTargetSourceCreators(TargetSourceCreator[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>setCustomTargetSourceCreators(org.springframework.aop.framework.autoproxy.TargetSourceCreator[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCustomTranslations(CustomSQLErrorCodesTranslation[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setCustomTranslations(org.springframework.jdbc.support.CustomSQLErrorCodesTranslation[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDaemon(boolean)</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>setDaemon(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDaemon(boolean)</Name>
      <Type>instm</Type>
      <Scope>TimerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerFactoryBean.html</Path>
    <Anchor>setDaemon(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDaemon(boolean)</Name>
      <Type>instm</Type>
      <Scope>CustomizableThreadCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
    <Anchor>setDaemon(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataAccessResourceFailureCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setDataAccessResourceFailureCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabase(Database)</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html</Path>
    <Anchor>setDatabase(org.springframework.orm.jpa.vendor.Database)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabaseCleaner(DatabasePopulator)</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactoryBean.html</Path>
    <Anchor>setDatabaseCleaner(org.springframework.jdbc.datasource.init.DatabasePopulator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabaseCleaner(DatabasePopulator)</Name>
      <Type>instm</Type>
      <Scope>DataSourceInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DataSourceInitializer.html</Path>
    <Anchor>setDatabaseCleaner(org.springframework.jdbc.datasource.init.DatabasePopulator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabaseConfigurer(EmbeddedDatabaseConfigurer)</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html</Path>
    <Anchor>setDatabaseConfigurer(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabaseName(String)</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html</Path>
    <Anchor>setDatabaseName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabasePlatform(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html</Path>
    <Anchor>setDatabasePlatform(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabasePopulator(DatabasePopulator)</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html</Path>
    <Anchor>setDatabasePopulator(org.springframework.jdbc.datasource.init.DatabasePopulator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabasePopulator(DatabasePopulator)</Name>
      <Type>instm</Type>
      <Scope>DataSourceInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DataSourceInitializer.html</Path>
    <Anchor>setDatabasePopulator(org.springframework.jdbc.datasource.init.DatabasePopulator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabaseProductName(String)</Name>
      <Type>instm</Type>
      <Scope>JdbcAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcAccessor.html</Path>
    <Anchor>setDatabaseProductName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabaseProductName(String)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setDatabaseProductName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabaseProductName(String)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>setDatabaseProductName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabaseProductNames(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setDatabaseProductNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDatabaseType(EmbeddedDatabaseType)</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html</Path>
    <Anchor>setDatabaseType(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataBinderFactory(WebDataBinderFactory)</Name>
      <Type>instm</Type>
      <Scope>InvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/InvocableHandlerMethod.html</Path>
    <Anchor>setDataBinderFactory(org.springframework.web.bind.support.WebDataBinderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataIntegrityViolationCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setDataIntegrityViolationCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>JdbcBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/JdbcBeanDefinitionReader.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>JdbcDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/JdbcDaoSupport.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>DataSourceInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DataSourceInitializer.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>DatabaseStartupValidator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseStartupValidator.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataFieldMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>JdbcAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcAccessor.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/SqlMapClientDaoSupport.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalDataSourceSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractAnnotationAwareTransactionalTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
    <Anchor>setDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSourceFactory(DataSourceFactory)</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html</Path>
    <Anchor>setDataSourceFactory(org.springframework.jdbc.datasource.embedded.DataSourceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSourceLookup(DataSourceLookup)</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>setDataSourceLookup(org.springframework.jdbc.datasource.lookup.DataSourceLookup)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSourceLookup(DataSourceLookup)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setDataSourceLookup(org.springframework.jdbc.datasource.lookup.DataSourceLookup)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSources(Map&amp;lt;String, DataSource&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MapDataSourceLookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/MapDataSourceLookup.html</Path>
    <Anchor>setDataSources(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSources(Map&amp;lt;String, DataSource&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setDataSources(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDate(long)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setDate(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDateFormat(DateFormat)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setDateFormat(java.text.DateFormat)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDateFormat(DateFormat)</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setDateFormat(java.text.DateFormat)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDateFormatter(DateTimeFormatter)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.html</Path>
    <Anchor>setDateFormatter(org.joda.time.format.DateTimeFormatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDateHeader(String, long)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setDateHeader(java.lang.String, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDateStyle(String)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.html</Path>
    <Anchor>setDateStyle(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDateTimeFormatter(DateTimeFormatter)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.html</Path>
    <Anchor>setDateTimeFormatter(org.joda.time.format.DateTimeFormatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDateTimeStyle(String)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.html</Path>
    <Anchor>setDateTimeStyle(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDateToolAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>setDateToolAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDateToolAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityViewResolver.html</Path>
    <Anchor>setDateToolAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDeadlockLoserCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setDeadlockLoserCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDebug(boolean)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setDebug(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDebug(boolean)</Name>
      <Type>instm</Type>
      <Scope>HessianExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
    <Anchor>setDebug(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDeclarationOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>setDeclarationOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDecoratedDefinition(BeanDefinitionHolder)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>setDecoratedDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultAutoCommit(boolean)</Name>
      <Type>instm</Type>
      <Scope>LazyConnectionDataSourceProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.html</Path>
    <Anchor>setDefaultAutoCommit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultContentType(MediaType)</Name>
      <Type>instm</Type>
      <Scope>BufferedImageHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
    <Anchor>setDefaultContentType(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultContentType(MediaType)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>setDefaultContentType(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultContentType(MediaType)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setDefaultContentType(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultCurrencyTimeLimit(Integer)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>setDefaultCurrencyTimeLimit(java.lang.Integer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setDefaultDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultDestination(Destination)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setDefaultDestination(javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultDestinationName(String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setDefaultDestinationName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultDomain(String)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/annotation/AnnotationMBeanExporter.html</Path>
    <Anchor>setDefaultDomain(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultDomain(String)</Name>
      <Type>instm</Type>
      <Scope>MetadataNamingStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/MetadataNamingStrategy.html</Path>
    <Anchor>setDefaultDomain(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultDomain(String)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerFactoryBean.html</Path>
    <Anchor>setDefaultDomain(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>setDefaultEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>setDefaultEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>setDefaultEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setDefaultEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>CommonsFileUploadSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
    <Anchor>setDefaultEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>setDefaultEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultErrorView(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>setDefaultErrorView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultErrorView(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>setDefaultErrorView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultFileTypeMap(FileTypeMap)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>setDefaultFileTypeMap(javax.activation.FileTypeMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultFilterCondition(String)</Name>
      <Type>instm</Type>
      <Scope>FilterDefinitionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html</Path>
    <Anchor>setDefaultFilterCondition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultHandler(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setDefaultHandler(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultHandler(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setDefaultHandler(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultHtmlEscape(boolean)</Name>
      <Type>instm</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>setDefaultHtmlEscape(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultHtmlEscape(String)</Name>
      <Type>instm</Type>
      <Scope>HtmlEscapeTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/HtmlEscapeTag.html</Path>
    <Anchor>setDefaultHtmlEscape(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultJtaDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setDefaultJtaDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultListenerMethod(String)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>setDefaultListenerMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultLocale(Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/AbstractLocaleResolver.html</Path>
    <Anchor>setDefaultLocale(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultLocale(Locale)</Name>
      <Type>instm</Type>
      <Scope>CookieLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/CookieLocaleResolver.html</Path>
    <Anchor>setDefaultLocale(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>ParameterMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/ParameterMethodNameResolver.html</Path>
    <Anchor>setDefaultMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletConfig.html</Path>
    <Anchor>setDefaultNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultObject(Object)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>setDefaultObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultParentBean(String)</Name>
      <Type>instm</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>setDefaultParentBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultParentView(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>setDefaultParentView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultPersistenceUnitName(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setDefaultPersistenceUnitName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultPersistenceUnitName(String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>setDefaultPersistenceUnitName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultPersistenceUnitRootLocation(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setDefaultPersistenceUnitRootLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultProfiles(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>setDefaultProfiles(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultProfiles(String...)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurableEnvironment.html</Path>
    <Anchor>setDefaultProfiles(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultProperties(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StandardJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html</Path>
    <Anchor>setDefaultProperties(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultProxyTargetClass(boolean)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>setDefaultProxyTargetClass(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultRefreshCheckDelay(long)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>setDefaultRefreshCheckDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultResponseDestination(Destination)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>setDefaultResponseDestination(javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultResponseQueueName(String)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>setDefaultResponseQueueName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultResponseTopicName(String)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>setDefaultResponseTopicName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultRollback(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>setDefaultRollback(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultServletName(String)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>setDefaultServletName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultServletName(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultServletHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/DefaultServletHttpRequestHandler.html</Path>
    <Anchor>setDefaultServletName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultStatusCode(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>setDefaultStatusCode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultTargetDataSource(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>setDefaultTargetDataSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultThemeName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/AbstractThemeResolver.html</Path>
    <Anchor>setDefaultThemeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultThemeName(String)</Name>
      <Type>instm</Type>
      <Scope>CookieThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/CookieThemeResolver.html</Path>
    <Anchor>setDefaultThemeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>setDefaultTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultTimeout(long)</Name>
      <Type>instm</Type>
      <Scope>AsyncSupportConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/AsyncSupportConfigurer.html</Path>
    <Anchor>setDefaultTimeout(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultTransactionIsolation(int)</Name>
      <Type>instm</Type>
      <Scope>LazyConnectionDataSourceProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.html</Path>
    <Anchor>setDefaultTransactionIsolation(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultTransactionIsolationName(String)</Name>
      <Type>instm</Type>
      <Scope>LazyConnectionDataSourceProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.html</Path>
    <Anchor>setDefaultTransactionIsolationName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultUrl(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>setDefaultUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultValue(Object)</Name>
      <Type>instm</Type>
      <Scope>ManagedAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedAttribute.html</Path>
    <Anchor>setDefaultValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultViews(List&amp;lt;View&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setDefaultViews(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDeferredResultInterceptors(List&amp;lt;DeferredResultProcessingInterceptor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setDeferredResultInterceptors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefinitions(String[])</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesConfigurer.html</Path>
    <Anchor>setDefinitions(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefinitions(String[])</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setDefinitions(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefinitions(String[])</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>setDefinitions(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefinitionsFactoryClass(Class&amp;lt;? extends DefinitionsFactory&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setDefinitionsFactoryClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefinitionsFactoryClass(Class&amp;lt;? extends DefinitionsFactory&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>setDefinitionsFactoryClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelay(long)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>setDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelay(long)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>setDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelay(long)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>setDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelay(long)</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>setDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelegate(Object)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>setDelegate(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelegate(Object)</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>setDelegate(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelimiter(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMultiCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html</Path>
    <Anchor>setDelimiter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelimiter(String)</Name>
      <Type>instm</Type>
      <Scope>ErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
    <Anchor>setDelimiter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDeliveryMode(int)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setDeliveryMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDeliveryPersistent(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setDeliveryPersistent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDependencyCheck(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setDependencyCheck(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDependencyCheck(int)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setDependencyCheck(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDependencyCheck(int)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionDefaults</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionDefaults.html</Path>
    <Anchor>setDependencyCheck(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDependencyCheck(String)</Name>
      <Type>instm</Type>
      <Scope>DocumentDefaultsDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
    <Anchor>setDependencyCheck(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDependencyCheck(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>setDependencyCheck(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDependsOn(String[])</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>setDependsOn(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDependsOn(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setDependsOn(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDescendingOrder(int)</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>setDescendingOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDescription(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setDescription(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDescription(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmxAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/AbstractJmxAttribute.html</Path>
    <Anchor>setDescription(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDescription(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedNotification</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedNotification.html</Path>
    <Anchor>setDescription(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDescription(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedOperationParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedOperationParameter.html</Path>
    <Anchor>setDescription(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDescription(String)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setDescription(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDeserializersByType(Map&amp;lt;Class&amp;lt;?&amp;gt;, JsonDeserializer&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setDeserializersByType(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestination(Destination)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setDestination(javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestinationName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setDestinationName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestinationName(String)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setDestinationName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestinationResolver(DestinationResolver)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestinationResolver(DestinationResolver)</Name>
      <Type>instm</Type>
      <Scope>JmsMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.html</Path>
    <Anchor>setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestinationResolver(DestinationResolver)</Name>
      <Type>instm</Type>
      <Scope>StandardJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html</Path>
    <Anchor>setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestinationResolver(DestinationResolver)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestinationResolver(DestinationResolver)</Name>
      <Type>instm</Type>
      <Scope>JmsDestinationAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JmsDestinationAccessor.html</Path>
    <Anchor>setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestroyAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>InitDestroyAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html</Path>
    <Anchor>setDestroyAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestroyMethod(String)</Name>
      <Type>instm</Type>
      <Scope>DocumentDefaultsDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
    <Anchor>setDestroyMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestroyMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setDestroyMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestroyMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setDestroyMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDestroyMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionDefaults</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionDefaults.html</Path>
    <Anchor>setDestroyMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectAllHandlerAdapters(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>setDetectAllHandlerAdapters(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectAllHandlerAdapters(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>setDetectAllHandlerAdapters(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectAllHandlerExceptionResolvers(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>setDetectAllHandlerExceptionResolvers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectAllHandlerExceptionResolvers(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>setDetectAllHandlerExceptionResolvers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectAllHandlerMappings(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>setDetectAllHandlerMappings(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectAllHandlerMappings(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>setDetectAllHandlerMappings(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectAllViewResolvers(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>setDetectAllViewResolvers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectAllViewResolvers(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>setDetectAllViewResolvers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectHandlerMethodsInAncestorContexts(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>setDetectHandlerMethodsInAncestorContexts(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetectHandlersInAncestorContexts(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractDetectingUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.html</Path>
    <Anchor>setDetectHandlersInAncestorContexts(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDir(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setDir(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirectFieldAccess(boolean)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>setDirectFieldAccess(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty()</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>setDirty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSpringContextTests.html</Path>
    <Anchor>setDirty(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty()</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>setDirty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisableCaching(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setDisableCaching(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisableCaching(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setDisableCaching(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setDisabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisabled(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>setDisabled(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisabled(String)</Name>
      <Type>instm</Type>
      <Scope>ButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
    <Anchor>setDisabled(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisabled(String)</Name>
      <Type>instm</Type>
      <Scope>HiddenInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/HiddenInputTag.html</Path>
    <Anchor>setDisabled(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisabled(String)</Name>
      <Type>instm</Type>
      <Scope>OptionsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionsTag.html</Path>
    <Anchor>setDisabled(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisabled(String)</Name>
      <Type>instm</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>setDisabled(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisallowedFields(String...)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setDisallowedFields(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDiskExpiryThreadIntervalSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setDiskExpiryThreadIntervalSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDiskPersistent(boolean)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setDiskPersistent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDiskSpoolBufferSize(int)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setDiskSpoolBufferSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDispatchOptionsRequest(boolean)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setDispatchOptionsRequest(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDispatchTraceRequest(boolean)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setDispatchTraceRequest(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisplayName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>setDisplayName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisplayName(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedMetric</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedMetric.html</Path>
    <Anchor>setDisplayName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDocTypeInternalSubset(String)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setDocTypeInternalSubset(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDocTypePublicId(String)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setDocTypePublicId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDocTypeRootElementName(String)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setDocTypeRootElementName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDocTypeSystemId(String)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setDocTypeSystemId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDocumentLoader(DocumentLoader)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setDocumentLoader(org.springframework.beans.factory.xml.DocumentLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDocumentReaderClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setDocumentReaderClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDriver(Driver)</Name>
      <Type>instm</Type>
      <Scope>SimpleDriverDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleDriverDataSource.html</Path>
    <Anchor>setDriver(java.sql.Driver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDriverClass(Class&amp;lt;? extends Driver&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConnectionProperties</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/ConnectionProperties.html</Path>
    <Anchor>setDriverClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDriverClass(Class&amp;lt;? extends Driver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleDriverDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleDriverDataSource.html</Path>
    <Anchor>setDriverClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDriverClassName(String)</Name>
      <Type>instm</Type>
      <Scope>DriverManagerDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DriverManagerDataSource.html</Path>
    <Anchor>setDriverClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDummyName(String)</Name>
      <Type>instm</Type>
      <Scope>DerbyMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/DerbyMaxValueIncrementer.html</Path>
    <Anchor>setDummyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDuplicateKeyCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setDuplicateKeyCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDurability(boolean)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setDurability(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDurableSubscriptionName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setDurableSubscriptionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDurableSubscriptionName(String)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setDurableSubscriptionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDynamic()</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>setDynamic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDynamicAttribute(String, String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setDynamicAttribute(java.lang.String, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDynamicDestinationResolver(DestinationResolver)</Name>
      <Type>instm</Type>
      <Scope>JndiDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JndiDestinationResolver.html</Path>
    <Anchor>setDynamicDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEarlyFlushBeforeCommit(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setEarlyFlushBeforeCommit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEffectiveMajorVersion(int)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>setEffectiveMajorVersion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEffectiveMinorVersion(int)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>setEffectiveMinorVersion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setElement(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMultiCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html</Path>
    <Anchor>setElement(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setElement(String)</Name>
      <Type>instm</Type>
      <Scope>ErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
    <Anchor>setElement(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setElementTypeName(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedList.html</Path>
    <Anchor>setElementTypeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setElementTypeName(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedSet.html</Path>
    <Anchor>setElementTypeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>intfm</Type>
      <Scope>EmbeddedValueResolverAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/EmbeddedValueResolverAware.html</Path>
    <Anchor>setEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatAnnotationFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateTimeFormatAnnotationFormatterFactory.html</Path>
    <Anchor>setEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>JodaDateTimeFormatAnnotationFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaDateTimeFormatAnnotationFormatterFactory.html</Path>
    <Anchor>setEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>NumberFormatAnnotationFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/NumberFormatAnnotationFormatterFactory.html</Path>
    <Anchor>setEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionService.html</Path>
    <Anchor>setEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
    <Anchor>setEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>ScheduledAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html</Path>
    <Anchor>setEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>setEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>DataSourceInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DataSourceInitializer.html</Path>
    <Anchor>setEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>setEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>setEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ResourceScriptSource.html</Path>
    <Anchor>setEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>CharacterEncodingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CharacterEncodingFilter.html</Path>
    <Anchor>setEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>setEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(JsonEncoding)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setEncoding(com.fasterxml.jackson.core.JsonEncoding)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(JsonEncoding)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setEncoding(org.codehaus.jackson.JsonEncoding)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>setEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncodingPropertyName(String)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>setEncodingPropertyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncodingPropertyName(String)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>setEncodingPropertyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEncodingScheme(String)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>setEncodingScheme(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnctype(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setEnctype(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEndpointAddress(String)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setEndpointAddress(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEndpointAddress(String)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setEndpointAddress(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEndpointProperties(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>setEndpointProperties(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnforceDestroyMethod(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setEnforceDestroyMethod(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnforceInitMethod(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setEnforceInitMethod(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnsureUniqueRuntimeObjectNames(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setEnsureUniqueRuntimeObjectNames(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnterMessage(String)</Name>
      <Type>instm</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>setEnterMessage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityCacheStrategies(Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setEntityCacheStrategies(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityInterceptor(Interceptor)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>setEntityInterceptor(org.hibernate.Interceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityInterceptor(Interceptor)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setEntityInterceptor(org.hibernate.Interceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityInterceptor(Interceptor)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setEntityInterceptor(org.hibernate.Interceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityInterceptor(Interceptor)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setEntityInterceptor(org.hibernate.Interceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityInterceptorBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>setEntityInterceptorBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityInterceptorBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setEntityInterceptorBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManager(EntityManager)</Name>
      <Type>instm</Type>
      <Scope>JpaAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaAccessor.html</Path>
    <Anchor>setEntityManager(javax.persistence.EntityManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManager(EntityManager)</Name>
      <Type>instm</Type>
      <Scope>JpaDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/JpaDaoSupport.html</Path>
    <Anchor>setEntityManager(javax.persistence.EntityManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManagerFactory(EntityManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>EntityManagerFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryAccessor.html</Path>
    <Anchor>setEntityManagerFactory(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManagerFactory(EntityManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>setEntityManagerFactory(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManagerFactory(EntityManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>JpaDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/JpaDaoSupport.html</Path>
    <Anchor>setEntityManagerFactory(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManagerFactory(EntityManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>setEntityManagerFactory(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManagerFactoryBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.html</Path>
    <Anchor>setEntityManagerFactoryBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManagerFactoryInterface(Class&amp;lt;? extends EntityManagerFactory&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setEntityManagerFactoryInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManagerInterface(Class&amp;lt;? extends EntityManager&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setEntityManagerInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityManagerInterface(Class&amp;lt;? extends EntityManager&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SharedEntityManagerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/SharedEntityManagerBean.html</Path>
    <Anchor>setEntityManagerInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityResolver(EntityResolver)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setEntityResolver(org.xml.sax.EntityResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEntityTypeFilters(TypeFilter[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>setEntityTypeFilters(org.springframework.core.type.filter.TypeFilter[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinitionReader.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionDocumentReader.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>instm</Type>
      <Scope>AnnotatedBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(ConfigurableEnvironment)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.ConfigurableEnvironment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(ConfigurableEnvironment)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.ConfigurableEnvironment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>intfm</Type>
      <Scope>EnvironmentAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/EnvironmentAware.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(ConfigurableEnvironment)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.ConfigurableEnvironment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(ConfigurableEnvironment)</Name>
      <Type>instm</Type>
      <Scope>GenericXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericXmlApplicationContext.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.ConfigurableEnvironment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>instm</Type>
      <Scope>PropertySourcesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/PropertySourcesPlaceholderConfigurer.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setEnvironment(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/NotificationListenerRegistrar.html</Path>
    <Anchor>setEnvironment(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Properties)</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>setEnvironment(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Properties)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html</Path>
    <Anchor>setEnvironment(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Properties)</Name>
      <Type>instm</Type>
      <Scope>JndiTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiTemplate.html</Path>
    <Anchor>setEnvironment(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>instm</Type>
      <Scope>GenericFilterBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/GenericFilterBean.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>instm</Type>
      <Scope>GenericPortletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/GenericPortletBean.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironment(Environment)</Name>
      <Type>instm</Type>
      <Scope>HttpServletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HttpServletBean.html</Path>
    <Anchor>setEnvironment(org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>setEnvironmentMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html</Path>
    <Anchor>setEnvironmentMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>CustomSQLErrorCodesTranslation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLErrorCodesTranslation.html</Path>
    <Anchor>setErrorCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorHandler(ErrorHandler)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setErrorHandler(org.xml.sax.ErrorHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorHandler(ErrorHandler)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setErrorHandler(org.springframework.util.ErrorHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorHandler(ErrorHandler)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerTaskScheduler.html</Path>
    <Anchor>setErrorHandler(org.springframework.util.ErrorHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorHandler(ErrorHandler)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>setErrorHandler(org.springframework.util.ErrorHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorHandler(ErrorHandler)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>setErrorHandler(org.springframework.util.ErrorHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorHandler(ResponseErrorHandler)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>setErrorHandler(org.springframework.web.client.ResponseErrorHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorListener(ErrorListener)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setErrorListener(javax.xml.transform.ErrorListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorListener(ErrorListener)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>setErrorListener(javax.xml.transform.ErrorListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorListener(ErrorListener)</Name>
      <Type>instm</Type>
      <Scope>XsltViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltViewResolver.html</Path>
    <Anchor>setErrorListener(javax.xml.transform.ErrorListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setErrorResult(Object)</Name>
      <Type>instm</Type>
      <Scope>DeferredResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.html</Path>
    <Anchor>setErrorResult(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setETag(String)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setETag(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setETag(String)</Name>
      <Type>instm</Type>
      <Scope>MockCacheControl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockCacheControl.html</Path>
    <Anchor>setETag(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEternal(boolean)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setEternal(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEvaluationContext(EvaluationContext)</Name>
      <Type>instm</Type>
      <Scope>SpelExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpression.html</Path>
    <Anchor>setEvaluationContext(org.springframework.expression.EvaluationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEvent(QName, Serializable)</Name>
      <Type>instm</Type>
      <Scope>MockStateAwareResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockStateAwareResponse.html</Path>
    <Anchor>setEvent(javax.xml.namespace.QName, java.io.Serializable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEvent(String, Serializable)</Name>
      <Type>instm</Type>
      <Scope>MockStateAwareResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockStateAwareResponse.html</Path>
    <Anchor>setEvent(java.lang.String, java.io.Serializable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEventListener(ReaderEventListener)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setEventListener(org.springframework.beans.factory.parsing.ReaderEventListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEventListeners(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setEventListeners(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>setExceptionAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>setExceptionAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionClass(Class)</Name>
      <Type>instm</Type>
      <Scope>CustomSQLErrorCodesTranslation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLErrorCodesTranslation.html</Path>
    <Anchor>setExceptionClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionConversionEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateInterceptor.html</Path>
    <Anchor>setExceptionConversionEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionConversionEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdoInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoInterceptor.html</Path>
    <Anchor>setExceptionConversionEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionConversionEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>JpaInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaInterceptor.html</Path>
    <Anchor>setExceptionConversionEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionListener(ExceptionListener)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>setExceptionListener(javax.jms.ExceptionListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionListener(ExceptionListener)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setExceptionListener(javax.jms.ExceptionListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>setExceptionMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>setExceptionMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionMessage(String)</Name>
      <Type>instm</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>setExceptionMessage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionResolvers(List&amp;lt;HandlerExceptionResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HandlerExceptionResolverComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerExceptionResolverComposite.html</Path>
    <Anchor>setExceptionResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExceptionTranslator(SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>JdbcAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcAccessor.html</Path>
    <Anchor>setExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExcludedBeans(String[])</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setExcludedBeans(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExcludedClasses(Class[])</Name>
      <Type>instm</Type>
      <Scope>AbstractControllerUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
    <Anchor>setExcludedClasses(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExcludedExceptions(Class&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>setExcludedExceptions(java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExcludedPackages(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractControllerUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
    <Anchor>setExcludedPackages(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExcludedPattern(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
    <Anchor>setExcludedPattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExcludedPatterns(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
    <Anchor>setExcludedPatterns(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExcludeUnlistedClasses(boolean)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setExcludeUnlistedClasses(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>AsyncExecutionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.html</Path>
    <Anchor>setExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>setExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxWsServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.html</Path>
    <Anchor>setExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>setExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>AsyncAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationBeanPostProcessor.html</Path>
    <Anchor>setExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExitMessage(String)</Name>
      <Type>instm</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>setExitMessage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpandUriTemplateVariables(boolean)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>setExpandUriTemplateVariables(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpectedType(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectLocator.html</Path>
    <Anchor>setExpectedType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpirationTime(int)</Name>
      <Type>instm</Type>
      <Scope>MockCacheControl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockCacheControl.html</Path>
    <Anchor>setExpirationTime(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpires(long)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setExpires(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExplicitQosEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setExplicitQosEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExporterClass(Class&amp;lt;? extends JRExporter&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html</Path>
    <Anchor>setExporterClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExporterParameters(Map&amp;lt;?, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>setExporterParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExporterParameters(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html</Path>
    <Anchor>setExporterParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeAccessContext(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>setExposeAccessContext(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeAccessContext(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>setExposeAccessContext(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeAccessContext(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>setExposeAccessContext(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeClassDescriptor(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>setExposeClassDescriptor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeContextBeansAsAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>setExposeContextBeansAsAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeContextBeansAsAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceViewResolver.html</Path>
    <Anchor>setExposeContextBeansAsAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposedContextBeanNames(String[])</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>setExposedContextBeanNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposedContextBeanNames(String[])</Name>
      <Type>instm</Type>
      <Scope>InternalResourceViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceViewResolver.html</Path>
    <Anchor>setExposedContextBeanNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeForwardAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>setExposeForwardAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeJstlAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesView.html</Path>
    <Anchor>setExposeJstlAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeListenerSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setExposeListenerSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeManagedResourceClassLoader(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setExposeManagedResourceClassLoader(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeModelAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>setExposeModelAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeNativeEntityManager(boolean)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>setExposeNativeEntityManager(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeNativePersistenceManager(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>setExposeNativePersistenceManager(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeNativeSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>setExposeNativeSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposePathVariables(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>setExposePathVariables(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposePathVariables(Boolean)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setExposePathVariables(java.lang.Boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeProxy(boolean)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>setExposeProxy(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeProxy(boolean)</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>setExposeProxy(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeRequestAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>setExposeRequestAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeRequestAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateViewResolver.html</Path>
    <Anchor>setExposeRequestAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeSchedulerInRepository(boolean)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setExposeSchedulerInRepository(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeSessionAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>setExposeSessionAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeSessionAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateViewResolver.html</Path>
    <Anchor>setExposeSessionAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeSpringMacroHelpers(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>setExposeSpringMacroHelpers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeSpringMacroHelpers(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateViewResolver.html</Path>
    <Anchor>setExposeSpringMacroHelpers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeTransactionAwareSessionFactory(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>setExposeTransactionAwareSessionFactory(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeUnconfigurableExecutor(boolean)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
    <Anchor>setExposeUnconfigurableExecutor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExposeUnconfigurableExecutor(boolean)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>setExposeUnconfigurableExecutor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpression(String)</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcutAdvisor.html</Path>
    <Anchor>setExpression(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpression(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractExpressionPointcut.html</Path>
    <Anchor>setExpression(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpression(String)</Name>
      <Type>instm</Type>
      <Scope>EvalTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EvalTag.html</Path>
    <Anchor>setExpression(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpressionParser(ExpressionParser)</Name>
      <Type>instm</Type>
      <Scope>StandardBeanExpressionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/StandardBeanExpressionResolver.html</Path>
    <Anchor>setExpressionParser(org.springframework.expression.ExpressionParser)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpressionPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>StandardBeanExpressionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/StandardBeanExpressionResolver.html</Path>
    <Anchor>setExpressionPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExpressionSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>StandardBeanExpressionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/StandardBeanExpressionResolver.html</Path>
    <Anchor>setExpressionSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtendedPersistenceContexts(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>setExtendedPersistenceContexts(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtractOldValueForEditor(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
    <Anchor>setExtractOldValueForEditor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtractOldValueForEditor(boolean)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/ConfigurablePropertyAccessor.html</Path>
    <Anchor>setExtractOldValueForEditor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtractOldValueForEditor(boolean)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setExtractOldValueForEditor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtractValueFromSingleKeyModel(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setExtractValueFromSingleKeyModel(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtractValueFromSingleKeyModel(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setExtractValueFromSingleKeyModel(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SetFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>SetFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SetFactoryBean.html</Path>
    <Anchor>SetFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFactoryBean(String, String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setFactoryBean(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFactoryBeanName(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>setFactoryBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFactoryBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setFactoryBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFactoryClass(Class)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesConfigurer.html</Path>
    <Anchor>setFactoryClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFactoryMethod(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setFactoryMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFactoryMethodName(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>setFactoryMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFactoryMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setFactoryMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFailEarlyOnGlobalRollbackOnly(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>setFailEarlyOnGlobalRollbackOnly(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFailOnEmptyBeans(boolean)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setFailOnEmptyBeans(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFailOnEmptyBeans(boolean)</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setFailOnEmptyBeans(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFailureMessage(String)</Name>
      <Type>instm</Type>
      <Scope>AssertThrows</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AssertThrows.html</Path>
    <Anchor>setFailureMessage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFallbackToDefaultTypeMatch(boolean)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>setFallbackToDefaultTypeMatch(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFallbackToDynamicDestination(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JndiDestinationResolver.html</Path>
    <Anchor>setFallbackToDynamicDestination(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFallbackToNoOpCache(boolean)</Name>
      <Type>instm</Type>
      <Scope>CompositeCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/CompositeCacheManager.html</Path>
    <Anchor>setFallbackToNoOpCache(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFallbackToSystemLocale(boolean)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>setFallbackToSystemLocale(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFallbackToSystemLocale(boolean)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ResourceBundleMessageSource.html</Path>
    <Anchor>setFallbackToSystemLocale(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFallbackTranslator(SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>AbstractFallbackSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/AbstractFallbackSQLExceptionTranslator.html</Path>
    <Anchor>setFallbackTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFavorParameter(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>setFavorParameter(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFavorParameter(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setFavorParameter(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFavorPathExtension(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>setFavorPathExtension(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFavorPathExtension(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setFavorPathExtension(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFeaturesToDisable(Object...)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setFeaturesToDisable(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFeaturesToDisable(Object[])</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setFeaturesToDisable(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFeaturesToEnable(Object...)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setFeaturesToEnable(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFeaturesToEnable(Object[])</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setFeaturesToEnable(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFeedType(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAtomFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html</Path>
    <Anchor>setFeedType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFetchSize(int)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>setFetchSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFetchSize(int)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setFetchSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFetchSize(int)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>setFetchSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setField(Object, String, Object)</Name>
      <Type>clm</Type>
      <Scope>ReflectionTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/ReflectionTestUtils.html</Path>
    <Anchor>setField(java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setField(Object, String, Object, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ReflectionTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/ReflectionTestUtils.html</Path>
    <Anchor>setField(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setField(Field, Object, Object)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>setField(java.lang.reflect.Field, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFieldAliases(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setFieldAliases(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFieldDefaultPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>setFieldDefaultPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFieldMarkerPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>setFieldMarkerPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFileEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>PropertiesLoaderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
    <Anchor>setFileEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFileEncodings(Properties)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>setFileEncodings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFileTypeMap(FileTypeMap)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setFileTypeMap(javax.activation.FileTypeMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFilterDefinitions(FilterDefinition[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setFilterDefinitions(org.hibernate.engine.FilterDefinition[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFilterName(String)</Name>
      <Type>instm</Type>
      <Scope>FilterDefinitionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html</Path>
    <Anchor>setFilterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFilterName(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>setFilterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFilterNames(String[])</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>setFilterNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFilters(List&amp;lt;Filter&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>setFilters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFilters(List&amp;lt;Filter&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>setFilters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFilters(List&amp;lt;? extends Filter&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CompositeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CompositeFilter.html</Path>
    <Anchor>setFilters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFinishRenderParameter(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setFinishRenderParameter(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFixedDelayTasks(Map&amp;lt;Runnable, Long&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setFixedDelayTasks(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFixedDelayTasksList(List&amp;lt;IntervalTask&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setFixedDelayTasksList(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFixedRate(boolean)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>setFixedRate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFixedRate(boolean)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>setFixedRate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFixedRate(boolean)</Name>
      <Type>instm</Type>
      <Scope>PeriodicTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/PeriodicTrigger.html</Path>
    <Anchor>setFixedRate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFixedRate(boolean)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>setFixedRate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFixedRateTasks(Map&amp;lt;Runnable, Long&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setFixedRateTasks(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFixedRateTasksList(List&amp;lt;IntervalTask&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setFixedRateTasksList(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFlashMapManager(FlashMapManager)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setFlashMapManager(org.springframework.web.servlet.FlashMapManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFlashMapTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractFlashMapManager.html</Path>
    <Anchor>setFlashMapTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFlushEager(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdoAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoAccessor.html</Path>
    <Anchor>setFlushEager(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFlushEager(boolean)</Name>
      <Type>instm</Type>
      <Scope>JpaAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaAccessor.html</Path>
    <Anchor>setFlushEager(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFlushMode(int)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>setFlushMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFlushMode(FlushMode)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html</Path>
    <Anchor>setFlushMode(org.hibernate.FlushMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFlushModeName(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>setFlushModeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFor(String)</Name>
      <Type>instm</Type>
      <Scope>LabelTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/LabelTag.html</Path>
    <Anchor>setFor(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setForceEncoding(boolean)</Name>
      <Type>instm</Type>
      <Scope>CharacterEncodingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CharacterEncodingFilter.html</Path>
    <Anchor>setForceEncoding(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormatKey(String)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsMultiFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.html</Path>
    <Anchor>setFormatKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormatMappings(Map&amp;lt;String, Class&amp;lt;? extends AbstractJasperReportsView&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsMultiFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.html</Path>
    <Anchor>setFormatMappings(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormatter(DateFormatter)</Name>
      <Type>instm</Type>
      <Scope>DateFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatterRegistrar.html</Path>
    <Anchor>setFormatter(org.springframework.format.datetime.DateFormatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormatterRegistrars(Set&amp;lt;FormatterRegistrar&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
    <Anchor>setFormatterRegistrars(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormatters(Set&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
    <Anchor>setFormatters(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormSubmit(ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>setFormSubmit(javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormView(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>setFormView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormView(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>setFormView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setForwardActionException(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>setForwardActionException(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setForwardedUrl(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setForwardedUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setForwardedUrl(String)</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>setForwardedUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setForwarder(MBeanServerForwarder)</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>setForwarder(javax.management.remote.MBeanServerForwarder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setForwardEventException(boolean)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>setForwardEventException(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFractionDigits(int)</Name>
      <Type>instm</Type>
      <Scope>CurrencyFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/CurrencyFormatter.html</Path>
    <Anchor>setFractionDigits(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFreemarkerSettings(Properties)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setFreemarkerSettings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFreemarkerVariables(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setFreemarkerVariables(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrom(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setFrom(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrom(InternetAddress)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setFrom(javax.mail.internet.InternetAddress)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrom(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setFrom(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrom(String, String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setFrom(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrom(String)</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setFrom(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrom(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setFrom(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrozen(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>setFrozen(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrozen(boolean)</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>setFrozen(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrozen(boolean)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setFrozen(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFunction(boolean)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>setFunction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFunction(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>setFunction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFunction(boolean)</Name>
      <Type>instm</Type>
      <Scope>SqlCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlCall.html</Path>
    <Anchor>setFunction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFunctionReturnName(String)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>setFunctionReturnName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGenerateDdl(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html</Path>
    <Anchor>setGenerateDdl(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGeneratedKeyName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>setGeneratedKeyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGeneratedKeyNames(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>setGeneratedKeyNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGeneratedKeysColumnNameArraySupported(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>setGeneratedKeysColumnNameArraySupported(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGeneratedKeysColumnNames(String[])</Name>
      <Type>instm</Type>
      <Scope>PreparedStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
    <Anchor>setGeneratedKeysColumnNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGeneratedKeysColumnNames(String[])</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setGeneratedKeysColumnNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGetGeneratedKeysSupported(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>setGetGeneratedKeysSupported(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGlobalJobListeners(JobListener[])</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setGlobalJobListeners(org.quartz.JobListener[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGlobalRollbackOnParticipationFailure(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>setGlobalRollbackOnParticipationFailure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGlobalTriggerListeners(TriggerListener[])</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setGlobalTriggerListeners(org.quartz.TriggerListener[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGroup(String)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setGroup(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGroup(String)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setGroup(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGroup(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>setGroup(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGroup(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setGroup(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHandback(Object)</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/NotificationListenerHolder.html</Path>
    <Anchor>setHandback(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHandlerExceptionResolvers(List&amp;lt;HandlerExceptionResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setHandlerExceptionResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite)</Name>
      <Type>instm</Type>
      <Scope>InvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/InvocableHandlerMethod.html</Path>
    <Anchor>setHandlerMethodArgumentResolvers(org.springframework.web.method.support.HandlerMethodArgumentResolverComposite)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite)</Name>
      <Type>instm</Type>
      <Scope>ServletInvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.html</Path>
    <Anchor>setHandlerMethodReturnValueHandlers(org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHandlerResolver(HandlerResolver)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxWsServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.html</Path>
    <Anchor>setHandlerResolver(javax.xml.ws.handler.HandlerResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeader(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setHeader(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeaders(HttpServletResponse, Resource, MediaType)</Name>
      <Type>instm</Type>
      <Scope>ResourceHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html</Path>
    <Anchor>setHeaders(javax.servlet.http.HttpServletResponse, org.springframework.core.io.Resource, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeaders(Properties)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>setHeaders(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeaders(Properties)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html</Path>
    <Anchor>setHeaders(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHessian2(boolean)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setHessian2(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHessian2Reply(boolean)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setHessian2Reply(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHessian2Request(boolean)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setHessian2Request(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHibernateManagedSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setHibernateManagedSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHibernateManagedSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>setHibernateManagedSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHibernateProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setHibernateProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHibernateProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setHibernateProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHibernateTemplate(HibernateTemplate)</Name>
      <Type>instm</Type>
      <Scope>HibernateDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/HibernateDaoSupport.html</Path>
    <Anchor>setHibernateTemplate(org.springframework.orm.hibernate3.HibernateTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHideProxyClassNames(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
    <Anchor>setHideProxyClassNames(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHomeInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>setHomeInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHost(String)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>setHost(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHost(String)</Name>
      <Type>instm</Type>
      <Scope>RmiRegistryFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
    <Anchor>setHost(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHostname(String)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/ProxyFactoryBean.html</Path>
    <Anchor>setHostname(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHostname(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>setHostname(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHostname(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>setHostname(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHtmlEscape(String)</Name>
      <Type>instm</Type>
      <Scope>HtmlEscapingAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/HtmlEscapingAwareTag.html</Path>
    <Anchor>setHtmlEscape(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHttp10Compatible(boolean)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>setHttp10Compatible(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHttpClient(HttpClient)</Name>
      <Type>instm</Type>
      <Scope>CommonsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
    <Anchor>setHttpClient(org.apache.commons.httpclient.HttpClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHttpClient(HttpClient)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>setHttpClient(org.apache.http.client.HttpClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHttpClient(HttpClient)</Name>
      <Type>instm</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>setHttpClient(org.apache.commons.httpclient.HttpClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHttpClient(HttpClient)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>setHttpClient(org.apache.http.client.HttpClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html</Path>
    <Anchor>setHttpInvokerRequestExecutor(org.springframework.remoting.httpinvoker.HttpInvokerRequestExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setId(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>setId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setId(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>setId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setId(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html</Path>
    <Anchor>setId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setId(String)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>setId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setId(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>setId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIdleConsumerLimit(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setIdleConsumerLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIdleTaskExecutionLimit(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setIdleTaskExecutionLimit(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIfModifiedSince(long)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setIfModifiedSince(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIfNoneMatch(String)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setIfNoneMatch(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIfNoneMatch(List&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setIfNoneMatch(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreAcceptHeader(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>setIgnoreAcceptHeader(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreAcceptHeader(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setIgnoreAcceptHeader(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreCase(boolean)</Name>
      <Type>instm</Type>
      <Scope>MutableSortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/MutableSortDefinition.html</Path>
    <Anchor>setIgnoreCase(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreDefaultModelOnRedirect(boolean)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>setIgnoreDefaultModelOnRedirect(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreDefaultModelOnRedirect(boolean)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setIgnoreDefaultModelOnRedirect(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoredMethodMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>MethodExclusionMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html</Path>
    <Anchor>setIgnoredMethodMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoredMethods(String[])</Name>
      <Type>instm</Type>
      <Scope>MethodExclusionMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html</Path>
    <Anchor>setIgnoredMethods(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoredUnknownProperties(String[])</Name>
      <Type>instm</Type>
      <Scope>SpringBeanJobFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SpringBeanJobFactory.html</Path>
    <Anchor>setIgnoredUnknownProperties(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreExtraAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setIgnoreExtraAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreExtraElements(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setIgnoreExtraElements(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreFailedDrops(boolean)</Name>
      <Type>instm</Type>
      <Scope>ResourceDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
    <Anchor>setIgnoreFailedDrops(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreInvalidFields(boolean)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setIgnoreInvalidFields(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreInvalidKeys(boolean)</Name>
      <Type>instm</Type>
      <Scope>PropertyOverrideConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html</Path>
    <Anchor>setIgnoreInvalidKeys(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreInvalidRequests(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerServiceExporter.html</Path>
    <Anchor>setIgnoreInvalidRequests(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreNestedPath(boolean)</Name>
      <Type>instm</Type>
      <Scope>BindTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindTag.html</Path>
    <Anchor>setIgnoreNestedPath(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreResourceNotFound(boolean)</Name>
      <Type>instm</Type>
      <Scope>PropertiesLoaderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
    <Anchor>setIgnoreResourceNotFound(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreUnknownFields(boolean)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setIgnoreUnknownFields(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreUnresolvableEditors(boolean)</Name>
      <Type>instm</Type>
      <Scope>CustomEditorConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomEditorConfigurer.html</Path>
    <Anchor>setIgnoreUnresolvableEditors(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreUnresolvableNestedPlaceholders(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>setIgnoreUnresolvableNestedPlaceholders(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreUnresolvableNestedPlaceholders(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>setIgnoreUnresolvableNestedPlaceholders(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreUnresolvableNestedPlaceholders(boolean)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurablePropertyResolver.html</Path>
    <Anchor>setIgnoreUnresolvableNestedPlaceholders(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreUnresolvablePlaceholders(boolean)</Name>
      <Type>instm</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>setIgnoreUnresolvablePlaceholders(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIgnoreWarnings(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>setIgnoreWarnings(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImplicitCollections(Map&amp;lt;Class&amp;lt;?&amp;gt;, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setImplicitCollections(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImportMetadata(AnnotationMetadata)</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AbstractCachingConfiguration.html</Path>
    <Anchor>setImportMetadata(org.springframework.core.type.AnnotationMetadata)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImportMetadata(AnnotationMetadata)</Name>
      <Type>intfm</Type>
      <Scope>ImportAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ImportAware.html</Path>
    <Anchor>setImportMetadata(org.springframework.core.type.AnnotationMetadata)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImportMetadata(AnnotationMetadata)</Name>
      <Type>instm</Type>
      <Scope>LoadTimeWeavingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/LoadTimeWeavingConfiguration.html</Path>
    <Anchor>setImportMetadata(org.springframework.core.type.AnnotationMetadata)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImportMetadata(AnnotationMetadata)</Name>
      <Type>instm</Type>
      <Scope>MBeanExportConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/MBeanExportConfiguration.html</Path>
    <Anchor>setImportMetadata(org.springframework.core.type.AnnotationMetadata)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImportMetadata(AnnotationMetadata)</Name>
      <Type>instm</Type>
      <Scope>AbstractAsyncConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.html</Path>
    <Anchor>setImportMetadata(org.springframework.core.type.AnnotationMetadata)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImportMetadata(AnnotationMetadata)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionManagementConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration.html</Path>
    <Anchor>setImportMetadata(org.springframework.core.type.AnnotationMetadata)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludeAnnotatedControllers(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractControllerUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
    <Anchor>setIncludeAnnotatedControllers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludeAnnotationConfig(boolean)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>setIncludeAnnotationConfig(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludeClientInfo(boolean)</Name>
      <Type>instm</Type>
      <Scope>Log4jNestedDiagnosticContextInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor.html</Path>
    <Anchor>setIncludeClientInfo(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludeClientInfo(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>setIncludeClientInfo(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludedUrl(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setIncludedUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludedUrl(String)</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>setIncludedUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludePatterns(List&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AnnotationAwareAspectJAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html</Path>
    <Anchor>setIncludePatterns(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludePayload(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>setIncludePayload(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludeQueryString(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>setIncludeQueryString(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncrementerName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataFieldMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.html</Path>
    <Anchor>setIncrementerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIndent(int)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setIndent(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIndent(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setIndent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIndent(boolean)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>setIndent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIndent(boolean)</Name>
      <Type>instm</Type>
      <Scope>XsltViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltViewResolver.html</Path>
    <Anchor>setIndent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIndentOutput(boolean)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setIndentOutput(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIndentOutput(boolean)</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setIndentOutput(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIndex(int)</Name>
      <Type>instm</Type>
      <Scope>ManagedOperationParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedOperationParameter.html</Path>
    <Anchor>setIndex(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>InitDestroyAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html</Path>
    <Anchor>setInitAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitBinderArgumentResolvers(List&amp;lt;HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setInitBinderArgumentResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitialDelay(long)</Name>
      <Type>instm</Type>
      <Scope>PeriodicTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/PeriodicTrigger.html</Path>
    <Anchor>setInitialDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitMethod(String)</Name>
      <Type>instm</Type>
      <Scope>DocumentDefaultsDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
    <Anchor>setInitMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setInitMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setInitMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionDefaults</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionDefaults.html</Path>
    <Anchor>setInitMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>setInitParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitParameters(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>setInitParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitParameters(Properties)</Name>
      <Type>instm</Type>
      <Scope>ServletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletWrappingController.html</Path>
    <Anchor>setInitParameters(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitParamName(String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextParameterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextParameterFactoryBean.html</Path>
    <Anchor>setInitParamName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInParameterNames(Set&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>setInParameterNames(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputSource(InputSource)</Name>
      <Type>instm</Type>
      <Scope>MarshallingSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/MarshallingSource.html</Path>
    <Anchor>setInputSource(org.xml.sax.InputSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInstanceId(String)</Name>
      <Type>instm</Type>
      <Scope>LocalTaskExecutorThreadPool</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html</Path>
    <Anchor>setInstanceId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInstanceName(String)</Name>
      <Type>instm</Type>
      <Scope>LocalTaskExecutorThreadPool</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html</Path>
    <Anchor>setInstanceName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInstantiationStrategy(InstantiationStrategy)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>setInstantiationStrategy(org.springframework.beans.factory.support.InstantiationStrategy)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInteractionSpec(InteractionSpec)</Name>
      <Type>instm</Type>
      <Scope>EisOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/EisOperation.html</Path>
    <Anchor>setInteractionSpec(javax.resource.cci.InteractionSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterceptorNames(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>setInterceptorNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterceptorNames(String[])</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setInterceptorNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterceptors(List&amp;lt;ClientHttpRequestInterceptor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>InterceptingHttpAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/InterceptingHttpAccessor.html</Path>
    <Anchor>setInterceptors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterceptors(Object[])</Name>
      <Type>instm</Type>
      <Scope>RemoteExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteExporter.html</Path>
    <Anchor>setInterceptors(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterceptors(Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setInterceptors(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterceptors(Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setInterceptors(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterfaceMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>InterfaceBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html</Path>
    <Anchor>setInterfaceMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterfaces(Class[])</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>setInterfaces(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterval(int)</Name>
      <Type>instm</Type>
      <Scope>DatabaseStartupValidator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseStartupValidator.html</Path>
    <Anchor>setInterval(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntHeader(String, int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setIntHeader(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntrospectionClass(Class)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>setIntrospectionClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInvalidResultSetAccessCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setInvalidResultSetAccessCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInvalidSubmit(ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>setInvalidSubmit(javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIso(DateTimeFormat.ISO)</Name>
      <Type>instm</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>setIso(org.springframework.format.annotation.DateTimeFormat.ISO)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIso(DateTimeFormat.ISO)</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactory.html</Path>
    <Anchor>setIso(org.springframework.format.annotation.DateTimeFormat.ISO)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsolationLevel(int)</Name>
      <Type>instm</Type>
      <Scope>IsolationLevelDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/IsolationLevelDataSourceAdapter.html</Path>
    <Anchor>setIsolationLevel(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsolationLevel(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>setIsolationLevel(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsolationLevelName(String)</Name>
      <Type>instm</Type>
      <Scope>IsolationLevelDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/IsolationLevelDataSourceAdapter.html</Path>
    <Anchor>setIsolationLevelName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsolationLevelName(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>setIsolationLevelName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setItemLabel(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMultiCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html</Path>
    <Anchor>setItemLabel(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setItemLabel(String)</Name>
      <Type>instm</Type>
      <Scope>OptionsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionsTag.html</Path>
    <Anchor>setItemLabel(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setItemLabel(String)</Name>
      <Type>instm</Type>
      <Scope>SelectTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
    <Anchor>setItemLabel(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setItems(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractMultiCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html</Path>
    <Anchor>setItems(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setItems(Object)</Name>
      <Type>instm</Type>
      <Scope>OptionsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionsTag.html</Path>
    <Anchor>setItems(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setItems(Object)</Name>
      <Type>instm</Type>
      <Scope>SelectTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
    <Anchor>setItems(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setItemValue(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMultiCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html</Path>
    <Anchor>setItemValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setItemValue(String)</Name>
      <Type>instm</Type>
      <Scope>OptionsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionsTag.html</Path>
    <Anchor>setItemValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setItemValue(String)</Name>
      <Type>instm</Type>
      <Scope>SelectTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
    <Anchor>setItemValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJavaMailProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>setJavaMailProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJavaScriptEscape(String)</Name>
      <Type>instm</Type>
      <Scope>EscapeBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EscapeBodyTag.html</Path>
    <Anchor>setJavaScriptEscape(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJavaScriptEscape(String)</Name>
      <Type>instm</Type>
      <Scope>EvalTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EvalTag.html</Path>
    <Anchor>setJavaScriptEscape(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJavaScriptEscape(String)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>setJavaScriptEscape(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJavaScriptEscape(String)</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>setJavaScriptEscape(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJaxbContextProperties(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setJaxbContextProperties(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJaxRpcService(Service)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setJaxRpcService(javax.xml.rpc.Service)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJaxRpcServiceInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>setJaxRpcServiceInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJaxRpcServiceProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>setJaxRpcServiceProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJaxWsService(Service)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setJaxWsService(javax.xml.ws.Service)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdbcDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>setJdbcDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdbcDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html</Path>
    <Anchor>setJdbcDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdbcExceptionTranslator(SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdbcExceptionTranslator(SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>HibernateExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateExceptionTranslator.html</Path>
    <Anchor>setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdbcExceptionTranslator(SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdbcExceptionTranslator(SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>DefaultJdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/DefaultJdoDialect.html</Path>
    <Anchor>setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdbcTemplate(JdbcTemplate)</Name>
      <Type>instm</Type>
      <Scope>JdbcBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/JdbcBeanDefinitionReader.html</Path>
    <Anchor>setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdbcTemplate(JdbcTemplate)</Name>
      <Type>instm</Type>
      <Scope>JdbcDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/JdbcDaoSupport.html</Path>
    <Anchor>setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdbcTemplate(JdbcTemplate)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdoDialect(JdoDialect)</Name>
      <Type>instm</Type>
      <Scope>JdoAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoAccessor.html</Path>
    <Anchor>setJdoDialect(org.springframework.orm.jdo.JdoDialect)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdoDialect(JdoDialect)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>setJdoDialect(org.springframework.orm.jdo.JdoDialect)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdoDialect(JdoDialect)</Name>
      <Type>instm</Type>
      <Scope>LocalPersistenceManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html</Path>
    <Anchor>setJdoDialect(org.springframework.orm.jdo.JdoDialect)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdoDialect(JdoDialect)</Name>
      <Type>instm</Type>
      <Scope>SpringPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html</Path>
    <Anchor>setJdoDialect(org.springframework.orm.jdo.JdoDialect)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdoProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalPersistenceManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html</Path>
    <Anchor>setJdoProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdoPropertyMap(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>LocalPersistenceManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html</Path>
    <Anchor>setJdoPropertyMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJdoTemplate(JdoTemplate)</Name>
      <Type>instm</Type>
      <Scope>JdoDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/JdoDaoSupport.html</Path>
    <Anchor>setJdoTemplate(org.springframework.orm.jdo.JdoTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJmsTemplate(JmsTemplate)</Name>
      <Type>instm</Type>
      <Scope>JmsGatewaySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/support/JmsGatewaySupport.html</Path>
    <Anchor>setJmsTemplate(org.springframework.jms.core.JmsTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiEnvironment(Properties)</Name>
      <Type>instm</Type>
      <Scope>JndiAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiAccessor.html</Path>
    <Anchor>setJndiEnvironment(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiEnvironment(Properties)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>setJndiEnvironment(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiEnvironment(Properties)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiServiceExporter.html</Path>
    <Anchor>setJndiEnvironment(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiEnvironment(Properties)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setJndiEnvironment(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>setJndiFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiName(String)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectLocator.html</Path>
    <Anchor>setJndiName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiName(String)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiServiceExporter.html</Path>
    <Anchor>setJndiName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiTemplate(JndiTemplate)</Name>
      <Type>instm</Type>
      <Scope>JndiAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiAccessor.html</Path>
    <Anchor>setJndiTemplate(org.springframework.jndi.JndiTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiTemplate(Object)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>setJndiTemplate(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiTemplate(JndiTemplate)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiServiceExporter.html</Path>
    <Anchor>setJndiTemplate(org.springframework.jndi.JndiTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJndiTemplate(JndiTemplate)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setJndiTemplate(org.springframework.jndi.JndiTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobClass(Class)</Name>
      <Type>instm</Type>
      <Scope>JobDetailBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailBean.html</Path>
    <Anchor>setJobClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobClass(Class)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setJobClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDataAsMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerBean.html</Path>
    <Anchor>setJobDataAsMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDataAsMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setJobDataAsMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDataAsMap(Map)</Name>
      <Type>instm</Type>
      <Scope>JobDetailBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailBean.html</Path>
    <Anchor>setJobDataAsMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDataAsMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setJobDataAsMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDataAsMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerBean.html</Path>
    <Anchor>setJobDataAsMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDataAsMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setJobDataAsMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDataMap(JobDataMap)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setJobDataMap(org.quartz.JobDataMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDataMap(JobDataMap)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setJobDataMap(org.quartz.JobDataMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDataMap(JobDataMap)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setJobDataMap(org.quartz.JobDataMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDetail(JobDetail)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerBean.html</Path>
    <Anchor>setJobDetail(org.quartz.JobDetail)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDetail(JobDetail)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setJobDetail(org.quartz.JobDetail)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDetail(JobDetail)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerBean.html</Path>
    <Anchor>setJobDetail(org.quartz.JobDetail)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDetail(JobDetail)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setJobDetail(org.quartz.JobDetail)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobDetails(JobDetail[])</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setJobDetails(org.quartz.JobDetail[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobFactory(JobFactory)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setJobFactory(org.quartz.spi.JobFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobListenerNames(String[])</Name>
      <Type>instm</Type>
      <Scope>JobDetailBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailBean.html</Path>
    <Anchor>setJobListenerNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobListenerNames(String[])</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>setJobListenerNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobListeners(JobListener[])</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setJobListeners(org.quartz.JobListener[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobSchedulingDataLocation(String)</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setJobSchedulingDataLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJobSchedulingDataLocations(String[])</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setJobSchedulingDataLocations(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJodaTimeContext(JodaTimeContext)</Name>
      <Type>clm</Type>
      <Scope>JodaTimeContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeContextHolder.html</Path>
    <Anchor>setJodaTimeContext(org.springframework.format.datetime.joda.JodaTimeContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaDialect(JpaDialect)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setJpaDialect(org.springframework.orm.jpa.JpaDialect)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaDialect(JpaDialect)</Name>
      <Type>instm</Type>
      <Scope>JpaAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaAccessor.html</Path>
    <Anchor>setJpaDialect(org.springframework.orm.jpa.JpaDialect)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaDialect(JpaDialect)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>setJpaDialect(org.springframework.orm.jpa.JpaDialect)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setJpaProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>EntityManagerFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryAccessor.html</Path>
    <Anchor>setJpaProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>setJpaProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaPropertyMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setJpaPropertyMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaPropertyMap(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>EntityManagerFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryAccessor.html</Path>
    <Anchor>setJpaPropertyMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaPropertyMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>setJpaPropertyMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaTemplate(JpaTemplate)</Name>
      <Type>instm</Type>
      <Scope>JpaDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/JpaDaoSupport.html</Path>
    <Anchor>setJpaTemplate(org.springframework.orm.jpa.JpaTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpaVendorAdapter(JpaVendorAdapter)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setJpaVendorAdapter(org.springframework.orm.jpa.JpaVendorAdapter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJtaDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setJtaDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJtaDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setJtaDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJtaTransactionManager(TransactionManager)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setJtaTransactionManager(javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJtaTransactionManager(Object)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setJtaTransactionManager(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJtaTransactionManager(Object)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.html</Path>
    <Anchor>setJtaTransactionManager(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeepAliveSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setKeepAliveSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeepAliveSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>setKeepAliveSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeepAliveSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setKeepAliveSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeepAliveSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/TaskExecutorFactoryBean.html</Path>
    <Anchor>setKeepAliveSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeepTaskList(boolean)</Name>
      <Type>instm</Type>
      <Scope>StopWatch</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
    <Anchor>setKeepTaskList(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKey(String)</Name>
      <Type>instm</Type>
      <Scope>CacheOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperation.html</Path>
    <Anchor>setKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeyGenerator(KeyGenerator)</Name>
      <Type>instm</Type>
      <Scope>CacheAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.html</Path>
    <Anchor>setKeyGenerator(org.springframework.cache.interceptor.KeyGenerator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeyTypeName(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedMap.html</Path>
    <Anchor>setKeyTypeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractSingleCheckedElementTag.html</Path>
    <Anchor>setLabel(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel(String)</Name>
      <Type>instm</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>setLabel(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLang(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setLang(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLastModified(long)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setLastModified(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLayoutKey(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutView.html</Path>
    <Anchor>setLayoutKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLayoutKey(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutViewResolver.html</Path>
    <Anchor>setLayoutKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLayoutUrl(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutView.html</Path>
    <Anchor>setLayoutUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLayoutUrl(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutViewResolver.html</Path>
    <Anchor>setLayoutUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyDatabaseTransaction(boolean)</Name>
      <Type>instm</Type>
      <Scope>EclipseLinkJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/EclipseLinkJpaDialect.html</Path>
    <Anchor>setLazyDatabaseTransaction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyDatabaseTransaction(boolean)</Name>
      <Type>instm</Type>
      <Scope>TopLinkJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html</Path>
    <Anchor>setLazyDatabaseTransaction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyInit(boolean)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>setLazyInit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyInit(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setLazyInit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyInit(boolean)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setLazyInit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyInit(boolean)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionDefaults</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionDefaults.html</Path>
    <Anchor>setLazyInit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyInit(String)</Name>
      <Type>instm</Type>
      <Scope>DocumentDefaultsDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
    <Anchor>setLazyInit(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyInit(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdbcAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcAccessor.html</Path>
    <Anchor>setLazyInit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyInit(boolean)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setLazyInit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyInitHandlers(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractMapBasedHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html</Path>
    <Anchor>setLazyInitHandlers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLazyInitHandlers(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
    <Anchor>setLazyInitHandlers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLenient(boolean)</Name>
      <Type>instm</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>setLenient(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLenient(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractNumberFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/AbstractNumberFormatter.html</Path>
    <Anchor>setLenient(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLenientConstructorResolution(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setLenientConstructorResolution(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLenientFallback(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>setLenientFallback(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLimitedInParameterNames(Set&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>setLimitedInParameterNames(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setListeners(MBeanExporterListener[])</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setListeners(org.springframework.jmx.export.MBeanExporterListener[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoadTimeWeaver(LoadTimeWeaver)</Name>
      <Type>instm</Type>
      <Scope>AspectJWeavingEnabler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/AspectJWeavingEnabler.html</Path>
    <Anchor>setLoadTimeWeaver(org.springframework.instrument.classloading.LoadTimeWeaver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoadTimeWeaver(LoadTimeWeaver)</Name>
      <Type>intfm</Type>
      <Scope>LoadTimeWeaverAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/LoadTimeWeaverAware.html</Path>
    <Anchor>setLoadTimeWeaver(org.springframework.instrument.classloading.LoadTimeWeaver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoadTimeWeaver(LoadTimeWeaver)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setLoadTimeWeaver(org.springframework.instrument.classloading.LoadTimeWeaver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoadTimeWeaver(LoadTimeWeaver)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setLoadTimeWeaver(org.springframework.instrument.classloading.LoadTimeWeaver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLobHandler(LobHandler)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setLobHandler(org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLobHandler(LobHandler)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>setLobHandler(org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalAddr(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setLocalAddr(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocale(Locale)</Name>
      <Type>clm</Type>
      <Scope>LocaleContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/i18n/LocaleContextHolder.html</Path>
    <Anchor>setLocale(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocale(Locale, boolean)</Name>
      <Type>clm</Type>
      <Scope>LocaleContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/i18n/LocaleContextHolder.html</Path>
    <Anchor>setLocale(java.util.Locale, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocale(Locale)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setLocale(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocale(Locale)</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>setLocale(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocale(HttpServletRequest, HttpServletResponse, Locale)</Name>
      <Type>instm</Type>
      <Scope>AcceptHeaderLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.html</Path>
    <Anchor>setLocale(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocale(HttpServletRequest, HttpServletResponse, Locale)</Name>
      <Type>instm</Type>
      <Scope>CookieLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/CookieLocaleResolver.html</Path>
    <Anchor>setLocale(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocale(HttpServletRequest, HttpServletResponse, Locale)</Name>
      <Type>instm</Type>
      <Scope>FixedLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/FixedLocaleResolver.html</Path>
    <Anchor>setLocale(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocale(HttpServletRequest, HttpServletResponse, Locale)</Name>
      <Type>instm</Type>
      <Scope>SessionLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/SessionLocaleResolver.html</Path>
    <Anchor>setLocale(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocale(HttpServletRequest, HttpServletResponse, Locale)</Name>
      <Type>intfm</Type>
      <Scope>LocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/LocaleResolver.html</Path>
    <Anchor>setLocale(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocaleContext(LocaleContext)</Name>
      <Type>clm</Type>
      <Scope>LocaleContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/i18n/LocaleContextHolder.html</Path>
    <Anchor>setLocaleContext(org.springframework.context.i18n.LocaleContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocaleContext(LocaleContext, boolean)</Name>
      <Type>clm</Type>
      <Scope>LocaleContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/i18n/LocaleContextHolder.html</Path>
    <Anchor>setLocaleContext(org.springframework.context.i18n.LocaleContext, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocaleResolver(LocaleResolver)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setLocaleResolver(org.springframework.web.servlet.LocaleResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalesToInitialize(Locale[])</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>setLocalesToInitialize(java.util.Locale[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalName(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setLocalName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalOverride(boolean)</Name>
      <Type>instm</Type>
      <Scope>PropertiesLoaderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
    <Anchor>setLocalOverride(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalPort(int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setLocalPort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalVariable(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>setLocalVariable(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocateExistingServerIfPossible(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerFactoryBean.html</Path>
    <Anchor>setLocateExistingServerIfPossible(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocation(String)</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcutAdvisor.html</Path>
    <Anchor>setLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocation(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractExpressionPointcut.html</Path>
    <Anchor>setLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>PropertiesLoaderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
    <Anchor>setLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocation(URI)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setLocation(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>XmlViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/XmlViewResolver.html</Path>
    <Anchor>setLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>PropertiesLoaderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
    <Anchor>setLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocations(String[])</Name>
      <Type>instm</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>setLocations(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocations(List&amp;lt;Resource&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ResourceHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html</Path>
    <Anchor>setLocations(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog(boolean)</Name>
      <Type>instm</Type>
      <Scope>ManagedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedResource.html</Path>
    <Anchor>setLog(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLogFile(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedResource.html</Path>
    <Anchor>setLogFile(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLogger(Log)</Name>
      <Type>instm</Type>
      <Scope>FailFastProblemReporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/FailFastProblemReporter.html</Path>
    <Anchor>setLogger(org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoggerName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
    <Anchor>setLoggerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoggerName(String)</Name>
      <Type>instm</Type>
      <Scope>DeprecatedBeanWarner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DeprecatedBeanWarner.html</Path>
    <Anchor>setLoggerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLogicalMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>ParameterMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/ParameterMethodNameResolver.html</Path>
    <Anchor>setLogicalMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoginTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDataSource.html</Path>
    <Anchor>setLoginTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoginTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>DelegatingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DelegatingDataSource.html</Path>
    <Anchor>setLoginTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLogName(String)</Name>
      <Type>instm</Type>
      <Scope>CommonsLogFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html</Path>
    <Anchor>setLogName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLogTargetClassInvocation(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractMonitoringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractMonitoringInterceptor.html</Path>
    <Anchor>setLogTargetClassInvocation(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLogWriter(PrintWriter)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDataSource.html</Path>
    <Anchor>setLogWriter(java.io.PrintWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLogWriter(PrintWriter)</Name>
      <Type>instm</Type>
      <Scope>DelegatingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DelegatingDataSource.html</Path>
    <Anchor>setLogWriter(java.io.PrintWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLookupHomeOnStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>setLookupHomeOnStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLookupOnStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>setLookupOnStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLookupOnStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectTargetSource.html</Path>
    <Anchor>setLookupOnStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLookupServiceOnStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setLookupServiceOnStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLookupServiceOnStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setLookupServiceOnStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLookupStubOnStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>setLookupStubOnStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLookupStubOnStartup(boolean)</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>setLookupStubOnStartup(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaintainSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setMaintainSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaintainSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setMaintainSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMajorVersion(int)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>setMajorVersion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setManagedConnectionFactory(ManagedConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>LocalConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/LocalConnectionFactoryBean.html</Path>
    <Anchor>setManagedConnectionFactory(javax.resource.spi.ManagedConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setManagedInterfaces(Class[])</Name>
      <Type>instm</Type>
      <Scope>InterfaceBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html</Path>
    <Anchor>setManagedInterfaces(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setManagedMethods(String[])</Name>
      <Type>instm</Type>
      <Scope>MethodNameBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html</Path>
    <Anchor>setManagedMethods(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setManagedResource(Object, String)</Name>
      <Type>instm</Type>
      <Scope>SpringModelMBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/SpringModelMBean.html</Path>
    <Anchor>setManagedResource(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setManagementInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setManagementInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedClass(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>setMappedClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedHandlerClasses(Class[])</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setMappedHandlerClasses(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedHandlerClasses(Class[])</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setMappedHandlerClasses(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedHandlers(Set)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setMappedHandlers(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedHandlers(Set)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setMappedHandlers(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedName(String)</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcut.html</Path>
    <Anchor>setMappedName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedName(String)</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcutAdvisor.html</Path>
    <Anchor>setMappedName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedNames(String[])</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcut.html</Path>
    <Anchor>setMappedNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedNames(String[])</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcutAdvisor.html</Path>
    <Anchor>setMappedNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedObjectName(Object)</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/NotificationListenerHolder.html</Path>
    <Anchor>setMappedObjectName(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappedObjectNames(Object[])</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/NotificationListenerHolder.html</Path>
    <Anchor>setMappedObjectNames(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingDirectoryLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setMappingDirectoryLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingDirectoryLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setMappingDirectoryLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingJarLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setMappingJarLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingJarLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setMappingJarLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>KeyNamingStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/KeyNamingStrategy.html</Path>
    <Anchor>setMappingLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableMimeFileTypeMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html</Path>
    <Anchor>setMappingLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setMappingLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>KeyNamingStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/KeyNamingStrategy.html</Path>
    <Anchor>setMappingLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setMappingLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setMappingLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>setMappingLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setMappingLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingLocations(Resource[])</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>setMappingLocations(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingResources(String[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setMappingResources(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingResources(String[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setMappingResources(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingResources(String...)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setMappingResources(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingResources(String...)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setMappingResources(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>KeyNamingStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/KeyNamingStrategy.html</Path>
    <Anchor>setMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappings(String[])</Name>
      <Type>instm</Type>
      <Scope>ConfigurableMimeFileTypeMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html</Path>
    <Anchor>setMappings(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>PortletModeHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeHandlerMapping.html</Path>
    <Anchor>setMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>SimpleUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html</Path>
    <Anchor>setMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>PropertiesMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/PropertiesMethodNameResolver.html</Path>
    <Anchor>setMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarshalAsDocument(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setMarshalAsDocument(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarshalExtendedType(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setMarshalExtendedType(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarshaller(Marshaller)</Name>
      <Type>instm</Type>
      <Scope>MarshallingHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/MarshallingHttpMessageConverter.html</Path>
    <Anchor>setMarshaller(org.springframework.oxm.Marshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarshaller(Marshaller)</Name>
      <Type>instm</Type>
      <Scope>MarshallingMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MarshallingMessageConverter.html</Path>
    <Anchor>setMarshaller(org.springframework.oxm.Marshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarshaller(Marshaller)</Name>
      <Type>instm</Type>
      <Scope>MarshallingView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xml/MarshallingView.html</Path>
    <Anchor>setMarshaller(org.springframework.oxm.Marshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarshallerListener(Marshaller.Listener)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setMarshallerListener(javax.xml.bind.Marshaller.Listener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarshallerProperties(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setMarshallerProperties(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxConcurrency(int)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setMaxConcurrency(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxConcurrentConsumers(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setMaxConcurrentConsumers(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxElementsInMemory(int)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setMaxElementsInMemory(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxElementsOnDisk(int)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setMaxElementsOnDisk(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxIdle(int)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>setMaxIdle(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxInactiveInterval(int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>setMaxInactiveInterval(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxInactiveInterval(int)</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>setMaxInactiveInterval(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxInMemorySize(int)</Name>
      <Type>instm</Type>
      <Scope>CommonsFileUploadSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
    <Anchor>setMaxInMemorySize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxlength(String)</Name>
      <Type>instm</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>setMaxlength(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxLinkedPages(int)</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>setMaxLinkedPages(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxMessagesPerTask(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setMaxMessagesPerTask(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxPayloadLength(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>setMaxPayloadLength(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxPoolSize(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setMaxPoolSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxPoolSize(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>setMaxPoolSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxPoolSize(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setMaxPoolSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxResults(int)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>setMaxResults(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxRows(int)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>setMaxRows(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxRows(int)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setMaxRows(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxRowsAffected(int)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>setMaxRowsAffected(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxSize(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractPoolingTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPoolingTargetSource.html</Path>
    <Anchor>setMaxSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxUploadSize(long)</Name>
      <Type>instm</Type>
      <Scope>CommonsFileUploadSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
    <Anchor>setMaxUploadSize(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxWait(long)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>setMaxWait(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMediaTypes(Properties)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>setMediaTypes(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMediaTypes(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setMediaTypes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMemoryStoreEvictionPolicy(MemoryStoreEvictionPolicy)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setMemoryStoreEvictionPolicy(net.sf.ehcache.store.MemoryStoreEvictionPolicy)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMerge(String)</Name>
      <Type>instm</Type>
      <Scope>DocumentDefaultsDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
    <Anchor>setMerge(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMergeEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>ManagedList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedList.html</Path>
    <Anchor>setMergeEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMergeEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>ManagedMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedMap.html</Path>
    <Anchor>setMergeEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMergeEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>ManagedProperties</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedProperties.html</Path>
    <Anchor>setMergeEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMergeEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>ManagedSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedSet.html</Path>
    <Anchor>setMergeEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessage(Object)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>setMessage(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageCodeFormatter(MessageCodeFormatter)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.html</Path>
    <Anchor>setMessageCodeFormatter(org.springframework.validation.MessageCodeFormatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageCodesResolver(MessageCodesResolver)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageCodesResolver(MessageCodesResolver)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageCodesResolver(MessageCodesResolver)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageCodesResolver(MessageCodesResolver)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageCodesResolver(MessageCodesResolver)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverter(MessageConverter)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setMessageConverter(org.springframework.jms.support.converter.MessageConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverter(MessageConverter)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>setMessageConverter(org.springframework.jms.support.converter.MessageConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverter(MessageConverter)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>setMessageConverter(org.springframework.jms.support.converter.MessageConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverter(MessageConverter)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerServiceExporter.html</Path>
    <Anchor>setMessageConverter(org.springframework.jms.support.converter.MessageConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverters(HttpMessageConverter&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setMessageConverters(org.springframework.http.converter.HttpMessageConverter...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>setMessageConverters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverters(HttpMessageConverter&amp;lt;?&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setMessageConverters(org.springframework.http.converter.HttpMessageConverter[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverters(HttpMessageConverter&amp;lt;?&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>setMessageConverters(org.springframework.http.converter.HttpMessageConverter[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>setMessageConverters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setMessageConverters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageDrivenContext(MessageDrivenContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageDrivenBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractMessageDrivenBean.html</Path>
    <Anchor>setMessageDrivenContext(javax.ejb.MessageDrivenContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageEndpointFactory(MessageEndpointFactory)</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>setMessageEndpointFactory(javax.resource.spi.endpoint.MessageEndpointFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageIdEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setMessageIdEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageInterpolator(MessageInterpolator)</Name>
      <Type>instm</Type>
      <Scope>CustomValidatorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/CustomValidatorBean.html</Path>
    <Anchor>setMessageInterpolator(javax.validation.MessageInterpolator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageInterpolator(MessageInterpolator)</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>setMessageInterpolator(javax.validation.MessageInterpolator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageListener(Object)</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointFactory.html</Path>
    <Anchor>setMessageListener(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageListener(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setMessageListener(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageListener(MessageListener)</Name>
      <Type>instm</Type>
      <Scope>JmsMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsMessageEndpointFactory.html</Path>
    <Anchor>setMessageListener(javax.jms.MessageListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageListener(MessageListener)</Name>
      <Type>instm</Type>
      <Scope>JmsMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.html</Path>
    <Anchor>setMessageListener(javax.jms.MessageListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageSelector(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setMessageSelector(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageSelector(String)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setMessageSelector(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageSource(MessageSource)</Name>
      <Type>intfm</Type>
      <Scope>MessageSourceAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/MessageSourceAware.html</Path>
    <Anchor>setMessageSource(org.springframework.context.MessageSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageSource(MessageSource)</Name>
      <Type>instm</Type>
      <Scope>ResponseStatusExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html</Path>
    <Anchor>setMessageSource(org.springframework.context.MessageSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMessageTimestampEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setMessageTimestampEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMetadataReaderFactory(MetadataReaderFactory)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>setMetadataReaderFactory(org.springframework.core.type.classreading.MetadataReaderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMetadataReaderFactory(MetadataReaderFactory)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>setMetadataReaderFactory(org.springframework.core.type.classreading.MetadataReaderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethod(HttpMethod)</Name>
      <Type>instm</Type>
      <Scope>MockClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/http/client/MockClientHttpRequest.html</Path>
    <Anchor>setMethod(org.springframework.http.HttpMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethod(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethod(String)</Name>
      <Type>instm</Type>
      <Scope>MockClientDataRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockClientDataRequest.html</Path>
    <Anchor>setMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethod(String)</Name>
      <Type>instm</Type>
      <Scope>MockEventRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockEventRequest.html</Path>
    <Anchor>setMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethod(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodInvoker(MethodInvoker)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean.MethodInvokingJob</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.MethodInvokingJob.html</Path>
    <Anchor>setMethodInvoker(org.springframework.util.MethodInvoker)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodMap(Map&amp;lt;String, TransactionAttribute&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>setMethodMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>MethodNameBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html</Path>
    <Anchor>setMethodMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>MethodLocatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/MethodLocatingFactoryBean.html</Path>
    <Anchor>setMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
    <Anchor>setMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodNameResolver(MethodNameResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodNameResolver(MethodNameResolver)</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodOverrides(MethodOverrides)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setMethodOverrides(org.springframework.beans.factory.support.MethodOverrides)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodParam(String)</Name>
      <Type>instm</Type>
      <Scope>HiddenHttpMethodFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/HiddenHttpMethodFilter.html</Path>
    <Anchor>setMethodParam(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodParam(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setMethodParam(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodParamNames(String[])</Name>
      <Type>instm</Type>
      <Scope>ParameterMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/ParameterMethodNameResolver.html</Path>
    <Anchor>setMethodParamNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMethodResolvers(List&amp;lt;MethodResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setMethodResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMetricType(MetricType)</Name>
      <Type>instm</Type>
      <Scope>ManagedMetric</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedMetric.html</Path>
    <Anchor>setMetricType(org.springframework.jmx.support.MetricType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMimeMultiparts(MimeMultipart, MimeMultipart)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setMimeMultiparts(javax.mail.internet.MimeMultipart, javax.mail.internet.MimeMultipart)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinEvictableIdleTimeMillis(long)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>setMinEvictableIdleTimeMillis(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinIdle(int)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>setMinIdle(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinorVersion(int)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>setMinorVersion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMisfireInstruction(int)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setMisfireInstruction(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMisfireInstruction(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setMisfireInstruction(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMisfireInstructionName(String)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerBean.html</Path>
    <Anchor>setMisfireInstructionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMisfireInstructionName(String)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setMisfireInstructionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMisfireInstructionName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerBean.html</Path>
    <Anchor>setMisfireInstructionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMisfireInstructionName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setMisfireInstructionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode(int)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelAndViewResolvers(List&amp;lt;ModelAndViewResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setModelAndViewResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setModelAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelKey(String)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setModelKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelKey(String)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setModelKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelKey(String)</Name>
      <Type>instm</Type>
      <Scope>MarshallingView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xml/MarshallingView.html</Path>
    <Anchor>setModelKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelKeys(Set&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setModelKeys(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelKeys(Set&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setModelKeys(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMtomEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setMtomEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultipartFiles(MultiValueMap&amp;lt;String, MultipartFile&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractMultipartHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.html</Path>
    <Anchor>setMultipartFiles(org.springframework.util.MultiValueMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultipartFiles(MultiValueMap&amp;lt;String, MultipartFile&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultMultipartActionRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/DefaultMultipartActionRequest.html</Path>
    <Anchor>setMultipartFiles(org.springframework.util.MultiValueMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultipartParameterContentTypes(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultMultipartHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest.html</Path>
    <Anchor>setMultipartParameterContentTypes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultipartParameterContentTypes(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultMultipartActionRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/DefaultMultipartActionRequest.html</Path>
    <Anchor>setMultipartParameterContentTypes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultipartParameters(Map&amp;lt;String, String[]&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultMultipartHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest.html</Path>
    <Anchor>setMultipartParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultipartParameters(Map&amp;lt;String, String[]&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultMultipartActionRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/DefaultMultipartActionRequest.html</Path>
    <Anchor>setMultipartParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultipartResolverBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>MultipartFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/MultipartFilter.html</Path>
    <Anchor>setMultipartResolverBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultiple(Object)</Name>
      <Type>instm</Type>
      <Scope>SelectTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
    <Anchor>setMultiple(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheFactoryBean.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>CacheOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperation.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedNotification</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedNotification.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedOperationParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedOperationParameter.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>BindErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindErrorsTag.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>ButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>Param</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/Param.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName(String)</Name>
      <Type>instm</Type>
      <Scope>ParamTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/ParamTag.html</Path>
    <Anchor>setName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNameMap(Map&amp;lt;String, Collection&amp;lt;CacheOperation&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>NameMatchCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/NameMatchCacheOperationSource.html</Path>
    <Anchor>setNameMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNameMap(Map&amp;lt;String, TransactionAttribute&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>NameMatchTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.html</Path>
    <Anchor>setNameMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletResponse.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebApplicationContext.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>GenericWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/GenericWebApplicationContext.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>StaticWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>setNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespaceAware(boolean)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setNamespaceAware(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespaceHandlerResolver(NamespaceHandlerResolver)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setNamespaceHandlerResolver(org.springframework.beans.factory.xml.NamespaceHandlerResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespaceMappings(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setNamespaceMappings(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespaceToPackageMapping(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setNamespaceToPackageMapping(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespaceUri(String)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>setNamespaceUri(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamespaceUri(String)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxWsServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.html</Path>
    <Anchor>setNamespaceUri(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamingStrategy(ObjectNamingStrategy)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setNamingStrategy(org.springframework.jmx.export.naming.ObjectNamingStrategy)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamingStrategy(NamingStrategy)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setNamingStrategy(org.hibernate.cfg.NamingStrategy)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNamingStrategy(NamingStrategy)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setNamingStrategy(org.hibernate.cfg.NamingStrategy)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeConnectionNecessaryForNativeCallableStatements(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimpleNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html</Path>
    <Anchor>setNativeConnectionNecessaryForNativeCallableStatements(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeConnectionNecessaryForNativePreparedStatements(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimpleNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html</Path>
    <Anchor>setNativeConnectionNecessaryForNativePreparedStatements(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeConnectionNecessaryForNativeStatements(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimpleNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html</Path>
    <Anchor>setNativeConnectionNecessaryForNativeStatements(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeJdbcExtractor(NativeJdbcExtractor)</Name>
      <Type>instm</Type>
      <Scope>CallableStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCreatorFactory.html</Path>
    <Anchor>setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeJdbcExtractor(NativeJdbcExtractor)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeJdbcExtractor(NativeJdbcExtractor)</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeJdbcExtractor(NativeJdbcExtractor)</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeJdbcExtractor(NativeJdbcExtractor)</Name>
      <Type>intfm</Type>
      <Scope>TableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProvider.html</Path>
    <Anchor>setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeJdbcExtractor(NativeJdbcExtractor)</Name>
      <Type>instm</Type>
      <Scope>PreparedStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
    <Anchor>setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeJdbcExtractor(NativeJdbcExtractor)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNativeJdbcExtractor(NativeJdbcExtractor)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.html</Path>
    <Anchor>setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNestedPath(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>setNestedPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNestedPath(String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>setNestedPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNestedPath(String)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>setNestedPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNestedPath(String)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>setNestedPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNestedTransactionAllowed(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>setNestedTransactionAllowed(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNew(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>setNew(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNew(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>setNew(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNextPossiblePortletModes(Collection&amp;lt;PortletMode&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MockRenderResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockRenderResponse.html</Path>
    <Anchor>setNextPossiblePortletModes(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNoNamespaceSchemaLocation(String)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setNoNamespaceSchemaLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNonJtaDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setNonJtaDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNonOptionArgsPropertyName(String)</Name>
      <Type>instm</Type>
      <Scope>CommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CommandLinePropertySource.html</Path>
    <Anchor>setNonOptionArgsPropertyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNonPublicAccessAllowed(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setNonPublicAccessAllowed(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNonTransactionalDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setNonTransactionalDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNotificationFilter(NotificationFilter)</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/NotificationListenerHolder.html</Path>
    <Anchor>setNotificationFilter(javax.management.NotificationFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNotificationInfoMappings(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractConfigurableMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractConfigurableMBeanInfoAssembler.html</Path>
    <Anchor>setNotificationInfoMappings(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNotificationInfos(ManagedNotification[])</Name>
      <Type>instm</Type>
      <Scope>AbstractConfigurableMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractConfigurableMBeanInfoAssembler.html</Path>
    <Anchor>setNotificationInfos(org.springframework.jmx.export.metadata.ManagedNotification[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNotificationListener(NotificationListener)</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/NotificationListenerHolder.html</Path>
    <Anchor>setNotificationListener(javax.management.NotificationListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNotificationListenerMappings(Map&amp;lt;?, ? extends NotificationListener&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setNotificationListenerMappings(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNotificationListeners(NotificationListenerBean[])</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>setNotificationListeners(org.springframework.jmx.export.NotificationListenerBean[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNotificationPublisher(NotificationPublisher)</Name>
      <Type>intfm</Type>
      <Scope>NotificationPublisherAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/notification/NotificationPublisherAware.html</Path>
    <Anchor>setNotificationPublisher(org.springframework.jmx.export.notification.NotificationPublisher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNotificationType(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedNotification</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedNotification.html</Path>
    <Anchor>setNotificationType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNotificationTypes(String[])</Name>
      <Type>instm</Type>
      <Scope>ManagedNotification</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedNotification.html</Path>
    <Anchor>setNotificationTypes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNullValue(String)</Name>
      <Type>instm</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>setNullValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumberToolAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>setNumberToolAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumberToolAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityViewResolver.html</Path>
    <Anchor>setNumberToolAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObject(Object)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectMapper(ObjectMapper)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectMapper(ObjectMapper)</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setObjectMapper(org.codehaus.jackson.map.ObjectMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectMapper(ObjectMapper)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectMapper(ObjectMapper)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>setObjectMapper(org.codehaus.jackson.map.ObjectMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectMapper(ObjectMapper)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectMapper(ObjectMapper)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>setObjectMapper(org.codehaus.jackson.map.ObjectMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectMapper(ObjectMapper)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectMapper(ObjectMapper)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setObjectMapper(org.codehaus.jackson.map.ObjectMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectName(Object)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setObjectName(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectName(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedResource.html</Path>
    <Anchor>setObjectName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectName(Object)</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>setObjectName(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOmittedFields(Map&amp;lt;Class&amp;lt;?&amp;gt;, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setOmittedFields(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnblur(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>setOnblur(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnchange(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>setOnchange(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnclick(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOnclick(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOndblclick(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOndblclick(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnfocus(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>setOnfocus(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnkeydown(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOnkeydown(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnkeypress(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOnkeypress(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnkeyup(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOnkeyup(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnmousedown(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOnmousedown(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnmousemove(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOnmousemove(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnmouseout(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOnmouseout(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnmouseover(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOnmouseover(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnmouseup(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setOnmouseup(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnreset(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setOnreset(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnselect(String)</Name>
      <Type>instm</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>setOnselect(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnselect(String)</Name>
      <Type>instm</Type>
      <Scope>TextareaTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TextareaTag.html</Path>
    <Anchor>setOnselect(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOnsubmit(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setOnsubmit(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOpaque(boolean)</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>setOpaque(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOperatorOverloader(OperatorOverloader)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setOperatorOverloader(org.springframework.expression.OperatorOverloader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOptimize(boolean)</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>setOptimize(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOptional(boolean)</Name>
      <Type>instm</Type>
      <Scope>PropertyValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
    <Anchor>setOptional(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOptions(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XmlOptionsFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlOptionsFactoryBean.html</Path>
    <Anchor>setOptions(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AspectJPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJPointcutAdvisor.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisingBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractAdvisingBeanPostProcessor.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractPointcutAdvisor.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultIntroductionAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultIntroductionAdvisor.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>StaticMethodMatcherPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>CustomAutowireConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>InitDestroyAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>RequiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>CustomEditorConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomEditorConfigurer.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>CustomScopeConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomScopeConfigurer.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>PropertyResourceConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyResourceConfigurer.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>ResourceHandlerRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>ViewControllerRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ViewControllerRegistry.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>HandlerExceptionResolverComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerExceptionResolverComposite.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>BeanNameViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/BeanNameViewResolver.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder(int)</Name>
      <Type>instm</Type>
      <Scope>XmlViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/XmlViewResolver.html</Path>
    <Anchor>setOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOriginatingBeanDefinition(BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setOriginatingBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutParameterNames(List&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>setOutParameterNames(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setOutputProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>setOutputProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>XsltViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltViewResolver.html</Path>
    <Anchor>setOutputProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputRecordCreator(RecordCreator)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>setOutputRecordCreator(org.springframework.jca.cci.core.RecordCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputRecordCreator(RecordCreator)</Name>
      <Type>instm</Type>
      <Scope>MappingRecordOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/MappingRecordOperation.html</Path>
    <Anchor>setOutputRecordCreator(org.springframework.jca.cci.core.RecordCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputStreamAccessAllowed(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setOutputStreamAccessAllowed(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverflowToDisk(boolean)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setOverflowToDisk(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverloaded(boolean)</Name>
      <Type>instm</Type>
      <Scope>MethodOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverride.html</Path>
    <Anchor>setOverloaded(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverloadEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>setOverloadEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverloadEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setOverloadEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverrideIncludeSynonymsDefault(boolean)</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>setOverrideIncludeSynonymsDefault(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverrideIncludeSynonymsDefault(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>setOverrideIncludeSynonymsDefault(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverrideLogging(boolean)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>setOverrideLogging(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverwriteExistingJobs(boolean)</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setOverwriteExistingJobs(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPackagesToScan(String[])</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>setPackagesToScan(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPackagesToScan(String...)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setPackagesToScan(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPackagesToScan(String...)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setPackagesToScan(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPackagesToScan(String...)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setPackagesToScan(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPackagesToScan(String[])</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setPackagesToScan(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPaddingLength(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataFieldMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.html</Path>
    <Anchor>setPaddingLength(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPage(int)</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>setPage(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPageAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setPageAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPageAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setPageAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPageRenderParameter(ActionResponse, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setPageRenderParameter(javax.portlet.ActionResponse, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPages(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setPages(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPages(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setPages(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPageSize(int)</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>setPageSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParallelism(int)</Name>
      <Type>instm</Type>
      <Scope>ForkJoinPoolFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.html</Path>
    <Anchor>setParallelism(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setParameter(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>setParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>setParameter(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setParameter(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter(PreparedStatement, int, Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/AbstractLobTypeHandler.html</Path>
    <Anchor>setParameter(java.sql.PreparedStatement, int, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterInternal(PreparedStatement, int, Object, String, LobCreator)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/AbstractLobTypeHandler.html</Path>
    <Anchor>setParameterInternal(java.sql.PreparedStatement, int, java.lang.Object, java.lang.String, org.springframework.jdbc.support.lob.LobCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterInternal(PreparedStatement, int, Object, String, LobCreator)</Name>
      <Type>instm</Type>
      <Scope>BlobByteArrayTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler.html</Path>
    <Anchor>setParameterInternal(java.sql.PreparedStatement, int, java.lang.Object, java.lang.String, org.springframework.jdbc.support.lob.LobCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterInternal(PreparedStatement, int, Object, String, LobCreator)</Name>
      <Type>instm</Type>
      <Scope>BlobSerializableTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/BlobSerializableTypeHandler.html</Path>
    <Anchor>setParameterInternal(java.sql.PreparedStatement, int, java.lang.Object, java.lang.String, org.springframework.jdbc.support.lob.LobCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterInternal(PreparedStatement, int, Object, String, LobCreator)</Name>
      <Type>instm</Type>
      <Scope>ClobStringTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/ClobStringTypeHandler.html</Path>
    <Anchor>setParameterInternal(java.sql.PreparedStatement, int, java.lang.Object, java.lang.String, org.springframework.jdbc.support.lob.LobCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterHandlerMapping.html</Path>
    <Anchor>setParameterMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterName(String)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>setParameterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterName(String)</Name>
      <Type>instm</Type>
      <Scope>ParameterContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ParameterContentNegotiationStrategy.html</Path>
    <Anchor>setParameterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterName(String)</Name>
      <Type>instm</Type>
      <Scope>ParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterHandlerMapping.html</Path>
    <Anchor>setParameterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterName(String)</Name>
      <Type>instm</Type>
      <Scope>ParameterMappingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterMappingInterceptor.html</Path>
    <Anchor>setParameterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterName(String)</Name>
      <Type>instm</Type>
      <Scope>PortletModeParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
    <Anchor>setParameterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterName(String)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setParameterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterNameDiscoverer(ParameterNameDiscoverer)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterNameDiscoverer(ParameterNameDiscoverer)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterNameDiscoverer(ParameterNameDiscoverer)</Name>
      <Type>instm</Type>
      <Scope>InvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/InvocableHandlerMethod.html</Path>
    <Anchor>setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterNameDiscoverer(ParameterNameDiscoverer)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterNameDiscoverer(ParameterNameDiscoverer)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterNameDiscoverer(ParameterNameDiscoverer)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterNames(String[])</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
    <Anchor>setParameterNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterNames(String[])</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcutAdvisor.html</Path>
    <Anchor>setParameterNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameters(SqlParameter[])</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setParameters(org.springframework.jdbc.core.SqlParameter[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameters(Map)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameters(Map&amp;lt;String, String[]&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>setParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameters(Map&amp;lt;String, String[]&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameters(Properties)</Name>
      <Type>instm</Type>
      <Scope>TypeDefinitionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/TypeDefinitionBean.html</Path>
    <Anchor>setParameters(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterTypes(Class[])</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
    <Anchor>setParameterTypes(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterTypes(Class[])</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcutAdvisor.html</Path>
    <Anchor>setParameterTypes(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterTypes(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FilterDefinitionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html</Path>
    <Anchor>setParameterTypes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterTypes(Class[])</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
    <Anchor>setParameterTypes(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterValue(PreparedStatement, int, SqlParameter, Object)</Name>
      <Type>clm</Type>
      <Scope>StatementCreatorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/StatementCreatorUtils.html</Path>
    <Anchor>setParameterValue(java.sql.PreparedStatement, int, org.springframework.jdbc.core.SqlParameter, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterValue(PreparedStatement, int, int, Object)</Name>
      <Type>clm</Type>
      <Scope>StatementCreatorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/StatementCreatorUtils.html</Path>
    <Anchor>setParameterValue(java.sql.PreparedStatement, int, int, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterValue(PreparedStatement, int, int, String, Object)</Name>
      <Type>clm</Type>
      <Scope>StatementCreatorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/StatementCreatorUtils.html</Path>
    <Anchor>setParameterValue(java.sql.PreparedStatement, int, int, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParamName(String)</Name>
      <Type>instm</Type>
      <Scope>LocaleChangeInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/LocaleChangeInterceptor.html</Path>
    <Anchor>setParamName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParamName(String)</Name>
      <Type>instm</Type>
      <Scope>ParameterMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/ParameterMethodNameResolver.html</Path>
    <Anchor>setParamName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParamName(String)</Name>
      <Type>instm</Type>
      <Scope>ThemeChangeInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/ThemeChangeInterceptor.html</Path>
    <Anchor>setParamName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent(ApplicationContext)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>setParent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>setParent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>setParent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html</Path>
    <Anchor>setParent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>setParent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentBeanFactory(BeanFactory)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>setParentBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentBeanFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>setParentBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentMessageSource(MessageSource)</Name>
      <Type>intfm</Type>
      <Scope>HierarchicalMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/HierarchicalMessageSource.html</Path>
    <Anchor>setParentMessageSource(org.springframework.context.MessageSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentMessageSource(MessageSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractMessageSource.html</Path>
    <Anchor>setParentMessageSource(org.springframework.context.MessageSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentMessageSource(MessageSource)</Name>
      <Type>instm</Type>
      <Scope>DelegatingMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DelegatingMessageSource.html</Path>
    <Anchor>setParentMessageSource(org.springframework.context.MessageSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentName(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>setParentName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentName(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setParentName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentName(String)</Name>
      <Type>instm</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>setParentName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentName(String)</Name>
      <Type>instm</Type>
      <Scope>GenericBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/GenericBeanDefinition.html</Path>
    <Anchor>setParentName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentName(String)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>setParentName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentThemeSource(ThemeSource)</Name>
      <Type>intfm</Type>
      <Scope>HierarchicalThemeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/HierarchicalThemeSource.html</Path>
    <Anchor>setParentThemeSource(org.springframework.ui.context.ThemeSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentThemeSource(ThemeSource)</Name>
      <Type>instm</Type>
      <Scope>DelegatingThemeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/DelegatingThemeSource.html</Path>
    <Anchor>setParentThemeSource(org.springframework.ui.context.ThemeSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParentThemeSource(ThemeSource)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleThemeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/ResourceBundleThemeSource.html</Path>
    <Anchor>setParentThemeSource(org.springframework.ui.context.ThemeSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPartConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
    <Anchor>setPartConverters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassword(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractDriverBasedDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDriverBasedDataSource.html</Path>
    <Anchor>setPassword(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassword(String)</Name>
      <Type>intfm</Type>
      <Scope>ConnectionProperties</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/ConnectionProperties.html</Path>
    <Anchor>setPassword(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassword(String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html</Path>
    <Anchor>setPassword(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassword(String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>setPassword(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassword(String)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>setPassword(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassword(String)</Name>
      <Type>instm</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>setPassword(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassword(String)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setPassword(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassword(String)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setPassword(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassword(String)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setPassword(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath(String)</Name>
      <Type>instm</Type>
      <Scope>BindTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindTag.html</Path>
    <Anchor>setPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>setPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath(String)</Name>
      <Type>instm</Type>
      <Scope>NestedPathTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/NestedPathTag.html</Path>
    <Anchor>setPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath(HttpServletRequest, String)</Name>
      <Type>clm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesView.html</Path>
    <Anchor>setPath(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathInfo(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setPathInfo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathMatcher(PathMatcher)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>setPathMatcher(org.springframework.util.PathMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathMatcher(PathMatcher)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setPathMatcher(org.springframework.util.PathMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathMatcher(PathMatcher)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setPathMatcher(org.springframework.util.PathMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathMatcher(PathMatcher)</Name>
      <Type>instm</Type>
      <Scope>PropertiesMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/PropertiesMethodNameResolver.html</Path>
    <Anchor>setPathMatcher(org.springframework.util.PathMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathMatcher(PathMatcher)</Name>
      <Type>instm</Type>
      <Scope>WebContentInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
    <Anchor>setPathMatcher(org.springframework.util.PathMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>ControllerClassNameHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html</Path>
    <Anchor>setPathPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathSeparator(String)</Name>
      <Type>instm</Type>
      <Scope>AntPathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
    <Anchor>setPathSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPattern(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
    <Anchor>setPattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPattern(String)</Name>
      <Type>instm</Type>
      <Scope>RegexpMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RegexpMethodPointcutAdvisor.html</Path>
    <Anchor>setPattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPattern(String)</Name>
      <Type>instm</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>setPattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPattern(String)</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactory.html</Path>
    <Anchor>setPattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPattern(String)</Name>
      <Type>instm</Type>
      <Scope>NumberFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/NumberFormatter.html</Path>
    <Anchor>setPattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPatterns(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
    <Anchor>setPatterns(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPatterns(String[])</Name>
      <Type>instm</Type>
      <Scope>RegexpMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RegexpMethodPointcutAdvisor.html</Path>
    <Anchor>setPatterns(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPeriod(long)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>setPeriod(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPeriod(long)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>setPeriod(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPeriod(long)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>setPeriod(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissionDeniedCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setPermissionDeniedCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceContexts(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>setPersistenceContexts(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceExceptionTranslator(PersistenceExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>PersistenceExceptionTranslationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
    <Anchor>setPersistenceExceptionTranslator(org.springframework.dao.support.PersistenceExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceManagerFactory(PersistenceManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>JdoAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoAccessor.html</Path>
    <Anchor>setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceManagerFactory(PersistenceManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceManagerFactory(PersistenceManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>JdoDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/JdoDaoSupport.html</Path>
    <Anchor>setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceManagerFactory(PersistenceManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>OpenPersistenceManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/OpenPersistenceManagerInViewInterceptor.html</Path>
    <Anchor>setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceManagerFactory(PersistenceManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>SpringPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html</Path>
    <Anchor>setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceManagerFactory(PersistenceManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>StandardPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/StandardPersistenceManagerProxyBean.html</Path>
    <Anchor>setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceManagerFactoryBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>OpenPersistenceManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/OpenPersistenceManagerInViewFilter.html</Path>
    <Anchor>setPersistenceManagerFactoryBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceManagerFactoryName(String)</Name>
      <Type>instm</Type>
      <Scope>LocalPersistenceManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html</Path>
    <Anchor>setPersistenceManagerFactoryName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceManagerInterface(Class&amp;lt;? extends PersistenceManager&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SpringPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html</Path>
    <Anchor>setPersistenceManagerInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceProvider(PersistenceProvider)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setPersistenceProvider(javax.persistence.spi.PersistenceProvider)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceProviderClass(Class&amp;lt;? extends PersistenceProvider&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setPersistenceProviderClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceProviderClassName(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setPersistenceProviderClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceProviderPackageName(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setPersistenceProviderPackageName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceProviderPackageName(String)</Name>
      <Type>intfm</Type>
      <Scope>SmartPersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/SmartPersistenceUnitInfo.html</Path>
    <Anchor>setPersistenceProviderPackageName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitManager(PersistenceUnitManager)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setPersistenceUnitManager(org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>setPersistenceUnitName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitName(String)</Name>
      <Type>instm</Type>
      <Scope>EntityManagerFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryAccessor.html</Path>
    <Anchor>setPersistenceUnitName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitName(String)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>setPersistenceUnitName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitName(String)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setPersistenceUnitName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitName(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setPersistenceUnitName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitName(String)</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.html</Path>
    <Anchor>setPersistenceUnitName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitPostProcessors(PersistenceUnitPostProcessor...)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setPersistenceUnitPostProcessors(org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitPostProcessors(PersistenceUnitPostProcessor...)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setPersistenceUnitPostProcessors(org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnitRootUrl(URL)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setPersistenceUnitRootUrl(java.net.URL)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceUnits(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>setPersistenceUnits(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceXmlLocation(String)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setPersistenceXmlLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceXmlLocation(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setPersistenceXmlLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceXmlLocations(String...)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setPersistenceXmlLocations(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistenceXMLSchemaVersion(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setPersistenceXMLSchemaVersion(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistLocation(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedResource.html</Path>
    <Anchor>setPersistLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistName(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedResource.html</Path>
    <Anchor>setPersistName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistPeriod(int)</Name>
      <Type>instm</Type>
      <Scope>ManagedAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedAttribute.html</Path>
    <Anchor>setPersistPeriod(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistPeriod(int)</Name>
      <Type>instm</Type>
      <Scope>ManagedMetric</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedMetric.html</Path>
    <Anchor>setPersistPeriod(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistPeriod(int)</Name>
      <Type>instm</Type>
      <Scope>ManagedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedResource.html</Path>
    <Anchor>setPersistPeriod(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistPolicy(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedAttribute.html</Path>
    <Anchor>setPersistPolicy(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistPolicy(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedMetric</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedMetric.html</Path>
    <Anchor>setPersistPolicy(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPersistPolicy(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedResource.html</Path>
    <Anchor>setPersistPolicy(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase(int)</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>setPhase(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>setPhase(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase(int)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setPhase(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaceholderPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>setPlaceholderPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaceholderPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>setPlaceholderPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaceholderPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>setPlaceholderPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaceholderPrefix(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurablePropertyResolver.html</Path>
    <Anchor>setPlaceholderPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaceholderSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>setPlaceholderSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaceholderSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>setPlaceholderSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaceholderSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>setPlaceholderSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaceholderSuffix(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurablePropertyResolver.html</Path>
    <Anchor>setPlaceholderSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPointcut(Pointcut)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanFactoryPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor.html</Path>
    <Anchor>setPointcut(org.springframework.aop.Pointcut)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPointcut(Pointcut)</Name>
      <Type>instm</Type>
      <Scope>DefaultPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultPointcutAdvisor.html</Path>
    <Anchor>setPointcut(org.springframework.aop.Pointcut)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPointcut(Pointcut)</Name>
      <Type>instm</Type>
      <Scope>CacheProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheProxyFactoryBean.html</Path>
    <Anchor>setPointcut(org.springframework.aop.Pointcut)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPointcut(Pointcut)</Name>
      <Type>instm</Type>
      <Scope>TransactionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.html</Path>
    <Anchor>setPointcut(org.springframework.aop.Pointcut)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPointcutDeclarationScope(Class)</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
    <Anchor>setPointcutDeclarationScope(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPoolSize(int)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
    <Anchor>setPoolSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPoolSize(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>setPoolSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPoolSize(String)</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/TaskExecutorFactoryBean.html</Path>
    <Anchor>setPoolSize(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPopulateProtectedVariables(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>setPopulateProtectedVariables(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPopulators(DatabasePopulator...)</Name>
      <Type>instm</Type>
      <Scope>CompositeDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/CompositeDatabasePopulator.html</Path>
    <Anchor>setPopulators(org.springframework.jdbc.datasource.init.DatabasePopulator...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPort(int)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/ProxyFactoryBean.html</Path>
    <Anchor>setPort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPort(int)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>setPort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPort(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>setPort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPort(int)</Name>
      <Type>instm</Type>
      <Scope>RmiRegistryFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
    <Anchor>setPort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPort(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>setPort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setPortInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletClass(Class)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>setPortletClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletConfig(PortletConfig)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html</Path>
    <Anchor>setPortletConfig(javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletConfig(PortletConfig)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html</Path>
    <Anchor>setPortletConfig(javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletConfig(PortletConfig)</Name>
      <Type>intfm</Type>
      <Scope>PortletConfigAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletConfigAware.html</Path>
    <Anchor>setPortletConfig(javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletConfig(PortletConfig)</Name>
      <Type>instm</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>setPortletConfig(javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletConfig(PortletConfig)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletPostProcessor.html</Path>
    <Anchor>setPortletConfig(javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletConfig(PortletConfig)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>setPortletConfig(javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>instm</Type>
      <Scope>PortletApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletApplicationObjectSupport.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>intfm</Type>
      <Scope>PortletContextAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextAware.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>instm</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletHandlerAdapter.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletPostProcessor.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>instm</Type>
      <Scope>CommonsPortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContext(PortletContext)</Name>
      <Type>instm</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>setPortletContext(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletContextName(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletContext.html</Path>
    <Anchor>setPortletContextName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletMode(PortletMode)</Name>
      <Type>instm</Type>
      <Scope>MockActionResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockActionResponse.html</Path>
    <Anchor>setPortletMode(javax.portlet.PortletMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletMode(PortletMode)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setPortletMode(javax.portlet.PortletMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletMode(PortletMode)</Name>
      <Type>instm</Type>
      <Scope>MockPortletURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletURL.html</Path>
    <Anchor>setPortletMode(javax.portlet.PortletMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletMode(PortletMode)</Name>
      <Type>instm</Type>
      <Scope>MockStateAwareResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockStateAwareResponse.html</Path>
    <Anchor>setPortletMode(javax.portlet.PortletMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletModeMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PortletModeHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeHandlerMapping.html</Path>
    <Anchor>setPortletModeMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletModeParameterMap(Map&amp;lt;String, Map&amp;lt;String, ?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PortletModeParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
    <Anchor>setPortletModeParameterMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortletName(String)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>setPortletName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortName(String)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setPortName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPortName(String)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setPortName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition(int)</Name>
      <Type>clm</Type>
      <Scope>SpelEvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelEvaluationException.html</Path>
    <Anchor>setPosition(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPostInterceptors(Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>setPostInterceptors(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPostTemplateLoaders(TemplateLoader...)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setPostTemplateLoaders(freemarker.cache.TemplateLoader...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPragma(String)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>setPragma(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreferences(PortletPreferences)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setPreferences(javax.portlet.PortletPreferences)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreferencesValidator(PreferencesValidator)</Name>
      <Type>instm</Type>
      <Scope>MockPortletPreferences</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletPreferences.html</Path>
    <Anchor>setPreferencesValidator(javax.portlet.PreferencesValidator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreferFileSystemAccess(boolean)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setPreferFileSystemAccess(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreferFileSystemAccess(boolean)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>setPreferFileSystemAccess(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreferredLocales(List&amp;lt;Locale&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setPreferredLocales(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefetchSize(int)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setPrefetchSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreFiltered(boolean)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>setPreFiltered(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreFiltered(boolean)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>setPreFiltered(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMonitoringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractMonitoringInterceptor.html</Path>
    <Anchor>setPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.html</Path>
    <Anchor>setPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>InternalPathMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/InternalPathMethodNameResolver.html</Path>
    <Anchor>setPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>UrlFilenameViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/UrlFilenameViewController.html</Path>
    <Anchor>setPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefixJson(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>setPrefixJson(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefixJson(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>setPrefixJson(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefixJson(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setPrefixJson(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefixJson(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setPrefixJson(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreInterceptors(Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>setPreInterceptors(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrepareConnection(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setPrepareConnection(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrepareConnection(boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>setPrepareConnection(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreparedStatementType(Class&amp;lt;? extends PreparedStatement&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jdbc4NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/Jdbc4NativeJdbcExtractor.html</Path>
    <Anchor>setPreparedStatementType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreparerFactoryClass(Class&amp;lt;? extends PreparerFactory&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setPreparerFactoryClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreparerFactoryClass(Class&amp;lt;? extends PreparerFactory&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>setPreparerFactoryClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreTemplateLoaders(TemplateLoader...)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setPreTemplateLoaders(freemarker.cache.TemplateLoader...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrettyPrint(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>setPrettyPrint(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrettyPrint(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>setPrettyPrint(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrettyPrint(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setPrettyPrint(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrettyPrint(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setPrettyPrint(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreventDispatchLoop(boolean)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>setPreventDispatchLoop(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreventResponseCaching(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setPreventResponseCaching(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreviousFlushMode(FlushMode)</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>setPreviousFlushMode(org.hibernate.FlushMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreviousFlushMode(FlushMode)</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionHolder.html</Path>
    <Anchor>setPreviousFlushMode(org.hibernate.FlushMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPreviousIsolationLevel(Integer)</Name>
      <Type>instm</Type>
      <Scope>JdbcTransactionObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html</Path>
    <Anchor>setPreviousIsolationLevel(java.lang.Integer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrimary(boolean)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>setPrimary(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrimary(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setPrimary(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrimitivesDefaultedForNullValue(boolean)</Name>
      <Type>instm</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>setPrimitivesDefaultedForNullValue(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPriority(int)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setPriority(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPriority(int)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setPriority(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPriority(int)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setPriority(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPriority(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setPriority(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProblemReporter(ProblemReporter)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setProblemReporter(org.springframework.beans.factory.parsing.ProblemReporter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProblemReporter(ProblemReporter)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>setProblemReporter(org.springframework.beans.factory.parsing.ProblemReporter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProcedureName(String)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>setProcedureName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProcedureName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>setProcedureName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProcessingInstructions(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setProcessingInstructions(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropagationBehavior(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>setPropagationBehavior(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropagationBehaviorName(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>setPropagationBehaviorName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>PropertiesLoaderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
    <Anchor>setProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>NameMatchTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.html</Path>
    <Anchor>setProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertiesArray(Properties[])</Name>
      <Type>instm</Type>
      <Scope>PropertiesLoaderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
    <Anchor>setPropertiesArray(java.util.Properties[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertiesPersister(PropertiesPersister)</Name>
      <Type>instm</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>setPropertiesPersister(org.springframework.util.PropertiesPersister)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertiesPersister(PropertiesPersister)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>setPropertiesPersister(org.springframework.util.PropertiesPersister)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertiesPersister(PropertiesPersister)</Name>
      <Type>instm</Type>
      <Scope>PropertiesLoaderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
    <Anchor>setPropertiesPersister(org.springframework.util.PropertiesPersister)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperty(String)</Name>
      <Type>instm</Type>
      <Scope>MutableSortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/MutableSortDefinition.html</Path>
    <Anchor>setProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/env/MockEnvironment.html</Path>
    <Anchor>setProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperty(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/env/MockPropertySource.html</Path>
    <Anchor>setProperty(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>setProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortalContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortalContext.html</Path>
    <Anchor>setProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletResponse.html</Path>
    <Anchor>setProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyAccessors(List&amp;lt;PropertyAccessor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setPropertyAccessors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyEditorRegistrar(PropertyEditorRegistrar)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>setPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyEditorRegistrar(PropertyEditorRegistrar)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyEditorRegistrar(PropertyEditorRegistrar)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyEditorRegistrars(PropertyEditorRegistrar[])</Name>
      <Type>instm</Type>
      <Scope>CustomEditorConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomEditorConfigurer.html</Path>
    <Anchor>setPropertyEditorRegistrars(org.springframework.beans.PropertyEditorRegistrar[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyEditorRegistrars(PropertyEditorRegistrar[])</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>setPropertyEditorRegistrars(org.springframework.beans.PropertyEditorRegistrar[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyEditorRegistrars(PropertyEditorRegistrar[])</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setPropertyEditorRegistrars(org.springframework.beans.PropertyEditorRegistrar[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyEditorRegistrars(PropertyEditorRegistrar[])</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setPropertyEditorRegistrars(org.springframework.beans.PropertyEditorRegistrar[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyPath(String)</Name>
      <Type>instm</Type>
      <Scope>PropertyPathFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPathFactoryBean.html</Path>
    <Anchor>setPropertyPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertySources(PropertySources)</Name>
      <Type>instm</Type>
      <Scope>PropertySourcesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/PropertySourcesPlaceholderConfigurer.html</Path>
    <Anchor>setPropertySources(org.springframework.core.env.PropertySources)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValue(PropertyValue)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
    <Anchor>setPropertyValue(org.springframework.beans.PropertyValue)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
    <Anchor>setPropertyValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>setPropertyValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValue(PropertyValue)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>setPropertyValue(org.springframework.beans.PropertyValue)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>DirectFieldAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/DirectFieldAccessor.html</Path>
    <Anchor>setPropertyValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValue(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>setPropertyValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValue(PropertyValue)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>setPropertyValue(org.springframework.beans.PropertyValue)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValueAt(PropertyValue, int)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>setPropertyValueAt(org.springframework.beans.PropertyValue, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValues(Map&amp;lt;?, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
    <Anchor>setPropertyValues(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValues(PropertyValues)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
    <Anchor>setPropertyValues(org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValues(PropertyValues, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
    <Anchor>setPropertyValues(org.springframework.beans.PropertyValues, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValues(PropertyValues, boolean, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
    <Anchor>setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValues(MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setPropertyValues(org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValues(Map&amp;lt;?, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>setPropertyValues(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValues(PropertyValues)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>setPropertyValues(org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValues(PropertyValues, boolean)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>setPropertyValues(org.springframework.beans.PropertyValues, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPropertyValues(PropertyValues, boolean, boolean)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProtocol(String)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>setProtocol(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProtocol(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setProtocol(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProviderClass(Class)</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>setProviderClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxy(Proxy)</Name>
      <Type>instm</Type>
      <Scope>SimpleClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/SimpleClientHttpRequestFactory.html</Path>
    <Anchor>setProxy(java.net.Proxy)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>setProxyClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>setProxyClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setProxyClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyFactory(BurlapProxyFactory)</Name>
      <Type>instm</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>setProxyFactory(com.caucho.burlap.client.BurlapProxyFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyFactory(HessianProxyFactory)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setProxyFactory(com.caucho.hessian.client.HessianProxyFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>MBeanProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanProxyFactoryBean.html</Path>
    <Anchor>setProxyInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>setProxyInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyInterfaces(Class&amp;lt;?&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>setProxyInterfaces(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyInterfaces(Class[])</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setProxyInterfaces(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyInterfaces(Class[])</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>setProxyInterfaces(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProxyTargetClass(boolean)</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>setProxyTargetClass(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPublicScope(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockCacheControl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockCacheControl.html</Path>
    <Anchor>setPublicScope(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPublishContext(boolean)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>setPublishContext(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPublishContext(boolean)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setPublishContext(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPublishEvents(boolean)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>setPublishEvents(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPublishEvents(boolean)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setPublishEvents(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPubSubDomain(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager102.html</Path>
    <Anchor>setPubSubDomain(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPubSubDomain(boolean)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory102.html</Path>
    <Anchor>setPubSubDomain(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPubSubDomain(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setPubSubDomain(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPubSubDomain(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsDestinationAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JmsDestinationAccessor.html</Path>
    <Anchor>setPubSubDomain(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPubSubNoLocal(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setPubSubNoLocal(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPubSubNoLocal(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>setPubSubNoLocal(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPubSubNoLocal(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>setPubSubNoLocal(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQualifier(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/DefaultTransactionAttribute.html</Path>
    <Anchor>setQualifier(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQuartzProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setQuartzProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueryCacheRegion(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>setQueryCacheRegion(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueryString(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setQueryString(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueryTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>setQueryTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueryTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setQueryTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueue(Queue)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>setQueue(javax.jms.Queue)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueueCapacity(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setQueueCapacity(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueueCapacity(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>setQueueCapacity(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueueCapacity(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setQueueCapacity(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueueCapacity(int)</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/TaskExecutorFactoryBean.html</Path>
    <Anchor>setQueueCapacity(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQueueName(String)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>setQueueName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRaiseExceptions(boolean)</Name>
      <Type>instm</Type>
      <Scope>AspectJAdviceParameterNameDiscoverer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.html</Path>
    <Anchor>setRaiseExceptions(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadOnly(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>MockPortletPreferences</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletPreferences.html</Path>
    <Anchor>setReadOnly(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadOnly(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>setReadOnly(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadonly(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>setReadonly(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>CommonsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
    <Anchor>setReadTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>setReadTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/SimpleClientHttpRequestFactory.html</Path>
    <Anchor>setReadTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadTimeout(long)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setReadTimeout(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>setReadTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>setReadTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReadTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html</Path>
    <Anchor>setReadTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReceiveTimeout(long)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setReceiveTimeout(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReceiveTimeout(long)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>setReceiveTimeout(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReceiveTimeout(long)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>setReceiveTimeout(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReconnectOnException(boolean)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>setReconnectOnException(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRecordName(String)</Name>
      <Type>instm</Type>
      <Scope>CommAreaRecord</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CommAreaRecord.html</Path>
    <Anchor>setRecordName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRecordShortDescription(String)</Name>
      <Type>instm</Type>
      <Scope>CommAreaRecord</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CommAreaRecord.html</Path>
    <Anchor>setRecordShortDescription(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRecoveryInterval(long)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setRecoveryInterval(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRedirectAction(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>setRedirectAction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRedirectContextRelative(boolean)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setRedirectContextRelative(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRedirectHttp10Compatible(boolean)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setRedirectHttp10Compatible(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRedirectModel(ModelMap)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>setRedirectModel(org.springframework.ui.ModelMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRedirectModelScenario(boolean)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>setRedirectModelScenario(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReference(Reference)</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>setReference(javax.naming.Reference)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRefreshCheckDelay(long)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html</Path>
    <Anchor>setRefreshCheckDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRefreshHomeOnConnectFailure(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>setRefreshHomeOnConnectFailure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRefreshOnConnectFailure(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setRefreshOnConnectFailure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRefreshServiceAfterConnectFailure(boolean)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setRefreshServiceAfterConnectFailure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRefreshStubOnConnectFailure(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>setRefreshStubOnConnectFailure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRefreshStubOnConnectFailure(boolean)</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>setRefreshStubOnConnectFailure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRefreshTimestamp(long)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource.PropertiesHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.PropertiesHolder.html</Path>
    <Anchor>setRefreshTimestamp(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegisterDefaultFormatters(boolean)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
    <Anchor>setRegisterDefaultFormatters(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegisterTraceInterceptor(boolean)</Name>
      <Type>instm</Type>
      <Scope>RemoteExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteExporter.html</Path>
    <Anchor>setRegisterTraceInterceptor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegisterWithFactory(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerFactoryBean.html</Path>
    <Anchor>setRegisterWithFactory(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegistrationBehavior(int)</Name>
      <Type>instm</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>setRegistrationBehavior(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegistrationBehaviorName(String)</Name>
      <Type>instm</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>setRegistrationBehaviorName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegistrationPolicy(RegistrationPolicy)</Name>
      <Type>instm</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>setRegistrationPolicy(org.springframework.jmx.support.RegistrationPolicy)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegistry(Registry)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setRegistry(java.rmi.registry.Registry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegistryClientSocketFactory(RMIClientSocketFactory)</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegistryClientSocketFactory(RMIClientSocketFactory)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegistryHost(String)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setRegistryHost(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegistryPort(int)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setRegistryPort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegistryServerSocketFactory(RMIServerSocketFactory)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setRegistryServerSocketFactory(java.rmi.server.RMIServerSocketFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRejectedExecutionHandler(RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setRejectedExecutionHandler(edu.emory.mathcs.backport.java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRejectedExecutionHandler(RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRejectedExecutionHandler(Object)</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/TaskExecutorFactoryBean.html</Path>
    <Anchor>setRejectedExecutionHandler(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReleaseResourcesAfterRead(boolean)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.html</Path>
    <Anchor>setReleaseResourcesAfterRead(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoteAddr(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setRemoteAddr(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoteHost(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setRemoteHost(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoteInvocationExecutor(RemoteInvocationExecutor)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationBasedExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedExporter.html</Path>
    <Anchor>setRemoteInvocationExecutor(org.springframework.remoting.support.RemoteInvocationExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoteInvocationFactory(RemoteInvocationFactory)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>setRemoteInvocationFactory(org.springframework.remoting.support.RemoteInvocationFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoteInvocationFactory(RemoteInvocationFactory)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>setRemoteInvocationFactory(org.springframework.remoting.support.RemoteInvocationFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoteInvocationFactory(RemoteInvocationFactory)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationBasedAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedAccessor.html</Path>
    <Anchor>setRemoteInvocationFactory(org.springframework.remoting.support.RemoteInvocationFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemotePort(int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setRemotePort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoteUser(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setRemoteUser(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoteUser(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setRemoteUser(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoveSemicolonContent(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setRemoveSemicolonContent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoveSemicolonContent(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractUrlViewController.html</Path>
    <Anchor>setRemoveSemicolonContent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoveSemicolonContent(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setRemoveSemicolonContent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoveSemicolonContent(boolean)</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>setRemoveSemicolonContent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderCommandAndErrors(ActionRequest, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setRenderCommandAndErrors(javax.portlet.ActionRequest, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderedAttributes(Set&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setRenderedAttributes(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderedAttributes(Set&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setRenderedAttributes(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderer(Renderer)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesView.html</Path>
    <Anchor>setRenderer(org.apache.tiles.request.render.Renderer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderer(Renderer)</Name>
      <Type>instm</Type>
      <Scope>TilesViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesViewResolver.html</Path>
    <Anchor>setRenderer(org.apache.tiles.request.render.Renderer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockActionResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockActionResponse.html</Path>
    <Anchor>setRenderParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderParameter(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockActionResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockActionResponse.html</Path>
    <Anchor>setRenderParameter(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockStateAwareResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockStateAwareResponse.html</Path>
    <Anchor>setRenderParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderParameter(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockStateAwareResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockStateAwareResponse.html</Path>
    <Anchor>setRenderParameter(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderParameters(Map&amp;lt;String, String[]&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MockActionResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockActionResponse.html</Path>
    <Anchor>setRenderParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderParameters(EventRequest)</Name>
      <Type>instm</Type>
      <Scope>MockEventResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockEventResponse.html</Path>
    <Anchor>setRenderParameters(javax.portlet.EventRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderParameters(Map&amp;lt;String, String[]&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MockStateAwareResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockStateAwareResponse.html</Path>
    <Anchor>setRenderParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderParameters(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>setRenderParameters(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderWhenMinimized(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setRenderWhenMinimized(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderWhenMinimized(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
    <Anchor>setRenderWhenMinimized(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReobtainTransactionalConnections(boolean)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareDataSourceProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy.html</Path>
    <Anchor>setReobtainTransactionalConnections(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRepeatCount(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setRepeatCount(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRepeatInterval(long)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setRepeatInterval(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReplaceExistingBinding(boolean)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setReplaceExistingBinding(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReplyTo(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setReplyTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReplyTo(InternetAddress)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setReplyTo(javax.mail.internet.InternetAddress)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReplyTo(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setReplyTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReplyTo(String, String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setReplyTo(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReplyTo(String)</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setReplyTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReplyTo(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setReplyTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReportDataKey(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>setReportDataKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReportDataKey(String)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html</Path>
    <Anchor>setReportDataKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRepositoryAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PersistenceExceptionTranslationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/annotation/PersistenceExceptionTranslationPostProcessor.html</Path>
    <Anchor>setRepositoryAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestAttributes(RequestAttributes)</Name>
      <Type>clm</Type>
      <Scope>RequestContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextHolder.html</Path>
    <Anchor>setRequestAttributes(org.springframework.web.context.request.RequestAttributes)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestAttributes(RequestAttributes, boolean)</Name>
      <Type>clm</Type>
      <Scope>RequestContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextHolder.html</Path>
    <Anchor>setRequestAttributes(org.springframework.web.context.request.RequestAttributes, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestBody(HttpInvokerClientConfiguration, PostMethod, ByteArrayOutputStream)</Name>
      <Type>instm</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>setRequestBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.apache.commons.httpclient.methods.PostMethod, java.io.ByteArrayOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestBody(HttpInvokerClientConfiguration, HttpPost, ByteArrayOutputStream)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>setRequestBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.apache.http.client.methods.HttpPost, java.io.ByteArrayOutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestContextAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>setRequestContextAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestContextAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setRequestContextAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestedSessionId(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setRequestedSessionId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestedSessionIdFromCookie(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setRequestedSessionIdFromCookie(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestedSessionIdFromURL(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setRequestedSessionIdFromURL(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestedSessionIdValid(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setRequestedSessionIdValid(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestedSessionIdValid(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setRequestedSessionIdValid(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestFactory(ClientHttpRequestFactory)</Name>
      <Type>instm</Type>
      <Scope>HttpAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/HttpAccessor.html</Path>
    <Anchor>setRequestFactory(org.springframework.http.client.ClientHttpRequestFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestHandled(boolean)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>setRequestHandled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequestURI(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setRequestURI(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequiredAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>setRequiredAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequiredFields(String...)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setRequiredFields(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequiredParameterName(String)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>setRequiredParameterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequiredParameterValue(boolean)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>setRequiredParameterValue(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequiredProperties(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>setRequiredProperties(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequiredProperties(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>setRequiredProperties(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequiredProperties(String...)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurablePropertyResolver.html</Path>
    <Anchor>setRequiredProperties(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequiredRowsAffected(int)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>setRequiredRowsAffected(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequiredType(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SingleColumnRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SingleColumnRowMapper.html</Path>
    <Anchor>setRequiredType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequireSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>setRequireSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRequireSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>setRequireSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResolveLazily(boolean)</Name>
      <Type>instm</Type>
      <Scope>CommonsMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
    <Anchor>setResolveLazily(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResolveLazily(boolean)</Name>
      <Type>instm</Type>
      <Scope>CommonsPortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
    <Anchor>setResolveLazily(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResource(Resource)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setResource(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceAdapter(ResourceAdapter)</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>setResourceAdapter(javax.resource.spi.ResourceAdapter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceAdapter(ResourceAdapter)</Name>
      <Type>instm</Type>
      <Scope>ResourceAdapterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
    <Anchor>setResourceAdapter(javax.resource.spi.ResourceAdapter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceAdapterClass(Class)</Name>
      <Type>instm</Type>
      <Scope>ResourceAdapterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
    <Anchor>setResourceAdapterClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceBundle(Locale, ResourceBundle)</Name>
      <Type>instm</Type>
      <Scope>MockPortletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletConfig.html</Path>
    <Anchor>setResourceBundle(java.util.Locale, java.util.ResourceBundle)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceDescription(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setResourceDescription(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceDescription(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setResourceDescription(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceFactory(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>setResourceFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceID(String)</Name>
      <Type>instm</Type>
      <Scope>MockResourceRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockResourceRequest.html</Path>
    <Anchor>setResourceID(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceID(String)</Name>
      <Type>instm</Type>
      <Scope>MockResourceURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockResourceURL.html</Path>
    <Anchor>setResourceID(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinitionReader.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>intfm</Type>
      <Scope>ResourceLoaderAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ResourceLoaderAware.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>SortedResourcesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/config/SortedResourcesFactoryBean.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoader(ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>setResourceLoader(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceLoaderPath(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>setResourceLoaderPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourcePattern(String)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>setResourcePattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceRef(boolean)</Name>
      <Type>instm</Type>
      <Scope>JndiLocatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiLocatorSupport.html</Path>
    <Anchor>setResourceRef(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResourceRef(boolean)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>setResourceRef(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResponse(ClientHttpResponse)</Name>
      <Type>instm</Type>
      <Scope>MockClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/http/client/MockClientHttpRequest.html</Path>
    <Anchor>setResponse(org.springframework.http.client.ClientHttpResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResponseContentType(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>setResponseContentType(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRestTemplate(RestTemplate)</Name>
      <Type>instm</Type>
      <Scope>RestGatewaySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/support/RestGatewaySupport.html</Path>
    <Anchor>setRestTemplate(org.springframework.web.client.RestTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResult(T)</Name>
      <Type>instm</Type>
      <Scope>DeferredResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.html</Path>
    <Anchor>setResult(T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResultHandler(DeferredResult.DeferredResultHandler)</Name>
      <Type>instm</Type>
      <Scope>DeferredResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.html</Path>
    <Anchor>setResultHandler(org.springframework.web.context.request.async.DeferredResult.DeferredResultHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResultSetType(int)</Name>
      <Type>instm</Type>
      <Scope>CallableStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCreatorFactory.html</Path>
    <Anchor>setResultSetType(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResultSetType(int)</Name>
      <Type>instm</Type>
      <Scope>PreparedStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
    <Anchor>setResultSetType(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResultSetType(int)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setResultSetType(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResultSetType(Class&amp;lt;? extends ResultSet&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jdbc4NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/Jdbc4NativeJdbcExtractor.html</Path>
    <Anchor>setResultSetType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResultsMapCaseInsensitive(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>setResultsMapCaseInsensitive(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResultType(Class)</Name>
      <Type>instm</Type>
      <Scope>PropertyPathFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPathFactoryBean.html</Path>
    <Anchor>setResultType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResultType(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>setResultType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturnGeneratedKeys(boolean)</Name>
      <Type>instm</Type>
      <Scope>PreparedStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
    <Anchor>setReturnGeneratedKeys(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturnGeneratedKeys(boolean)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setReturnGeneratedKeys(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturningName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>setReturningName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturningName(String)</Name>
      <Type>instm</Type>
      <Scope>AspectJAdviceParameterNameDiscoverer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.html</Path>
    <Anchor>setReturningName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturningName(String)</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterReturningAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html</Path>
    <Anchor>setReturningName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturningNameNoCheck(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>setReturningNameNoCheck(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturnValueHandlers(List&amp;lt;HandlerMethodReturnValueHandler&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>setReturnValueHandlers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturnValueHandlers(List&amp;lt;HandlerMethodReturnValueHandler&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setReturnValueHandlers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturnValueRequired(boolean)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>setReturnValueRequired(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReturnValueRequired(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>setReturnValueRequired(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReuseObjects(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setReuseObjects(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRole(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setRole(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRole(int)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setRole(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRollbackOnCommitFailure(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>setRollbackOnCommitFailure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>ManagedTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/ManagedTransactionAdapter.html</Path>
    <Anchor>setRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>UserTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/UserTransactionAdapter.html</Path>
    <Anchor>setRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>setRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>setRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRollbackOnly()</Name>
      <Type>intfm</Type>
      <Scope>TransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionStatus.html</Path>
    <Anchor>setRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRollbackRules(List&amp;lt;RollbackRuleAttribute&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RuleBasedTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html</Path>
    <Anchor>setRollbackRules(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setRoot(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRootElement(String)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setRootElement(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRootHandler(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
    <Anchor>setRootHandler(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRootObject(Object, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setRootObject(java.lang.Object, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRootObject(Object)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setRootObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoundingMode(RoundingMode)</Name>
      <Type>instm</Type>
      <Scope>CurrencyFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/CurrencyFormatter.html</Path>
    <Anchor>setRoundingMode(java.math.RoundingMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRowMapperClass(Class)</Name>
      <Type>instm</Type>
      <Scope>GenericSqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/GenericSqlQuery.html</Path>
    <Anchor>setRowMapperClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRows(String)</Name>
      <Type>instm</Type>
      <Scope>TextareaTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TextareaTag.html</Path>
    <Anchor>setRows(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRowsExpected(int)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>setRowsExpected(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRunnable(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>setRunnable(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRunnable(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>setRunnable(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRunnable(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>setRunnable(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSampledStatisticsEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setSampledStatisticsEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSavepoint(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>setSavepoint(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSavepointAllowed(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdbcTransactionObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html</Path>
    <Anchor>setSavepointAllowed(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSavepointManager(SavepointManager)</Name>
      <Type>instm</Type>
      <Scope>EntityManagerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerHolder.html</Path>
    <Anchor>setSavepointManager(org.springframework.transaction.SavepointManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScheduledExecutor(ScheduledExecutorService)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>setScheduledExecutor(java.util.concurrent.ScheduledExecutorService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScheduledExecutorTasks(ScheduledExecutorTask[])</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
    <Anchor>setScheduledExecutorTasks(org.springframework.scheduling.concurrent.ScheduledExecutorTask[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScheduledTimerListeners(ScheduledTimerListener[])</Name>
      <Type>instm</Type>
      <Scope>TimerManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerFactoryBean.html</Path>
    <Anchor>setScheduledTimerListeners(org.springframework.scheduling.commonj.ScheduledTimerListener[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScheduledTimerTasks(ScheduledTimerTask[])</Name>
      <Type>instm</Type>
      <Scope>TimerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerFactoryBean.html</Path>
    <Anchor>setScheduledTimerTasks(org.springframework.scheduling.timer.ScheduledTimerTask[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScheduler(Object)</Name>
      <Type>instm</Type>
      <Scope>ScheduledAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html</Path>
    <Anchor>setScheduler(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScheduler(Object)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setScheduler(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScheduler(Scheduler)</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessorBean.html</Path>
    <Anchor>setScheduler(org.quartz.Scheduler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchedulerContext(SchedulerContext)</Name>
      <Type>intfm</Type>
      <Scope>SchedulerContextAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerContextAware.html</Path>
    <Anchor>setSchedulerContext(org.quartz.SchedulerContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchedulerContext(SchedulerContext)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanJobFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SpringBeanJobFactory.html</Path>
    <Anchor>setSchedulerContext(org.quartz.SchedulerContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchedulerContextAsMap(Map)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setSchedulerContextAsMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchedulerFactoryClass(Class)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setSchedulerFactoryClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchedulerListeners(SchedulerListener[])</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setSchedulerListeners(org.quartz.SchedulerListener[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchedulerName(String)</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessorBean.html</Path>
    <Anchor>setSchedulerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchedulerName(String)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setSchedulerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchema(Resource)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setSchema(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchemaLanguage(String)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setSchemaLanguage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchemaLocation(String)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setSchemaLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchemaName(String)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>setSchemaName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchemaName(String)</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>setSchemaName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchemaName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>setSchemaName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchemaName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>setSchemaName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchemaResourceResolver(LSResourceResolver)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setSchemaResourceResolver(org.w3c.dom.ls.LSResourceResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchemas(Resource[])</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setSchemas(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSchemaUpdate(boolean)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setSchemaUpdate(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScheme(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setScheme(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScheme(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setScheme(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScope(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>setScope(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScope(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setScope(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScope(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setScope(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScope(String)</Name>
      <Type>instm</Type>
      <Scope>EvalTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EvalTag.html</Path>
    <Anchor>setScope(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScope(String)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>setScope(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScope(String)</Name>
      <Type>instm</Type>
      <Scope>TransformTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/TransformTag.html</Path>
    <Anchor>setScope(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScope(String)</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>setScope(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScopeAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AnnotationScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationScopeMetadataResolver.html</Path>
    <Anchor>setScopeAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScopedProxyMode(ScopedProxyMode)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>setScopedProxyMode(org.springframework.context.annotation.ScopedProxyMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScopedProxyMode(ScopedProxyMode)</Name>
      <Type>instm</Type>
      <Scope>ScopeMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ScopeMetadata.html</Path>
    <Anchor>setScopedProxyMode(org.springframework.context.annotation.ScopedProxyMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScopeMetadataResolver(ScopeMetadataResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotatedBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
    <Anchor>setScopeMetadataResolver(org.springframework.context.annotation.ScopeMetadataResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScopeMetadataResolver(ScopeMetadataResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
    <Anchor>setScopeMetadataResolver(org.springframework.context.annotation.ScopeMetadataResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScopeMetadataResolver(ScopeMetadataResolver)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>setScopeMetadataResolver(org.springframework.context.annotation.ScopeMetadataResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScopeMetadataResolver(ScopeMetadataResolver)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.html</Path>
    <Anchor>setScopeMetadataResolver(org.springframework.context.annotation.ScopeMetadataResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScopeName(String)</Name>
      <Type>instm</Type>
      <Scope>ScopeMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ScopeMetadata.html</Path>
    <Anchor>setScopeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScopes(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CustomScopeConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomScopeConfigurer.html</Path>
    <Anchor>setScopes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScreenContentKey(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutView.html</Path>
    <Anchor>setScreenContentKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScreenContentKey(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutViewResolver.html</Path>
    <Anchor>setScreenContentKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScript(String)</Name>
      <Type>instm</Type>
      <Scope>StaticScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/StaticScriptSource.html</Path>
    <Anchor>setScript(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScripts(Resource[])</Name>
      <Type>instm</Type>
      <Scope>ResourceDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
    <Anchor>setScripts(org.springframework.core.io.Resource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSearchContextAttributes(boolean)</Name>
      <Type>instm</Type>
      <Scope>ServletContextPropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html</Path>
    <Anchor>setSearchContextAttributes(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSearchSystemEnvironment(boolean)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>setSearchSystemEnvironment(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecure(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setSecure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecure(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>setSecure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecure(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setSecure(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecurityContext(AccessControlContext)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>setSecurityContext(java.security.AccessControlContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecurityContextProvider(SecurityContextProvider)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>setSecurityContextProvider(org.springframework.beans.factory.support.SecurityContextProvider)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSendCollectionType(boolean)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setSendCollectionType(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSendCollectionType(boolean)</Name>
      <Type>instm</Type>
      <Scope>HessianExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
    <Anchor>setSendCollectionType(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSentDate(Date)</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setSentDate(java.util.Date)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSentDate(Date)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setSentDate(java.util.Date)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSentDate(Date)</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setSentDate(java.util.Date)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSentDate(Date)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setSentDate(java.util.Date)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeparator(String)</Name>
      <Type>instm</Type>
      <Scope>LocalizedResourceHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/LocalizedResourceHelper.html</Path>
    <Anchor>setSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeparator(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
    <Anchor>setSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeparator(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSerializationId(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>setSerializationId(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSerializerFactory(SerializerFactory)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setSerializerFactory(com.caucho.hessian.io.SerializerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSerializerFactory(SerializerFactory)</Name>
      <Type>instm</Type>
      <Scope>HessianExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
    <Anchor>setSerializerFactory(com.caucho.hessian.io.SerializerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSerializers(JsonSerializer&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setSerializers(com.fasterxml.jackson.databind.JsonSerializer...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSerializersByType(Map&amp;lt;Class&amp;lt;?&amp;gt;, JsonSerializer&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setSerializersByType(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServer(MBeanServerConnection)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setServer(javax.management.MBeanServerConnection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServer(MBeanServerConnection)</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/NotificationListenerRegistrar.html</Path>
    <Anchor>setServer(javax.management.MBeanServerConnection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServer(MBeanServer)</Name>
      <Type>instm</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>setServer(javax.management.MBeanServer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServer(HttpServer)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>setServer(com.sun.net.httpserver.HttpServer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServerName(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setServerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServerName(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setServerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServerPort(int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setServerPort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServerPort(int)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setServerPort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServerSocketFactory(RMIServerSocketFactory)</Name>
      <Type>instm</Type>
      <Scope>RmiRegistryFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
    <Anchor>setServerSocketFactory(java.rmi.server.RMIServerSocketFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServerSocketFactory(RMIServerSocketFactory)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setServerSocketFactory(java.rmi.server.RMIServerSocketFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setService(Object)</Name>
      <Type>instm</Type>
      <Scope>RemoteExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteExporter.html</Path>
    <Anchor>setService(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceFactory(ServiceFactory)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>setServiceFactory(javax.xml.rpc.ServiceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceFactoryClass(Class)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>setServiceFactoryClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerProxyFactoryBean.html</Path>
    <Anchor>setServiceInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setServiceInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceInterface(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setServiceInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>setServiceInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>RemoteAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteAccessor.html</Path>
    <Anchor>setServiceInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>RemoteExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteExporter.html</Path>
    <Anchor>setServiceInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceLocatorExceptionClass(Class)</Name>
      <Type>instm</Type>
      <Scope>ServiceLocatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
    <Anchor>setServiceLocatorExceptionClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceLocatorInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>ServiceLocatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
    <Anchor>setServiceLocatorInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceMappings(Properties)</Name>
      <Type>instm</Type>
      <Scope>ServiceLocatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
    <Anchor>setServiceMappings(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceName(String)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>setServiceName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceName(String)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxWsServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.html</Path>
    <Anchor>setServiceName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceName(String)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setServiceName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServicePort(int)</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>setServicePort(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServicePostProcessors(JaxRpcServicePostProcessor[])</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>setServicePostProcessors(org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceType(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractServiceLoaderBasedFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/AbstractServiceLoaderBasedFactoryBean.html</Path>
    <Anchor>setServiceType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceUrl(String)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setServiceUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceUrl(String)</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/NotificationListenerRegistrar.html</Path>
    <Anchor>setServiceUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceUrl(String)</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>setServiceUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceUrl(String)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html</Path>
    <Anchor>setServiceUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServiceUrl(String)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedRemoteAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/UrlBasedRemoteAccessor.html</Path>
    <Anchor>setServiceUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServlet(ActionServlet)</Name>
      <Type>instm</Type>
      <Scope>ActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ActionSupport.html</Path>
    <Anchor>setServlet(org.apache.struts.action.ActionServlet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServlet(ActionServlet)</Name>
      <Type>instm</Type>
      <Scope>DispatchActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DispatchActionSupport.html</Path>
    <Anchor>setServlet(org.apache.struts.action.ActionServlet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServlet(ActionServlet)</Name>
      <Type>instm</Type>
      <Scope>LookupDispatchActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/LookupDispatchActionSupport.html</Path>
    <Anchor>setServlet(org.apache.struts.action.ActionServlet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServlet(ActionServlet)</Name>
      <Type>instm</Type>
      <Scope>MappingDispatchActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/MappingDispatchActionSupport.html</Path>
    <Anchor>setServlet(org.apache.struts.action.ActionServlet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletClass(Class)</Name>
      <Type>instm</Type>
      <Scope>ServletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletWrappingController.html</Path>
    <Anchor>setServletClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletConfig(ServletConfig)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebApplicationContext.html</Path>
    <Anchor>setServletConfig(javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletConfig(ServletConfig)</Name>
      <Type>intfm</Type>
      <Scope>ServletConfigAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ServletConfigAware.html</Path>
    <Anchor>setServletConfig(javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletConfig(ServletConfig)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.html</Path>
    <Anchor>setServletConfig(javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletConfig(ServletConfig)</Name>
      <Type>instm</Type>
      <Scope>GenericWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/GenericWebApplicationContext.html</Path>
    <Anchor>setServletConfig(javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletConfig(ServletConfig)</Name>
      <Type>instm</Type>
      <Scope>StaticWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
    <Anchor>setServletConfig(javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletConfig(ServletConfig)</Name>
      <Type>instm</Type>
      <Scope>SimpleServletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletPostProcessor.html</Path>
    <Anchor>setServletConfig(javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebApplicationContext.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>intfm</Type>
      <Scope>ServletContextAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ServletContextAware.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>GenericWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/GenericWebApplicationContext.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ServletContextAttributeExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAttributeExporter.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ServletContextAttributeFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAttributeFactoryBean.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ServletContextFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextFactoryBean.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ServletContextParameterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextParameterFactoryBean.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ServletContextPropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>StaticWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>WebApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationObjectSupport.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>GenericFilterBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/GenericFilterBean.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>CommonsMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>SimpleServletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletPostProcessor.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>DefaultServletHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/DefaultServletHttpRequestHandler.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerConfigurer.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>VelocityConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityConfigurer.html</Path>
    <Anchor>setServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletContextName(String)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>setServletContextName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletName(String)</Name>
      <Type>instm</Type>
      <Scope>ServletForwardingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletForwardingController.html</Path>
    <Anchor>setServletName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletName(String)</Name>
      <Type>instm</Type>
      <Scope>ServletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletWrappingController.html</Path>
    <Anchor>setServletName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServletPath(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setServletPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSession(Session)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>setSession(javax.mail.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSession(HttpSession)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setSession(javax.servlet.http.HttpSession)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSession(PortletSession)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setSession(javax.portlet.PortletSession)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionAcknowledgeMode(int)</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>setSessionAcknowledgeMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionAcknowledgeModeName(String)</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>setSessionAcknowledgeModeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionAttribute(PortletRequest, String, Object)</Name>
      <Type>clm</Type>
      <Scope>PortletUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/util/PortletUtils.html</Path>
    <Anchor>setSessionAttribute(javax.portlet.PortletRequest, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionAttribute(PortletRequest, String, Object, int)</Name>
      <Type>clm</Type>
      <Scope>PortletUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/util/PortletUtils.html</Path>
    <Anchor>setSessionAttribute(javax.portlet.PortletRequest, java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionAttribute(HttpServletRequest, String, Object)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>setSessionAttribute(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionAttributeStore(SessionAttributeStore)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionAttributeStore(SessionAttributeStore)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionAttributeStore(SessionAttributeStore)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionCacheSize(int)</Name>
      <Type>instm</Type>
      <Scope>CachingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/CachingConnectionFactory.html</Path>
    <Anchor>setSessionCacheSize(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionContext(SessionContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractSessionBean.html</Path>
    <Anchor>setSessionContext(javax.ejb.SessionContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionFactory(SessionFactory)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>setSessionFactory(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionFactory(SessionFactory)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>setSessionFactory(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionFactory(SessionFactory)</Name>
      <Type>instm</Type>
      <Scope>HibernateDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/HibernateDaoSupport.html</Path>
    <Anchor>setSessionFactory(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionFactory(SessionFactory)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>setSessionFactory(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionFactory(SessionFactory)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>setSessionFactory(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionFactoryBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html</Path>
    <Anchor>setSessionFactoryBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionFactoryBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewFilter.html</Path>
    <Anchor>setSessionFactoryBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionForm(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>setSessionForm(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionForm(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>setSessionForm(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionTransacted(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>setSessionTransacted(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSessionTransacted(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>setSessionTransacted(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShareableResources(String[])</Name>
      <Type>instm</Type>
      <Scope>SimpleJndiBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/support/SimpleJndiBeanFactory.html</Path>
    <Anchor>setShareableResources(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShared(boolean)</Name>
      <Type>instm</Type>
      <Scope>EhCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html</Path>
    <Anchor>setShared(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShared(boolean)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerAccessor.html</Path>
    <Anchor>setShared(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShouldStopConnections(boolean)</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>setShouldStopConnections(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShowPassword(boolean)</Name>
      <Type>instm</Type>
      <Scope>PasswordInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/PasswordInputTag.html</Path>
    <Anchor>setShowPassword(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShowSql(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html</Path>
    <Anchor>setShowSql(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShutdownDelay(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>setShutdownDelay(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShutdownDelay(int)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>setShutdownDelay(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimpleDateFormat(String)</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>setSimpleDateFormat(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimpleDateFormat(String)</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>setSimpleDateFormat(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSingleSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html</Path>
    <Anchor>setSingleSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSingleSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>setSingleSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSingleton(boolean)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setSingleton(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSingleton(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
    <Anchor>setSingleton(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSingleton(boolean)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/MethodInvokingFactoryBean.html</Path>
    <Anchor>setSingleton(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSingleton(boolean)</Name>
      <Type>instm</Type>
      <Scope>PropertiesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertiesFactoryBean.html</Path>
    <Anchor>setSingleton(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSingleton(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setSingleton(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSingleton(boolean)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setSingleton(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSingleView(View)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setSingleView(org.springframework.web.servlet.View)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize(String)</Name>
      <Type>instm</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>setSize(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize(String)</Name>
      <Type>instm</Type>
      <Scope>SelectTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/SelectTag.html</Path>
    <Anchor>setSize(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSkipResultsProcessing(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>setSkipResultsProcessing(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSkipUndeclaredResults(boolean)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>setSkipUndeclaredResults(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSoapActionUri(String)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setSoapActionUri(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSort(SortDefinition)</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>setSort(org.springframework.beans.support.SortDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanMetadataAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttribute.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanMetadataAttributeAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttributeAccessor.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>RuntimeBeanNameReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanNameReference.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>RuntimeBeanReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanReference.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>ManagedList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedList.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>ManagedMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedMap.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>ManagedProperties</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedProperties.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>ManagedSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedSet.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>MethodOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverride.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(Object)</Name>
      <Type>instm</Type>
      <Scope>DocumentDefaultsDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DocumentDefaultsDefinition.html</Path>
    <Anchor>setSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSource(List&amp;lt;E&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>setSource(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSourceExtractor(SourceExtractor)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setSourceExtractor(org.springframework.beans.factory.parsing.SourceExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSourceExtractor(SourceExtractor)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>setSourceExtractor(org.springframework.beans.factory.parsing.SourceExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSourceKey(String)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>setSourceKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSourceKey(String)</Name>
      <Type>instm</Type>
      <Scope>XsltViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltViewResolver.html</Path>
    <Anchor>setSourceKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSourceList(List)</Name>
      <Type>instm</Type>
      <Scope>ListFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ListFactoryBean.html</Path>
    <Anchor>setSourceList(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSourceMap(Map)</Name>
      <Type>instm</Type>
      <Scope>MapFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/MapFactoryBean.html</Path>
    <Anchor>setSourceMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSourceSet(Set)</Name>
      <Type>instm</Type>
      <Scope>SetFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SetFactoryBean.html</Path>
    <Anchor>setSourceSet(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpecifiedTypeName(String)</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>setSpecifiedTypeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSql(String)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setSql(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlErrorCodes(SQLErrorCodes)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>setSqlErrorCodes(org.springframework.jdbc.support.SQLErrorCodes)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlMapClient(SqlMapClient)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>setSqlMapClient(com.ibatis.sqlmap.client.SqlMapClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlMapClient(SqlMapClient)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/SqlMapClientDaoSupport.html</Path>
    <Anchor>setSqlMapClient(com.ibatis.sqlmap.client.SqlMapClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlMapClientProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>setSqlMapClientProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlMapClientTemplate(SqlMapClientTemplate)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/SqlMapClientDaoSupport.html</Path>
    <Anchor>setSqlMapClientTemplate(org.springframework.orm.ibatis.SqlMapClientTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlReadyForUse(boolean)</Name>
      <Type>instm</Type>
      <Scope>SqlCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlCall.html</Path>
    <Anchor>setSqlReadyForUse(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlScriptEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
    <Anchor>setSqlScriptEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlScriptEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalDataSourceSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html</Path>
    <Anchor>setSqlScriptEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlScriptEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html</Path>
    <Anchor>setSqlScriptEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlScriptEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
    <Anchor>setSqlScriptEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSqlScriptEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
    <Anchor>setSqlScriptEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStandalone(Boolean)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setStandalone(java.lang.Boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartDelay(long)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerBean.html</Path>
    <Anchor>setStartDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartDelay(long)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setStartDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartDelay(long)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerBean.html</Path>
    <Anchor>setStartDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartDelay(long)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>setStartDelay(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartupDelay(int)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setStartupDelay(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStatementParameters(Object[], PreparedStatement, int[])</Name>
      <Type>clm</Type>
      <Scope>BatchUpdateUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BatchUpdateUtils.html</Path>
    <Anchor>setStatementParameters(java.lang.Object[], java.sql.PreparedStatement, int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStatementType(Class&amp;lt;? extends Statement&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jdbc4NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/Jdbc4NativeJdbcExtractor.html</Path>
    <Anchor>setStatementType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStaticField(String)</Name>
      <Type>instm</Type>
      <Scope>FieldRetrievingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
    <Anchor>setStaticField(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStaticMethod(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>setStaticMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStatisticsEnabled(boolean)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setStatisticsEnabled(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStatus(int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setStatus(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStatus(int, String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setStatus(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStatusCode(HttpStatus)</Name>
      <Type>intfm</Type>
      <Scope>ServerHttpResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServerHttpResponse.html</Path>
    <Anchor>setStatusCode(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStatusCode(HttpStatus)</Name>
      <Type>instm</Type>
      <Scope>ServletServerHttpResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServletServerHttpResponse.html</Path>
    <Anchor>setStatusCode(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStatusCode(HttpStatus)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>setStatusCode(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStatusCodes(Properties)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>setStatusCodes(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStore(ConcurrentMap&amp;lt;Object, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheFactoryBean.html</Path>
    <Anchor>setStore(java.util.concurrent.ConcurrentMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStoresLowerCaseIdentifiers(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>setStoresLowerCaseIdentifiers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStoresLowerCaseIdentifiers(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>setStoresLowerCaseIdentifiers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStoresUpperCaseIdentifiers(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>setStoresUpperCaseIdentifiers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStoresUpperCaseIdentifiers(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>setStoresUpperCaseIdentifiers(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStreamAsLob(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.html</Path>
    <Anchor>setStreamAsLob(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStreamDriver(HierarchicalStreamDriver)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setStreamDriver(com.thoughtworks.xstream.io.HierarchicalStreamDriver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStripExtension(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setStripExtension(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStripLeadingSlash(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setStripLeadingSlash(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStripTrailingSlash(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setStripTrailingSlash(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStyle(int)</Name>
      <Type>instm</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>setStyle(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStyle(String)</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactory.html</Path>
    <Anchor>setStyle(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStylePattern(String)</Name>
      <Type>instm</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>setStylePattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStylesheetLocation(Resource)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setStylesheetLocation(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubject(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setSubject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubject(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setSubject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubject(String)</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setSubject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubject(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setSubject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubReportDataKeys(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>setSubReportDataKeys(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubReportDataKeys(String[])</Name>
      <Type>instm</Type>
      <Scope>JasperReportsViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html</Path>
    <Anchor>setSubReportDataKeys(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubReportUrls(Properties)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>setSubReportUrls(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubReportUrls(Properties)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html</Path>
    <Anchor>setSubReportUrls(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubscriptionDurable(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>setSubscriptionDurable(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubscriptionDurable(boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>setSubscriptionDurable(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuccessView(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>setSuccessView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuccessView(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>setSuccessView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMonitoringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractMonitoringInterceptor.html</Path>
    <Anchor>setSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>InternalPathMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/InternalPathMethodNameResolver.html</Path>
    <Anchor>setSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>UrlFilenameViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/UrlFilenameViewController.html</Path>
    <Anchor>setSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSupportedClasses(Class[])</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setSupportedClasses(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSupportedMediaTypes(List&amp;lt;MediaType&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>setSupportedMediaTypes(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSupportedMediaTypes(List&amp;lt;MediaType&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
    <Anchor>setSupportedMediaTypes(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSupportedMethods(String[])</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>setSupportedMethods(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSupportJaxbElementClass(boolean)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setSupportJaxbElementClass(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSupportsCatalogsInProcedureCalls(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>setSupportsCatalogsInProcedureCalls(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSupportsSchemasInProcedureCalls(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>setSupportsSchemasInProcedureCalls(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuppressClose(boolean)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>setSuppressClose(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuppressNamespaces(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setSuppressNamespaces(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSuppressXsiType(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setSuppressXsiType(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSynchedLocalTransactionAllowed(boolean)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareConnectionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html</Path>
    <Anchor>setSynchedLocalTransactionAllowed(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSynchronizedWithTransaction(boolean)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>setSynchronizedWithTransaction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSynchronizeOnSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
    <Anchor>setSynchronizeOnSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSynchronizeOnSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setSynchronizeOnSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSynchronizeOnSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractController.html</Path>
    <Anchor>setSynchronizeOnSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSynchronizeOnSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setSynchronizeOnSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSynchronizeOnSession(boolean)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setSynchronizeOnSession(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSyncTaskExecutor(TaskExecutor)</Name>
      <Type>instm</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>setSyncTaskExecutor(org.springframework.core.task.TaskExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSynthetic(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>setSynthetic(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSystemPropertiesMode(int)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>setSystemPropertiesMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSystemPropertiesModeName(String)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>setSystemPropertiesModeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSystemTreePath(String)</Name>
      <Type>instm</Type>
      <Scope>PreferencesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html</Path>
    <Anchor>setSystemTreePath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTabindex(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setTabindex(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTableName(String)</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>setTableName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTableName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>setTableName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>setTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget(Object)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>setTarget(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>setTarget(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>MethodLocatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/MethodLocatingFactoryBean.html</Path>
    <Anchor>setTargetBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>ScopedProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedProxyFactoryBean.html</Path>
    <Anchor>setTargetBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
    <Anchor>setTargetBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>BeanReferenceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html</Path>
    <Anchor>setTargetBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>ObjectFactoryCreatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ObjectFactoryCreatingFactoryBean.html</Path>
    <Anchor>setTargetBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>PropertyPathFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPathFactoryBean.html</Path>
    <Anchor>setTargetBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>ProviderCreatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ProviderCreatingFactoryBean.html</Path>
    <Anchor>setTargetBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>setTargetBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>setTargetBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetCacheManager(CacheManager)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareCacheManagerProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/TransactionAwareCacheManagerProxy.html</Path>
    <Anchor>setTargetCacheManager(org.springframework.cache.CacheManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetClass(Class)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>setTargetClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetClass(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
    <Anchor>setTargetClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetClass(Class)</Name>
      <Type>instm</Type>
      <Scope>FieldRetrievingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
    <Anchor>setTargetClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetClass(Class)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setTargetClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setTargetClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetClass(Class)</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>setTargetClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetClasses(Class[])</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setTargetClasses(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>setTargetConnectionFactory(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>setTargetConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>setTargetConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareConnectionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html</Path>
    <Anchor>setTargetConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetConnectionFactory(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>setTargetConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetDataSource(DataSource)</Name>
      <Type>instm</Type>
      <Scope>DelegatingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DelegatingDataSource.html</Path>
    <Anchor>setTargetDataSource(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetDataSources(Map&amp;lt;Object, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>setTargetDataSources(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetField(String)</Name>
      <Type>instm</Type>
      <Scope>FieldRetrievingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
    <Anchor>setTargetField(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetFilterLifecycle(boolean)</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>setTargetFilterLifecycle(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetListClass(Class)</Name>
      <Type>instm</Type>
      <Scope>ListFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ListFactoryBean.html</Path>
    <Anchor>setTargetListClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetMapClass(Class)</Name>
      <Type>instm</Type>
      <Scope>MapFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/MapFactoryBean.html</Path>
    <Anchor>setTargetMapClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetMethod(String)</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>setTargetMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetName(String)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>setTargetName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetObject(Object)</Name>
      <Type>instm</Type>
      <Scope>FieldRetrievingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
    <Anchor>setTargetObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetObject(Object)</Name>
      <Type>instm</Type>
      <Scope>PropertyPathFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPathFactoryBean.html</Path>
    <Anchor>setTargetObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetObject(Object)</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>setTargetObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetPackage(String)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setTargetPackage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetPackage(String)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>setTargetPackage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetPackages(String[])</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setTargetPackages(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetPersistenceManagerFactory(PersistenceManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwarePersistenceManagerFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy.html</Path>
    <Anchor>setTargetPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetRenderParameter(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>setTargetRenderParameter(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetRequestPath(String)</Name>
      <Type>instm</Type>
      <Scope>FlashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMap.html</Path>
    <Anchor>setTargetRequestPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetSetClass(Class)</Name>
      <Type>instm</Type>
      <Scope>SetFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SetFactoryBean.html</Path>
    <Anchor>setTargetSetClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetSource(TargetSource)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>setTargetSource(org.springframework.aop.TargetSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetSource(TargetSource)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>setTargetSource(org.springframework.aop.TargetSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetType(Class)</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>setTargetType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetType(MessageType)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>setTargetType(org.springframework.jms.support.converter.MessageType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetType(MessageType)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>setTargetType(org.springframework.jms.support.converter.MessageType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetType(MessageType)</Name>
      <Type>instm</Type>
      <Scope>MarshallingMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MarshallingMessageConverter.html</Path>
    <Anchor>setTargetType(org.springframework.jms.support.converter.MessageType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTargetTypeName(String)</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>setTargetTypeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaskExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>SimpleApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SimpleApplicationEventMulticaster.html</Path>
    <Anchor>setTaskExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaskExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>setTaskExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaskExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>setTaskExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaskExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>AsyncAnnotationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html</Path>
    <Anchor>setTaskExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaskExecutor(Executor)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setTaskExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaskExecutor(AsyncTaskExecutor)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>setTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaskExecutor(AsyncTaskExecutor)</Name>
      <Type>instm</Type>
      <Scope>AsyncSupportConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/AsyncSupportConfigurer.html</Path>
    <Anchor>setTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaskExecutor(AsyncTaskExecutor)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaskScheduler(TaskScheduler)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setTaskScheduler(org.springframework.scheduling.TaskScheduler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTempClassLoader(ClassLoader)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>setTempClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTempClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>setTempClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTemplateLoaderPath(String)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setTemplateLoaderPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTemplateLoaderPaths(String...)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setTemplateLoaderPaths(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTemplateLoaders(TemplateLoader...)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>setTemplateLoaders(freemarker.cache.TemplateLoader...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SETTERS</Name>
      <Type>Field</Type>
      <Scope>Pointcuts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/Pointcuts.html</Path>
    <Anchor>SETTERS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setText(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setText(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setText(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setText(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setText(String, String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setText(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setText(String)</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setText(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setText(String)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>setText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setText(HSSFCell, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractExcelView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractExcelView.html</Path>
    <Anchor>setText(org.apache.poi.hssf.usermodel.HSSFCell, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThemeName(HttpServletRequest, HttpServletResponse, String)</Name>
      <Type>instm</Type>
      <Scope>CookieThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/CookieThemeResolver.html</Path>
    <Anchor>setThemeName(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThemeName(HttpServletRequest, HttpServletResponse, String)</Name>
      <Type>instm</Type>
      <Scope>FixedThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/FixedThemeResolver.html</Path>
    <Anchor>setThemeName(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThemeName(HttpServletRequest, HttpServletResponse, String)</Name>
      <Type>instm</Type>
      <Scope>SessionThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/SessionThemeResolver.html</Path>
    <Anchor>setThemeName(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThemeName(HttpServletRequest, HttpServletResponse, String)</Name>
      <Type>intfm</Type>
      <Scope>ThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ThemeResolver.html</Path>
    <Anchor>setThemeName(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadContextInheritable(boolean)</Name>
      <Type>instm</Type>
      <Scope>RequestContextFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/RequestContextFilter.html</Path>
    <Anchor>setThreadContextInheritable(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadContextInheritable(boolean)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>setThreadContextInheritable(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadContextInheritable(boolean)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>setThreadContextInheritable(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreaded(boolean)</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>setThreaded(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadFactory(ThreadFactory)</Name>
      <Type>instm</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>setThreadFactory(java.util.concurrent.ThreadFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadFactory(ThreadFactory)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setThreadFactory(edu.emory.mathcs.backport.java.util.concurrent.ThreadFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadFactory(ThreadFactory)</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>setThreadFactory(java.util.concurrent.ThreadFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadFactory(ForkJoinPool.ForkJoinWorkerThreadFactory)</Name>
      <Type>instm</Type>
      <Scope>ForkJoinPoolFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.html</Path>
    <Anchor>setThreadFactory(java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadGroup(ThreadGroup)</Name>
      <Type>instm</Type>
      <Scope>CustomizableThreadCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
    <Anchor>setThreadGroup(java.lang.ThreadGroup)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadGroupName(String)</Name>
      <Type>instm</Type>
      <Scope>CustomizableThreadCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
    <Anchor>setThreadGroupName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadNamePrefix(String)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setThreadNamePrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadNamePrefix(String)</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>setThreadNamePrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadNamePrefix(String)</Name>
      <Type>instm</Type>
      <Scope>CustomizableThreadCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
    <Anchor>setThreadNamePrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadPoolName(String)</Name>
      <Type>instm</Type>
      <Scope>GlassFishWorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/glassfish/GlassFishWorkManagerTaskExecutor.html</Path>
    <Anchor>setThreadPoolName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreadPriority(int)</Name>
      <Type>instm</Type>
      <Scope>CustomizableThreadCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
    <Anchor>setThreadPriority(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThrowingName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>setThrowingName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThrowingName(String)</Name>
      <Type>instm</Type>
      <Scope>AspectJAdviceParameterNameDiscoverer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.html</Path>
    <Anchor>setThrowingName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThrowingName(String)</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterThrowingAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html</Path>
    <Anchor>setThrowingName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThrowingNameNoCheck(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>setThrowingNameNoCheck(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTilesInitializer(TilesInitializer)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setTilesInitializer(org.apache.tiles.startup.TilesInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTilesInitializer(TilesInitializer)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>setTilesInitializer(org.apache.tiles.startup.TilesInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTilesProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setTilesProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeBetweenEvictionRunsMillis(long)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>setTimeBetweenEvictionRunsMillis(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeFormatter(DateTimeFormatter)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.html</Path>
    <Anchor>setTimeFormatter(org.joda.time.format.DateTimeFormatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>DatabaseStartupValidator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseStartupValidator.html</Path>
    <Anchor>setTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>setTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeout(Long)</Name>
      <Type>intfm</Type>
      <Scope>AsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/AsyncWebRequest.html</Path>
    <Anchor>setTimeout(java.lang.Long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeout(Long)</Name>
      <Type>instm</Type>
      <Scope>NoSupportAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/NoSupportAsyncWebRequest.html</Path>
    <Anchor>setTimeout(java.lang.Long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeout(Long)</Name>
      <Type>instm</Type>
      <Scope>StandardServletAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.html</Path>
    <Anchor>setTimeout(java.lang.Long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeoutInMillis(long)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>setTimeoutInMillis(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeoutInSeconds(int)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>setTimeoutInSeconds(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeoutPerShutdownPhase(long)</Name>
      <Type>instm</Type>
      <Scope>DefaultLifecycleProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultLifecycleProcessor.html</Path>
    <Anchor>setTimeoutPerShutdownPhase(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimer(Timer)</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>setTimer(java.util.Timer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimerListener(TimerListener)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>setTimerListener(commonj.timers.TimerListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimerManager(TimerManager)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerAccessor.html</Path>
    <Anchor>setTimerManager(commonj.timers.TimerManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimerManagerName(String)</Name>
      <Type>instm</Type>
      <Scope>TimerManagerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerAccessor.html</Path>
    <Anchor>setTimerManagerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimerTask(TimerTask)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>setTimerTask(java.util.TimerTask)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeStyle(String)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.html</Path>
    <Anchor>setTimeStyle(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeToIdle(int)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setTimeToIdle(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeToLive(int)</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>setTimeToLive(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeToLive(long)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>setTimeToLive(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeUnit(TimeUnit)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>setTimeUnit(java.util.concurrent.TimeUnit)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeZone(TimeZone)</Name>
      <Type>instm</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>setTimeZone(java.util.TimeZone)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeZone(TimeZone)</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactory.html</Path>
    <Anchor>setTimeZone(java.util.TimeZone)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeZone(DateTimeZone)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeContext.html</Path>
    <Anchor>setTimeZone(org.joda.time.DateTimeZone)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimeZone(TimeZone)</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>setTimeZone(java.util.TimeZone)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTitle(String)</Name>
      <Type>instm</Type>
      <Scope>MockRenderResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockRenderResponse.html</Path>
    <Anchor>setTitle(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTitle(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>setTitle(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(String[])</Name>
      <Type>instm</Type>
      <Scope>MimeMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMailMessage.html</Path>
    <Anchor>setTo(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(InternetAddress)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setTo(javax.mail.internet.InternetAddress)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(InternetAddress[])</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setTo(javax.mail.internet.InternetAddress[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(String[])</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setTo(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(String)</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(String[])</Name>
      <Type>intfm</Type>
      <Scope>MailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailMessage.html</Path>
    <Anchor>setTo(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTo(String[])</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>setTo(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setToggleAscendingOnProperty(boolean)</Name>
      <Type>instm</Type>
      <Scope>MutableSortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/MutableSortDefinition.html</Path>
    <Anchor>setToggleAscendingOnProperty(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setToolAttributes(Map&amp;lt;String, Class&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>setToolAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setToolboxConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityToolboxView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityToolboxView.html</Path>
    <Anchor>setToolboxConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setToolboxConfigLocation(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityViewResolver.html</Path>
    <Anchor>setToolboxConfigLocation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTrackAllInvocations(boolean)</Name>
      <Type>instm</Type>
      <Scope>JamonPerformanceMonitorInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/JamonPerformanceMonitorInterceptor.html</Path>
    <Anchor>setTrackAllInvocations(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTrackRowsAffected(boolean)</Name>
      <Type>instm</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>setTrackRowsAffected(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransaction(Transaction)</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>setTransaction(org.hibernate.Transaction)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransaction(Transaction)</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionHolder.html</Path>
    <Anchor>setTransaction(org.hibernate.Transaction)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionActive(boolean)</Name>
      <Type>instm</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>setTransactionActive(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionActive(boolean)</Name>
      <Type>instm</Type>
      <Scope>PersistenceManagerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerHolder.html</Path>
    <Anchor>setTransactionActive(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionActive(boolean)</Name>
      <Type>instm</Type>
      <Scope>EntityManagerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerHolder.html</Path>
    <Anchor>setTransactionActive(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionAttribute(TransactionAttribute)</Name>
      <Type>instm</Type>
      <Scope>MatchAlwaysTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MatchAlwaysTransactionAttributeSource.html</Path>
    <Anchor>setTransactionAttribute(org.springframework.transaction.interceptor.TransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionAttributes(Properties)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>setTransactionAttributes(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionAttributes(Properties)</Name>
      <Type>instm</Type>
      <Scope>TransactionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.html</Path>
    <Anchor>setTransactionAttributes(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionAttributeSource(TransactionAttributeSource)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryTransactionAttributeSourceAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor.html</Path>
    <Anchor>setTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionAttributeSource(TransactionAttributeSource)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>setTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionAttributeSource(TransactionAttributeSource)</Name>
      <Type>instm</Type>
      <Scope>TransactionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.html</Path>
    <Anchor>setTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionAttributeSources(TransactionAttributeSource[])</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>setTransactionAttributeSources(org.springframework.transaction.interceptor.TransactionAttributeSource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionAware(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionSupportingCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/AbstractTransactionSupportingCacheManager.html</Path>
    <Anchor>setTransactionAware(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionConfigClass(Class)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>setTransactionConfigClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionConfigProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>setTransactionConfigProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionDefinition(TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>setTransactionDefinition(org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionFactory(TransactionFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
    <Anchor>setTransactionFactory(org.springframework.transaction.jta.TransactionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionInterceptor(TransactionInterceptor)</Name>
      <Type>instm</Type>
      <Scope>TransactionAttributeSourceAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAttributeSourceAdvisor.html</Path>
    <Anchor>setTransactionInterceptor(org.springframework.transaction.interceptor.TransactionInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManager(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
    <Anchor>setTransactionManager(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManager(PlatformTransactionManager)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>setTransactionManager(org.springframework.transaction.PlatformTransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManager(Object)</Name>
      <Type>instm</Type>
      <Scope>JmsMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.html</Path>
    <Anchor>setTransactionManager(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManager(PlatformTransactionManager)</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setTransactionManager(org.springframework.transaction.PlatformTransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManager(PlatformTransactionManager)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>setTransactionManager(org.springframework.transaction.PlatformTransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManager(PlatformTransactionManager)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>setTransactionManager(org.springframework.transaction.PlatformTransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManager(PlatformTransactionManager)</Name>
      <Type>instm</Type>
      <Scope>TransactionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.html</Path>
    <Anchor>setTransactionManager(org.springframework.transaction.PlatformTransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManager(TransactionManager)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setTransactionManager(javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManager(PlatformTransactionManager)</Name>
      <Type>instm</Type>
      <Scope>TransactionTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionTemplate.html</Path>
    <Anchor>setTransactionManager(org.springframework.transaction.PlatformTransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManagerBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>setTransactionManagerBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionManagerName(String)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setTransactionManagerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
    <Anchor>setTransactionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>setTransactionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionSynchronization(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>setTransactionSynchronization(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionSynchronizationName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>setTransactionSynchronizationName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionSynchronizationRegistryName(String)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setTransactionSynchronizationRegistryName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
    <Anchor>setTransactionTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>setTransactionTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionTimeout(int)</Name>
      <Type>instm</Type>
      <Scope>UserTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/UserTransactionAdapter.html</Path>
    <Anchor>setTransactionTimeout(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransactionType(PersistenceUnitTransactionType)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>setTransactionType(javax.persistence.spi.PersistenceUnitTransactionType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransformerFactoryClass(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setTransformerFactoryClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransformerFactoryClass(Class)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>setTransformerFactoryClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTransientDataAccessResourceCodes(String[])</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setTransientDataAccessResourceCodes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTranslators(Map&amp;lt;String, SQLExceptionTranslator&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CustomSQLExceptionTranslatorRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistrar.html</Path>
    <Anchor>setTranslators(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTraversableResolver(TraversableResolver)</Name>
      <Type>instm</Type>
      <Scope>CustomValidatorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/CustomValidatorBean.html</Path>
    <Anchor>setTraversableResolver(javax.validation.TraversableResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTraversableResolver(TraversableResolver)</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>setTraversableResolver(javax.validation.TraversableResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTriggerListenerNames(String[])</Name>
      <Type>instm</Type>
      <Scope>CronTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerBean.html</Path>
    <Anchor>setTriggerListenerNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTriggerListenerNames(String[])</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerBean.html</Path>
    <Anchor>setTriggerListenerNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTriggerListeners(TriggerListener[])</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setTriggerListeners(org.quartz.TriggerListener[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTriggers(Trigger[])</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessor.html</Path>
    <Anchor>setTriggers(org.quartz.Trigger[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTriggerTasks(Map&amp;lt;Runnable, Trigger&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setTriggerTasks(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTriggerTasksList(List&amp;lt;TriggerTask&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>setTriggerTasksList(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTrimTokens(boolean)</Name>
      <Type>instm</Type>
      <Scope>AntPathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
    <Anchor>setTrimTokens(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType(String)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>setType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType(Proxy.Type)</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/ProxyFactoryBean.html</Path>
    <Anchor>setType(java.net.Proxy.Type)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType(EmbeddedDatabaseType)</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html</Path>
    <Anchor>setType(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeClass(String)</Name>
      <Type>instm</Type>
      <Scope>TypeDefinitionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/TypeDefinitionBean.html</Path>
    <Anchor>setTypeClass(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeComparator(TypeComparator)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setTypeComparator(org.springframework.expression.TypeComparator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeConverter(TypeConverter)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>setTypeConverter(org.springframework.beans.TypeConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeConverter(TypeConverter)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>setTypeConverter(org.springframework.beans.TypeConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeConverter(TypeConverter)</Name>
      <Type>instm</Type>
      <Scope>ArgumentConvertingMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ArgumentConvertingMethodInvoker.html</Path>
    <Anchor>setTypeConverter(org.springframework.beans.TypeConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeConverter(TypeConverter)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setTypeConverter(org.springframework.expression.TypeConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeDefinitions(TypeDefinitionBean[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>setTypeDefinitions(org.springframework.orm.hibernate3.TypeDefinitionBean[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeIdMappings(Map&amp;lt;String, Class&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>setTypeIdMappings(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeIdMappings(Map&amp;lt;String, Class&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>setTypeIdMappings(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeIdOnMessage(Object, Message)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>setTypeIdOnMessage(java.lang.Object, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeIdOnMessage(Object, Message)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>setTypeIdOnMessage(java.lang.Object, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeIdPropertyName(String)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>setTypeIdPropertyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeIdPropertyName(String)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>setTypeIdPropertyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeIndexForCurrentLevel(int)</Name>
      <Type>instm</Type>
      <Scope>MethodParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/MethodParameter.html</Path>
    <Anchor>setTypeIndexForCurrentLevel(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeLocator(TypeLocator)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setTypeLocator(org.springframework.expression.TypeLocator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeName(String)</Name>
      <Type>instm</Type>
      <Scope>TypeDefinitionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/TypeDefinitionBean.html</Path>
    <Anchor>setTypeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypePattern(String)</Name>
      <Type>instm</Type>
      <Scope>TypePatternClassFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/TypePatternClassFilter.html</Path>
    <Anchor>setTypePattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypes(int[])</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setTypes(int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeValue(PreparedStatement, int, int, String)</Name>
      <Type>intfm</Type>
      <Scope>SqlTypeValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlTypeValue.html</Path>
    <Anchor>setTypeValue(java.sql.PreparedStatement, int, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeValue(PreparedStatement, int, int, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractSqlTypeValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractSqlTypeValue.html</Path>
    <Anchor>setTypeValue(java.sql.PreparedStatement, int, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTypeValue(PreparedStatement, int, int, String)</Name>
      <Type>instm</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>setTypeValue(java.sql.PreparedStatement, int, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUncaughtExceptionHandler(Thread.UncaughtExceptionHandler)</Name>
      <Type>instm</Type>
      <Scope>ForkJoinPoolFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.html</Path>
    <Anchor>setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUniqueFactoryMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>setUniqueFactoryMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnit(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedMetric</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedMetric.html</Path>
    <Anchor>setUnit(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnmarshaller(Unmarshaller)</Name>
      <Type>instm</Type>
      <Scope>MarshallingHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/MarshallingHttpMessageConverter.html</Path>
    <Anchor>setUnmarshaller(org.springframework.oxm.Unmarshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnmarshaller(Unmarshaller)</Name>
      <Type>instm</Type>
      <Scope>MarshallingMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MarshallingMessageConverter.html</Path>
    <Anchor>setUnmarshaller(org.springframework.oxm.Unmarshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnmarshallerListener(Unmarshaller.Listener)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setUnmarshallerListener(javax.xml.bind.Unmarshaller.Listener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnmarshallerProperties(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setUnmarshallerProperties(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUowManager(UOWManager)</Name>
      <Type>instm</Type>
      <Scope>WebSphereUowTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
    <Anchor>setUowManager(com.ibm.wsspi.uow.UOWManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUowManagerName(String)</Name>
      <Type>instm</Type>
      <Scope>WebSphereUowTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
    <Anchor>setUowManagerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUp()</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>setUp()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupArgumentsForVarargsInvocation(Class[], Object...)</Name>
      <Type>clm</Type>
      <Scope>ReflectionHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.html</Path>
    <Anchor>setupArgumentsForVarargsInvocation(java.lang.Class[], java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUpdatableResults(boolean)</Name>
      <Type>instm</Type>
      <Scope>CallableStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCreatorFactory.html</Path>
    <Anchor>setUpdatableResults(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUpdatableResults(boolean)</Name>
      <Type>instm</Type>
      <Scope>PreparedStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
    <Anchor>setUpdatableResults(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUpdatableResults(boolean)</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>setUpdatableResults(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUpdateContentLength(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>setUpdateContentLength(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUpdateContentLength(boolean)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>setUpdateContentLength(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUploadTempDir(Resource)</Name>
      <Type>instm</Type>
      <Scope>CommonsFileUploadSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
    <Anchor>setUploadTempDir(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setURI(URI)</Name>
      <Type>instm</Type>
      <Scope>MockClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/http/client/MockClientHttpRequest.html</Path>
    <Anchor>setURI(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUriResolver(URIResolver)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setUriResolver(javax.xml.transform.URIResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUriResolver(URIResolver)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>setUriResolver(javax.xml.transform.URIResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUriResolver(URIResolver)</Name>
      <Type>instm</Type>
      <Scope>XsltViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltViewResolver.html</Path>
    <Anchor>setUriResolver(javax.xml.transform.URIResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrl(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractDriverBasedDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDriverBasedDataSource.html</Path>
    <Anchor>setUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrl(String)</Name>
      <Type>intfm</Type>
      <Scope>ConnectionProperties</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/ConnectionProperties.html</Path>
    <Anchor>setUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrl(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlBasedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractUrlBasedView.html</Path>
    <Anchor>setUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrl(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractExcelView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractExcelView.html</Path>
    <Anchor>setUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrl(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJExcelView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractJExcelView.html</Path>
    <Anchor>setUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlDecode(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setUrlDecode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlDecode(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractUrlViewController.html</Path>
    <Anchor>setUrlDecode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlDecode(boolean)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setUrlDecode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlDecode(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/AbstractUrlMethodNameResolver.html</Path>
    <Anchor>setUrlDecode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlDecode(boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
    <Anchor>setUrlDecode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlDecode(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setUrlDecode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlDecode(boolean)</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>setUrlDecode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlMap(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html</Path>
    <Anchor>setUrlMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPathHelper(UrlPathHelper)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>setUrlPathHelper(org.springframework.web.util.UrlPathHelper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPathHelper(UrlPathHelper)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractUrlViewController.html</Path>
    <Anchor>setUrlPathHelper(org.springframework.web.util.UrlPathHelper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPathHelper(UrlPathHelper)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setUrlPathHelper(org.springframework.web.util.UrlPathHelper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPathHelper(UrlPathHelper)</Name>
      <Type>instm</Type>
      <Scope>ServletCookieValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletCookieValueMethodArgumentResolver.html</Path>
    <Anchor>setUrlPathHelper(org.springframework.web.util.UrlPathHelper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPathHelper(UrlPathHelper)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/AbstractUrlMethodNameResolver.html</Path>
    <Anchor>setUrlPathHelper(org.springframework.web.util.UrlPathHelper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPathHelper(UrlPathHelper)</Name>
      <Type>instm</Type>
      <Scope>WebContentInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
    <Anchor>setUrlPathHelper(org.springframework.web.util.UrlPathHelper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPathHelper(UrlPathHelper)</Name>
      <Type>instm</Type>
      <Scope>AbstractFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractFlashMapManager.html</Path>
    <Anchor>setUrlPathHelper(org.springframework.web.util.UrlPathHelper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPathHelper(UrlPathHelper)</Name>
      <Type>instm</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>setUrlPathHelper(org.springframework.web.util.UrlPathHelper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPathHelper(UrlPathHelper)</Name>
      <Type>instm</Type>
      <Scope>DefaultRequestToViewNameTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html</Path>
    <Anchor>setUrlPathHelper(org.springframework.web.util.UrlPathHelper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlPrefix(String)</Name>
      <Type>instm</Type>
      <Scope>ControllerBeanNameHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html</Path>
    <Anchor>setUrlPrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrlSuffix(String)</Name>
      <Type>instm</Type>
      <Scope>ControllerBeanNameHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html</Path>
    <Anchor>setUrlSuffix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseAttributeFor(Map&amp;lt;?, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setUseAttributeFor(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseAttributeForTypes(Class[])</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>setUseAttributeForTypes(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseCacheControlHeader(boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>setUseCacheControlHeader(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseCacheControlNoStore(boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>setUseCacheControlNoStore(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseCachedContent(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockCacheControl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockCacheControl.html</Path>
    <Anchor>setUseCachedContent(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseCodeAsDefaultMessage(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractMessageSource.html</Path>
    <Anchor>setUseCodeAsDefaultMessage(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseDefaultSuffixPattern(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>setUseDefaultSuffixPattern(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseDynamicLogger(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
    <Anchor>setUseDynamicLogger(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseExpiresHeader(boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>setUseExpiresHeader(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseIsoFormat(boolean)</Name>
      <Type>instm</Type>
      <Scope>JodaTimeFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.html</Path>
    <Anchor>setUseIsoFormat(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseJaf(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>setUseJaf(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseJaf(boolean)</Name>
      <Type>instm</Type>
      <Scope>PathExtensionContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.html</Path>
    <Anchor>setUseJaf(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseJaf(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setUseJaf(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseMutableTilesContainer(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setUseMutableTilesContainer(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseMutableTilesContainer(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>setUseMutableTilesContainer(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseNotAcceptableStatusCode(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setUseNotAcceptableStatusCode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsePrefix(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html</Path>
    <Anchor>setUsePrefix(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>setUserAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserAttribute(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>ProxyMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/ProxyMethodInvocation.html</Path>
    <Anchor>setUserAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseRegisteredSuffixPatternMatch(boolean)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>setUseRegisteredSuffixPatternMatch(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserinfoUsernameAttributes(String[])</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>setUserinfoUsernameAttributes(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsername(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractDriverBasedDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDriverBasedDataSource.html</Path>
    <Anchor>setUsername(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsername(String)</Name>
      <Type>intfm</Type>
      <Scope>ConnectionProperties</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/ConnectionProperties.html</Path>
    <Anchor>setUsername(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsername(String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html</Path>
    <Anchor>setUsername(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsername(String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>setUsername(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsername(String)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>setUsername(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsername(String)</Name>
      <Type>instm</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>setUsername(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsername(String)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>setUsername(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsername(String)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>setUsername(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUsername(String)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setUsername(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserPrincipal(Principal)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>setUserPrincipal(java.security.Principal)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserPrincipal(Principal)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setUserPrincipal(java.security.Principal)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserTransaction(UserTransaction)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setUserTransaction(javax.transaction.UserTransaction)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserTransactionName(String)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>setUserTransactionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserTreePath(String)</Name>
      <Type>instm</Type>
      <Scope>PreferencesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html</Path>
    <Anchor>setUserTreePath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseSharedPortletConfig(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletPostProcessor.html</Path>
    <Anchor>setUseSharedPortletConfig(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseSharedPortletConfig(boolean)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>setUseSharedPortletConfig(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseSharedServletConfig(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimpleServletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletPostProcessor.html</Path>
    <Anchor>setUseSharedServletConfig(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseSingleModelNameAsRoot(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>setUseSingleModelNameAsRoot(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseSoapAction(boolean)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setUseSoapAction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseSqlStateForTranslation(boolean)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>setUseSqlStateForTranslation(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseStrictCasing(boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>setUseStrictCasing(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseStrictCasing(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>setUseStrictCasing(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseSuffixPatternMatch(boolean)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setUseSuffixPatternMatch(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseSuffixPatternMatch(boolean)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>setUseSuffixPatternMatch(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseTrailingSlashMatch(boolean)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>setUseTrailingSlashMatch(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseTrailingSlashPatternMatch(boolean)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setUseTrailingSlashPatternMatch(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseTransactionAwareDataSource(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>setUseTransactionAwareDataSource(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseTransactionAwareDataSource(boolean)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>setUseTransactionAwareDataSource(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseWriter(boolean)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html</Path>
    <Anchor>setUseWriter(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUseXSITypeAtRoot(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setUseXSITypeAtRoot(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidateAddresses(boolean)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>setValidateAddresses(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidatedAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MethodValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.html</Path>
    <Anchor>setValidatedAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidateDefinitions(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesConfigurer.html</Path>
    <Anchor>setValidateDefinitions(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidateDefinitions(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>setValidateDefinitions(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidateDefinitions(boolean)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>setValidateDefinitions(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidateExistingTransaction(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>setValidateExistingTransaction(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidateOnBinding(boolean)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setValidateOnBinding(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidateOnBinding(boolean)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setValidateOnBinding(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidating(boolean)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setValidating(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidating(boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractXmlApplicationContext.html</Path>
    <Anchor>setValidating(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidating(boolean)</Name>
      <Type>instm</Type>
      <Scope>GenericXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericXmlApplicationContext.html</Path>
    <Anchor>setValidating(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidating(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setValidating(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidating(boolean)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>setValidating(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidationEventHandler(ValidationEventHandler)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>setValidationEventHandler(javax.xml.bind.ValidationEventHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidationMessageSource(MessageSource)</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>setValidationMessageSource(org.springframework.context.MessageSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidationMode(int)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setValidationMode(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidationModeName(String)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>setValidationModeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidationProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>setValidationProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidationPropertyMap(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>setValidationPropertyMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidationQuery(String)</Name>
      <Type>instm</Type>
      <Scope>DatabaseStartupValidator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseStartupValidator.html</Path>
    <Anchor>setValidationQuery(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidator(Validator)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setValidator(org.springframework.validation.Validator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidator(Validator)</Name>
      <Type>instm</Type>
      <Scope>BeanValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html</Path>
    <Anchor>setValidator(javax.validation.Validator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidator(Validator)</Name>
      <Type>instm</Type>
      <Scope>MethodValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.html</Path>
    <Anchor>setValidator(javax.validation.Validator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidator(Validator)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>setValidator(org.springframework.validation.Validator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidator(Validator)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>setValidator(org.springframework.validation.Validator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidator(Validator)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setValidator(org.springframework.validation.Validator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidator(Validator)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setValidator(org.springframework.validation.Validator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidatorFactory(ValidatorFactory)</Name>
      <Type>instm</Type>
      <Scope>BeanValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html</Path>
    <Anchor>setValidatorFactory(javax.validation.ValidatorFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidatorFactory(ValidatorFactory)</Name>
      <Type>instm</Type>
      <Scope>CustomValidatorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/CustomValidatorBean.html</Path>
    <Anchor>setValidatorFactory(javax.validation.ValidatorFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidatorFactory(ValidatorFactory)</Name>
      <Type>instm</Type>
      <Scope>MethodValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.html</Path>
    <Anchor>setValidatorFactory(javax.validation.ValidatorFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidators(Validator[])</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setValidators(org.springframework.validation.Validator[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidators(Validator[])</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setValidators(org.springframework.validation.Validator[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValidators(Validator[])</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>setValidators(org.springframework.validation.Validator[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(ELContext, Object, Object, Object)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanELResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/el/SpringBeanELResolver.html</Path>
    <Anchor>setValue(javax.el.ELContext, java.lang.Object, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(String)</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>setValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>CustomCollectionEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomCollectionEditor.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>CustomMapEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomMapEditor.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>CustomNumberEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomNumberEditor.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>PropertiesEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/PropertiesEditor.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>ResourceArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourceArrayPropertyEditor.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(EvaluationContext, Object)</Name>
      <Type>instm</Type>
      <Scope>CompositeStringExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/CompositeStringExpression.html</Path>
    <Anchor>setValue(org.springframework.expression.EvaluationContext, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(EvaluationContext, Object, Object)</Name>
      <Type>instm</Type>
      <Scope>CompositeStringExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/CompositeStringExpression.html</Path>
    <Anchor>setValue(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>CompositeStringExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/CompositeStringExpression.html</Path>
    <Anchor>setValue(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(EvaluationContext, Object)</Name>
      <Type>instm</Type>
      <Scope>LiteralExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/LiteralExpression.html</Path>
    <Anchor>setValue(org.springframework.expression.EvaluationContext, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(EvaluationContext, Object, Object)</Name>
      <Type>instm</Type>
      <Scope>LiteralExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/LiteralExpression.html</Path>
    <Anchor>setValue(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>LiteralExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/LiteralExpression.html</Path>
    <Anchor>setValue(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(EvaluationContext, Object)</Name>
      <Type>intfm</Type>
      <Scope>Expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/Expression.html</Path>
    <Anchor>setValue(org.springframework.expression.EvaluationContext, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object, Object)</Name>
      <Type>intfm</Type>
      <Scope>Expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/Expression.html</Path>
    <Anchor>setValue(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(EvaluationContext, Object, Object)</Name>
      <Type>intfm</Type>
      <Scope>Expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/Expression.html</Path>
    <Anchor>setValue(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(ExpressionState, Object)</Name>
      <Type>instm</Type>
      <Scope>CompoundExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/CompoundExpression.html</Path>
    <Anchor>setValue(org.springframework.expression.spel.ExpressionState, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(ExpressionState, Object)</Name>
      <Type>instm</Type>
      <Scope>Indexer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Indexer.html</Path>
    <Anchor>setValue(org.springframework.expression.spel.ExpressionState, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(ExpressionState, Object)</Name>
      <Type>instm</Type>
      <Scope>PropertyOrFieldReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/PropertyOrFieldReference.html</Path>
    <Anchor>setValue(org.springframework.expression.spel.ExpressionState, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(ExpressionState, Object)</Name>
      <Type>instm</Type>
      <Scope>SpelNodeImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/SpelNodeImpl.html</Path>
    <Anchor>setValue(org.springframework.expression.spel.ExpressionState, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>ValueRef.NullValueRef</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/ValueRef.NullValueRef.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>intfm</Type>
      <Scope>ValueRef</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/ValueRef.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>ValueRef.TypedValueHolderValueRef</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/ValueRef.TypedValueHolderValueRef.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(ExpressionState, Object)</Name>
      <Type>instm</Type>
      <Scope>VariableReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/VariableReference.html</Path>
    <Anchor>setValue(org.springframework.expression.spel.ExpressionState, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(ExpressionState, Object)</Name>
      <Type>intfm</Type>
      <Scope>SpelNode</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelNode.html</Path>
    <Anchor>setValue(org.springframework.expression.spel.ExpressionState, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(EvaluationContext, Object)</Name>
      <Type>instm</Type>
      <Scope>SpelExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpression.html</Path>
    <Anchor>setValue(org.springframework.expression.EvaluationContext, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>SpelExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpression.html</Path>
    <Anchor>setValue(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(EvaluationContext, Object, Object)</Name>
      <Type>instm</Type>
      <Scope>SpelExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpression.html</Path>
    <Anchor>setValue(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(PreparedStatement, int)</Name>
      <Type>intfm</Type>
      <Scope>SqlValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SqlValue.html</Path>
    <Anchor>setValue(java.sql.PreparedStatement, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletPreferences</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletPreferences.html</Path>
    <Anchor>setValue(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(V)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap.Entry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Entry.html</Path>
    <Anchor>setValue(V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(ELContext, Object, Object, Object)</Name>
      <Type>instm</Type>
      <Scope>WebApplicationContextFacesELResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.html</Path>
    <Anchor>setValue(javax.el.ELContext, java.lang.Object, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>ByteArrayMultipartFileEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/ByteArrayMultipartFileEditor.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>StringMultipartFileEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StringMultipartFileEditor.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractSingleCheckedElementTag.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(String)</Name>
      <Type>instm</Type>
      <Scope>ButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
    <Anchor>setValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(String)</Name>
      <Type>instm</Type>
      <Scope>Param</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/Param.html</Path>
    <Anchor>setValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(String)</Name>
      <Type>instm</Type>
      <Scope>ParamTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/ParamTag.html</Path>
    <Anchor>setValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(Object)</Name>
      <Type>instm</Type>
      <Scope>TransformTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/TransformTag.html</Path>
    <Anchor>setValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue(String)</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>setValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValueAnnotationType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>QualifierAnnotationAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html</Path>
    <Anchor>setValueAnnotationType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValues(PreparedStatement, int)</Name>
      <Type>intfm</Type>
      <Scope>BatchPreparedStatementSetter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BatchPreparedStatementSetter.html</Path>
    <Anchor>setValues(java.sql.PreparedStatement, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValues(PreparedStatement, T)</Name>
      <Type>intfm</Type>
      <Scope>ParameterizedPreparedStatementSetter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ParameterizedPreparedStatementSetter.html</Path>
    <Anchor>setValues(java.sql.PreparedStatement, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValues(PreparedStatement)</Name>
      <Type>intfm</Type>
      <Scope>PreparedStatementSetter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementSetter.html</Path>
    <Anchor>setValues(java.sql.PreparedStatement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValues(PreparedStatement, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractInterruptibleBatchPreparedStatementSetter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractInterruptibleBatchPreparedStatementSetter.html</Path>
    <Anchor>setValues(java.sql.PreparedStatement, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValues(PreparedStatement, LobCreator)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobCreatingPreparedStatementCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobCreatingPreparedStatementCallback.html</Path>
    <Anchor>setValues(java.sql.PreparedStatement, org.springframework.jdbc.support.lob.LobCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValues(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockPortletPreferences</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletPreferences.html</Path>
    <Anchor>setValues(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValueSeparator(String)</Name>
      <Type>instm</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>setValueSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValueSeparator(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>setValueSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValueSeparator(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>setValueSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValueSeparator(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurablePropertyResolver.html</Path>
    <Anchor>setValueSeparator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValuesIfAvailable(PreparedStatement, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractInterruptibleBatchPreparedStatementSetter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractInterruptibleBatchPreparedStatementSetter.html</Path>
    <Anchor>setValuesIfAvailable(java.sql.PreparedStatement, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValueTypeName(String)</Name>
      <Type>instm</Type>
      <Scope>ManagedMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedMap.html</Path>
    <Anchor>setValueTypeName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVar(String)</Name>
      <Type>instm</Type>
      <Scope>EvalTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EvalTag.html</Path>
    <Anchor>setVar(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVar(String)</Name>
      <Type>instm</Type>
      <Scope>MessageTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/MessageTag.html</Path>
    <Anchor>setVar(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVar(String)</Name>
      <Type>instm</Type>
      <Scope>TransformTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/TransformTag.html</Path>
    <Anchor>setVar(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVar(String)</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>setVar(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVariable(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>EvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/EvaluationContext.html</Path>
    <Anchor>setVariable(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVariable(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>setVariable(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVariable(String, Object)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setVariable(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVariables(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>setVariables(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVelocityEngine(VelocityEngine)</Name>
      <Type>instm</Type>
      <Scope>VelocityConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityConfigurer.html</Path>
    <Anchor>setVelocityEngine(org.apache.velocity.app.VelocityEngine)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVelocityEngine(VelocityEngine)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>setVelocityEngine(org.apache.velocity.app.VelocityEngine)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVelocityProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>setVelocityProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVelocityPropertiesMap(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>setVelocityPropertiesMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setView(Object)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>setView(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setView(Object)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>setView(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setView(View)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>setView(org.springframework.web.servlet.View)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewClass(Class)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setViewClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewName(String)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>setViewName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewName(String)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>setViewName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewName(String)</Name>
      <Type>instm</Type>
      <Scope>ParameterizableViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/ParameterizableViewController.html</Path>
    <Anchor>setViewName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewName(String)</Name>
      <Type>instm</Type>
      <Scope>ViewControllerRegistration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ViewControllerRegistration.html</Path>
    <Anchor>setViewName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewName(String)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>setViewName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewName(String)</Name>
      <Type>instm</Type>
      <Scope>ParameterizableViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ParameterizableViewController.html</Path>
    <Anchor>setViewName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewNames(String[])</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>setViewNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewRendererUrl(String)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>setViewRendererUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewResolvers(ViewResolver...)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>setViewResolvers(org.springframework.web.servlet.ViewResolver...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewResolvers(List&amp;lt;ViewResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>setViewResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaitForJobsToCompleteOnShutdown(boolean)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>setWaitForJobsToCompleteOnShutdown(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaitForJobsToCompleteOnShutdown(boolean)</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
    <Anchor>setWaitForJobsToCompleteOnShutdown(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaitForTasksToCompleteOnShutdown(boolean)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>setWaitForTasksToCompleteOnShutdown(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaitForTasksToCompleteOnShutdown(boolean)</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>setWaitForTasksToCompleteOnShutdown(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWarnLogCategory(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setWarnLogCategory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWarnLogCategory(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>setWarnLogCategory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWebAppRootSystemProperty(ServletContext)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>setWebAppRootSystemProperty(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWebBindingInitializer(WebBindingInitializer)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWebBindingInitializer(WebBindingInitializer)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWebBindingInitializer(WebBindingInitializer)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWebBindingInitializer(WebBindingInitializer)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWebBindingInitializer(WebBindingInitializer)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWebBindingInitializer(WebBindingInitializer)</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWebServiceFeatures(Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>setWebServiceFeatures(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWebServiceFeatures(Object[])</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>setWebServiceFeatures(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWhenExhaustedAction(byte)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>setWhenExhaustedAction(byte)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWhenExhaustedActionName(String)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>setWhenExhaustedActionName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWhitespacePreserve(boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>setWhitespacePreserve(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWindowID(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setWindowID(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWindowState(WindowState)</Name>
      <Type>instm</Type>
      <Scope>MockActionResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockActionResponse.html</Path>
    <Anchor>setWindowState(javax.portlet.WindowState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWindowState(WindowState)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>setWindowState(javax.portlet.WindowState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWindowState(WindowState)</Name>
      <Type>instm</Type>
      <Scope>MockPortletURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletURL.html</Path>
    <Anchor>setWindowState(javax.portlet.WindowState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWindowState(WindowState)</Name>
      <Type>instm</Type>
      <Scope>MockStateAwareResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockStateAwareResponse.html</Path>
    <Anchor>setWindowState(javax.portlet.WindowState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkingDirSystemProperty(String)</Name>
      <Type>clm</Type>
      <Scope>Log4jConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Log4jConfigurer.html</Path>
    <Anchor>setWorkingDirSystemProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkListener(WorkListener)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>setWorkListener(javax.resource.spi.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkListener(WorkListener)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>setWorkListener(commonj.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkManager(WorkManager)</Name>
      <Type>instm</Type>
      <Scope>ResourceAdapterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
    <Anchor>setWorkManager(javax.resource.spi.work.WorkManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkManager(WorkManager)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>setWorkManager(javax.resource.spi.work.WorkManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkManager(WorkManager)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>setWorkManager(commonj.work.WorkManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkManagerMBeanName(String)</Name>
      <Type>instm</Type>
      <Scope>JBossWorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/jboss/JBossWorkManagerTaskExecutor.html</Path>
    <Anchor>setWorkManagerMBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkManagerName(String)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>setWorkManagerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkManagerName(String)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>setWorkManagerName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWrapAsLob(boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.html</Path>
    <Anchor>setWrapAsLob(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWrappedInstance(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>setWrappedInstance(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWrappedInstance(Object, String, Object)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>setWrappedInstance(java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWriteAcceptCharset(boolean)</Name>
      <Type>instm</Type>
      <Scope>ObjectToStringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ObjectToStringHttpMessageConverter.html</Path>
    <Anchor>setWriteAcceptCharset(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWriteAcceptCharset(boolean)</Name>
      <Type>instm</Type>
      <Scope>StringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/StringHttpMessageConverter.html</Path>
    <Anchor>setWriteAcceptCharset(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWriterAccessAllowed(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>setWriterAccessAllowed(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWsdlDocumentResource(Resource)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxWsServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.html</Path>
    <Anchor>setWsdlDocumentResource(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWsdlDocumentUrl(URL)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>setWsdlDocumentUrl(java.net.URL)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWsdlDocumentUrl(URL)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxWsServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.html</Path>
    <Anchor>setWsdlDocumentUrl(java.net.URL)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setXaTerminator(XATerminator)</Name>
      <Type>instm</Type>
      <Scope>ResourceAdapterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
    <Anchor>setXaTerminator(javax.resource.spi.XATerminator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setXmlOptions(XmlOptions)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>setXmlOptions(org.apache.xmlbeans.XmlOptions)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setXMLReader(XMLReader)</Name>
      <Type>instm</Type>
      <Scope>MarshallingSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/MarshallingSource.html</Path>
    <Anchor>setXMLReader(org.xml.sax.XMLReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ShadowingClassLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ShadowingClassLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ShadowingClassLoader(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ShadowingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ShadowingClassLoader.html</Path>
    <Anchor>ShadowingClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shallowCopyFieldState(Object, Object)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>shallowCopyFieldState(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ShallowEtagHeaderFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/ShallowEtagHeaderFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ShallowEtagHeaderFilter()</Name>
      <Type>Constructor</Type>
      <Scope>ShallowEtagHeaderFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/ShallowEtagHeaderFilter.html</Path>
    <Anchor>ShallowEtagHeaderFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sharedConnectionEnabled()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>sharedConnectionEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sharedConnectionEnabled()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>sharedConnectionEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sharedConnectionEnabled()</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>sharedConnectionEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sharedConnectionMonitor</Name>
      <Type>Field</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>sharedConnectionMonitor</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sharedEntityManager</Name>
      <Type>Field</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>sharedEntityManager</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SharedEntityManagerBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/SharedEntityManagerBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SharedEntityManagerBean()</Name>
      <Type>Constructor</Type>
      <Scope>SharedEntityManagerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/SharedEntityManagerBean.html</Path>
    <Anchor>SharedEntityManagerBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SharedEntityManagerCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/SharedEntityManagerCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SharedEntityManagerCreator()</Name>
      <Type>Constructor</Type>
      <Scope>SharedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/SharedEntityManagerCreator.html</Path>
    <Anchor>SharedEntityManagerCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ShortCodedLabeledEnum</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.enums</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/ShortCodedLabeledEnum.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ShortCodedLabeledEnum(int, String)</Name>
      <Type>Constructor</Type>
      <Scope>ShortCodedLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/ShortCodedLabeledEnum.html</Path>
    <Anchor>ShortCodedLabeledEnum(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shortSummary()</Name>
      <Type>instm</Type>
      <Scope>StopWatch</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
    <Anchor>shortSummary()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shortValue()</Name>
      <Type>instm</Type>
      <Scope>StaticLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StaticLabeledEnum.html</Path>
    <Anchor>shortValue()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldApplyTo(PortletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>shouldApplyTo(javax.portlet.PortletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldApplyTo(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>shouldApplyTo(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldApplyTo(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodExceptionResolver.html</Path>
    <Anchor>shouldApplyTo(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldBuffer(URI, HttpMethod)</Name>
      <Type>instm</Type>
      <Scope>BufferingClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/BufferingClientHttpRequestFactory.html</Path>
    <Anchor>shouldBuffer(java.net.URI, org.springframework.http.HttpMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldClose(Connection)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>shouldClose(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldClose(Connection)</Name>
      <Type>intfm</Type>
      <Scope>SmartDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SmartDataSource.html</Path>
    <Anchor>shouldClose(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCommitAfterNoMessageReceived(Session)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>shouldCommitAfterNoMessageReceived(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCommitOnGlobalRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>shouldCommitOnGlobalRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCommitOnGlobalRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>shouldCommitOnGlobalRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCommitOnGlobalRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>shouldCommitOnGlobalRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCommitOnGlobalRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>shouldCommitOnGlobalRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldFireEvents()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>shouldFireEvents()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldGenerateId()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>shouldGenerateId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldGenerateId()</Name>
      <Type>instm</Type>
      <Scope>ScheduledTasksBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.html</Path>
    <Anchor>shouldGenerateId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldGenerateIdAsFallback()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>shouldGenerateIdAsFallback()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilter(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>OncePerRequestFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/OncePerRequestFilter.html</Path>
    <Anchor>shouldNotFilter(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterAsyncDispatch()</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html</Path>
    <Anchor>shouldNotFilterAsyncDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterAsyncDispatch()</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewFilter.html</Path>
    <Anchor>shouldNotFilterAsyncDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterAsyncDispatch()</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.html</Path>
    <Anchor>shouldNotFilterAsyncDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterAsyncDispatch()</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>shouldNotFilterAsyncDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterAsyncDispatch()</Name>
      <Type>instm</Type>
      <Scope>OncePerRequestFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/OncePerRequestFilter.html</Path>
    <Anchor>shouldNotFilterAsyncDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterAsyncDispatch()</Name>
      <Type>instm</Type>
      <Scope>RequestContextFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/RequestContextFilter.html</Path>
    <Anchor>shouldNotFilterAsyncDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterAsyncDispatch()</Name>
      <Type>instm</Type>
      <Scope>ShallowEtagHeaderFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/ShallowEtagHeaderFilter.html</Path>
    <Anchor>shouldNotFilterAsyncDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterErrorDispatch()</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html</Path>
    <Anchor>shouldNotFilterErrorDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterErrorDispatch()</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewFilter.html</Path>
    <Anchor>shouldNotFilterErrorDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterErrorDispatch()</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.html</Path>
    <Anchor>shouldNotFilterErrorDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterErrorDispatch()</Name>
      <Type>instm</Type>
      <Scope>OncePerRequestFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/OncePerRequestFilter.html</Path>
    <Anchor>shouldNotFilterErrorDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNotFilterErrorDispatch()</Name>
      <Type>instm</Type>
      <Scope>RequestContextFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/RequestContextFilter.html</Path>
    <Anchor>shouldNotFilterErrorDispatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldObtainFixedConnection(DataSource)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareDataSourceProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy.html</Path>
    <Anchor>shouldObtainFixedConnection(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldProxyTargetClass(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>shouldProxyTargetClass(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldProxyTargetClass(ConfigurableListableBeanFactory, String)</Name>
      <Type>clm</Type>
      <Scope>AutoProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AutoProxyUtils.html</Path>
    <Anchor>shouldProxyTargetClass(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldReleaseAfterCompletion(H)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>shouldReleaseAfterCompletion(H)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldReleaseBeforeCompletion()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>shouldReleaseBeforeCompletion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldRemoveSemicolonContent()</Name>
      <Type>instm</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>shouldRemoveSemicolonContent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldRender()</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>shouldRender()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldRender()</Name>
      <Type>instm</Type>
      <Scope>ErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
    <Anchor>shouldRender()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldSkip(Class, String)</Name>
      <Type>instm</Type>
      <Scope>AspectJAwareAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/autoproxy/AspectJAwareAdvisorAutoProxyCreator.html</Path>
    <Anchor>shouldSkip(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldSkip(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>shouldSkip(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldSkip(ConfigurableListableBeanFactory, String)</Name>
      <Type>instm</Type>
      <Scope>RequiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>shouldSkip(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldStop(Connection)</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>shouldStop(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldStop(Connection)</Name>
      <Type>intfm</Type>
      <Scope>SmartConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SmartConnectionFactory.html</Path>
    <Anchor>shouldStop(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUnbindAtCompletion()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>shouldUnbindAtCompletion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseShadowLoader()</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>shouldUseShadowLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(RenderRequest, RenderResponse, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>showForm(javax.portlet.RenderRequest, javax.portlet.RenderResponse, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(RenderRequest, BindException, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>showForm(javax.portlet.RenderRequest, org.springframework.validation.BindException, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(RenderRequest, BindException, String, Map)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>showForm(javax.portlet.RenderRequest, org.springframework.validation.BindException, java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(RenderRequest, RenderResponse, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>showForm(javax.portlet.RenderRequest, javax.portlet.RenderResponse, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(RenderRequest, RenderResponse, BindException)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>showForm(javax.portlet.RenderRequest, javax.portlet.RenderResponse, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(RenderRequest, RenderResponse, BindException, Map)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>showForm(javax.portlet.RenderRequest, javax.portlet.RenderResponse, org.springframework.validation.BindException, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(HttpServletRequest, HttpServletResponse, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(HttpServletRequest, BindException, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>showForm(javax.servlet.http.HttpServletRequest, org.springframework.validation.BindException, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(HttpServletRequest, BindException, String, Map)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>showForm(javax.servlet.http.HttpServletRequest, org.springframework.validation.BindException, java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(HttpServletRequest, HttpServletResponse, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(HttpServletRequest, HttpServletResponse, BindException)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showForm(HttpServletRequest, HttpServletResponse, BindException, Map)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showNewForm(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>showNewForm(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showNewForm(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>showNewForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showPage(RenderRequest, BindException, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>showPage(javax.portlet.RenderRequest, org.springframework.validation.BindException, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showPage(HttpServletRequest, BindException, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>showPage(javax.servlet.http.HttpServletRequest, org.springframework.validation.BindException, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdown()</Name>
      <Type>instm</Type>
      <Scope>ExecutorServiceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ExecutorServiceAdapter.html</Path>
    <Anchor>shutdown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdown()</Name>
      <Type>intfm</Type>
      <Scope>EmbeddedDatabase</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.html</Path>
    <Anchor>shutdown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdown(DataSource, String)</Name>
      <Type>intfm</Type>
      <Scope>EmbeddedDatabaseConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurer.html</Path>
    <Anchor>shutdown(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdown()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>shutdown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdown()</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>shutdown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdown()</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>shutdown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdown(boolean)</Name>
      <Type>instm</Type>
      <Scope>LocalTaskExecutorThreadPool</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html</Path>
    <Anchor>shutdown(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdownDatabase()</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html</Path>
    <Anchor>shutdownDatabase()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdownLogging()</Name>
      <Type>clm</Type>
      <Scope>Log4jConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Log4jConfigurer.html</Path>
    <Anchor>shutdownLogging()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdownLogging(ServletContext)</Name>
      <Type>clm</Type>
      <Scope>Log4jWebConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/Log4jWebConfigurer.html</Path>
    <Anchor>shutdownLogging(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdownNow()</Name>
      <Type>instm</Type>
      <Scope>ExecutorServiceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ExecutorServiceAdapter.html</Path>
    <Anchor>shutdownNow()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAliasRegistry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SimpleAliasRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAliasRegistry()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleAliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SimpleAliasRegistry.html</Path>
    <Anchor>SimpleAliasRegistry()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleApplicationEventMulticaster</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SimpleApplicationEventMulticaster.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleApplicationEventMulticaster()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SimpleApplicationEventMulticaster.html</Path>
    <Anchor>SimpleApplicationEventMulticaster()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleApplicationEventMulticaster(BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SimpleApplicationEventMulticaster.html</Path>
    <Anchor>SimpleApplicationEventMulticaster(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAspectInstanceFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/SimpleAspectInstanceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAspectInstanceFactory(Class)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/SimpleAspectInstanceFactory.html</Path>
    <Anchor>SimpleAspectInstanceFactory(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAsyncTaskExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.task</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAsyncTaskExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>SimpleAsyncTaskExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAsyncTaskExecutor(String)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>SimpleAsyncTaskExecutor(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAsyncTaskExecutor(ThreadFactory)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>SimpleAsyncTaskExecutor(java.util.concurrent.ThreadFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAutowireCandidateResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleAutowireCandidateResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleAutowireCandidateResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleAutowireCandidateResolver.html</Path>
    <Anchor>SimpleAutowireCandidateResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBeanDefinitionRegistry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBeanDefinitionRegistry()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleBeanDefinitionRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html</Path>
    <Anchor>SimpleBeanDefinitionRegistry()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBeanFactoryAwareAspectInstanceFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/SimpleBeanFactoryAwareAspectInstanceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBeanFactoryAwareAspectInstanceFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleBeanFactoryAwareAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/SimpleBeanFactoryAwareAspectInstanceFactory.html</Path>
    <Anchor>SimpleBeanFactoryAwareAspectInstanceFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBeanTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/SimpleBeanTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBeanTargetSource()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleBeanTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/SimpleBeanTargetSource.html</Path>
    <Anchor>SimpleBeanTargetSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBootstrapContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/SimpleBootstrapContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBootstrapContext(WorkManager)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleBootstrapContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/SimpleBootstrapContext.html</Path>
    <Anchor>SimpleBootstrapContext(javax.resource.spi.work.WorkManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBootstrapContext(WorkManager, XATerminator)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleBootstrapContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/SimpleBootstrapContext.html</Path>
    <Anchor>SimpleBootstrapContext(javax.resource.spi.work.WorkManager, javax.resource.spi.XATerminator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBurlapServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/SimpleBurlapServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleBurlapServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleBurlapServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/SimpleBurlapServiceExporter.html</Path>
    <Anchor>SimpleBurlapServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleCacheManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/SimpleCacheManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleCacheManager()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/SimpleCacheManager.html</Path>
    <Anchor>SimpleCacheManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleClientHttpRequestFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/SimpleClientHttpRequestFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleClientHttpRequestFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/SimpleClientHttpRequestFactory.html</Path>
    <Anchor>SimpleClientHttpRequestFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleCommandLinePropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/SimpleCommandLinePropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleCommandLinePropertySource(String...)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleCommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/SimpleCommandLinePropertySource.html</Path>
    <Anchor>SimpleCommandLinePropertySource(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleCommandLinePropertySource(String, String[])</Name>
      <Type>Constructor</Type>
      <Scope>SimpleCommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/SimpleCommandLinePropertySource.html</Path>
    <Anchor>SimpleCommandLinePropertySource(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleConnectionHandle</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleConnectionHandle.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleConnectionHandle(Connection)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleConnectionHandle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleConnectionHandle.html</Path>
    <Anchor>SimpleConnectionHandle(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleConstructorNamespaceHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimpleConstructorNamespaceHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleConstructorNamespaceHandler()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleConstructorNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimpleConstructorNamespaceHandler.html</Path>
    <Anchor>SimpleConstructorNamespaceHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleControllerHandlerAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleControllerHandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleControllerHandlerAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>SimpleControllerHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simpleControllerHandlerAdapter()</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>simpleControllerHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleControllerHandlerAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleControllerHandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleControllerHandlerAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>SimpleControllerHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleDriverDataSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleDriverDataSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleDriverDataSource()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleDriverDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleDriverDataSource.html</Path>
    <Anchor>SimpleDriverDataSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleDriverDataSource(Driver, String)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleDriverDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleDriverDataSource.html</Path>
    <Anchor>SimpleDriverDataSource(java.sql.Driver, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleDriverDataSource(Driver, String, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleDriverDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleDriverDataSource.html</Path>
    <Anchor>SimpleDriverDataSource(java.sql.Driver, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleDriverDataSource(Driver, String, Properties)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleDriverDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SimpleDriverDataSource.html</Path>
    <Anchor>SimpleDriverDataSource(java.sql.Driver, java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleFormController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleFormController()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>SimpleFormController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleFormController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleFormController()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>SimpleFormController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHessianServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/SimpleHessianServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHessianServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleHessianServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/SimpleHessianServiceExporter.html</Path>
    <Anchor>SimpleHessianServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHttpInvokerRequestExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHttpInvokerRequestExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html</Path>
    <Anchor>SimpleHttpInvokerRequestExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHttpInvokerServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHttpInvokerServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleHttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html</Path>
    <Anchor>SimpleHttpInvokerServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHttpServerFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHttpServerFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>SimpleHttpServerFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHttpServerJaxWsServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.jaxws</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleHttpServerJaxWsServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>SimpleHttpServerJaxWsServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleInstantiationStrategy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleInstantiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleInstantiationStrategy()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleInstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleInstantiationStrategy.html</Path>
    <Anchor>SimpleInstantiationStrategy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleInstrumentableClassLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/SimpleInstrumentableClassLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleInstrumentableClassLoader(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleInstrumentableClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/SimpleInstrumentableClassLoader.html</Path>
    <Anchor>SimpleInstrumentableClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJaxWsServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.jaxws</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJaxWsServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter.html</Path>
    <Anchor>SimpleJaxWsServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcCall</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcCall(DataSource)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>SimpleJdbcCall(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcCall(JdbcTemplate)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>SimpleJdbcCall(org.springframework.jdbc.core.JdbcTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcCallOperations</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcDaoSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcDaoSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcDaoSupport()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJdbcDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcDaoSupport.html</Path>
    <Anchor>SimpleJdbcDaoSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcInsert</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcInsert(DataSource)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>SimpleJdbcInsert(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcInsert(JdbcTemplate)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>SimpleJdbcInsert(org.springframework.jdbc.core.JdbcTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcInsertOperations</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcOperations</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcOperations.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcTemplate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcTemplate(DataSource)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>SimpleJdbcTemplate(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcTemplate(JdbcOperations)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>SimpleJdbcTemplate(org.springframework.jdbc.core.JdbcOperations)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcTemplate(NamedParameterJdbcOperations)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>SimpleJdbcTemplate(org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simpleJdbcTemplate</Name>
      <Type>Field</Type>
      <Scope>AbstractAnnotationAwareTransactionalTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
    <Anchor>simpleJdbcTemplate</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simpleJdbcTemplate</Name>
      <Type>Field</Type>
      <Scope>AbstractTransactionalJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html</Path>
    <Anchor>simpleJdbcTemplate</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simpleJdbcTemplate</Name>
      <Type>Field</Type>
      <Scope>AbstractTransactionalJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
    <Anchor>simpleJdbcTemplate</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simpleJdbcTemplate</Name>
      <Type>Field</Type>
      <Scope>AbstractTransactionalTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
    <Anchor>simpleJdbcTemplate</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcTestUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.jdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJdbcTestUtils()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html</Path>
    <Anchor>SimpleJdbcTestUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJndiBeanFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jndi.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/support/SimpleJndiBeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleJndiBeanFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleJndiBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/support/SimpleJndiBeanFactory.html</Path>
    <Anchor>SimpleJndiBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleLoadTimeWeaver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/SimpleLoadTimeWeaver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleLoadTimeWeaver()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/SimpleLoadTimeWeaver.html</Path>
    <Anchor>SimpleLoadTimeWeaver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleLoadTimeWeaver(SimpleInstrumentableClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/SimpleLoadTimeWeaver.html</Path>
    <Anchor>SimpleLoadTimeWeaver(org.springframework.instrument.classloading.SimpleInstrumentableClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleLocaleContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.i18n</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/i18n/SimpleLocaleContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleLocaleContext(Locale)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleLocaleContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/i18n/SimpleLocaleContext.html</Path>
    <Anchor>SimpleLocaleContext(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMailMessage</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mail</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMailMessage()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>SimpleMailMessage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMailMessage(SimpleMailMessage)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>SimpleMailMessage(org.springframework.mail.SimpleMailMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMappingExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimpleMappingExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMappingExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>SimpleMappingExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMappingExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMappingExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>SimpleMappingExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simpleMatch(String, String)</Name>
      <Type>clm</Type>
      <Scope>PatternMatchUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PatternMatchUtils.html</Path>
    <Anchor>simpleMatch(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simpleMatch(String[], String)</Name>
      <Type>clm</Type>
      <Scope>PatternMatchUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PatternMatchUtils.html</Path>
    <Anchor>simpleMatch(java.lang.String[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.support.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>SimpleMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMessageConverter102</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.support.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter102.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMessageConverter102()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMessageConverter102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter102.html</Path>
    <Anchor>SimpleMessageConverter102()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMessageListenerContainer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMessageListenerContainer()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>SimpleMessageListenerContainer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMessageListenerContainer102</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer102.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMessageListenerContainer102()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer102.html</Path>
    <Anchor>SimpleMessageListenerContainer102()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMetadataAwareAspectInstanceFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/SimpleMetadataAwareAspectInstanceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMetadataAwareAspectInstanceFactory(Class, String)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMetadataAwareAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/SimpleMetadataAwareAspectInstanceFactory.html</Path>
    <Anchor>SimpleMetadataAwareAspectInstanceFactory(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMetadataReaderFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type.classreading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/SimpleMetadataReaderFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMetadataReaderFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMetadataReaderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/SimpleMetadataReaderFactory.html</Path>
    <Anchor>SimpleMetadataReaderFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMetadataReaderFactory(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMetadataReaderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/SimpleMetadataReaderFactory.html</Path>
    <Anchor>SimpleMetadataReaderFactory(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleMetadataReaderFactory(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleMetadataReaderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/SimpleMetadataReaderFactory.html</Path>
    <Anchor>SimpleMetadataReaderFactory(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNamespaceContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleNamespaceContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNamespaceContext()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleNamespaceContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleNamespaceContext.html</Path>
    <Anchor>SimpleNamespaceContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNamingContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mock.jndi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNamingContext()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>SimpleNamingContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNamingContext(String)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>SimpleNamingContext(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNamingContext(String, Hashtable&amp;lt;String, Object&amp;gt;, Hashtable&amp;lt;String, Object&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>SimpleNamingContext(java.lang.String, java.util.Hashtable, java.util.Hashtable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNamingContextBuilder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mock.jndi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContextBuilder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNamingContextBuilder()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleNamingContextBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContextBuilder.html</Path>
    <Anchor>SimpleNamingContextBuilder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNativeJdbcExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.nativejdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleNativeJdbcExtractor()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html</Path>
    <Anchor>SimpleNativeJdbcExtractor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimplePortletHandlerAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletHandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimplePortletHandlerAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>SimplePortletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletHandlerAdapter.html</Path>
    <Anchor>SimplePortletHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimplePortletPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimplePortletPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>SimplePortletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletPostProcessor.html</Path>
    <Anchor>SimplePortletPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimplePropertyNamespaceHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimplePropertyNamespaceHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimplePropertyNamespaceHandler()</Name>
      <Type>Constructor</Type>
      <Scope>SimplePropertyNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimplePropertyNamespaceHandler.html</Path>
    <Anchor>SimplePropertyNamespaceHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleRecordOperation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/SimpleRecordOperation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleRecordOperation()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleRecordOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/SimpleRecordOperation.html</Path>
    <Anchor>SimpleRecordOperation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleRecordOperation(ConnectionFactory, InteractionSpec)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleRecordOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/SimpleRecordOperation.html</Path>
    <Anchor>SimpleRecordOperation(javax.resource.cci.ConnectionFactory, javax.resource.cci.InteractionSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleReflectiveMBeanInfoAssembler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export.assembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleReflectiveMBeanInfoAssembler()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>SimpleReflectiveMBeanInfoAssembler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleRemoteSlsbInvokerInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleRemoteSlsbInvokerInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>SimpleRemoteSlsbInvokerInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleRemoteStatelessSessionProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteStatelessSessionProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleRemoteStatelessSessionProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleRemoteStatelessSessionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteStatelessSessionProxyFactoryBean.html</Path>
    <Anchor>SimpleRemoteStatelessSessionProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSaxErrorHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleSaxErrorHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSaxErrorHandler(Log)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleSaxErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleSaxErrorHandler.html</Path>
    <Anchor>SimpleSaxErrorHandler(org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSecurityContextProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleSecurityContextProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSecurityContextProvider()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleSecurityContextProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleSecurityContextProvider.html</Path>
    <Anchor>SimpleSecurityContextProvider()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSecurityContextProvider(AccessControlContext)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleSecurityContextProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleSecurityContextProvider.html</Path>
    <Anchor>SimpleSecurityContextProvider(java.security.AccessControlContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleServletHandlerAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletHandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleServletHandlerAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleServletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletHandlerAdapter.html</Path>
    <Anchor>SimpleServletHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleServletPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleServletPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleServletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletPostProcessor.html</Path>
    <Anchor>SimpleServletPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSessionStatus</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SimpleSessionStatus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSessionStatus()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleSessionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SimpleSessionStatus.html</Path>
    <Anchor>SimpleSessionStatus()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSpringBeanELResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.access.el</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/el/SimpleSpringBeanELResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSpringBeanELResolver(BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleSpringBeanELResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/el/SimpleSpringBeanELResolver.html</Path>
    <Anchor>SimpleSpringBeanELResolver(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSpringPreparerFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles2</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SimpleSpringPreparerFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSpringPreparerFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleSpringPreparerFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SimpleSpringPreparerFactory.html</Path>
    <Anchor>SimpleSpringPreparerFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSpringPreparerFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SimpleSpringPreparerFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSpringPreparerFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleSpringPreparerFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SimpleSpringPreparerFactory.html</Path>
    <Anchor>SimpleSpringPreparerFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTaskWorkManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.work</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTaskWorkManager()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>SimpleTaskWorkManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTheme</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/SimpleTheme.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTheme(String, MessageSource)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTheme</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/SimpleTheme.html</Path>
    <Anchor>SimpleTheme(java.lang.String, org.springframework.context.MessageSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleThreadPoolTaskExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleThreadPoolTaskExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
    <Anchor>SimpleThreadPoolTaskExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleThreadScope</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/SimpleThreadScope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleThreadScope()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleThreadScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/SimpleThreadScope.html</Path>
    <Anchor>SimpleThreadScope()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleThrowawayClassLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/SimpleThrowawayClassLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleThrowawayClassLoader(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleThrowawayClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/SimpleThrowawayClassLoader.html</Path>
    <Anchor>SimpleThrowawayClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTraceInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/SimpleTraceInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTraceInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/SimpleTraceInterceptor.html</Path>
    <Anchor>SimpleTraceInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTraceInterceptor(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/SimpleTraceInterceptor.html</Path>
    <Anchor>SimpleTraceInterceptor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTransactionFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.jta</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SimpleTransactionFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTransactionFactory(TransactionManager)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SimpleTransactionFactory.html</Path>
    <Anchor>SimpleTransactionFactory(javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTransactionStatus</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/SimpleTransactionStatus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTransactionStatus()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/SimpleTransactionStatus.html</Path>
    <Anchor>SimpleTransactionStatus()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTransactionStatus(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/SimpleTransactionStatus.html</Path>
    <Anchor>SimpleTransactionStatus(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTransformErrorListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleTransformErrorListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTransformErrorListener(Log)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTransformErrorListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleTransformErrorListener.html</Path>
    <Anchor>SimpleTransformErrorListener(org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTriggerBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTriggerBean()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerBean.html</Path>
    <Anchor>SimpleTriggerBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTriggerContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/SimpleTriggerContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTriggerContext()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTriggerContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/SimpleTriggerContext.html</Path>
    <Anchor>SimpleTriggerContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTriggerFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTriggerFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>SimpleTriggerFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTypeConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/SimpleTypeConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleTypeConverter()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleTypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/SimpleTypeConverter.html</Path>
    <Anchor>SimpleTypeConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleUrlHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleUrlHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html</Path>
    <Anchor>SimpleUrlHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleValueWrapper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/SimpleValueWrapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleValueWrapper(Object)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleValueWrapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/SimpleValueWrapper.html</Path>
    <Anchor>SimpleValueWrapper(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleColumnRowMapper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SingleColumnRowMapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleColumnRowMapper()</Name>
      <Type>Constructor</Type>
      <Scope>SingleColumnRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SingleColumnRowMapper.html</Path>
    <Anchor>SingleColumnRowMapper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleColumnRowMapper(Class&amp;lt;T&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>SingleColumnRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SingleColumnRowMapper.html</Path>
    <Anchor>SingleColumnRowMapper(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionDataSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionDataSource()</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>SingleConnectionDataSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionDataSource(String, String, String, String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>SingleConnectionDataSource(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionDataSource(String, String, String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>SingleConnectionDataSource(java.lang.String, java.lang.String, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionDataSource(String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>SingleConnectionDataSource(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionDataSource(Connection, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>SingleConnectionDataSource(java.sql.Connection, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>SingleConnectionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory(Connection)</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>SingleConnectionFactory(javax.resource.cci.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory(ConnectionFactory)</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>SingleConnectionFactory(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>SingleConnectionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory(Connection)</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>SingleConnectionFactory(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory(ConnectionFactory)</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>SingleConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory102</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory102.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory102()</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionFactory102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory102.html</Path>
    <Anchor>SingleConnectionFactory102()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleConnectionFactory102(ConnectionFactory, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>SingleConnectionFactory102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory102.html</Path>
    <Anchor>SingleConnectionFactory102(javax.jms.ConnectionFactory, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleDataSourceLookup</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.lookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/SingleDataSourceLookup.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingleDataSourceLookup(DataSource)</Name>
      <Type>Constructor</Type>
      <Scope>SingleDataSourceLookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/SingleDataSourceLookup.html</Path>
    <Anchor>SingleDataSourceLookup(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>singleResult(Collection&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>DataAccessUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DataAccessUtils.html</Path>
    <Anchor>singleResult(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SINGLETON_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>SINGLETON_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SINGLETON_KEY</Name>
      <Type>Field</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>SINGLETON_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingletonAspectInstanceFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/SingletonAspectInstanceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingletonAspectInstanceFactory(Object)</Name>
      <Type>Constructor</Type>
      <Scope>SingletonAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/SingletonAspectInstanceFactory.html</Path>
    <Anchor>SingletonAspectInstanceFactory(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingletonBeanFactoryLocator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingletonBeanFactoryLocator(String)</Name>
      <Type>Constructor</Type>
      <Scope>SingletonBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html</Path>
    <Anchor>SingletonBeanFactoryLocator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingletonBeanRegistry</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SingletonBeanRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingletonMetadataAwareAspectInstanceFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/SingletonMetadataAwareAspectInstanceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingletonMetadataAwareAspectInstanceFactory(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>SingletonMetadataAwareAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/SingletonMetadataAwareAspectInstanceFactory.html</Path>
    <Anchor>SingletonMetadataAwareAspectInstanceFactory(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingletonTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/SingletonTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SingletonTargetSource(Object)</Name>
      <Type>Constructor</Type>
      <Scope>SingletonTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/SingletonTargetSource.html</Path>
    <Anchor>SingletonTargetSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size()</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>size()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size()</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>size()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size()</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>size()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size(int)</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>size(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size()</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>size()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size()</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>size()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>size()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size()</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>size()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SIZE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>SIZE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skip</Name>
      <Type>Field</Type>
      <Scope>InjectionMetadata.InjectedElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
    <Anchor>skip</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SKIP_REQUIRED_CHECK_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>RequiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>SKIP_REQUIRED_CHECK_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleepInbetweenRecoveryAttempts()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>sleepInbetweenRecoveryAttempts()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartApplicationListener</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SmartApplicationListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartClassLoader</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SmartClassLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartConnectionFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SmartConnectionFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartContextLoader</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/SmartContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartDataSource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SmartDataSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartFactoryBean</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/SmartFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartInstantiationAwareBeanPostProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartLifecycle</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/SmartLifecycle.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartPersistenceUnitInfo</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.jpa.persistenceunit</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/SmartPersistenceUnitInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartSessionBean</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.ejb.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/SmartSessionBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartTransactionObject</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/SmartTransactionObject.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartValidator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/SmartValidator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartView</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/SmartView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>snapshot()</Name>
      <Type>instm</Type>
      <Scope>ParseState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ParseState.html</Path>
    <Anchor>snapshot()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SoapFaultException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.remoting.soap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/soap/SoapFaultException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SoapFaultException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>SoapFaultException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/soap/SoapFaultException.html</Path>
    <Anchor>SoapFaultException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort(List, SortDefinition)</Name>
      <Type>clm</Type>
      <Scope>PropertyComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PropertyComparator.html</Path>
    <Anchor>sort(java.util.List, org.springframework.beans.support.SortDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort(Object[], SortDefinition)</Name>
      <Type>clm</Type>
      <Scope>PropertyComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PropertyComparator.html</Path>
    <Anchor>sort(java.lang.Object[], org.springframework.beans.support.SortDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort(List&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationAwareOrderComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAwareOrderComparator.html</Path>
    <Anchor>sort(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort(Object[])</Name>
      <Type>clm</Type>
      <Scope>AnnotationAwareOrderComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAwareOrderComparator.html</Path>
    <Anchor>sort(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort(List&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>OrderComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/OrderComparator.html</Path>
    <Anchor>sort(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort(Object[])</Name>
      <Type>clm</Type>
      <Scope>OrderComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/OrderComparator.html</Path>
    <Anchor>sort(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAdvisors(List&amp;lt;Advisor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AspectJAwareAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/autoproxy/AspectJAwareAdvisorAutoProxyCreator.html</Path>
    <Anchor>sortAdvisors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAdvisors(List&amp;lt;Advisor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>sortAdvisors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortByQualityValue(List&amp;lt;MediaType&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>sortByQualityValue(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortBySpecificity(List&amp;lt;MediaType&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>sortBySpecificity(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortBySpecificityAndQuality(List&amp;lt;MediaType&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>sortBySpecificityAndQuality(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SortDefinition</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/SortDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SortedResourcesFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/config/SortedResourcesFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SortedResourcesFactoryBean(List&amp;lt;String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>SortedResourcesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/config/SortedResourcesFactoryBean.html</Path>
    <Anchor>SortedResourcesFactoryBean(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SortedResourcesFactoryBean(ResourceLoader, List&amp;lt;String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>SortedResourcesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/config/SortedResourcesFactoryBean.html</Path>
    <Anchor>SortedResourcesFactoryBean(org.springframework.core.io.ResourceLoader, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortStringArray(String[])</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>sortStringArray(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>source</Name>
      <Type>Field</Type>
      <Scope>PropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySource.html</Path>
    <Anchor>source</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>source(Matcher&amp;lt;? super Source&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ContentRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
    <Anchor>source(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>source(Matcher&amp;lt;? super Source&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>source(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SourceExtractor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/SourceExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SourceFilteringListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SourceFilteringListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SourceFilteringListener(Object, ApplicationListener)</Name>
      <Type>Constructor</Type>
      <Scope>SourceFilteringListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SourceFilteringListener.html</Path>
    <Anchor>SourceFilteringListener(java.lang.Object, org.springframework.context.ApplicationListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SourceFilteringListener(Object)</Name>
      <Type>Constructor</Type>
      <Scope>SourceFilteringListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SourceFilteringListener.html</Path>
    <Anchor>SourceFilteringListener(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SourceHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/SourceHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SourceHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>SourceHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/SourceHttpMessageConverter.html</Path>
    <Anchor>SourceHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPAN_TAG</Name>
      <Type>Field</Type>
      <Scope>ErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
    <Anchor>SPAN_TAG</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPECIFICITY_COMPARATOR</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>SPECIFICITY_COMPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelEvaluationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.expression.spel</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelEvaluationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelEvaluationException(SpelMessage, Object...)</Name>
      <Type>Constructor</Type>
      <Scope>SpelEvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelEvaluationException.html</Path>
    <Anchor>SpelEvaluationException(org.springframework.expression.spel.SpelMessage, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelEvaluationException(int, SpelMessage, Object...)</Name>
      <Type>Constructor</Type>
      <Scope>SpelEvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelEvaluationException.html</Path>
    <Anchor>SpelEvaluationException(int, org.springframework.expression.spel.SpelMessage, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelEvaluationException(int, Throwable, SpelMessage, Object...)</Name>
      <Type>Constructor</Type>
      <Scope>SpelEvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelEvaluationException.html</Path>
    <Anchor>SpelEvaluationException(int, java.lang.Throwable, org.springframework.expression.spel.SpelMessage, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelEvaluationException(Throwable, SpelMessage, Object...)</Name>
      <Type>Constructor</Type>
      <Scope>SpelEvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelEvaluationException.html</Path>
    <Anchor>SpelEvaluationException(java.lang.Throwable, org.springframework.expression.spel.SpelMessage, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelExpression</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.standard</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpression.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelExpression(String, SpelNodeImpl, SpelParserConfiguration)</Name>
      <Type>Constructor</Type>
      <Scope>SpelExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpression.html</Path>
    <Anchor>SpelExpression(java.lang.String, org.springframework.expression.spel.ast.SpelNodeImpl, org.springframework.expression.spel.SpelParserConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelExpressionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.standard</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpressionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelExpressionParser()</Name>
      <Type>Constructor</Type>
      <Scope>SpelExpressionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpressionParser.html</Path>
    <Anchor>SpelExpressionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelExpressionParser(SpelParserConfiguration)</Name>
      <Type>Constructor</Type>
      <Scope>SpelExpressionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpressionParser.html</Path>
    <Anchor>SpelExpressionParser(org.springframework.expression.spel.SpelParserConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelMessage</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.expression.spel</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelMessage.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelMessage.Kind</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.expression.spel</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelMessage.Kind.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelNode</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.expression.spel</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelNode.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelNodeImpl</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/SpelNodeImpl.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelNodeImpl(int, SpelNodeImpl...)</Name>
      <Type>Constructor</Type>
      <Scope>SpelNodeImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/SpelNodeImpl.html</Path>
    <Anchor>SpelNodeImpl(int, org.springframework.expression.spel.ast.SpelNodeImpl...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelParseException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.expression.spel</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelParseException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelParseException(String, int, SpelMessage, Object...)</Name>
      <Type>Constructor</Type>
      <Scope>SpelParseException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelParseException.html</Path>
    <Anchor>SpelParseException(java.lang.String, int, org.springframework.expression.spel.SpelMessage, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelParseException(int, SpelMessage, Object...)</Name>
      <Type>Constructor</Type>
      <Scope>SpelParseException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelParseException.html</Path>
    <Anchor>SpelParseException(int, org.springframework.expression.spel.SpelMessage, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelParseException(int, Throwable, SpelMessage, Object...)</Name>
      <Type>Constructor</Type>
      <Scope>SpelParseException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelParseException.html</Path>
    <Anchor>SpelParseException(int, java.lang.Throwable, org.springframework.expression.spel.SpelMessage, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelParserConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelParserConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpelParserConfiguration(boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>SpelParserConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelParserConfiguration.html</Path>
    <Anchor>SpelParserConfiguration(boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>split(String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>split(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitArrayElementsIntoProperties(String[], String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>splitArrayElementsIntoProperties(java.lang.String[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitArrayElementsIntoProperties(String[], String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>splitArrayElementsIntoProperties(java.lang.String[], java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitSqlScript(String, char, List&amp;lt;String&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>splitSqlScript(java.lang.String, char, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPRING_RESOURCE_LOADER</Name>
      <Type>Field</Type>
      <Scope>SpringResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/SpringResourceLoader.html</Path>
    <Anchor>SPRING_RESOURCE_LOADER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPRING_RESOURCE_LOADER_CACHE</Name>
      <Type>Field</Type>
      <Scope>SpringResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/SpringResourceLoader.html</Path>
    <Anchor>SPRING_RESOURCE_LOADER_CACHE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPRING_RESOURCE_LOADER_CLASS</Name>
      <Type>Field</Type>
      <Scope>SpringResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/SpringResourceLoader.html</Path>
    <Anchor>SPRING_RESOURCE_LOADER_CLASS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPRING_RESOURCE_LOADER_PATH</Name>
      <Type>Field</Type>
      <Scope>SpringResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/SpringResourceLoader.html</Path>
    <Anchor>SPRING_RESOURCE_LOADER_PATH</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringAsmInfo</Name>
      <Type>cl</Type>
      <Scope>org.springframework.asm</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/asm/SpringAsmInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringAsmInfo()</Name>
      <Type>Constructor</Type>
      <Scope>SpringAsmInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/asm/SpringAsmInfo.html</Path>
    <Anchor>SpringAsmInfo()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanAutowiringInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanAutowiringInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>SpringBeanAutowiringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html</Path>
    <Anchor>SpringBeanAutowiringInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanAutowiringSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/SpringBeanAutowiringSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanAutowiringSupport()</Name>
      <Type>Constructor</Type>
      <Scope>SpringBeanAutowiringSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/SpringBeanAutowiringSupport.html</Path>
    <Anchor>SpringBeanAutowiringSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanELResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.access.el</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/el/SpringBeanELResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanELResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SpringBeanELResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/el/SpringBeanELResolver.html</Path>
    <Anchor>SpringBeanELResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanFacesELResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.jsf.el</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/el/SpringBeanFacesELResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanFacesELResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SpringBeanFacesELResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/el/SpringBeanFacesELResolver.html</Path>
    <Anchor>SpringBeanFacesELResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanJobFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SpringBeanJobFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanJobFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SpringBeanJobFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SpringBeanJobFactory.html</Path>
    <Anchor>SpringBeanJobFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanPreparerFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles2</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SpringBeanPreparerFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanPreparerFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SpringBeanPreparerFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SpringBeanPreparerFactory.html</Path>
    <Anchor>SpringBeanPreparerFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanPreparerFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SpringBeanPreparerFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanPreparerFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SpringBeanPreparerFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SpringBeanPreparerFactory.html</Path>
    <Anchor>SpringBeanPreparerFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanVariableResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.jsf</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/SpringBeanVariableResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBeanVariableResolver(VariableResolver)</Name>
      <Type>Constructor</Type>
      <Scope>SpringBeanVariableResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/SpringBeanVariableResolver.html</Path>
    <Anchor>SpringBeanVariableResolver(javax.faces.el.VariableResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBindingActionForm</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/SpringBindingActionForm.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringBindingActionForm()</Name>
      <Type>Constructor</Type>
      <Scope>SpringBindingActionForm</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/SpringBindingActionForm.html</Path>
    <Anchor>SpringBindingActionForm()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringCacheAnnotationParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/SpringCacheAnnotationParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringCacheAnnotationParser()</Name>
      <Type>Constructor</Type>
      <Scope>SpringCacheAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/SpringCacheAnnotationParser.html</Path>
    <Anchor>SpringCacheAnnotationParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringCglibInfo</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cglib</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cglib/SpringCglibInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringCglibInfo()</Name>
      <Type>Constructor</Type>
      <Scope>SpringCglibInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cglib/SpringCglibInfo.html</Path>
    <Anchor>SpringCglibInfo()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringConfiguredConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/aspectj/SpringConfiguredConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringConfiguredConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>SpringConfiguredConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/aspectj/SpringConfiguredConfiguration.html</Path>
    <Anchor>SpringConfiguredConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringConstraintValidatorFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation.beanvalidation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/SpringConstraintValidatorFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringConstraintValidatorFactory(AutowireCapableBeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>SpringConstraintValidatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/SpringConstraintValidatorFactory.html</Path>
    <Anchor>SpringConstraintValidatorFactory(org.springframework.beans.factory.config.AutowireCapableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringContextResourceAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringContextResourceAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>SpringContextResourceAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringFactoriesLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/SpringFactoriesLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringFactoriesLoader()</Name>
      <Type>Constructor</Type>
      <Scope>SpringFactoriesLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/SpringFactoriesLoader.html</Path>
    <Anchor>SpringFactoriesLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringFailOnTimeout</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit4.statements</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/SpringFailOnTimeout.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringFailOnTimeout(Statement, long)</Name>
      <Type>Constructor</Type>
      <Scope>SpringFailOnTimeout</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/SpringFailOnTimeout.html</Path>
    <Anchor>SpringFailOnTimeout(org.junit.runners.model.Statement, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringJtaSessionContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SpringJtaSessionContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringJtaSessionContext(SessionFactoryImplementor)</Name>
      <Type>Constructor</Type>
      <Scope>SpringJtaSessionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SpringJtaSessionContext.html</Path>
    <Anchor>SpringJtaSessionContext(org.hibernate.engine.spi.SessionFactoryImplementor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringJtaSynchronizationAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.jta</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringJtaSynchronizationAdapter(TransactionSynchronization)</Name>
      <Type>Constructor</Type>
      <Scope>SpringJtaSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.html</Path>
    <Anchor>SpringJtaSynchronizationAdapter(org.springframework.transaction.support.TransactionSynchronization)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringJtaSynchronizationAdapter(TransactionSynchronization, UserTransaction)</Name>
      <Type>Constructor</Type>
      <Scope>SpringJtaSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.html</Path>
    <Anchor>SpringJtaSynchronizationAdapter(org.springframework.transaction.support.TransactionSynchronization, javax.transaction.UserTransaction)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringJtaSynchronizationAdapter(TransactionSynchronization, TransactionManager)</Name>
      <Type>Constructor</Type>
      <Scope>SpringJtaSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.html</Path>
    <Anchor>SpringJtaSynchronizationAdapter(org.springframework.transaction.support.TransactionSynchronization, javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringJUnit4ClassRunner</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringJUnit4ClassRunner(Class&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>SpringJUnit4ClassRunner(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringLobCreatorSynchronization</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.lob</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/SpringLobCreatorSynchronization.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringLobCreatorSynchronization(LobCreator)</Name>
      <Type>Constructor</Type>
      <Scope>SpringLobCreatorSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/SpringLobCreatorSynchronization.html</Path>
    <Anchor>SpringLobCreatorSynchronization(org.springframework.jdbc.support.lob.LobCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringLocaleResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles2</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SpringLocaleResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringLocaleResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SpringLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SpringLocaleResolver.html</Path>
    <Anchor>SpringLocaleResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringLocaleResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SpringLocaleResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringLocaleResolver()</Name>
      <Type>Constructor</Type>
      <Scope>SpringLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SpringLocaleResolver.html</Path>
    <Anchor>SpringLocaleResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringModelMBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/SpringModelMBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringModelMBean()</Name>
      <Type>Constructor</Type>
      <Scope>SpringModelMBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/SpringModelMBean.html</Path>
    <Anchor>SpringModelMBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringModelMBean(ModelMBeanInfo)</Name>
      <Type>Constructor</Type>
      <Scope>SpringModelMBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/SpringModelMBean.html</Path>
    <Anchor>SpringModelMBean(javax.management.modelmbean.ModelMBeanInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringPersistenceManagerProxyBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jdo.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringPersistenceManagerProxyBean()</Name>
      <Type>Constructor</Type>
      <Scope>SpringPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html</Path>
    <Anchor>SpringPersistenceManagerProxyBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringProxy</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/SpringProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringRepeat</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit4.statements</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/SpringRepeat.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringRepeat(Statement, Method, int)</Name>
      <Type>Constructor</Type>
      <Scope>SpringRepeat</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/SpringRepeat.html</Path>
    <Anchor>SpringRepeat(org.junit.runners.model.Statement, java.lang.reflect.Method, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringResourceLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.velocity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/SpringResourceLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringResourceLoader()</Name>
      <Type>Constructor</Type>
      <Scope>SpringResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/SpringResourceLoader.html</Path>
    <Anchor>SpringResourceLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringServletContainerInitializer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/SpringServletContainerInitializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringServletContainerInitializer()</Name>
      <Type>Constructor</Type>
      <Scope>SpringServletContainerInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/SpringServletContainerInitializer.html</Path>
    <Anchor>SpringServletContainerInitializer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringSessionContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringSessionContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringSessionContext(SessionFactoryImplementor)</Name>
      <Type>Constructor</Type>
      <Scope>SpringSessionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringSessionContext.html</Path>
    <Anchor>SpringSessionContext(org.hibernate.engine.SessionFactoryImplementor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringSessionContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SpringSessionContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringSessionContext(SessionFactoryImplementor)</Name>
      <Type>Constructor</Type>
      <Scope>SpringSessionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SpringSessionContext.html</Path>
    <Anchor>SpringSessionContext(org.hibernate.engine.spi.SessionFactoryImplementor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringTemplateLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.freemarker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/SpringTemplateLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringTemplateLoader(ResourceLoader, String)</Name>
      <Type>Constructor</Type>
      <Scope>SpringTemplateLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/SpringTemplateLoader.html</Path>
    <Anchor>SpringTemplateLoader(org.springframework.core.io.ResourceLoader, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>springTestContextAfterTestClass()</Name>
      <Type>instm</Type>
      <Scope>AbstractTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
    <Anchor>springTestContextAfterTestClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>springTestContextAfterTestMethod(Method)</Name>
      <Type>instm</Type>
      <Scope>AbstractTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
    <Anchor>springTestContextAfterTestMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>springTestContextBeforeTestClass()</Name>
      <Type>instm</Type>
      <Scope>AbstractTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
    <Anchor>springTestContextBeforeTestClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>springTestContextBeforeTestMethod(Method)</Name>
      <Type>instm</Type>
      <Scope>AbstractTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
    <Anchor>springTestContextBeforeTestMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>springTestContextPrepareTestInstance()</Name>
      <Type>instm</Type>
      <Scope>AbstractTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
    <Anchor>springTestContextPrepareTestInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringTilesApplicationContextFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles2</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SpringTilesApplicationContextFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringTilesApplicationContextFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SpringTilesApplicationContextFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SpringTilesApplicationContextFactory.html</Path>
    <Anchor>SpringTilesApplicationContextFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringTransactionAnnotationParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringTransactionAnnotationParser()</Name>
      <Type>Constructor</Type>
      <Scope>SpringTransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.html</Path>
    <Anchor>SpringTransactionAnnotationParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringTransactionFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringTransactionFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringTransactionFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SpringTransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringTransactionFactory.html</Path>
    <Anchor>SpringTransactionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringValidatorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation.beanvalidation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/SpringValidatorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringValidatorAdapter(Validator)</Name>
      <Type>Constructor</Type>
      <Scope>SpringValidatorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/SpringValidatorAdapter.html</Path>
    <Anchor>SpringValidatorAdapter(javax.validation.Validator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringVersion</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SpringVersion.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringVersion()</Name>
      <Type>Constructor</Type>
      <Scope>SpringVersion</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SpringVersion.html</Path>
    <Anchor>SpringVersion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringWildcardServletTilesApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SpringWildcardServletTilesApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringWildcardServletTilesApplicationContext(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>SpringWildcardServletTilesApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/SpringWildcardServletTilesApplicationContext.html</Path>
    <Anchor>SpringWildcardServletTilesApplicationContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQL_ERROR_CODE_DEFAULT_PATH</Name>
      <Type>Field</Type>
      <Scope>SQLErrorCodesFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodesFactory.html</Path>
    <Anchor>SQL_ERROR_CODE_DEFAULT_PATH</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQL_ERROR_CODE_OVERRIDE_PATH</Name>
      <Type>Field</Type>
      <Scope>SQLErrorCodesFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodesFactory.html</Path>
    <Anchor>SQL_ERROR_CODE_OVERRIDE_PATH</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlCall</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlCall.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlCall()</Name>
      <Type>Constructor</Type>
      <Scope>SqlCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlCall.html</Path>
    <Anchor>SqlCall()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlCall(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlCall.html</Path>
    <Anchor>SqlCall(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLErrorCodes</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLErrorCodes()</Name>
      <Type>Constructor</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>SQLErrorCodes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLErrorCodesFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodesFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLErrorCodesFactory()</Name>
      <Type>Constructor</Type>
      <Scope>SQLErrorCodesFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodesFactory.html</Path>
    <Anchor>SQLErrorCodesFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLErrorCodeSQLExceptionTranslator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLErrorCodeSQLExceptionTranslator()</Name>
      <Type>Constructor</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>SQLErrorCodeSQLExceptionTranslator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLErrorCodeSQLExceptionTranslator(DataSource)</Name>
      <Type>Constructor</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>SQLErrorCodeSQLExceptionTranslator(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLErrorCodeSQLExceptionTranslator(String)</Name>
      <Type>Constructor</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>SQLErrorCodeSQLExceptionTranslator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLErrorCodeSQLExceptionTranslator(SQLErrorCodes)</Name>
      <Type>Constructor</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>SQLErrorCodeSQLExceptionTranslator(org.springframework.jdbc.support.SQLErrorCodes)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLExceptionSubclassTranslator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLExceptionSubclassTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLExceptionSubclassTranslator()</Name>
      <Type>Constructor</Type>
      <Scope>SQLExceptionSubclassTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLExceptionSubclassTranslator.html</Path>
    <Anchor>SQLExceptionSubclassTranslator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLExceptionTranslator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLExceptionTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlFunction</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlFunction()</Name>
      <Type>Constructor</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>SqlFunction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlFunction(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>SqlFunction(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlFunction(DataSource, String, int[])</Name>
      <Type>Constructor</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>SqlFunction(javax.sql.DataSource, java.lang.String, int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlFunction(DataSource, String, int[], Class&amp;lt;T&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>SqlFunction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlFunction.html</Path>
    <Anchor>SqlFunction(javax.sql.DataSource, java.lang.String, int[], java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlInOutParameter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlInOutParameter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlInOutParameter(String, int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlInOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlInOutParameter.html</Path>
    <Anchor>SqlInOutParameter(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlInOutParameter(String, int, int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlInOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlInOutParameter.html</Path>
    <Anchor>SqlInOutParameter(java.lang.String, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlInOutParameter(String, int, String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlInOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlInOutParameter.html</Path>
    <Anchor>SqlInOutParameter(java.lang.String, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlInOutParameter(String, int, String, SqlReturnType)</Name>
      <Type>Constructor</Type>
      <Scope>SqlInOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlInOutParameter.html</Path>
    <Anchor>SqlInOutParameter(java.lang.String, int, java.lang.String, org.springframework.jdbc.core.SqlReturnType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlInOutParameter(String, int, ResultSetExtractor)</Name>
      <Type>Constructor</Type>
      <Scope>SqlInOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlInOutParameter.html</Path>
    <Anchor>SqlInOutParameter(java.lang.String, int, org.springframework.jdbc.core.ResultSetExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlInOutParameter(String, int, RowCallbackHandler)</Name>
      <Type>Constructor</Type>
      <Scope>SqlInOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlInOutParameter.html</Path>
    <Anchor>SqlInOutParameter(java.lang.String, int, org.springframework.jdbc.core.RowCallbackHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlInOutParameter(String, int, RowMapper)</Name>
      <Type>Constructor</Type>
      <Scope>SqlInOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlInOutParameter.html</Path>
    <Anchor>SqlInOutParameter(java.lang.String, int, org.springframework.jdbc.core.RowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlLobValue</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlLobValue(byte[])</Name>
      <Type>Constructor</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>SqlLobValue(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlLobValue(byte[], LobHandler)</Name>
      <Type>Constructor</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>SqlLobValue(byte[], org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlLobValue(String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>SqlLobValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlLobValue(String, LobHandler)</Name>
      <Type>Constructor</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>SqlLobValue(java.lang.String, org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlLobValue(InputStream, int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>SqlLobValue(java.io.InputStream, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlLobValue(InputStream, int, LobHandler)</Name>
      <Type>Constructor</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>SqlLobValue(java.io.InputStream, int, org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlLobValue(Reader, int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>SqlLobValue(java.io.Reader, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlLobValue(Reader, int, LobHandler)</Name>
      <Type>Constructor</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>SqlLobValue(java.io.Reader, int, org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.ibatis</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientDaoSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.ibatis.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/SqlMapClientDaoSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientDaoSupport()</Name>
      <Type>Constructor</Type>
      <Scope>SqlMapClientDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/SqlMapClientDaoSupport.html</Path>
    <Anchor>SqlMapClientDaoSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.ibatis</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>SqlMapClientFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientOperations</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.ibatis</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientOperations.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientTemplate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.ibatis</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientTemplate()</Name>
      <Type>Constructor</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>SqlMapClientTemplate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientTemplate(SqlMapClient)</Name>
      <Type>Constructor</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>SqlMapClientTemplate(com.ibatis.sqlmap.client.SqlMapClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlMapClientTemplate(DataSource, SqlMapClient)</Name>
      <Type>Constructor</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>SqlMapClientTemplate(javax.sql.DataSource, com.ibatis.sqlmap.client.SqlMapClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOperation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlOperation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOperation()</Name>
      <Type>Constructor</Type>
      <Scope>SqlOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlOperation.html</Path>
    <Anchor>SqlOperation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOutParameter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlOutParameter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOutParameter(String, int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlOutParameter.html</Path>
    <Anchor>SqlOutParameter(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOutParameter(String, int, int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlOutParameter.html</Path>
    <Anchor>SqlOutParameter(java.lang.String, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOutParameter(String, int, String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlOutParameter.html</Path>
    <Anchor>SqlOutParameter(java.lang.String, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOutParameter(String, int, String, SqlReturnType)</Name>
      <Type>Constructor</Type>
      <Scope>SqlOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlOutParameter.html</Path>
    <Anchor>SqlOutParameter(java.lang.String, int, java.lang.String, org.springframework.jdbc.core.SqlReturnType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOutParameter(String, int, ResultSetExtractor)</Name>
      <Type>Constructor</Type>
      <Scope>SqlOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlOutParameter.html</Path>
    <Anchor>SqlOutParameter(java.lang.String, int, org.springframework.jdbc.core.ResultSetExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOutParameter(String, int, RowCallbackHandler)</Name>
      <Type>Constructor</Type>
      <Scope>SqlOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlOutParameter.html</Path>
    <Anchor>SqlOutParameter(java.lang.String, int, org.springframework.jdbc.core.RowCallbackHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlOutParameter(String, int, RowMapper)</Name>
      <Type>Constructor</Type>
      <Scope>SqlOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlOutParameter.html</Path>
    <Anchor>SqlOutParameter(java.lang.String, int, org.springframework.jdbc.core.RowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameter(int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>SqlParameter(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameter(int, String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>SqlParameter(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameter(int, int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>SqlParameter(int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameter(String, int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>SqlParameter(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameter(String, int, String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>SqlParameter(java.lang.String, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameter(String, int, int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>SqlParameter(java.lang.String, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameter(SqlParameter)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>SqlParameter(org.springframework.jdbc.core.SqlParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameterSource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core.namedparam</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/SqlParameterSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameterSourceUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.namedparam</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameterSourceUtils()</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameterSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.html</Path>
    <Anchor>SqlParameterSourceUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameterValue</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameterValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameterValue(int, Object)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameterValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameterValue.html</Path>
    <Anchor>SqlParameterValue(int, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameterValue(int, String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameterValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameterValue.html</Path>
    <Anchor>SqlParameterValue(int, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameterValue(int, int, Object)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameterValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameterValue.html</Path>
    <Anchor>SqlParameterValue(int, int, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlParameterValue(SqlParameter, Object)</Name>
      <Type>Constructor</Type>
      <Scope>SqlParameterValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameterValue.html</Path>
    <Anchor>SqlParameterValue(org.springframework.jdbc.core.SqlParameter, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlProvider</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlQuery</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlQuery()</Name>
      <Type>Constructor</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>SqlQuery()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlQuery(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>SqlQuery(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlReturnResultSet</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnResultSet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlReturnResultSet(String, ResultSetExtractor)</Name>
      <Type>Constructor</Type>
      <Scope>SqlReturnResultSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnResultSet.html</Path>
    <Anchor>SqlReturnResultSet(java.lang.String, org.springframework.jdbc.core.ResultSetExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlReturnResultSet(String, RowCallbackHandler)</Name>
      <Type>Constructor</Type>
      <Scope>SqlReturnResultSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnResultSet.html</Path>
    <Anchor>SqlReturnResultSet(java.lang.String, org.springframework.jdbc.core.RowCallbackHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlReturnResultSet(String, RowMapper)</Name>
      <Type>Constructor</Type>
      <Scope>SqlReturnResultSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnResultSet.html</Path>
    <Anchor>SqlReturnResultSet(java.lang.String, org.springframework.jdbc.core.RowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlReturnType</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlReturnUpdateCount</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnUpdateCount.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlReturnUpdateCount(String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlReturnUpdateCount</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnUpdateCount.html</Path>
    <Anchor>SqlReturnUpdateCount(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlRowSet</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.support.rowset</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlRowSetMetaData</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.support.rowset</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlRowSetResultSetExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlRowSetResultSetExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlRowSetResultSetExtractor()</Name>
      <Type>Constructor</Type>
      <Scope>SqlRowSetResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlRowSetResultSetExtractor.html</Path>
    <Anchor>SqlRowSetResultSetExtractor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlServerCallMetaDataProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/SqlServerCallMetaDataProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlServerCallMetaDataProvider(DatabaseMetaData)</Name>
      <Type>Constructor</Type>
      <Scope>SqlServerCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/SqlServerCallMetaDataProvider.html</Path>
    <Anchor>SqlServerCallMetaDataProvider(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlServerMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/SqlServerMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlServerMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>SqlServerMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/SqlServerMaxValueIncrementer.html</Path>
    <Anchor>SqlServerMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlServerMaxValueIncrementer(DataSource, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlServerMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/SqlServerMaxValueIncrementer.html</Path>
    <Anchor>SqlServerMaxValueIncrementer(javax.sql.DataSource, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLStateSQLExceptionTranslator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLStateSQLExceptionTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLStateSQLExceptionTranslator()</Name>
      <Type>Constructor</Type>
      <Scope>SQLStateSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLStateSQLExceptionTranslator.html</Path>
    <Anchor>SQLStateSQLExceptionTranslator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sqlTypes()</Name>
      <Type>instm</Type>
      <Scope>BlobByteArrayType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobByteArrayType.html</Path>
    <Anchor>sqlTypes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sqlTypes()</Name>
      <Type>instm</Type>
      <Scope>BlobSerializableType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobSerializableType.html</Path>
    <Anchor>sqlTypes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sqlTypes()</Name>
      <Type>instm</Type>
      <Scope>BlobStringType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobStringType.html</Path>
    <Anchor>sqlTypes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sqlTypes()</Name>
      <Type>instm</Type>
      <Scope>ClobStringType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/ClobStringType.html</Path>
    <Anchor>sqlTypes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sqlTypesToAnonymousParameterList(int[])</Name>
      <Type>clm</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>sqlTypesToAnonymousParameterList(int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlTypeValue</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlTypeValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlUpdate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlUpdate()</Name>
      <Type>Constructor</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>SqlUpdate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlUpdate(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>SqlUpdate(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlUpdate(DataSource, String, int[])</Name>
      <Type>Constructor</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>SqlUpdate(javax.sql.DataSource, java.lang.String, int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlUpdate(DataSource, String, int[], int)</Name>
      <Type>Constructor</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>SqlUpdate(javax.sql.DataSource, java.lang.String, int[], int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlValue</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SqlValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLWarning()</Name>
      <Type>clm</Type>
      <Scope>SQLWarningException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/SQLWarningException.html</Path>
    <Anchor>SQLWarning()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLWarningException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/SQLWarningException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SQLWarningException(String, SQLWarning)</Name>
      <Type>Constructor</Type>
      <Scope>SQLWarningException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/SQLWarningException.html</Path>
    <Anchor>SQLWarningException(java.lang.String, java.sql.SQLWarning)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlXmlFeatureNotImplementedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc.support.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/xml/SqlXmlFeatureNotImplementedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlXmlFeatureNotImplementedException(String)</Name>
      <Type>Constructor</Type>
      <Scope>SqlXmlFeatureNotImplementedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/xml/SqlXmlFeatureNotImplementedException.html</Path>
    <Anchor>SqlXmlFeatureNotImplementedException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlXmlFeatureNotImplementedException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>SqlXmlFeatureNotImplementedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/xml/SqlXmlFeatureNotImplementedException.html</Path>
    <Anchor>SqlXmlFeatureNotImplementedException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlXmlHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.support.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/xml/SqlXmlHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlXmlObjectMappingHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.support.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/xml/SqlXmlObjectMappingHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SqlXmlValue</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.support.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/xml/SqlXmlValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandaloneMockMvcBuilder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.setup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandaloneMockMvcBuilder(Object...)</Name>
      <Type>Constructor</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>StandaloneMockMvcBuilder(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standaloneSetup(Object...)</Name>
      <Type>clm</Type>
      <Scope>MockMvcBuilders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/MockMvcBuilders.html</Path>
    <Anchor>standaloneSetup(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardAnnotationMetadata</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardAnnotationMetadata.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardAnnotationMetadata(Class&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>StandardAnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardAnnotationMetadata.html</Path>
    <Anchor>StandardAnnotationMetadata(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardAnnotationMetadata(Class&amp;lt;?&amp;gt;, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>StandardAnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardAnnotationMetadata.html</Path>
    <Anchor>StandardAnnotationMetadata(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardBeanExpressionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/StandardBeanExpressionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardBeanExpressionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>StandardBeanExpressionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/StandardBeanExpressionResolver.html</Path>
    <Anchor>StandardBeanExpressionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardClassMetadata</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardClassMetadata.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardClassMetadata(Class)</Name>
      <Type>Constructor</Type>
      <Scope>StandardClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardClassMetadata.html</Path>
    <Anchor>StandardClassMetadata(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardEnvironment</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/StandardEnvironment.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardEnvironment()</Name>
      <Type>Constructor</Type>
      <Scope>StandardEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/StandardEnvironment.html</Path>
    <Anchor>StandardEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardEvaluationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardEvaluationContext()</Name>
      <Type>Constructor</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>StandardEvaluationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardEvaluationContext(Object)</Name>
      <Type>Constructor</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>StandardEvaluationContext(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardJmsActivationSpecFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.listener.endpoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardJmsActivationSpecFactory()</Name>
      <Type>Constructor</Type>
      <Scope>StandardJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html</Path>
    <Anchor>StandardJmsActivationSpecFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardMethodMetadata</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardMethodMetadata.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardMethodMetadata(Method)</Name>
      <Type>Constructor</Type>
      <Scope>StandardMethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardMethodMetadata.html</Path>
    <Anchor>StandardMethodMetadata(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardMethodMetadata(Method, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>StandardMethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardMethodMetadata.html</Path>
    <Anchor>StandardMethodMetadata(java.lang.reflect.Method, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardMultipartHttpServletRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardMultipartHttpServletRequest(HttpServletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>StandardMultipartHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.html</Path>
    <Anchor>StandardMultipartHttpServletRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardOperatorOverloader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardOperatorOverloader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardOperatorOverloader()</Name>
      <Type>Constructor</Type>
      <Scope>StandardOperatorOverloader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardOperatorOverloader.html</Path>
    <Anchor>StandardOperatorOverloader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardPersistenceManagerProxyBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jdo.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/StandardPersistenceManagerProxyBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardPersistenceManagerProxyBean()</Name>
      <Type>Constructor</Type>
      <Scope>StandardPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/StandardPersistenceManagerProxyBean.html</Path>
    <Anchor>StandardPersistenceManagerProxyBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardPortletEnvironment</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StandardPortletEnvironment.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardPortletEnvironment()</Name>
      <Type>Constructor</Type>
      <Scope>StandardPortletEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StandardPortletEnvironment.html</Path>
    <Anchor>StandardPortletEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardServletAsyncWebRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardServletAsyncWebRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>Constructor</Type>
      <Scope>StandardServletAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.html</Path>
    <Anchor>StandardServletAsyncWebRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardServletEnvironment</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StandardServletEnvironment.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardServletEnvironment()</Name>
      <Type>Constructor</Type>
      <Scope>StandardServletEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StandardServletEnvironment.html</Path>
    <Anchor>StandardServletEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardServletMultipartResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StandardServletMultipartResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardServletMultipartResolver()</Name>
      <Type>Constructor</Type>
      <Scope>StandardServletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StandardServletMultipartResolver.html</Path>
    <Anchor>StandardServletMultipartResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardTypeComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardTypeComparator()</Name>
      <Type>Constructor</Type>
      <Scope>StandardTypeComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeComparator.html</Path>
    <Anchor>StandardTypeComparator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardTypeConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardTypeConverter()</Name>
      <Type>Constructor</Type>
      <Scope>StandardTypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeConverter.html</Path>
    <Anchor>StandardTypeConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardTypeConverter(ConversionService)</Name>
      <Type>Constructor</Type>
      <Scope>StandardTypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeConverter.html</Path>
    <Anchor>StandardTypeConverter(org.springframework.core.convert.ConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardTypeLocator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeLocator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardTypeLocator()</Name>
      <Type>Constructor</Type>
      <Scope>StandardTypeLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeLocator.html</Path>
    <Anchor>StandardTypeLocator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardTypeLocator(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>StandardTypeLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeLocator.html</Path>
    <Anchor>StandardTypeLocator(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start()</Name>
      <Type>intfm</Type>
      <Scope>Lifecycle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/Lifecycle.html</Path>
    <Anchor>start()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>start()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start()</Name>
      <Type>instm</Type>
      <Scope>DefaultLifecycleProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultLifecycleProcessor.html</Path>
    <Anchor>start()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start(BootstrapContext)</Name>
      <Type>instm</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>start(javax.resource.spi.BootstrapContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start()</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>start()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>start()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>start()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start(Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalCacheProviderProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalCacheProviderProxy.html</Path>
    <Anchor>start(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start(Settings, Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalRegionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html</Path>
    <Anchor>start(org.hibernate.cfg.Settings, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start()</Name>
      <Type>instm</Type>
      <Scope>TimerManagerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerAccessor.html</Path>
    <Anchor>start()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start()</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>start()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start()</Name>
      <Type>instm</Type>
      <Scope>StopWatch</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
    <Anchor>start()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start(String)</Name>
      <Type>instm</Type>
      <Scope>StopWatch</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
    <Anchor>start(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startAsync()</Name>
      <Type>intfm</Type>
      <Scope>AsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/AsyncWebRequest.html</Path>
    <Anchor>startAsync()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startAsync()</Name>
      <Type>instm</Type>
      <Scope>NoSupportAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/NoSupportAsyncWebRequest.html</Path>
    <Anchor>startAsync()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startAsync()</Name>
      <Type>instm</Type>
      <Scope>StandardServletAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.html</Path>
    <Anchor>startAsync()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startCallableProcessing(Callable&amp;lt;?&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>startCallableProcessing(java.util.concurrent.Callable, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startCallableProcessing(WebAsyncTask&amp;lt;?&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>startCallableProcessing(org.springframework.web.context.request.async.WebAsyncTask, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDeferredResultProcessing(DeferredResult&amp;lt;?&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>startDeferredResultProcessing(org.springframework.web.context.request.async.DeferredResult, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startExpirationPeriod(int)</Name>
      <Type>instm</Type>
      <Scope>FlashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMap.html</Path>
    <Anchor>startExpirationPeriod(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startNewTransaction()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>startNewTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startScheduler(Scheduler, int)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>startScheduler(org.quartz.Scheduler, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startSharedConnection()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>startSharedConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startSharedConnection()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>startSharedConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startsWithIgnoreCase(String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>startsWithIgnoreCase(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startTag(String)</Name>
      <Type>instm</Type>
      <Scope>TagWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TagWriter.html</Path>
    <Anchor>startTag(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startWork(Work)</Name>
      <Type>instm</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>startWork(javax.resource.spi.work.Work)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startWork(Work, long, ExecutionContext, WorkListener)</Name>
      <Type>instm</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>startWork(javax.resource.spi.work.Work, long, javax.resource.spi.work.ExecutionContext, javax.resource.spi.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startWork(Work)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>startWork(javax.resource.spi.work.Work)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startWork(Work, long, ExecutionContext, WorkListener)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>startWork(javax.resource.spi.work.Work, long, javax.resource.spi.work.ExecutionContext, javax.resource.spi.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>state(boolean, String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>state(boolean, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>state(boolean)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>state(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_COMMITTED</Name>
      <Type>Field</Type>
      <Scope>HeuristicCompletionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/HeuristicCompletionException.html</Path>
    <Anchor>STATE_COMMITTED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_MIXED</Name>
      <Type>Field</Type>
      <Scope>HeuristicCompletionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/HeuristicCompletionException.html</Path>
    <Anchor>STATE_MIXED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_ROLLED_BACK</Name>
      <Type>Field</Type>
      <Scope>HeuristicCompletionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/HeuristicCompletionException.html</Path>
    <Anchor>STATE_ROLLED_BACK</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_UNKNOWN</Name>
      <Type>Field</Type>
      <Scope>HeuristicCompletionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/HeuristicCompletionException.html</Path>
    <Anchor>STATE_UNKNOWN</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatementCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/StatementCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatementCreatorUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/StatementCreatorUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatementCreatorUtils()</Name>
      <Type>Constructor</Type>
      <Scope>StatementCreatorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/StatementCreatorUtils.html</Path>
    <Anchor>StatementCreatorUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>StaticApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticApplicationContext.html</Path>
    <Anchor>StaticApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticApplicationContext(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>StaticApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticApplicationContext.html</Path>
    <Anchor>StaticApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticLabeledEnum</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.enums</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StaticLabeledEnum.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticLabeledEnum(int, String)</Name>
      <Type>Constructor</Type>
      <Scope>StaticLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StaticLabeledEnum.html</Path>
    <Anchor>StaticLabeledEnum(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticLabeledEnumResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.enums</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StaticLabeledEnumResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticLabeledEnumResolver()</Name>
      <Type>Constructor</Type>
      <Scope>StaticLabeledEnumResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StaticLabeledEnumResolver.html</Path>
    <Anchor>StaticLabeledEnumResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticListableBeanFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/StaticListableBeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticListableBeanFactory()</Name>
      <Type>Constructor</Type>
      <Scope>StaticListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/StaticListableBeanFactory.html</Path>
    <Anchor>StaticListableBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticMessageSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticMessageSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticMessageSource()</Name>
      <Type>Constructor</Type>
      <Scope>StaticMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticMessageSource.html</Path>
    <Anchor>StaticMessageSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticMethodMatcher</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticMethodMatcher()</Name>
      <Type>Constructor</Type>
      <Scope>StaticMethodMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcher.html</Path>
    <Anchor>StaticMethodMatcher()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticMethodMatcherPointcut</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcherPointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticMethodMatcherPointcut()</Name>
      <Type>Constructor</Type>
      <Scope>StaticMethodMatcherPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcherPointcut.html</Path>
    <Anchor>StaticMethodMatcherPointcut()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticMethodMatcherPointcutAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticMethodMatcherPointcutAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>StaticMethodMatcherPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.html</Path>
    <Anchor>StaticMethodMatcherPointcutAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticMethodMatcherPointcutAdvisor(Advice)</Name>
      <Type>Constructor</Type>
      <Scope>StaticMethodMatcherPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.html</Path>
    <Anchor>StaticMethodMatcherPointcutAdvisor(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticPortletApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticPortletApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>StaticPortletApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticScriptSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scripting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/StaticScriptSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticScriptSource(String)</Name>
      <Type>Constructor</Type>
      <Scope>StaticScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/StaticScriptSource.html</Path>
    <Anchor>StaticScriptSource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticScriptSource(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>StaticScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/StaticScriptSource.html</Path>
    <Anchor>StaticScriptSource(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticWebApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticWebApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>StaticWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
    <Anchor>StaticWebApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>status()</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html</Path>
    <Anchor>status()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATUS_COMMITTED</Name>
      <Type>Field</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>STATUS_COMMITTED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATUS_ROLLED_BACK</Name>
      <Type>Field</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>STATUS_ROLLED_BACK</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATUS_UNKNOWN</Name>
      <Type>Field</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>STATUS_UNKNOWN</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATUS_VARIABLE_NAME</Name>
      <Type>Field</Type>
      <Scope>BindTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindTag.html</Path>
    <Anchor>STATUS_VARIABLE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatusResultMatchers</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.result</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatusResultMatchers()</Name>
      <Type>Constructor</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>StatusResultMatchers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaxUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaxUtils()</Name>
      <Type>Constructor</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>StaxUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>intfm</Type>
      <Scope>Lifecycle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/Lifecycle.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop(Runnable)</Name>
      <Type>intfm</Type>
      <Scope>SmartLifecycle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/SmartLifecycle.html</Path>
    <Anchor>stop(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>DefaultLifecycleProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultLifecycleProcessor.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop(Runnable)</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>stop(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop(Runnable)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>stop(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop(Runnable)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>stop(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>LocalCacheProviderProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalCacheProviderProxy.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>LocalRegionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>TimerManagerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerAccessor.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop(Runnable)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>stop(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop()</Name>
      <Type>instm</Type>
      <Scope>StopWatch</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
    <Anchor>stop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopSharedConnection()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>stopSharedConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopSharedConnection()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>stopSharedConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StopWatch</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StopWatch()</Name>
      <Type>Constructor</Type>
      <Scope>StopWatch</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
    <Anchor>StopWatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StopWatch(String)</Name>
      <Type>Constructor</Type>
      <Scope>StopWatch</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
    <Anchor>StopWatch(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StopWatch.TaskInfo</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.TaskInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store()</Name>
      <Type>instm</Type>
      <Scope>MockPortletPreferences</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletPreferences.html</Path>
    <Anchor>store()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store(Properties, OutputStream, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>store(java.util.Properties, java.io.OutputStream, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store(Properties, Writer, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>store(java.util.Properties, java.io.Writer, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store(Properties, OutputStream, String)</Name>
      <Type>intfm</Type>
      <Scope>PropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertiesPersister.html</Path>
    <Anchor>store(java.util.Properties, java.io.OutputStream, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store(Properties, Writer, String)</Name>
      <Type>intfm</Type>
      <Scope>PropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertiesPersister.html</Path>
    <Anchor>store(java.util.Properties, java.io.Writer, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeAttribute(WebRequest, String, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultSessionAttributeStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultSessionAttributeStore.html</Path>
    <Anchor>storeAttribute(org.springframework.web.context.request.WebRequest, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeAttribute(WebRequest, String, Object)</Name>
      <Type>intfm</Type>
      <Scope>SessionAttributeStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SessionAttributeStore.html</Path>
    <Anchor>storeAttribute(org.springframework.web.context.request.WebRequest, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeAttributes(WebRequest, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SessionAttributesHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionAttributesHandler.html</Path>
    <Anchor>storeAttributes(org.springframework.web.context.request.WebRequest, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StoredProcedure</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/StoredProcedure.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StoredProcedure()</Name>
      <Type>Constructor</Type>
      <Scope>StoredProcedure</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/StoredProcedure.html</Path>
    <Anchor>StoredProcedure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StoredProcedure(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>StoredProcedure</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/StoredProcedure.html</Path>
    <Anchor>StoredProcedure(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StoredProcedure(JdbcTemplate, String)</Name>
      <Type>Constructor</Type>
      <Scope>StoredProcedure</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/StoredProcedure.html</Path>
    <Anchor>StoredProcedure(org.springframework.jdbc.core.JdbcTemplate, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeToXml(Properties, OutputStream, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>storeToXml(java.util.Properties, java.io.OutputStream, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeToXml(Properties, OutputStream, String, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>storeToXml(java.util.Properties, java.io.OutputStream, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeToXml(Properties, OutputStream, String)</Name>
      <Type>intfm</Type>
      <Scope>PropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertiesPersister.html</Path>
    <Anchor>storeToXml(java.util.Properties, java.io.OutputStream, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeToXml(Properties, OutputStream, String, String)</Name>
      <Type>intfm</Type>
      <Scope>PropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertiesPersister.html</Path>
    <Anchor>storeToXml(java.util.Properties, java.io.OutputStream, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>streamData(ResultSet)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobStreamingResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobStreamingResultSetExtractor.html</Path>
    <Anchor>streamData(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ContentRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
    <Anchor>string(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(String)</Name>
      <Type>instm</Type>
      <Scope>ContentRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
    <Anchor>string(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XpathRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/XpathRequestMatchers.html</Path>
    <Anchor>string(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(String)</Name>
      <Type>instm</Type>
      <Scope>XpathRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/XpathRequestMatchers.html</Path>
    <Anchor>string(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>string(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(String)</Name>
      <Type>instm</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>string(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(String, Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HeaderResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/HeaderResultMatchers.html</Path>
    <Anchor>string(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(String, String)</Name>
      <Type>instm</Type>
      <Scope>HeaderResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/HeaderResultMatchers.html</Path>
    <Anchor>string(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XpathResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/XpathResultMatchers.html</Path>
    <Anchor>string(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string(String)</Name>
      <Type>instm</Type>
      <Scope>XpathResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/XpathResultMatchers.html</Path>
    <Anchor>string(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringArrayPropertyEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringArrayPropertyEditor()</Name>
      <Type>Constructor</Type>
      <Scope>StringArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html</Path>
    <Anchor>StringArrayPropertyEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringArrayPropertyEditor(String)</Name>
      <Type>Constructor</Type>
      <Scope>StringArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html</Path>
    <Anchor>StringArrayPropertyEditor(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringArrayPropertyEditor(String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>StringArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html</Path>
    <Anchor>StringArrayPropertyEditor(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringArrayPropertyEditor(String, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>StringArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html</Path>
    <Anchor>StringArrayPropertyEditor(java.lang.String, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringArrayPropertyEditor(String, String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>StringArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html</Path>
    <Anchor>StringArrayPropertyEditor(java.lang.String, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringArrayPropertyEditor(String, String, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>StringArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html</Path>
    <Anchor>StringArrayPropertyEditor(java.lang.String, java.lang.String, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringCodedLabeledEnum</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.enums</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StringCodedLabeledEnum.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringCodedLabeledEnum(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>StringCodedLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StringCodedLabeledEnum.html</Path>
    <Anchor>StringCodedLabeledEnum(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/StringHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>StringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/StringHttpMessageConverter.html</Path>
    <Anchor>StringHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringHttpMessageConverter(Charset)</Name>
      <Type>Constructor</Type>
      <Scope>StringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/StringHttpMessageConverter.html</Path>
    <Anchor>StringHttpMessageConverter(java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringLiteral</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/StringLiteral.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringLiteral(String, int, String)</Name>
      <Type>Constructor</Type>
      <Scope>StringLiteral</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/StringLiteral.html</Path>
    <Anchor>StringLiteral(java.lang.String, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringMultipartFileEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StringMultipartFileEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringMultipartFileEditor()</Name>
      <Type>Constructor</Type>
      <Scope>StringMultipartFileEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StringMultipartFileEditor.html</Path>
    <Anchor>StringMultipartFileEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringMultipartFileEditor(String)</Name>
      <Type>Constructor</Type>
      <Scope>StringMultipartFileEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StringMultipartFileEditor.html</Path>
    <Anchor>StringMultipartFileEditor(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringTrimmerEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringTrimmerEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringTrimmerEditor(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>StringTrimmerEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringTrimmerEditor.html</Path>
    <Anchor>StringTrimmerEditor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringTrimmerEditor(String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>StringTrimmerEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/StringTrimmerEditor.html</Path>
    <Anchor>StringTrimmerEditor(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringUtils()</Name>
      <Type>Constructor</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>StringUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringValueResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringValueResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stripFilenameExtension(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>stripFilenameExtension(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>style(Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultValueStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultValueStyler.html</Path>
    <Anchor>style(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>style(Object)</Name>
      <Type>clm</Type>
      <Scope>StylerUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/StylerUtils.html</Path>
    <Anchor>style(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>style(Object)</Name>
      <Type>intfm</Type>
      <Scope>ValueStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ValueStyler.html</Path>
    <Anchor>style(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STYLE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>STYLE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleEnd(StringBuilder, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultToStringStyler.html</Path>
    <Anchor>styleEnd(java.lang.StringBuilder, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleEnd(StringBuilder, Object)</Name>
      <Type>intfm</Type>
      <Scope>ToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringStyler.html</Path>
    <Anchor>styleEnd(java.lang.StringBuilder, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleField(StringBuilder, String, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultToStringStyler.html</Path>
    <Anchor>styleField(java.lang.StringBuilder, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleField(StringBuilder, String, Object)</Name>
      <Type>intfm</Type>
      <Scope>ToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringStyler.html</Path>
    <Anchor>styleField(java.lang.StringBuilder, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleFieldEnd(StringBuilder, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultToStringStyler.html</Path>
    <Anchor>styleFieldEnd(java.lang.StringBuilder, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleFieldSeparator(StringBuilder)</Name>
      <Type>instm</Type>
      <Scope>DefaultToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultToStringStyler.html</Path>
    <Anchor>styleFieldSeparator(java.lang.StringBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleFieldSeparator(StringBuilder)</Name>
      <Type>intfm</Type>
      <Scope>ToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringStyler.html</Path>
    <Anchor>styleFieldSeparator(java.lang.StringBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleFieldStart(StringBuilder, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultToStringStyler.html</Path>
    <Anchor>styleFieldStart(java.lang.StringBuilder, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StylerUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.style</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/StylerUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StylerUtils()</Name>
      <Type>Constructor</Type>
      <Scope>StylerUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/StylerUtils.html</Path>
    <Anchor>StylerUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleStart(StringBuilder, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultToStringStyler.html</Path>
    <Anchor>styleStart(java.lang.StringBuilder, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleStart(StringBuilder, Object)</Name>
      <Type>intfm</Type>
      <Scope>ToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringStyler.html</Path>
    <Anchor>styleStart(java.lang.StringBuilder, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleValue(StringBuilder, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/DefaultToStringStyler.html</Path>
    <Anchor>styleValue(java.lang.StringBuilder, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>styleValue(StringBuilder, Object)</Name>
      <Type>intfm</Type>
      <Scope>ToStringStyler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringStyler.html</Path>
    <Anchor>styleValue(java.lang.StringBuilder, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subList(int, int)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>subList(int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>intfm</Type>
      <Scope>AsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/AsyncTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>AsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/AsyncTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/TaskExecutorAdapter.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/TaskExecutorAdapter.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Runnable)</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>submit(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submit(Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>submit(java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SUBMIT_IMAGE_SUFFIXES</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>SUBMIT_IMAGE_SUFFIXES</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SubscriptionNameProvider</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SubscriptionNameProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>substituteNamedParameters(ParsedSql, SqlParameterSource)</Name>
      <Type>clm</Type>
      <Scope>NamedParameterUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterUtils.html</Path>
    <Anchor>substituteNamedParameters(org.springframework.jdbc.core.namedparam.ParsedSql, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>substituteNamedParameters(String, SqlParameterSource)</Name>
      <Type>clm</Type>
      <Scope>NamedParameterUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterUtils.html</Path>
    <Anchor>substituteNamedParameters(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>substringMatch(CharSequence, int, CharSequence)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>substringMatch(java.lang.CharSequence, int, java.lang.CharSequence)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suggestedClassName()</Name>
      <Type>intfm</Type>
      <Scope>ScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptSource.html</Path>
    <Anchor>suggestedClassName()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suggestedClassName()</Name>
      <Type>instm</Type>
      <Scope>ResourceScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ResourceScriptSource.html</Path>
    <Anchor>suggestedClassName()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suggestedClassName()</Name>
      <Type>instm</Type>
      <Scope>StaticScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/StaticScriptSource.html</Path>
    <Anchor>suggestedClassName()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportedDatabaseProductsForFunctions</Name>
      <Type>Field</Type>
      <Scope>CallMetaDataProviderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html</Path>
    <Anchor>supportedDatabaseProductsForFunctions</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportedDatabaseProductsForProcedures</Name>
      <Type>Field</Type>
      <Scope>CallMetaDataProviderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html</Path>
    <Anchor>supportedDatabaseProductsForProcedures</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ByteArrayHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ByteArrayHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AtomFeedHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/AtomFeedHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RssChannelHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/RssChannelHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ObjectToStringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ObjectToStringHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ResourceHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ResourceHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/StringHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2CollectionHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2RootElementHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MarshallingHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/MarshallingHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SourceHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/SourceHttpMessageConverter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Type)</Name>
      <Type>intfm</Type>
      <Scope>GenericMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/GenericMarshaller.html</Path>
    <Anchor>supports(java.lang.reflect.Type)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Type)</Name>
      <Type>intfm</Type>
      <Scope>GenericUnmarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/GenericUnmarshaller.html</Path>
    <Anchor>supports(java.lang.reflect.Type)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Type)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>supports(java.lang.reflect.Type)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/Marshaller.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>Unmarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/Unmarshaller.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SpringValidatorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/SpringValidatorAdapter.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>Validator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Validator.html</Path>
    <Anchor>supports(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletHandlerAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleServletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletHandlerAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>instm</Type>
      <Scope>HttpRequestHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/HttpRequestHandlerAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports(Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>supports(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsAdvice(Advice)</Name>
      <Type>intfm</Type>
      <Scope>AdvisorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapter.html</Path>
    <Anchor>supportsAdvice(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsAggressiveRelease()</Name>
      <Type>instm</Type>
      <Scope>LocalDataSourceConnectionProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html</Path>
    <Anchor>supportsAggressiveRelease()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsAggressiveRelease()</Name>
      <Type>instm</Type>
      <Scope>LocalJtaDataSourceConnectionProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalJtaDataSourceConnectionProvider.html</Path>
    <Anchor>supportsAggressiveRelease()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsAggressiveRelease()</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareDataSourceConnectionProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/TransactionAwareDataSourceConnectionProvider.html</Path>
    <Anchor>supportsAggressiveRelease()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsBatchUpdates(Connection)</Name>
      <Type>clm</Type>
      <Scope>JdbcUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcUtils.html</Path>
    <Anchor>supportsBatchUpdates(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsEntityManagerFactoryPlusOperations()</Name>
      <Type>instm</Type>
      <Scope>DefaultJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/DefaultJpaDialect.html</Path>
    <Anchor>supportsEntityManagerFactoryPlusOperations()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsEntityManagerFactoryPlusOperations()</Name>
      <Type>intfm</Type>
      <Scope>JpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaDialect.html</Path>
    <Anchor>supportsEntityManagerFactoryPlusOperations()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsEntityManagerPlusOperations()</Name>
      <Type>instm</Type>
      <Scope>DefaultJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/DefaultJpaDialect.html</Path>
    <Anchor>supportsEntityManagerPlusOperations()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsEntityManagerPlusOperations()</Name>
      <Type>intfm</Type>
      <Scope>JpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaDialect.html</Path>
    <Anchor>supportsEntityManagerPlusOperations()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsEvent(ApplicationListener, Class&amp;lt;? extends ApplicationEvent&amp;gt;, Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/AbstractApplicationEventMulticaster.html</Path>
    <Anchor>supportsEvent(org.springframework.context.ApplicationListener, java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsEventType(Class&amp;lt;? extends ApplicationEvent&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/GenericApplicationListenerAdapter.html</Path>
    <Anchor>supportsEventType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsEventType(Class&amp;lt;? extends ApplicationEvent&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SmartApplicationListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SmartApplicationListener.html</Path>
    <Anchor>supportsEventType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsEventType(Class&amp;lt;? extends ApplicationEvent&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SourceFilteringListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SourceFilteringListener.html</Path>
    <Anchor>supportsEventType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsInternal(HandlerMethod)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.html</Path>
    <Anchor>supportsInternal(org.springframework.web.method.HandlerMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsInternal(HandlerMethod)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>supportsInternal(org.springframework.web.method.HandlerMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsLobParameters()</Name>
      <Type>instm</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>supportsLobParameters()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsLobParameters()</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>supportsLobParameters()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>AbstractCookieValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractCookieValueMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>AbstractWebArgumentResolverAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractWebArgumentResolverAdapter.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ErrorsMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ErrorsMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ExpressionValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExpressionValueMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>MapMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/MapMethodProcessor.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ModelMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelMethodProcessor.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestHeaderMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMapMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestHeaderMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestParamMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestParamMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>SessionStatusMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionStatusMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>intfm</Type>
      <Scope>HandlerMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodArgumentResolverComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>HttpEntityMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>MatrixVariableMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMapMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>MatrixVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>PathVariableMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMapMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>PathVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RedirectAttributesMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestPartMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestPartMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestResponseBodyMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletRequestMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ServletResponseMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletResponseMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsParameter(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilderMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.html</Path>
    <Anchor>supportsParameter(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsProceedingJoinPoint()</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>supportsProceedingJoinPoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsProceedingJoinPoint()</Name>
      <Type>instm</Type>
      <Scope>AspectJAroundAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAroundAdvice.html</Path>
    <Anchor>supportsProceedingJoinPoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsResourceAdapterManagedTransactions()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>supportsResourceAdapterManagedTransactions()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsResourceAdapterManagedTransactions()</Name>
      <Type>instm</Type>
      <Scope>SimpleTransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SimpleTransactionFactory.html</Path>
    <Anchor>supportsResourceAdapterManagedTransactions()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsResourceAdapterManagedTransactions()</Name>
      <Type>intfm</Type>
      <Scope>TransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/TransactionFactory.html</Path>
    <Anchor>supportsResourceAdapterManagedTransactions()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsResourceAdapterManagedTransactions()</Name>
      <Type>instm</Type>
      <Scope>WebSphereUowTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
    <Anchor>supportsResourceAdapterManagedTransactions()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>MapMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/MapMethodProcessor.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ModelMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelMethodProcessor.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>intfm</Type>
      <Scope>HandlerMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodReturnValueHandler.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodReturnValueHandlerComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>AsyncTaskMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AsyncTaskMethodReturnValueHandler.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>CallableMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/CallableMethodReturnValueHandler.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>DeferredResultMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/DeferredResultMethodReturnValueHandler.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>HttpEntityMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ModelAndViewMethodReturnValueHandler.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewResolverMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ModelAndViewResolverMethodReturnValueHandler.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestResponseBodyMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ViewMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ViewMethodReturnValueHandler.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsReturnType(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ViewNameMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ViewNameMethodReturnValueHandler.html</Path>
    <Anchor>supportsReturnType(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsSavepoints()</Name>
      <Type>instm</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>supportsSavepoints()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsSourceType(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/GenericApplicationListenerAdapter.html</Path>
    <Anchor>supportsSourceType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsSourceType(Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SmartApplicationListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SmartApplicationListener.html</Path>
    <Anchor>supportsSourceType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsSourceType(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SourceFilteringListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/SourceFilteringListener.html</Path>
    <Anchor>supportsSourceType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsTypeLevelMappings()</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
    <Anchor>supportsTypeLevelMappings()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsTypeLevelMappings()</Name>
      <Type>instm</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>supportsTypeLevelMappings()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppress(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceOverridingShadowingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ResourceOverridingShadowingClassLoader.html</Path>
    <Anchor>suppress(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressBinding(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>suppressBinding(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressBinding(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>suppressBinding(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>IntroductionInfoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/IntroductionInfoSupport.html</Path>
    <Anchor>suppressInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressValidation(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>suppressValidation(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressValidation(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>suppressValidation(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressValidation(HttpServletRequest, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressValidation(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressValidation(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>suppressValidation(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressValidation(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>CancellableFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/CancellableFormController.html</Path>
    <Anchor>suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressValidation(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suspend(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>suspend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suspend()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>suspend()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suspend()</Name>
      <Type>intfm</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>suspend()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suspend()</Name>
      <Type>instm</Type>
      <Scope>TransactionSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationAdapter.html</Path>
    <Anchor>suspend()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap(Object)</Name>
      <Type>instm</Type>
      <Scope>HotSwappableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/HotSwappableTargetSource.html</Path>
    <Anchor>swap(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SybaseAnywhereMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/SybaseAnywhereMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SybaseAnywhereMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>SybaseAnywhereMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/SybaseAnywhereMaxValueIncrementer.html</Path>
    <Anchor>SybaseAnywhereMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SybaseAnywhereMaxValueIncrementer(DataSource, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>SybaseAnywhereMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/SybaseAnywhereMaxValueIncrementer.html</Path>
    <Anchor>SybaseAnywhereMaxValueIncrementer(javax.sql.DataSource, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SybaseCallMetaDataProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/SybaseCallMetaDataProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SybaseCallMetaDataProvider(DatabaseMetaData)</Name>
      <Type>Constructor</Type>
      <Scope>SybaseCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/SybaseCallMetaDataProvider.html</Path>
    <Anchor>SybaseCallMetaDataProvider(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SybaseMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/SybaseMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SybaseMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>SybaseMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/SybaseMaxValueIncrementer.html</Path>
    <Anchor>SybaseMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SybaseMaxValueIncrementer(DataSource, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>SybaseMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/SybaseMaxValueIncrementer.html</Path>
    <Anchor>SybaseMaxValueIncrementer(javax.sql.DataSource, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynchedLocalTransactionFailedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SynchedLocalTransactionFailedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynchedLocalTransactionFailedException(String, JMSException)</Name>
      <Type>Constructor</Type>
      <Scope>SynchedLocalTransactionFailedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SynchedLocalTransactionFailedException.html</Path>
    <Anchor>SynchedLocalTransactionFailedException(java.lang.String, javax.jms.JMSException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYNCHRONIZATION_ALWAYS</Name>
      <Type>Field</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>SYNCHRONIZATION_ALWAYS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYNCHRONIZATION_NEVER</Name>
      <Type>Field</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>SYNCHRONIZATION_NEVER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYNCHRONIZATION_ON_ACTUAL_TRANSACTION</Name>
      <Type>Field</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>SYNCHRONIZATION_ON_ACTUAL_TRANSACTION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SyncTaskExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.task</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SyncTaskExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SyncTaskExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>SyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SyncTaskExecutor.html</Path>
    <Anchor>SyncTaskExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_ENVIRONMENT_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>SYSTEM_ENVIRONMENT_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME</Name>
      <Type>Field</Type>
      <Scope>StandardEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/StandardEnvironment.html</Path>
    <Anchor>SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_PROPERTIES_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>SYSTEM_PROPERTIES_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_PROPERTIES_MODE_FALLBACK</Name>
      <Type>Field</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>SYSTEM_PROPERTIES_MODE_FALLBACK</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_PROPERTIES_MODE_NEVER</Name>
      <Type>Field</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>SYSTEM_PROPERTIES_MODE_NEVER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_PROPERTIES_MODE_OVERRIDE</Name>
      <Type>Field</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>SYSTEM_PROPERTIES_MODE_OVERRIDE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME</Name>
      <Type>Field</Type>
      <Scope>StandardEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/StandardEnvironment.html</Path>
    <Anchor>SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemEnvironmentPropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/SystemEnvironmentPropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemEnvironmentPropertySource(String, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>SystemEnvironmentPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/SystemEnvironmentPropertySource.html</Path>
    <Anchor>SystemEnvironmentPropertySource(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemProfileValueSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/SystemProfileValueSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemPropertyUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SystemPropertyUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemPropertyUtils()</Name>
      <Type>Constructor</Type>
      <Scope>SystemPropertyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SystemPropertyUtils.html</Path>
    <Anchor>SystemPropertyUtils()</Anchor>
  </Token>
</Tokens>
