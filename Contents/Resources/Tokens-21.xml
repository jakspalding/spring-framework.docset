<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>UiApplicationContextUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/UiApplicationContextUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UiApplicationContextUtils()</Name>
      <Type>Constructor</Type>
      <Scope>UiApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/UiApplicationContextUtils.html</Path>
    <Anchor>UiApplicationContextUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ultimateTargetClass(Object)</Name>
      <Type>clm</Type>
      <Scope>AopProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyUtils.html</Path>
    <Anchor>ultimateTargetClass(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnableToRegisterMBeanException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jmx.export</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/UnableToRegisterMBeanException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnableToRegisterMBeanException(String)</Name>
      <Type>Constructor</Type>
      <Scope>UnableToRegisterMBeanException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/UnableToRegisterMBeanException.html</Path>
    <Anchor>UnableToRegisterMBeanException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnableToRegisterMBeanException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>UnableToRegisterMBeanException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/UnableToRegisterMBeanException.html</Path>
    <Anchor>UnableToRegisterMBeanException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnableToSendNotificationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jmx.export.notification</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/notification/UnableToSendNotificationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnableToSendNotificationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>UnableToSendNotificationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/notification/UnableToSendNotificationException.html</Path>
    <Anchor>UnableToSendNotificationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnableToSendNotificationException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>UnableToSendNotificationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/notification/UnableToSendNotificationException.html</Path>
    <Anchor>UnableToSendNotificationException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind(String)</Name>
      <Type>instm</Type>
      <Scope>JndiTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiTemplate.html</Path>
    <Anchor>unbind(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>unbind(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind(Name)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>unbind(javax.naming.Name)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbindResource(Object)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>unbindResource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbindResourceIfPossible(Object)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>unbindResourceIfPossible(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbound()</Name>
      <Type>intfm</Type>
      <Scope>ResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolder.html</Path>
    <Anchor>unbound()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbound()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>unbound()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNBOUNDED_CONCURRENCY</Name>
      <Type>Field</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>UNBOUNDED_CONCURRENCY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNBOUNDED_CONCURRENCY</Name>
      <Type>Field</Type>
      <Scope>ConcurrencyThrottleSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrencyThrottleSupport.html</Path>
    <Anchor>UNBOUNDED_CONCURRENCY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uncapitalize(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>uncapitalize(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedDataAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/UncategorizedDataAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedDataAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>UncategorizedDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/UncategorizedDataAccessException.html</Path>
    <Anchor>UncategorizedDataAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedJmsException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jms</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/UncategorizedJmsException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedJmsException(String)</Name>
      <Type>Constructor</Type>
      <Scope>UncategorizedJmsException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/UncategorizedJmsException.html</Path>
    <Anchor>UncategorizedJmsException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedJmsException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>UncategorizedJmsException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/UncategorizedJmsException.html</Path>
    <Anchor>UncategorizedJmsException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedJmsException(Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>UncategorizedJmsException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/UncategorizedJmsException.html</Path>
    <Anchor>UncategorizedJmsException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedMappingException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.oxm</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/UncategorizedMappingException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedMappingException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>UncategorizedMappingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/UncategorizedMappingException.html</Path>
    <Anchor>UncategorizedMappingException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedSQLException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/UncategorizedSQLException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UncategorizedSQLException(String, String, SQLException)</Name>
      <Type>Constructor</Type>
      <Scope>UncategorizedSQLException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/UncategorizedSQLException.html</Path>
    <Anchor>UncategorizedSQLException(java.lang.String, java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>under(Class)</Name>
      <Type>intfm</Type>
      <Scope>ControlFlow</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ControlFlow.html</Path>
    <Anchor>under(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>under(Class, String)</Name>
      <Type>intfm</Type>
      <Scope>ControlFlow</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ControlFlow.html</Path>
    <Anchor>under(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>underToken(String)</Name>
      <Type>intfm</Type>
      <Scope>ControlFlow</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ControlFlow.html</Path>
    <Anchor>underToken(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unescape(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>unescape(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnexpectedRollbackException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/UnexpectedRollbackException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnexpectedRollbackException(String)</Name>
      <Type>Constructor</Type>
      <Scope>UnexpectedRollbackException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/UnexpectedRollbackException.html</Path>
    <Anchor>UnexpectedRollbackException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnexpectedRollbackException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>UnexpectedRollbackException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/UnexpectedRollbackException.html</Path>
    <Anchor>UnexpectedRollbackException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>union(ClassFilter, ClassFilter)</Name>
      <Type>clm</Type>
      <Scope>ClassFilters</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ClassFilters.html</Path>
    <Anchor>union(org.springframework.aop.ClassFilter, org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>union(ClassFilter[])</Name>
      <Type>clm</Type>
      <Scope>ClassFilters</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ClassFilters.html</Path>
    <Anchor>union(org.springframework.aop.ClassFilter[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>union(ClassFilter)</Name>
      <Type>instm</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>union(org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>union(MethodMatcher)</Name>
      <Type>instm</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>union(org.springframework.aop.MethodMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>union(Pointcut)</Name>
      <Type>instm</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>union(org.springframework.aop.Pointcut)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>union(MethodMatcher, MethodMatcher)</Name>
      <Type>clm</Type>
      <Scope>MethodMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/MethodMatchers.html</Path>
    <Anchor>union(org.springframework.aop.MethodMatcher, org.springframework.aop.MethodMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>union(Pointcut, Pointcut)</Name>
      <Type>clm</Type>
      <Scope>Pointcuts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/Pointcuts.html</Path>
    <Anchor>union(org.springframework.aop.Pointcut, org.springframework.aop.Pointcut)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uniqueResult(Collection&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>DataAccessUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DataAccessUtils.html</Path>
    <Anchor>uniqueResult(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnknownAdviceTypeException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.aop.framework.adapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/UnknownAdviceTypeException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnknownAdviceTypeException(Object)</Name>
      <Type>Constructor</Type>
      <Scope>UnknownAdviceTypeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/UnknownAdviceTypeException.html</Path>
    <Anchor>UnknownAdviceTypeException(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnknownAdviceTypeException(String)</Name>
      <Type>Constructor</Type>
      <Scope>UnknownAdviceTypeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/UnknownAdviceTypeException.html</Path>
    <Anchor>UnknownAdviceTypeException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnknownHttpStatusCodeException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/UnknownHttpStatusCodeException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnknownHttpStatusCodeException(int, String, HttpHeaders, byte[], Charset)</Name>
      <Type>Constructor</Type>
      <Scope>UnknownHttpStatusCodeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/UnknownHttpStatusCodeException.html</Path>
    <Anchor>UnknownHttpStatusCodeException(int, java.lang.String, org.springframework.http.HttpHeaders, byte[], java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unloadBeanFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractStatefulSessionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractStatefulSessionBean.html</Path>
    <Anchor>unloadBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshal(Source)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>unmarshal(javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshal(Source, MimeContainer)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>unmarshal(javax.xml.transform.Source, org.springframework.oxm.mime.MimeContainer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshal(Source, MimeContainer)</Name>
      <Type>intfm</Type>
      <Scope>MimeUnmarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/mime/MimeUnmarshaller.html</Path>
    <Anchor>unmarshal(javax.xml.transform.Source, org.springframework.oxm.mime.MimeContainer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshal(Source)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshal(javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshal(Source)</Name>
      <Type>intfm</Type>
      <Scope>Unmarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/Unmarshaller.html</Path>
    <Anchor>unmarshal(javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalDomNode(Node)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>unmarshalDomNode(org.w3c.dom.Node)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalDomNode(Node)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>unmarshalDomNode(org.w3c.dom.Node)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalDomNode(Node)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalDomNode(org.w3c.dom.Node)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalDomNode(Node)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>unmarshalDomNode(org.w3c.dom.Node)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalDomNode(Node)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>unmarshalDomNode(org.w3c.dom.Node)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalDomSource(DOMSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalDomSource(javax.xml.transform.dom.DOMSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalFromBytesMessage(BytesMessage, Unmarshaller)</Name>
      <Type>instm</Type>
      <Scope>MarshallingMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MarshallingMessageConverter.html</Path>
    <Anchor>unmarshalFromBytesMessage(javax.jms.BytesMessage, org.springframework.oxm.Unmarshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalFromMessage(Message, Unmarshaller)</Name>
      <Type>instm</Type>
      <Scope>MarshallingMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MarshallingMessageConverter.html</Path>
    <Anchor>unmarshalFromMessage(javax.jms.Message, org.springframework.oxm.Unmarshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalFromTextMessage(TextMessage, Unmarshaller)</Name>
      <Type>instm</Type>
      <Scope>MarshallingMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MarshallingMessageConverter.html</Path>
    <Anchor>unmarshalFromTextMessage(javax.jms.TextMessage, org.springframework.oxm.Unmarshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalInputStream(InputStream)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>unmarshalInputStream(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalInputStream(InputStream)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>unmarshalInputStream(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalInputStream(InputStream)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalInputStream(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalInputStream(InputStream)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>unmarshalInputStream(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalInputStream(InputStream)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>unmarshalInputStream(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Unmarshaller</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.oxm</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/Unmarshaller.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnmarshallingFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.oxm</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/UnmarshallingFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnmarshallingFailureException(String)</Name>
      <Type>Constructor</Type>
      <Scope>UnmarshallingFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/UnmarshallingFailureException.html</Path>
    <Anchor>UnmarshallingFailureException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnmarshallingFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>UnmarshallingFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/UnmarshallingFailureException.html</Path>
    <Anchor>UnmarshallingFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalReader(Reader)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>unmarshalReader(java.io.Reader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalReader(Reader)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>unmarshalReader(java.io.Reader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalReader(Reader)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalReader(java.io.Reader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalReader(Reader)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>unmarshalReader(java.io.Reader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalReader(Reader)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>unmarshalReader(java.io.Reader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalSaxReader(XMLReader, InputSource)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalSaxReader(XMLReader, InputSource)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalSaxReader(XMLReader, InputSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalSaxReader(XMLReader, InputSource)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalSaxReader(XMLReader, InputSource)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalSaxSource(SAXSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalSaxSource(javax.xml.transform.sax.SAXSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalStaxSource(Source)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalStaxSource(javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalStreamSource(StreamSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalStreamSource(javax.xml.transform.stream.StreamSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlEventReader(XMLEventReader)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlEventReader(XMLEventReader)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlEventReader(XMLEventReader)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlEventReader(XMLEventReader)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlEventReader(XMLEventReader)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlStreamReader(XMLStreamReader)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlStreamReader(XMLStreamReader)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlStreamReader(XMLStreamReader)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlStreamReader(XMLStreamReader)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmarshalXmlStreamReader(XMLStreamReader)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmodifiableMultiValueMap(MultiValueMap&amp;lt;? extends K, ? extends V&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>unmodifiableMultiValueMap(org.springframework.util.MultiValueMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unqualify(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>unqualify(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unqualify(String, char)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>unqualify(java.lang.String, char)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterBeans()</Name>
      <Type>instm</Type>
      <Scope>MBeanRegistrationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanRegistrationSupport.html</Path>
    <Anchor>unregisterBeans()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterManagedResource(ObjectName)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>unregisterManagedResource(javax.management.ObjectName)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterManagedResource(ObjectName)</Name>
      <Type>intfm</Type>
      <Scope>MBeanExportOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExportOperations.html</Path>
    <Anchor>unregisterManagedResource(javax.management.ObjectName)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterNamedDispatcher(String)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>unregisterNamedDispatcher(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNRESOLVED</Name>
      <Type>Field</Type>
      <Scope>WebArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebArgumentResolver.html</Path>
    <Anchor>UNRESOLVED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNRESOLVED</Name>
      <Type>Field</Type>
      <Scope>ModelAndViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html</Path>
    <Anchor>UNRESOLVED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnsatisfiedDependencyException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/UnsatisfiedDependencyException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnsatisfiedDependencyException(String, String, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>UnsatisfiedDependencyException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/UnsatisfiedDependencyException.html</Path>
    <Anchor>UnsatisfiedDependencyException(java.lang.String, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnsatisfiedDependencyException(String, String, String, BeansException)</Name>
      <Type>Constructor</Type>
      <Scope>UnsatisfiedDependencyException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/UnsatisfiedDependencyException.html</Path>
    <Anchor>UnsatisfiedDependencyException(java.lang.String, java.lang.String, java.lang.String, org.springframework.beans.BeansException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnsatisfiedDependencyException(String, String, int, Class, String)</Name>
      <Type>Constructor</Type>
      <Scope>UnsatisfiedDependencyException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/UnsatisfiedDependencyException.html</Path>
    <Anchor>UnsatisfiedDependencyException(java.lang.String, java.lang.String, int, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnsatisfiedDependencyException(String, String, int, Class, BeansException)</Name>
      <Type>Constructor</Type>
      <Scope>UnsatisfiedDependencyException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/UnsatisfiedDependencyException.html</Path>
    <Anchor>UnsatisfiedDependencyException(java.lang.String, java.lang.String, int, java.lang.Class, org.springframework.beans.BeansException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsatisfiedNonSimpleProperties(AbstractBeanDefinition, BeanWrapper)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>unsatisfiedNonSimpleProperties(org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.BeanWrapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnsatisfiedServletRequestParameterException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/UnsatisfiedServletRequestParameterException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnsatisfiedServletRequestParameterException(String[], Map)</Name>
      <Type>Constructor</Type>
      <Scope>UnsatisfiedServletRequestParameterException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/UnsatisfiedServletRequestParameterException.html</Path>
    <Anchor>UnsatisfiedServletRequestParameterException(java.lang.String[], java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unwrap(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDataSource.html</Path>
    <Anchor>unwrap(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unwrap(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DelegatingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DelegatingDataSource.html</Path>
    <Anchor>unwrap(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unwrap(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>unwrap(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unwrap(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SpringValidatorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/SpringValidatorAdapter.html</Path>
    <Anchor>unwrap(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upcast(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>upcast(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdatableSqlQuery</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/UpdatableSqlQuery.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdatableSqlQuery()</Name>
      <Type>Constructor</Type>
      <Scope>UpdatableSqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/UpdatableSqlQuery.html</Path>
    <Anchor>UpdatableSqlQuery()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdatableSqlQuery(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>UpdatableSqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/UpdatableSqlQuery.html</Path>
    <Anchor>UpdatableSqlQuery(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdatableSqlQuery.RowMapperImpl</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/UpdatableSqlQuery.RowMapperImpl.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdatableSqlQuery.RowMapperImpl(Map)</Name>
      <Type>Constructor</Type>
      <Scope>UpdatableSqlQuery.RowMapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/UpdatableSqlQuery.RowMapperImpl.html</Path>
    <Anchor>UpdatableSqlQuery.RowMapperImpl(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>update(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(PreparedStatementCreator)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>update(org.springframework.jdbc.core.PreparedStatementCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(PreparedStatementCreator, KeyHolder)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>update(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.support.KeyHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, PreparedStatementSetter)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object[], int[])</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object[], int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>update(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(PreparedStatementCreator, PreparedStatementSetter)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>update(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.core.PreparedStatementSetter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(PreparedStatementCreator)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>update(org.springframework.jdbc.core.PreparedStatementCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(PreparedStatementCreator, KeyHolder)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>update(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.support.KeyHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, PreparedStatementSetter)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object[], int[])</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object[], int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, SqlParameterSource)</Name>
      <Type>intfm</Type>
      <Scope>NamedParameterJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>NamedParameterJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html</Path>
    <Anchor>update(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, SqlParameterSource, KeyHolder)</Name>
      <Type>intfm</Type>
      <Scope>NamedParameterJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, SqlParameterSource, KeyHolder, String[])</Name>
      <Type>intfm</Type>
      <Scope>NamedParameterJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, SqlParameterSource, KeyHolder)</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, SqlParameterSource, KeyHolder, String[])</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcOperations.html</Path>
    <Anchor>update(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, SqlParameterSource)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcOperations.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcOperations.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(Object...)</Name>
      <Type>instm</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>update(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(Object...)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>update(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(Object[], KeyHolder)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>update(java.lang.Object[], org.springframework.jdbc.support.KeyHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update()</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>update()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(int)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>update(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(int, int)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>update(int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(long)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>update(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(long, long)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>update(long, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>update(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, String)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>update(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>update(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(Object, LockMode)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>update(java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object, LockMode)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>update(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(Object, LockMode)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>update(java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object, LockMode)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object, org.hibernate.LockMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String)</Name>
      <Type>intfm</Type>
      <Scope>SqlMapClientOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientOperations.html</Path>
    <Anchor>update(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>SqlMapClientOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientOperations.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object, int)</Name>
      <Type>intfm</Type>
      <Scope>SqlMapClientOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientOperations.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>update(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(String, Object, int)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>update(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update(Date, Date, Date)</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/SimpleTriggerContext.html</Path>
    <Anchor>update(java.util.Date, java.util.Date, java.util.Date)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateAccessedSessionAttributes()</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributes.html</Path>
    <Anchor>updateAccessedSessionAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateAccessedSessionAttributes()</Name>
      <Type>instm</Type>
      <Scope>ServletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletRequestAttributes.html</Path>
    <Anchor>updateAccessedSessionAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateAccessedSessionAttributes()</Name>
      <Type>instm</Type>
      <Scope>PortletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestAttributes.html</Path>
    <Anchor>updateAccessedSessionAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateAdvisorArray()</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>updateAdvisorArray()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateByNamedParam(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>updateByNamedParam(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateByNamedParam(Map&amp;lt;String, ?&amp;gt;, KeyHolder)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>updateByNamedParam(java.util.Map, org.springframework.jdbc.support.KeyHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateDatabaseSchema()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>updateDatabaseSchema()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFlashMaps(List&amp;lt;FlashMap&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractFlashMapManager.html</Path>
    <Anchor>updateFlashMaps(java.util.List, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFlashMaps(List&amp;lt;FlashMap&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>SessionFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/SessionFlashMapManager.html</Path>
    <Anchor>updateFlashMaps(java.util.List, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateModel(NativeWebRequest, ModelAndViewContainer)</Name>
      <Type>instm</Type>
      <Scope>ModelFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelFactory.html</Path>
    <Anchor>updateModel(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.method.support.ModelAndViewContainer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateModelAttributes(Object, Map&amp;lt;String, Object&amp;gt;, ExtendedModelMap, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>updateModelAttributes(java.lang.Object, java.util.Map, org.springframework.ui.ExtendedModelMap, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateRow(ResultSet, int, Map)</Name>
      <Type>instm</Type>
      <Scope>UpdatableSqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/UpdatableSqlQuery.html</Path>
    <Anchor>updateRow(java.sql.ResultSet, int, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTargetUrl(String, Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>updateTargetUrl(java.lang.String, java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uri(URI)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>uri(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URI_TEMPLATE_VARIABLES_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>HandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerMapping.html</Path>
    <Anchor>URI_TEMPLATE_VARIABLES_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriComponents</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponents.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriComponents(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>UriComponents</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponents.html</Path>
    <Anchor>UriComponents(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriComponentsBuilder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriComponentsBuilder()</Name>
      <Type>Constructor</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>UriComponentsBuilder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriComponentsBuilderMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriComponentsBuilderMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>UriComponentsBuilderMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.html</Path>
    <Anchor>UriComponentsBuilderMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URIEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URIEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URIEditor()</Name>
      <Type>Constructor</Type>
      <Scope>URIEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URIEditor.html</Path>
    <Anchor>URIEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URIEditor(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>URIEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URIEditor.html</Path>
    <Anchor>URIEditor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URIEditor(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>URIEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URIEditor.html</Path>
    <Anchor>URIEditor(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URIEditor(ClassLoader, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>URIEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URIEditor.html</Path>
    <Anchor>URIEditor(java.lang.ClassLoader, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriTemplate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriTemplate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriTemplate(String)</Name>
      <Type>Constructor</Type>
      <Scope>UriTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriTemplate.html</Path>
    <Anchor>UriTemplate(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UriUtils()</Name>
      <Type>Constructor</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>UriUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_PROTOCOL_CODE_SOURCE</Name>
      <Type>Field</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>URL_PROTOCOL_CODE_SOURCE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_PROTOCOL_FILE</Name>
      <Type>Field</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>URL_PROTOCOL_FILE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_PROTOCOL_JAR</Name>
      <Type>Field</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>URL_PROTOCOL_JAR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_PROTOCOL_VFS</Name>
      <Type>Field</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>URL_PROTOCOL_VFS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_PROTOCOL_VFSZIP</Name>
      <Type>Field</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>URL_PROTOCOL_VFSZIP</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_PROTOCOL_WSJAR</Name>
      <Type>Field</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>URL_PROTOCOL_WSJAR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_PROTOCOL_ZIP</Name>
      <Type>Field</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>URL_PROTOCOL_ZIP</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_TYPE_ACTION</Name>
      <Type>Field</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>URL_TYPE_ACTION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_TYPE_ACTION</Name>
      <Type>Field</Type>
      <Scope>MockPortletURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletURL.html</Path>
    <Anchor>URL_TYPE_ACTION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_TYPE_RENDER</Name>
      <Type>Field</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>URL_TYPE_RENDER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URL_TYPE_RENDER</Name>
      <Type>Field</Type>
      <Scope>MockPortletURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletURL.html</Path>
    <Anchor>URL_TYPE_RENDER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlBasedRemoteAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/UrlBasedRemoteAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlBasedRemoteAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>UrlBasedRemoteAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/UrlBasedRemoteAccessor.html</Path>
    <Anchor>UrlBasedRemoteAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlBasedViewResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlBasedViewResolver()</Name>
      <Type>Constructor</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>UrlBasedViewResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URLEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URLEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URLEditor()</Name>
      <Type>Constructor</Type>
      <Scope>URLEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URLEditor.html</Path>
    <Anchor>URLEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URLEditor(ResourceEditor)</Name>
      <Type>Constructor</Type>
      <Scope>URLEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URLEditor.html</Path>
    <Anchor>URLEditor(org.springframework.core.io.ResourceEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>urlEncode(String, String)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>urlEncode(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlFilenameViewController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/UrlFilenameViewController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlFilenameViewController()</Name>
      <Type>Constructor</Type>
      <Scope>UrlFilenameViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/UrlFilenameViewController.html</Path>
    <Anchor>UrlFilenameViewController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlPathHelper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlPathHelper()</Name>
      <Type>Constructor</Type>
      <Scope>UrlPathHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UrlPathHelper.html</Path>
    <Anchor>UrlPathHelper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/UrlResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlResource(URL)</Name>
      <Type>Constructor</Type>
      <Scope>UrlResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/UrlResource.html</Path>
    <Anchor>UrlResource(java.net.URL)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlResource(URI)</Name>
      <Type>Constructor</Type>
      <Scope>UrlResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/UrlResource.html</Path>
    <Anchor>UrlResource(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlResource(String)</Name>
      <Type>Constructor</Type>
      <Scope>UrlResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/UrlResource.html</Path>
    <Anchor>UrlResource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UrlTag()</Name>
      <Type>Constructor</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>UrlTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useBeanFactory(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/BeanFactoryLocator.html</Path>
    <Anchor>useBeanFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useBeanFactory(String)</Name>
      <Type>instm</Type>
      <Scope>SingletonBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html</Path>
    <Anchor>useBeanFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useBeanFactory(String)</Name>
      <Type>instm</Type>
      <Scope>ContextJndiBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextJndiBeanFactoryLocator.html</Path>
    <Anchor>useBeanFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useCachedContent()</Name>
      <Type>instm</Type>
      <Scope>MockCacheControl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockCacheControl.html</Path>
    <Anchor>useCachedContent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useCachesIfNecessary(URLConnection)</Name>
      <Type>clm</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>useCachesIfNecessary(java.net.URLConnection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useConfigValueEditors()</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>useConfigValueEditors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useDirectFieldAccess()</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>useDirectFieldAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useDirectFieldAccess()</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>useDirectFieldAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useInclude(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ServletForwardingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletForwardingController.html</Path>
    <Anchor>useInclude(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useInclude(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>useInclude(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useInParameterNames(String...)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>useInParameterNames(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useInParameterNames(String...)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>useInParameterNames(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useJaf(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.html</Path>
    <Anchor>useJaf(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useNativeJdbcExtractorForMetaData(NativeJdbcExtractor)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>useNativeJdbcExtractorForMetaData(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useNativeJdbcExtractorForMetaData(NativeJdbcExtractor)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>useNativeJdbcExtractorForMetaData(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USER_DECLARED_METHODS</Name>
      <Type>Field</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>USER_DECLARED_METHODS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserCredentialsConnectionFactoryAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserCredentialsConnectionFactoryAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>UserCredentialsConnectionFactoryAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserCredentialsDataSourceAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserCredentialsDataSourceAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>UserCredentialsDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html</Path>
    <Anchor>UserCredentialsDataSourceAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useRegisteredSuffixPatternMatch()</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>useRegisteredSuffixPatternMatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userInfo(String)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>userInfo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserRoleAuthorizationInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/UserRoleAuthorizationInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserRoleAuthorizationInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>UserRoleAuthorizationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/UserRoleAuthorizationInterceptor.html</Path>
    <Anchor>UserRoleAuthorizationInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserRoleAuthorizationInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/UserRoleAuthorizationInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserRoleAuthorizationInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>UserRoleAuthorizationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/UserRoleAuthorizationInterceptor.html</Path>
    <Anchor>UserRoleAuthorizationInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserTransactionAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.jta</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/UserTransactionAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserTransactionAdapter(TransactionManager)</Name>
      <Type>Constructor</Type>
      <Scope>UserTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/UserTransactionAdapter.html</Path>
    <Anchor>UserTransactionAdapter(javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useSavepointForNestedTransaction()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>useSavepointForNestedTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useSavepointForNestedTransaction()</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>useSavepointForNestedTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useSuffixPatternMatch()</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>useSuffixPatternMatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useTrailingSlashMatch()</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>useTrailingSlashMatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useWeakValue(K, V)</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>useWeakValue(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useWriter()</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsSingleFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html</Path>
    <Anchor>useWriter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useWriter()</Name>
      <Type>instm</Type>
      <Scope>ConfigurableJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html</Path>
    <Anchor>useWriter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useWriter()</Name>
      <Type>instm</Type>
      <Scope>JasperReportsCsvView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsCsvView.html</Path>
    <Anchor>useWriter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useWriter()</Name>
      <Type>instm</Type>
      <Scope>JasperReportsHtmlView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsHtmlView.html</Path>
    <Anchor>useWriter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useWriter()</Name>
      <Type>instm</Type>
      <Scope>JasperReportsPdfView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsPdfView.html</Path>
    <Anchor>useWriter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useWriter()</Name>
      <Type>instm</Type>
      <Scope>JasperReportsXlsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsXlsView.html</Path>
    <Anchor>useWriter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useWriter()</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>useWriter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usingColumns(String...)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>usingColumns(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usingColumns(String...)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>usingColumns(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usingContext()</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>usingContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usingGeneratedKeyColumns(String...)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>usingGeneratedKeyColumns(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usingGeneratedKeyColumns(String...)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>usingGeneratedKeyColumns(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UtilNamespaceHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/UtilNamespaceHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UtilNamespaceHandler()</Name>
      <Type>Constructor</Type>
      <Scope>UtilNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/UtilNamespaceHandler.html</Path>
    <Anchor>UtilNamespaceHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUIDEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/UUIDEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUIDEditor()</Name>
      <Type>Constructor</Type>
      <Scope>UUIDEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/UUIDEditor.html</Path>
    <Anchor>UUIDEditor()</Anchor>
  </Token>
</Tokens>
