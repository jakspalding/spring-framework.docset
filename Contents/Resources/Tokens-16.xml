<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>paddingLength</Name>
      <Type>Field</Type>
      <Scope>AbstractDataFieldMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.html</Path>
    <Anchor>paddingLength</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PAGE_NOT_FOUND_LOG_CATEGORY</Name>
      <Type>Field</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>PAGE_NOT_FOUND_LOG_CATEGORY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PAGE_NOT_FOUND_LOG_CATEGORY</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>PAGE_NOT_FOUND_LOG_CATEGORY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PAGE_NOT_FOUND_LOG_CATEGORY</Name>
      <Type>Field</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>PAGE_NOT_FOUND_LOG_CATEGORY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PAGE_NOT_FOUND_LOG_CATEGORY</Name>
      <Type>Field</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>PAGE_NOT_FOUND_LOG_CATEGORY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PAGE_NOT_FOUND_LOG_CATEGORY</Name>
      <Type>Field</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>PAGE_NOT_FOUND_LOG_CATEGORY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PAGE_NOT_FOUND_LOG_CATEGORY</Name>
      <Type>Field</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>PAGE_NOT_FOUND_LOG_CATEGORY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PagedListHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PagedListHolder()</Name>
      <Type>Constructor</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>PagedListHolder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PagedListHolder(List&amp;lt;E&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>PagedListHolder(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PagedListHolder(List&amp;lt;E&amp;gt;, SortDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>PagedListHolder(java.util.List, org.springframework.beans.support.SortDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageNotFoundLogger</Name>
      <Type>Field</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>pageNotFoundLogger</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageNotFoundLogger</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>pageNotFoundLogger</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageNotFoundLogger</Name>
      <Type>Field</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>pageNotFoundLogger</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageNotFoundLogger</Name>
      <Type>Field</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>pageNotFoundLogger</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageNotFoundLogger</Name>
      <Type>Field</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>pageNotFoundLogger</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageNotFoundLogger</Name>
      <Type>Field</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>pageNotFoundLogger</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>param(String, String...)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>param(java.lang.String, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Param</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/Param.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Param()</Name>
      <Type>Constructor</Type>
      <Scope>Param</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/Param.html</Path>
    <Anchor>Param()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_AUTOWIRE</Name>
      <Type>Field</Type>
      <Scope>DelegatingActionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionUtils.html</Path>
    <Anchor>PARAM_AUTOWIRE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_CANCEL</Name>
      <Type>Field</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>PARAM_CANCEL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_CANCEL</Name>
      <Type>Field</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>PARAM_CANCEL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_DEPENDENCY_CHECK</Name>
      <Type>Field</Type>
      <Scope>DelegatingActionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionUtils.html</Path>
    <Anchor>PARAM_DEPENDENCY_CHECK</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_FINISH</Name>
      <Type>Field</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>PARAM_FINISH</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_FINISH</Name>
      <Type>Field</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>PARAM_FINISH</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_PAGE</Name>
      <Type>Field</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>PARAM_PAGE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_PAGE</Name>
      <Type>Field</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>PARAM_PAGE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_TARGET</Name>
      <Type>Field</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>PARAM_TARGET</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAM_TARGET</Name>
      <Type>Field</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>PARAM_TARGET</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParamAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/ParamAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterContentNegotiationStrategy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.accept</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ParameterContentNegotiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterContentNegotiationStrategy(Map&amp;lt;String, MediaType&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ParameterContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ParameterContentNegotiationStrategy.html</Path>
    <Anchor>ParameterContentNegotiationStrategy(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterDisposer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ParameterDisposer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>ParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterHandlerMapping.html</Path>
    <Anchor>ParameterHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameterInfoToTypes(MBeanParameterInfo[])</Name>
      <Type>clm</Type>
      <Scope>JmxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/JmxUtils.html</Path>
    <Anchor>parameterInfoToTypes(javax.management.MBeanParameterInfo[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameterInfoToTypes(MBeanParameterInfo[], ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>JmxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/JmxUtils.html</Path>
    <Anchor>parameterInfoToTypes(javax.management.MBeanParameterInfo[], java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizableViewController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/ParameterizableViewController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizableViewController()</Name>
      <Type>Constructor</Type>
      <Scope>ParameterizableViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/ParameterizableViewController.html</Path>
    <Anchor>ParameterizableViewController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizableViewController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ParameterizableViewController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizableViewController()</Name>
      <Type>Constructor</Type>
      <Scope>ParameterizableViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ParameterizableViewController.html</Path>
    <Anchor>ParameterizableViewController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizedBeanPropertyRowMapper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/ParameterizedBeanPropertyRowMapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizedBeanPropertyRowMapper()</Name>
      <Type>Constructor</Type>
      <Scope>ParameterizedBeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/ParameterizedBeanPropertyRowMapper.html</Path>
    <Anchor>ParameterizedBeanPropertyRowMapper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizedPreparedStatementSetter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ParameterizedPreparedStatementSetter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizedRowMapper</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/ParameterizedRowMapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizedSingleColumnRowMapper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/ParameterizedSingleColumnRowMapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizedSingleColumnRowMapper()</Name>
      <Type>Constructor</Type>
      <Scope>ParameterizedSingleColumnRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/ParameterizedSingleColumnRowMapper.html</Path>
    <Anchor>ParameterizedSingleColumnRowMapper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizedTypeReference</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ParameterizedTypeReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterizedTypeReference()</Name>
      <Type>Constructor</Type>
      <Scope>ParameterizedTypeReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ParameterizedTypeReference.html</Path>
    <Anchor>ParameterizedTypeReference()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterMapper</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ParameterMapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterMappingInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterMappingInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterMappingInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>ParameterMappingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterMappingInterceptor.html</Path>
    <Anchor>ParameterMappingInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterMethodNameResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.multiaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/ParameterMethodNameResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterMethodNameResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ParameterMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/ParameterMethodNameResolver.html</Path>
    <Anchor>ParameterMethodNameResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameterName(String)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.html</Path>
    <Anchor>parameterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameterNameDiscoverer</Name>
      <Type>Field</Type>
      <Scope>AbstractAspectJAdvisorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html</Path>
    <Anchor>parameterNameDiscoverer</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParameterNameDiscoverer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ParameterNameDiscoverer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameterNameToUse(String)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>parameterNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameterNameToUse(String)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>parameterNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameterNameToUse(String)</Name>
      <Type>instm</Type>
      <Scope>SqlServerCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/SqlServerCallMetaDataProvider.html</Path>
    <Anchor>parameterNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameterNameToUse(String)</Name>
      <Type>instm</Type>
      <Scope>SybaseCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/SybaseCallMetaDataProvider.html</Path>
    <Anchor>parameterNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameters</Name>
      <Type>Field</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>parameters</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParamsRequestCondition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ParamsRequestCondition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParamsRequestCondition(String...)</Name>
      <Type>Constructor</Type>
      <Scope>ParamsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ParamsRequestCondition.html</Path>
    <Anchor>ParamsRequestCondition(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParamTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/ParamTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParamTag()</Name>
      <Type>Constructor</Type>
      <Scope>ParamTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/ParamTag.html</Path>
    <Anchor>ParamTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARENT_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>PARENT_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARENT_KEY</Name>
      <Type>Field</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>PARENT_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARENT_REF_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>PARENT_REF_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParser.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>intfm</Type>
      <Scope>NamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/NamespaceHandler.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>NamespaceHandlerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/NamespaceHandlerSupport.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>Constructor</Type>
      <Scope>SimpleConstructorNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimpleConstructorNamespaceHandler.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>SimplePropertyNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimplePropertyNamespaceHandler.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigBeanDefinitionParser.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>ComponentScanBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>parse(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>DateTimeParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeParser.html</Path>
    <Anchor>parse(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractNumberFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/AbstractNumberFormatter.html</Path>
    <Anchor>parse(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>CurrencyFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/CurrencyFormatter.html</Path>
    <Anchor>parse(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(String, Locale)</Name>
      <Type>intfm</Type>
      <Scope>Parser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/Parser.html</Path>
    <Anchor>parse(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>AnnotationDrivenBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/AnnotationDrivenBeanDefinitionParser.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse(Element, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>ScriptingDefaultsParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/config/ScriptingDefaultsParser.html</Path>
    <Anchor>parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseArrayElement(Element, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseArrayElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseBeanDefinitionAttributes(Element, String, BeanDefinition, AbstractBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseBeanDefinitionAttributes(org.w3c.dom.Element, java.lang.String, org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.AbstractBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseBeanDefinitionElement(Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseBeanDefinitionElement(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseBeanDefinitionElement(Element, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseBeanDefinitionElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseBeanDefinitionElement(Element, String, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseBeanDefinitionElement(org.w3c.dom.Element, java.lang.String, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseBeanDefinitions(Element, BeanDefinitionParserDelegate)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>parseBeanDefinitions(org.w3c.dom.Element, org.springframework.beans.factory.xml.BeanDefinitionParserDelegate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseBeanNameGenerator(Element, ClassPathBeanDefinitionScanner)</Name>
      <Type>instm</Type>
      <Scope>ComponentScanBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
    <Anchor>parseBeanNameGenerator(org.w3c.dom.Element, org.springframework.context.annotation.ClassPathBeanDefinitionScanner)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseCacheAnnotations(AnnotatedElement)</Name>
      <Type>intfm</Type>
      <Scope>CacheAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/CacheAnnotationParser.html</Path>
    <Anchor>parseCacheAnnotations(java.lang.reflect.AnnotatedElement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseCacheAnnotations(AnnotatedElement)</Name>
      <Type>instm</Type>
      <Scope>SpringCacheAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/SpringCacheAnnotationParser.html</Path>
    <Anchor>parseCacheAnnotations(java.lang.reflect.AnnotatedElement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseCollectionElements(NodeList, Collection&amp;lt;Object&amp;gt;, BeanDefinition, String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseCollectionElements(org.w3c.dom.NodeList, java.util.Collection, org.springframework.beans.factory.config.BeanDefinition, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseConstructorArgElement(Element, BeanDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseConstructorArgElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseConstructorArgElements(Element, BeanDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseConstructorArgElements(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseCustomElement(Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseCustomElement(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseCustomElement(Element, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseCustomElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseDefaultValueAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>parseDefaultValueAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParsedSql</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.namedparam</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/ParsedSql.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParseException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ParseException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParseException(String, int, String)</Name>
      <Type>Constructor</Type>
      <Scope>ParseException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ParseException.html</Path>
    <Anchor>ParseException(java.lang.String, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParseException(int, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ParseException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ParseException.html</Path>
    <Anchor>ParseException(int, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParseException(int, String)</Name>
      <Type>Constructor</Type>
      <Scope>ParseException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ParseException.html</Path>
    <Anchor>ParseException(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseExpression(String)</Name>
      <Type>instm</Type>
      <Scope>TemplateAwareExpressionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/TemplateAwareExpressionParser.html</Path>
    <Anchor>parseExpression(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseExpression(String, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>TemplateAwareExpressionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/TemplateAwareExpressionParser.html</Path>
    <Anchor>parseExpression(java.lang.String, org.springframework.expression.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseExpression(String)</Name>
      <Type>intfm</Type>
      <Scope>ExpressionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionParser.html</Path>
    <Anchor>parseExpression(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseExpression(String, ParserContext)</Name>
      <Type>intfm</Type>
      <Scope>ExpressionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionParser.html</Path>
    <Anchor>parseExpression(java.lang.String, org.springframework.expression.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseExpression(String, Class, FunctionMapper)</Name>
      <Type>instm</Type>
      <Scope>MockExpressionEvaluator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockExpressionEvaluator.html</Path>
    <Anchor>parseExpression(java.lang.String, java.lang.Class, javax.servlet.jsp.el.FunctionMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseFileItems(List&amp;lt;FileItem&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>CommonsFileUploadSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
    <Anchor>parseFileItems(java.util.List, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseIdRefElement(Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseIdRefElement(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseInternal(Element, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>parseInternal(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseInternal(Element, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSingleBeanDefinitionParser.html</Path>
    <Anchor>parseInternal(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseKeyElement(Element, BeanDefinition, String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseKeyElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseListElement(Element, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseListElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseLocaleString(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>parseLocaleString(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseLookupOverrideSubElements(Element, MethodOverrides)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseLookupOverrideSubElements(org.w3c.dom.Element, org.springframework.beans.factory.support.MethodOverrides)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseMapElement(Element, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseMapElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseMatrixVariables(String)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>parseMatrixVariables(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseMediaType(String)</Name>
      <Type>clm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>parseMediaType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseMediaTypes(String)</Name>
      <Type>clm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>parseMediaTypes(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseMergeAttribute(Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseMergeAttribute(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseMetaElements(Element, BeanMetadataAttributeAccessor)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseMetaElements(org.w3c.dom.Element, org.springframework.beans.BeanMetadataAttributeAccessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseNumber(String, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>NumberUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/NumberUtils.html</Path>
    <Anchor>parseNumber(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseNumber(String, Class&amp;lt;T&amp;gt;, NumberFormat)</Name>
      <Type>clm</Type>
      <Scope>NumberUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/NumberUtils.html</Path>
    <Anchor>parseNumber(java.lang.String, java.lang.Class, java.text.NumberFormat)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parsePropertyElement(Element, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parsePropertyElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parsePropertyElements(Element, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parsePropertyElements(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parsePropertySubElement(Element, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parsePropertySubElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parsePropertySubElement(Element, BeanDefinition, String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parsePropertySubElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parsePropertyValue(Element, BeanDefinition, String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parsePropertyValue(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parsePropsElement(Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parsePropsElement(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseQualifierElement(Element, AbstractBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseQualifierElement(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseQualifierElements(Element, AbstractBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseQualifierElements(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Parser</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.format</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/Parser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseRaw(String)</Name>
      <Type>instm</Type>
      <Scope>SpelExpressionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpressionParser.html</Path>
    <Anchor>parseRaw(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParserContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParserContext(XmlReaderContext, BeanDefinitionParserDelegate)</Name>
      <Type>Constructor</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>ParserContext(org.springframework.beans.factory.xml.XmlReaderContext, org.springframework.beans.factory.xml.BeanDefinitionParserDelegate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParserContext(XmlReaderContext, BeanDefinitionParserDelegate, BeanDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>ParserContext(org.springframework.beans.factory.xml.XmlReaderContext, org.springframework.beans.factory.xml.BeanDefinitionParserDelegate, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParserContext</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ParserContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseReplacedMethodSubElements(Element, MethodOverrides)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseReplacedMethodSubElements(org.w3c.dom.Element, org.springframework.beans.factory.support.MethodOverrides)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseRequest(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
    <Anchor>parseRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseRequest(ActionRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsPortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
    <Anchor>parseRequest(javax.portlet.ActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseScope(Element, ClassPathBeanDefinitionScanner)</Name>
      <Type>instm</Type>
      <Scope>ComponentScanBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
    <Anchor>parseScope(org.w3c.dom.Element, org.springframework.context.annotation.ClassPathBeanDefinitionScanner)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseSetElement(Element, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseSetElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseSqlStatement(String)</Name>
      <Type>clm</Type>
      <Scope>NamedParameterUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterUtils.html</Path>
    <Anchor>parseSqlStatement(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseSqlStatementIntoString(String)</Name>
      <Type>clm</Type>
      <Scope>NamedParameterUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterUtils.html</Path>
    <Anchor>parseSqlStatementIntoString(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParseState</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ParseState.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParseState()</Name>
      <Type>Constructor</Type>
      <Scope>ParseState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ParseState.html</Path>
    <Anchor>ParseState()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ParseState.Entry</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ParseState.Entry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseStringValue(String, Properties, Set&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>parseStringValue(java.lang.String, java.util.Properties, java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseStringValue(String, PropertyPlaceholderHelper.PlaceholderResolver, Set&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertyPlaceholderHelper.html</Path>
    <Anchor>parseStringValue(java.lang.String, org.springframework.util.PropertyPlaceholderHelper.PlaceholderResolver, java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseTransactionAnnotation(AnnotatedElement)</Name>
      <Type>instm</Type>
      <Scope>Ejb3TransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/Ejb3TransactionAnnotationParser.html</Path>
    <Anchor>parseTransactionAnnotation(java.lang.reflect.AnnotatedElement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseTransactionAnnotation(TransactionAttribute)</Name>
      <Type>instm</Type>
      <Scope>Ejb3TransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/Ejb3TransactionAnnotationParser.html</Path>
    <Anchor>parseTransactionAnnotation(javax.ejb.TransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseTransactionAnnotation(AnnotatedElement)</Name>
      <Type>instm</Type>
      <Scope>SpringTransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.html</Path>
    <Anchor>parseTransactionAnnotation(java.lang.reflect.AnnotatedElement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseTransactionAnnotation(Transactional)</Name>
      <Type>instm</Type>
      <Scope>SpringTransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.html</Path>
    <Anchor>parseTransactionAnnotation(org.springframework.transaction.annotation.Transactional)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseTransactionAnnotation(AnnotatedElement)</Name>
      <Type>intfm</Type>
      <Scope>TransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/TransactionAnnotationParser.html</Path>
    <Anchor>parseTransactionAnnotation(java.lang.reflect.AnnotatedElement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseTypeFilters(Element, ClassPathBeanDefinitionScanner, XmlReaderContext, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>ComponentScanBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
    <Anchor>parseTypeFilters(org.w3c.dom.Element, org.springframework.context.annotation.ClassPathBeanDefinitionScanner, org.springframework.beans.factory.xml.XmlReaderContext, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseValueElement(Element, String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>parseValueElement(org.w3c.dom.Element, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseXmlString(String)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>parseXmlString(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARTICIPATE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>PARTICIPATE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARTICIPATE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>PARTICIPATE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARTICIPATE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>OpenPersistenceManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/OpenPersistenceManagerInViewInterceptor.html</Path>
    <Anchor>PARTICIPATE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARTICIPATE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>OpenEntityManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.html</Path>
    <Anchor>PARTICIPATE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passAllParametersToRenderPhase(ActionRequest, ActionResponse)</Name>
      <Type>clm</Type>
      <Scope>PortletUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/util/PortletUtils.html</Path>
    <Anchor>passAllParametersToRenderPhase(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateObject(Object)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>passivateObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passRenderParameters(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>passRenderParameters(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PassThroughFilterChain</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mock.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/PassThroughFilterChain.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PassThroughFilterChain(Filter, FilterChain)</Name>
      <Type>Constructor</Type>
      <Scope>PassThroughFilterChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/PassThroughFilterChain.html</Path>
    <Anchor>PassThroughFilterChain(javax.servlet.Filter, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PassThroughFilterChain(Servlet)</Name>
      <Type>Constructor</Type>
      <Scope>PassThroughFilterChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/PassThroughFilterChain.html</Path>
    <Anchor>PassThroughFilterChain(javax.servlet.Servlet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PassThroughSourceExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/PassThroughSourceExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PassThroughSourceExtractor()</Name>
      <Type>Constructor</Type>
      <Scope>PassThroughSourceExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/PassThroughSourceExtractor.html</Path>
    <Anchor>PassThroughSourceExtractor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PasswordInputTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/PasswordInputTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PasswordInputTag()</Name>
      <Type>Constructor</Type>
      <Scope>PasswordInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/PasswordInputTag.html</Path>
    <Anchor>PasswordInputTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>path(String, Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>path(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>path(String, String)</Name>
      <Type>instm</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>path(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>path(String)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>path(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATH_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesView.html</Path>
    <Anchor>PATH_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATH_VARIABLES</Name>
      <Type>Field</Type>
      <Scope>View</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/View.html</Path>
    <Anchor>PATH_VARIABLES</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>HandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerMapping.html</Path>
    <Anchor>PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pathEquals(String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>pathEquals(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathExtensionContentNegotiationStrategy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.accept</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathExtensionContentNegotiationStrategy(Map&amp;lt;String, MediaType&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>PathExtensionContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.html</Path>
    <Anchor>PathExtensionContentNegotiationStrategy(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathExtensionContentNegotiationStrategy()</Name>
      <Type>Constructor</Type>
      <Scope>PathExtensionContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.html</Path>
    <Anchor>PathExtensionContentNegotiationStrategy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pathInfo(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>pathInfo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathMatcher</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PathMatcher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathMatchingResourcePatternResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathMatchingResourcePatternResolver()</Name>
      <Type>Constructor</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>PathMatchingResourcePatternResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathMatchingResourcePatternResolver(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>PathMatchingResourcePatternResolver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathMatchingResourcePatternResolver(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>PathMatchingResourcePatternResolver(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pathSegment(String...)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>pathSegment(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathVariable</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/PathVariable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathVariableMapMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMapMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathVariableMapMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>PathVariableMapMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMapMethodArgumentResolver.html</Path>
    <Anchor>PathVariableMapMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathVariableMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathVariableMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>PathVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMethodArgumentResolver.html</Path>
    <Anchor>PathVariableMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PatternEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/PatternEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PatternEditor()</Name>
      <Type>Constructor</Type>
      <Scope>PatternEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/PatternEditor.html</Path>
    <Anchor>PatternEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PatternEditor(int)</Name>
      <Type>Constructor</Type>
      <Scope>PatternEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/PatternEditor.html</Path>
    <Anchor>PatternEditor(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PatternMatchUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PatternMatchUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PatternMatchUtils()</Name>
      <Type>Constructor</Type>
      <Scope>PatternMatchUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PatternMatchUtils.html</Path>
    <Anchor>PatternMatchUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PatternsRequestCondition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PatternsRequestCondition(String...)</Name>
      <Type>Constructor</Type>
      <Scope>PatternsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.html</Path>
    <Anchor>PatternsRequestCondition(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PatternsRequestCondition(String[], UrlPathHelper, PathMatcher, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>PatternsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.html</Path>
    <Anchor>PatternsRequestCondition(java.lang.String[], org.springframework.web.util.UrlPathHelper, org.springframework.util.PathMatcher, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PatternsRequestCondition(String[], UrlPathHelper, PathMatcher, boolean, boolean, List&amp;lt;String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>PatternsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.html</Path>
    <Anchor>PatternsRequestCondition(java.lang.String[], org.springframework.web.util.UrlPathHelper, org.springframework.util.PathMatcher, boolean, boolean, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pd</Name>
      <Type>Field</Type>
      <Scope>InjectionMetadata.InjectedElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
    <Anchor>pd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>peek()</Name>
      <Type>instm</Type>
      <Scope>ParseState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ParseState.html</Path>
    <Anchor>peek()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PercentFormatter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.number</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/PercentFormatter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PercentFormatter()</Name>
      <Type>Constructor</Type>
      <Scope>PercentFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/PercentFormatter.html</Path>
    <Anchor>PercentFormatter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perform(RequestBuilder)</Name>
      <Type>instm</Type>
      <Scope>MockMvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/MockMvc.html</Path>
    <Anchor>perform(org.springframework.test.web.servlet.RequestBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perform(ComponentContext, HttpServletRequest, HttpServletResponse, ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ComponentControllerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html</Path>
    <Anchor>perform(org.apache.struts.tiles.ComponentContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerformanceMonitorInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/PerformanceMonitorInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerformanceMonitorInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>PerformanceMonitorInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/PerformanceMonitorInterceptor.html</Path>
    <Anchor>PerformanceMonitorInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerformanceMonitorInterceptor(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>PerformanceMonitorInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/PerformanceMonitorInterceptor.html</Path>
    <Anchor>PerformanceMonitorInterceptor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performJaxRpcCall(MethodInvocation, Service)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>performJaxRpcCall(org.aopalliance.intercept.MethodInvocation, javax.xml.rpc.Service)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PeriodicTrigger</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/PeriodicTrigger.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PeriodicTrigger(long)</Name>
      <Type>Constructor</Type>
      <Scope>PeriodicTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/PeriodicTrigger.html</Path>
    <Anchor>PeriodicTrigger(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PeriodicTrigger(long, TimeUnit)</Name>
      <Type>Constructor</Type>
      <Scope>PeriodicTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/PeriodicTrigger.html</Path>
    <Anchor>PeriodicTrigger(long, java.util.concurrent.TimeUnit)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PermissionDeniedDataAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/PermissionDeniedDataAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PermissionDeniedDataAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>PermissionDeniedDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/PermissionDeniedDataAccessException.html</Path>
    <Anchor>PermissionDeniedDataAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>persist(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>persist(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>persist(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>persist(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>persist(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>persist(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>persist(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>persist(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>persist(Object)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>persist(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>persist(Object)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>persist(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PERSISTENCE_MANAGER_SYNCHRONIZATION_ORDER</Name>
      <Type>Field</Type>
      <Scope>PersistenceManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html</Path>
    <Anchor>PERSISTENCE_MANAGER_SYNCHRONIZATION_ORDER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceAnnotationBeanPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceAnnotationBeanPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>PersistenceAnnotationBeanPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceExceptionTranslationAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.dao.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/annotation/PersistenceExceptionTranslationAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceExceptionTranslationAdvisor(PersistenceExceptionTranslator, Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>PersistenceExceptionTranslationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/annotation/PersistenceExceptionTranslationAdvisor.html</Path>
    <Anchor>PersistenceExceptionTranslationAdvisor(org.springframework.dao.support.PersistenceExceptionTranslator, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceExceptionTranslationInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.dao.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceExceptionTranslationInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>PersistenceExceptionTranslationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
    <Anchor>PersistenceExceptionTranslationInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceExceptionTranslationInterceptor(PersistenceExceptionTranslator)</Name>
      <Type>Constructor</Type>
      <Scope>PersistenceExceptionTranslationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
    <Anchor>PersistenceExceptionTranslationInterceptor(org.springframework.dao.support.PersistenceExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceExceptionTranslationInterceptor(ListableBeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>PersistenceExceptionTranslationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
    <Anchor>PersistenceExceptionTranslationInterceptor(org.springframework.beans.factory.ListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceExceptionTranslationPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.dao.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/annotation/PersistenceExceptionTranslationPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceExceptionTranslationPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>PersistenceExceptionTranslationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/annotation/PersistenceExceptionTranslationPostProcessor.html</Path>
    <Anchor>PersistenceExceptionTranslationPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceExceptionTranslator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.dao.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceManagerFactoryUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jdo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceManagerFactoryUtils()</Name>
      <Type>Constructor</Type>
      <Scope>PersistenceManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html</Path>
    <Anchor>PersistenceManagerFactoryUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceManagerHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jdo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceManagerHolder(PersistenceManager)</Name>
      <Type>Constructor</Type>
      <Scope>PersistenceManagerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerHolder.html</Path>
    <Anchor>PersistenceManagerHolder(javax.jdo.PersistenceManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceUnitManager</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.jpa.persistenceunit</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/PersistenceUnitManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PersistenceUnitPostProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.jpa.persistenceunit</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/PersistenceUnitPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PessimisticLockingFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/PessimisticLockingFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PessimisticLockingFailureException(String)</Name>
      <Type>Constructor</Type>
      <Scope>PessimisticLockingFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/PessimisticLockingFailureException.html</Path>
    <Anchor>PessimisticLockingFailureException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PessimisticLockingFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>PessimisticLockingFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/PessimisticLockingFailureException.html</Path>
    <Anchor>PessimisticLockingFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Phased</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/Phased.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_ARGUMENT_TYPES</Name>
      <Type>Field</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>PLACEHOLDER_ARGUMENT_TYPES</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_ARGUMENTS</Name>
      <Type>Field</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>PLACEHOLDER_ARGUMENTS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_EXCEPTION</Name>
      <Type>Field</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>PLACEHOLDER_EXCEPTION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_INVOCATION_TIME</Name>
      <Type>Field</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>PLACEHOLDER_INVOCATION_TIME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_METHOD_NAME</Name>
      <Type>Field</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>PLACEHOLDER_METHOD_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_PREFIX</Name>
      <Type>Field</Type>
      <Scope>SystemPropertyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SystemPropertyUtils.html</Path>
    <Anchor>PLACEHOLDER_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_RETURN_VALUE</Name>
      <Type>Field</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>PLACEHOLDER_RETURN_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>SystemPropertyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/SystemPropertyUtils.html</Path>
    <Anchor>PLACEHOLDER_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_TARGET_CLASS_NAME</Name>
      <Type>Field</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>PLACEHOLDER_TARGET_CLASS_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLACEHOLDER_TARGET_CLASS_SHORT_NAME</Name>
      <Type>Field</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>PLACEHOLDER_TARGET_CLASS_SHORT_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlaceholderConfigurerSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlaceholderConfigurerSupport()</Name>
      <Type>Constructor</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>PlaceholderConfigurerSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>placeholderPrefix</Name>
      <Type>Field</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>placeholderPrefix</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>placeholderSuffix</Name>
      <Type>Field</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>placeholderSuffix</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlatformTransactionManager</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/PlatformTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluggableSchemaResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/PluggableSchemaResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluggableSchemaResolver(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>PluggableSchemaResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/PluggableSchemaResolver.html</Path>
    <Anchor>PluggableSchemaResolver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluggableSchemaResolver(ClassLoader, String)</Name>
      <Type>Constructor</Type>
      <Scope>PluggableSchemaResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/PluggableSchemaResolver.html</Path>
    <Anchor>PluggableSchemaResolver(java.lang.ClassLoader, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pointcut</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/Pointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointcutAdvisor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/PointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointcutComponentDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/PointcutComponentDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointcutComponentDefinition(String, BeanDefinition, String)</Name>
      <Type>Constructor</Type>
      <Scope>PointcutComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/PointcutComponentDefinition.html</Path>
    <Anchor>PointcutComponentDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointcutEntry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/PointcutEntry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointcutEntry(String)</Name>
      <Type>Constructor</Type>
      <Scope>PointcutEntry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/PointcutEntry.html</Path>
    <Anchor>PointcutEntry(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pointcuts</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/Pointcuts.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pointcuts()</Name>
      <Type>Constructor</Type>
      <Scope>Pointcuts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/Pointcuts.html</Path>
    <Anchor>Pointcuts()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pollForPurge()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap.ReferenceManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.ReferenceManager.html</Path>
    <Anchor>pollForPurge()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PoolingConfig</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/PoolingConfig.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop()</Name>
      <Type>instm</Type>
      <Scope>ParseState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ParseState.html</Path>
    <Anchor>pop()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popActiveContextObject()</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>popActiveContextObject()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popAndRegisterContainingComponent()</Name>
      <Type>instm</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>popAndRegisterContainingComponent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popContainingComponent()</Name>
      <Type>instm</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>popContainingComponent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popNestedPath()</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>popNestedPath()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popNestedPath()</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>popNestedPath()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popNestedPath()</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>popNestedPath()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popNestedPath()</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>popNestedPath()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populate(Connection)</Name>
      <Type>instm</Type>
      <Scope>CompositeDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/CompositeDatabasePopulator.html</Path>
    <Anchor>populate(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populate(Connection)</Name>
      <Type>intfm</Type>
      <Scope>DatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DatabasePopulator.html</Path>
    <Anchor>populate(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populate(Connection)</Name>
      <Type>instm</Type>
      <Scope>ResourceDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
    <Anchor>populate(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateActivationSpecProperties(BeanWrapper, JmsActivationSpecConfig)</Name>
      <Type>instm</Type>
      <Scope>DefaultJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.html</Path>
    <Anchor>populateActivationSpecProperties(org.springframework.beans.BeanWrapper, org.springframework.jms.listener.endpoint.JmsActivationSpecConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateActivationSpecProperties(BeanWrapper, JmsActivationSpecConfig)</Name>
      <Type>instm</Type>
      <Scope>StandardJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html</Path>
    <Anchor>populateActivationSpecProperties(org.springframework.beans.BeanWrapper, org.springframework.jms.listener.endpoint.JmsActivationSpecConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAttributeDescriptor(Descriptor, Method, Method, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>populateAttributeDescriptor(javax.management.Descriptor, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAttributeDescriptor(Descriptor, Method, Method, String)</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>populateAttributeDescriptor(javax.management.Descriptor, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateBean(String, RootBeanDefinition, BeanWrapper)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>populateBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, org.springframework.beans.BeanWrapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateDefaults(DocumentDefaultsDefinition, DocumentDefaultsDefinition, Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>populateDefaults(org.springframework.beans.factory.xml.DocumentDefaultsDefinition, org.springframework.beans.factory.xml.DocumentDefaultsDefinition, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateLob(Object)</Name>
      <Type>intfm</Type>
      <Scope>OracleLobHandler.LobCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.LobCallback.html</Path>
    <Anchor>populateLob(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateMBeanDescriptor(Descriptor, Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractMBeanInfoAssembler.html</Path>
    <Anchor>populateMBeanDescriptor(javax.management.Descriptor, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateMBeanDescriptor(Descriptor, Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>populateMBeanDescriptor(javax.management.Descriptor, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateMBeanDescriptor(Descriptor, Object, String)</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>populateMBeanDescriptor(javax.management.Descriptor, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateOperationDescriptor(Descriptor, Method, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>populateOperationDescriptor(javax.management.Descriptor, java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateOperationDescriptor(Descriptor, Method, String)</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>populateOperationDescriptor(javax.management.Descriptor, java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>port(int)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>port(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PORTLET_CONFIG_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>ConfigurablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html</Path>
    <Anchor>PORTLET_CONFIG_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PORTLET_CONFIG_PROPERTY_SOURCE_NAME</Name>
      <Type>Field</Type>
      <Scope>StandardPortletEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StandardPortletEnvironment.html</Path>
    <Anchor>PORTLET_CONFIG_PROPERTY_SOURCE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PORTLET_CONTEXT_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>ConfigurablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html</Path>
    <Anchor>PORTLET_CONTEXT_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PORTLET_CONTEXT_PREFIX</Name>
      <Type>Field</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>PORTLET_CONTEXT_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PORTLET_CONTEXT_PROPERTY_SOURCE_NAME</Name>
      <Type>Field</Type>
      <Scope>StandardPortletEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StandardPortletEnvironment.html</Path>
    <Anchor>PORTLET_CONTEXT_PROPERTY_SOURCE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletApplicationContextUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletApplicationContextUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletApplicationContextUtils()</Name>
      <Type>Constructor</Type>
      <Scope>PortletApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletApplicationContextUtils.html</Path>
    <Anchor>PortletApplicationContextUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletApplicationObjectSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletApplicationObjectSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletApplicationObjectSupport()</Name>
      <Type>Constructor</Type>
      <Scope>PortletApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletApplicationObjectSupport.html</Path>
    <Anchor>PortletApplicationObjectSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletConfigAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletConfigAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletConfigPropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletConfigPropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletConfigPropertySource(String, PortletConfig)</Name>
      <Type>Constructor</Type>
      <Scope>PortletConfigPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletConfigPropertySource.html</Path>
    <Anchor>PortletConfigPropertySource(java.lang.String, javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContentGenerator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContentGenerator()</Name>
      <Type>Constructor</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>PortletContentGenerator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextAwareProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextAwareProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextAwareProcessor(PortletContext)</Name>
      <Type>Constructor</Type>
      <Scope>PortletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextAwareProcessor.html</Path>
    <Anchor>PortletContextAwareProcessor(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextAwareProcessor(PortletConfig)</Name>
      <Type>Constructor</Type>
      <Scope>PortletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextAwareProcessor.html</Path>
    <Anchor>PortletContextAwareProcessor(javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextAwareProcessor(PortletContext, PortletConfig)</Name>
      <Type>Constructor</Type>
      <Scope>PortletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextAwareProcessor.html</Path>
    <Anchor>PortletContextAwareProcessor(javax.portlet.PortletContext, javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextPropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextPropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextPropertySource(String, PortletContext)</Name>
      <Type>Constructor</Type>
      <Scope>PortletContextPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextPropertySource.html</Path>
    <Anchor>PortletContextPropertySource(java.lang.String, javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextResource(PortletContext, String)</Name>
      <Type>Constructor</Type>
      <Scope>PortletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResource.html</Path>
    <Anchor>PortletContextResource(javax.portlet.PortletContext, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextResourceLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResourceLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextResourceLoader(PortletContext)</Name>
      <Type>Constructor</Type>
      <Scope>PortletContextResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResourceLoader.html</Path>
    <Anchor>PortletContextResourceLoader(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextResourcePatternResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResourcePatternResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextResourcePatternResolver(PortletContext)</Name>
      <Type>Constructor</Type>
      <Scope>PortletContextResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResourcePatternResolver.html</Path>
    <Anchor>PortletContextResourcePatternResolver(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextResourcePatternResolver(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>PortletContextResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResourcePatternResolver.html</Path>
    <Anchor>PortletContextResourcePatternResolver(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextScope</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextScope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletContextScope(PortletContext)</Name>
      <Type>Constructor</Type>
      <Scope>PortletContextScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextScope.html</Path>
    <Anchor>PortletContextScope(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletModeHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletModeHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>PortletModeHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeHandlerMapping.html</Path>
    <Anchor>PortletModeHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletModeNameViewController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletModeNameViewController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletModeNameViewController()</Name>
      <Type>Constructor</Type>
      <Scope>PortletModeNameViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletModeNameViewController.html</Path>
    <Anchor>PortletModeNameViewController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletModeParameterHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletModeParameterHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>PortletModeParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
    <Anchor>PortletModeParameterHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletMultipartResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet.multipart</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/PortletMultipartResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestAttributes</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestAttributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestAttributes(PortletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestAttributes.html</Path>
    <Anchor>PortletRequestAttributes(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestBindingException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.portlet.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestBindingException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestBindingException(String)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestBindingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestBindingException.html</Path>
    <Anchor>PortletRequestBindingException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestBindingException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestBindingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestBindingException.html</Path>
    <Anchor>PortletRequestBindingException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestDataBinder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestDataBinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestDataBinder(Object)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestDataBinder.html</Path>
    <Anchor>PortletRequestDataBinder(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestDataBinder(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestDataBinder.html</Path>
    <Anchor>PortletRequestDataBinder(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestHandledEvent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestHandledEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestHandledEvent(Object, String, String, String, String, String, long)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestHandledEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestHandledEvent.html</Path>
    <Anchor>PortletRequestHandledEvent(java.lang.Object, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestHandledEvent(Object, String, String, String, String, String, long, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestHandledEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletRequestHandledEvent.html</Path>
    <Anchor>PortletRequestHandledEvent(java.lang.Object, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestMethodNotSupportedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletRequestMethodNotSupportedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestMethodNotSupportedException(String)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestMethodNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletRequestMethodNotSupportedException.html</Path>
    <Anchor>PortletRequestMethodNotSupportedException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestMethodNotSupportedException(String, String[])</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestMethodNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletRequestMethodNotSupportedException.html</Path>
    <Anchor>PortletRequestMethodNotSupportedException(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestMethodNotSupportedException(String[])</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestMethodNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletRequestMethodNotSupportedException.html</Path>
    <Anchor>PortletRequestMethodNotSupportedException(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestParameterPropertyValues</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestParameterPropertyValues.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestParameterPropertyValues(PortletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestParameterPropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestParameterPropertyValues.html</Path>
    <Anchor>PortletRequestParameterPropertyValues(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestParameterPropertyValues(PortletRequest, String)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestParameterPropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestParameterPropertyValues.html</Path>
    <Anchor>PortletRequestParameterPropertyValues(javax.portlet.PortletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestParameterPropertyValues(PortletRequest, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestParameterPropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestParameterPropertyValues.html</Path>
    <Anchor>PortletRequestParameterPropertyValues(javax.portlet.PortletRequest, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletRequestUtils()</Name>
      <Type>Constructor</Type>
      <Scope>PortletRequestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestUtils.html</Path>
    <Anchor>PortletRequestUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletSessionRequiredException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletSessionRequiredException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletSessionRequiredException(String)</Name>
      <Type>Constructor</Type>
      <Scope>PortletSessionRequiredException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletSessionRequiredException.html</Path>
    <Anchor>PortletSessionRequiredException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/util/PortletUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletUtils()</Name>
      <Type>Constructor</Type>
      <Scope>PortletUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/util/PortletUtils.html</Path>
    <Anchor>PortletUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletWebRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletWebRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletWebRequest(PortletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>PortletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletWebRequest.html</Path>
    <Anchor>PortletWebRequest(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletWebRequest(PortletRequest, PortletResponse)</Name>
      <Type>Constructor</Type>
      <Scope>PortletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletWebRequest.html</Path>
    <Anchor>PortletWebRequest(javax.portlet.PortletRequest, javax.portlet.PortletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletWrappingController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortletWrappingController()</Name>
      <Type>Constructor</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>PortletWrappingController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pos</Name>
      <Type>Field</Type>
      <Scope>SpelNodeImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/SpelNodeImpl.html</Path>
    <Anchor>pos</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <Type>Field</Type>
      <Scope>ExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionException.html</Path>
    <Anchor>position</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>possiblyExpectingExceptions(FrameworkMethod, Object, Statement)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>possiblyExpectingExceptions(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post(String, Object...)</Name>
      <Type>clm</Type>
      <Scope>MockMvcRequestBuilders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.html</Path>
    <Anchor>post(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForEntity(String, Object, Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>postForEntity(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForEntity(String, Object, Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>postForEntity(java.lang.String, java.lang.Object, java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForEntity(URI, Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>postForEntity(java.net.URI, java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForEntity(String, Object, Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>postForEntity(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForEntity(String, Object, Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>postForEntity(java.lang.String, java.lang.Object, java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForEntity(URI, Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>postForEntity(java.net.URI, java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForLocation(String, Object, Object...)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>postForLocation(java.lang.String, java.lang.Object, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForLocation(String, Object, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>postForLocation(java.lang.String, java.lang.Object, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForLocation(URI, Object)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>postForLocation(java.net.URI, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForLocation(String, Object, Object...)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>postForLocation(java.lang.String, java.lang.Object, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForLocation(String, Object, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>postForLocation(java.lang.String, java.lang.Object, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForLocation(URI, Object)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>postForLocation(java.net.URI, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForObject(String, Object, Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>postForObject(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForObject(String, Object, Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>postForObject(java.lang.String, java.lang.Object, java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForObject(URI, Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>postForObject(java.net.URI, java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForObject(String, Object, Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>postForObject(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForObject(String, Object, Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>postForObject(java.lang.String, java.lang.Object, java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postForObject(URI, Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>postForObject(java.net.URI, java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PostgresCallMetaDataProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PostgresCallMetaDataProvider(DatabaseMetaData)</Name>
      <Type>Constructor</Type>
      <Scope>PostgresCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html</Path>
    <Anchor>PostgresCallMetaDataProvider(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PostgreSQLSequenceMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/PostgreSQLSequenceMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PostgreSQLSequenceMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>PostgreSQLSequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/PostgreSQLSequenceMaxValueIncrementer.html</Path>
    <Anchor>PostgreSQLSequenceMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PostgreSQLSequenceMaxValueIncrementer(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>PostgreSQLSequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/PostgreSQLSequenceMaxValueIncrementer.html</Path>
    <Anchor>PostgreSQLSequenceMaxValueIncrementer(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PostgresTableMetaDataProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/PostgresTableMetaDataProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PostgresTableMetaDataProvider(DatabaseMetaData)</Name>
      <Type>Constructor</Type>
      <Scope>PostgresTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/PostgresTableMetaDataProvider.html</Path>
    <Anchor>PostgresTableMetaDataProvider(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(WebRequest, ModelMap)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>postHandle(org.springframework.web.context.request.WebRequest, org.springframework.ui.ModelMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(WebRequest, ModelMap)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>postHandle(org.springframework.web.context.request.WebRequest, org.springframework.ui.ModelMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(WebRequest, ModelMap)</Name>
      <Type>instm</Type>
      <Scope>OpenPersistenceManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/OpenPersistenceManagerInViewInterceptor.html</Path>
    <Anchor>postHandle(org.springframework.web.context.request.WebRequest, org.springframework.ui.ModelMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(WebRequest, ModelMap)</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.html</Path>
    <Anchor>postHandle(org.springframework.web.context.request.WebRequest, org.springframework.ui.ModelMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(WebRequest, ModelMap)</Name>
      <Type>instm</Type>
      <Scope>Log4jNestedDiagnosticContextInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor.html</Path>
    <Anchor>postHandle(org.springframework.web.context.request.WebRequest, org.springframework.ui.ModelMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(WebRequest, ModelMap)</Name>
      <Type>intfm</Type>
      <Scope>WebRequestInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/WebRequestInterceptor.html</Path>
    <Anchor>postHandle(org.springframework.web.context.request.WebRequest, org.springframework.ui.ModelMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(HttpServletRequest, HttpServletResponse, Object, ModelAndView)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>postHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.web.servlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(HttpServletRequest, HttpServletResponse, Object, ModelAndView)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>postHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.web.servlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(HttpServletRequest, HttpServletResponse, Object, ModelAndView)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerInterceptor.html</Path>
    <Anchor>postHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.web.servlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandle(HttpServletRequest, HttpServletResponse, Object, ModelAndView)</Name>
      <Type>instm</Type>
      <Scope>WebContentInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
    <Anchor>postHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.web.servlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandleRender(RenderRequest, RenderResponse, Object, ModelAndView)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>postHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandleRender(RenderRequest, RenderResponse, Object, ModelAndView)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>postHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandleRender(RenderRequest, RenderResponse, Object, ModelAndView)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>postHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandleResource(ResourceRequest, ResourceResponse, Object, ModelAndView)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>postHandleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandleResource(ResourceRequest, ResourceResponse, Object, ModelAndView)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>postHandleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postHandleResource(ResourceRequest, ResourceResponse, Object, ModelAndView)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>postHandleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcess(BeanDefinitionBuilder, Element)</Name>
      <Type>instm</Type>
      <Scope>AbstractSimpleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html</Path>
    <Anchor>postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcess(NativeWebRequest, Callable&amp;lt;T&amp;gt;, Object)</Name>
      <Type>intfm</Type>
      <Scope>CallableProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptor.html</Path>
    <Anchor>postProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcess(NativeWebRequest, Callable&amp;lt;T&amp;gt;, Object)</Name>
      <Type>instm</Type>
      <Scope>CallableProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter.html</Path>
    <Anchor>postProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcess(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;, Object)</Name>
      <Type>intfm</Type>
      <Scope>DeferredResultProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptor.html</Path>
    <Anchor>postProcess(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcess(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;, Object)</Name>
      <Type>instm</Type>
      <Scope>DeferredResultProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptorAdapter.html</Path>
    <Anchor>postProcess(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisingBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractAdvisingBeanPostProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AdvisorAdapterRegistrationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapterRegistrationManager.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>InitDestroyAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>intfm</Type>
      <Scope>BeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanPostProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>InstantiationAwareBeanPostProcessorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>LoadTimeWeaverAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/LoadTimeWeaverAwareProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>ScheduledAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>BeanValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAwareProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>PortletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextAwareProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletPostProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleServletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletPostProcessor.html</Path>
    <Anchor>postProcessAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInstantiation(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>postProcessAfterInstantiation(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInstantiation(Object, String)</Name>
      <Type>intfm</Type>
      <Scope>InstantiationAwareBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html</Path>
    <Anchor>postProcessAfterInstantiation(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInstantiation(Object, String)</Name>
      <Type>instm</Type>
      <Scope>InstantiationAwareBeanPostProcessorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html</Path>
    <Anchor>postProcessAfterInstantiation(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInstantiation(Object, String)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessAfterInstantiation(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAfterInstantiation(Object, String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessAfterInstantiation(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessAnnotationConfiguration(AnnotationConfiguration)</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>postProcessAnnotationConfiguration(org.hibernate.cfg.AnnotationConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanDefinition(AbstractBeanDefinition, String)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>postProcessBeanDefinition(org.springframework.beans.factory.support.AbstractBeanDefinition, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanDefinitionRegistry(BeanDefinitionRegistry)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinitionRegistryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionRegistryPostProcessor.html</Path>
    <Anchor>postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanDefinitionRegistry(BeanDefinitionRegistry)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>CustomAutowireConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>intfm</Type>
      <Scope>BeanFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanFactoryPostProcessor.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>CustomEditorConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomEditorConfigurer.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>CustomScopeConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomScopeConfigurer.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>DeprecatedBeanWarner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DeprecatedBeanWarner.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>PropertyResourceConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyResourceConfigurer.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>PropertySourcesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/PropertySourcesPlaceholderConfigurer.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AspectJWeavingEnabler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/AspectJWeavingEnabler.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>ResourceAdapterApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/ResourceAdapterApplicationContext.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>GenericWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/GenericWebApplicationContext.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>StaticWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeDestruction(Object, String)</Name>
      <Type>instm</Type>
      <Scope>InitDestroyAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeDestruction(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeDestruction(Object, String)</Name>
      <Type>intfm</Type>
      <Scope>DestructionAwareBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DestructionAwareBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeDestruction(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeDestruction(Object, String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeDestruction(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeDestruction(Object, String)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletPostProcessor.html</Path>
    <Anchor>postProcessBeforeDestruction(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeDestruction(Object, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleServletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletPostProcessor.html</Path>
    <Anchor>postProcessBeforeDestruction(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisingBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractAdvisingBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AdvisorAdapterRegistrationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapterRegistrationManager.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>InitDestroyAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>intfm</Type>
      <Scope>BeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>InstantiationAwareBeanPostProcessorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>LoadTimeWeaverAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/LoadTimeWeaverAwareProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>ScheduledAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>BeanValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAwareProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>PortletContextAwareProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextAwareProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletPostProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleServletPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletPostProcessor.html</Path>
    <Anchor>postProcessBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInstantiation(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>postProcessBeforeInstantiation(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInstantiation(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>intfm</Type>
      <Scope>InstantiationAwareBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeInstantiation(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInstantiation(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>InstantiationAwareBeanPostProcessorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html</Path>
    <Anchor>postProcessBeforeInstantiation(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInstantiation(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeInstantiation(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInstantiation(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessBeforeInstantiation(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessBeforeInstantiation(Class, String)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>postProcessBeforeInstantiation(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessCommonsHttpMethod(HttpMethodBase)</Name>
      <Type>instm</Type>
      <Scope>CommonsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
    <Anchor>postProcessCommonsHttpMethod(org.apache.commons.httpclient.HttpMethodBase)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessComponentDefinition(BeanComponentDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>postProcessComponentDefinition(org.springframework.beans.factory.parsing.BeanComponentDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessConfiguration(Configuration)</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>postProcessConfiguration(org.hibernate.cfg.Configuration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessConfiguration(Configuration)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>postProcessConfiguration(org.hibernate.cfg.Configuration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessConfiguration(Configuration)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>postProcessConfiguration(freemarker.template.Configuration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessEntityManagerFactory(EntityManagerFactory)</Name>
      <Type>intfm</Type>
      <Scope>JpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaVendorAdapter.html</Path>
    <Anchor>postProcessEntityManagerFactory(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessEntityManagerFactory(EntityManagerFactory, PersistenceUnitInfo)</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>postProcessEntityManagerFactory(javax.persistence.EntityManagerFactory, javax.persistence.spi.PersistenceUnitInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessEntityManagerFactory(EntityManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html</Path>
    <Anchor>postProcessEntityManagerFactory(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessHandlerMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>InternalPathMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/InternalPathMethodNameResolver.html</Path>
    <Anchor>postProcessHandlerMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessHttpRequest(HttpUriRequest)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>postProcessHttpRequest(org.apache.http.client.methods.HttpUriRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessJaxRpcCall(Call, MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>postProcessJaxRpcCall(javax.xml.rpc.Call, org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessJaxRpcService(Service)</Name>
      <Type>intfm</Type>
      <Scope>JaxRpcServicePostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcServicePostProcessor.html</Path>
    <Anchor>postProcessJaxRpcService(javax.xml.rpc.Service)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessJaxRpcService(Service)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>postProcessJaxRpcService(javax.xml.rpc.Service)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessJobDetail(JobDetail)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>postProcessJobDetail(org.quartz.JobDetail)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMappings(Configuration)</Name>
      <Type>instm</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>postProcessMappings(org.hibernate.cfg.Configuration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMappings(Configuration)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>postProcessMappings(org.hibernate.cfg.Configuration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMergedBeanDefinition(RootBeanDefinition, Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMergedBeanDefinition(RootBeanDefinition, Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>InitDestroyAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMergedBeanDefinition(RootBeanDefinition, Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>RequiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMergedBeanDefinition(RootBeanDefinition, Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>intfm</Type>
      <Scope>MergedBeanDefinitionPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MergedBeanDefinitionPostProcessor.html</Path>
    <Anchor>postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMergedBeanDefinition(RootBeanDefinition, Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMergedBeanDefinition(RootBeanDefinition, Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMessage(Message)</Name>
      <Type>intfm</Type>
      <Scope>MessagePostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/MessagePostProcessor.html</Path>
    <Anchor>postProcessMessage(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessMessageCode(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.html</Path>
    <Anchor>postProcessMessageCode(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessObjectFromFactoryBean(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>postProcessObjectFromFactoryBean(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessObjectFromFactoryBean(Object, String)</Name>
      <Type>instm</Type>
      <Scope>FactoryBeanRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.html</Path>
    <Anchor>postProcessObjectFromFactoryBean(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPage(ActionRequest, Object, Errors, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>postProcessPage(javax.portlet.ActionRequest, java.lang.Object, org.springframework.validation.Errors, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPage(HttpServletRequest, Object, Errors, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>postProcessPage(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPersistenceUnitInfo(MutablePersistenceUnitInfo)</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>postProcessPersistenceUnitInfo(org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPersistenceUnitInfo(MutablePersistenceUnitInfo)</Name>
      <Type>intfm</Type>
      <Scope>PersistenceUnitPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/PersistenceUnitPostProcessor.html</Path>
    <Anchor>postProcessPersistenceUnitInfo(org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPortletApplicationContext(ConfigurableApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>postProcessPortletApplicationContext(org.springframework.context.ConfigurableApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPortStub(Stub)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>postProcessPortStub(javax.xml.rpc.Stub)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessProducer(MessageProducer, Message)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>postProcessProducer(javax.jms.MessageProducer, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPropertyValues(PropertyValues, PropertyDescriptor[], Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPropertyValues(PropertyValues, PropertyDescriptor[], Object, String)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPropertyValues(PropertyValues, PropertyDescriptor[], Object, String)</Name>
      <Type>instm</Type>
      <Scope>RequiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPropertyValues(PropertyValues, PropertyDescriptor[], Object, String)</Name>
      <Type>intfm</Type>
      <Scope>InstantiationAwareBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html</Path>
    <Anchor>postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPropertyValues(PropertyValues, PropertyDescriptor[], Object, String)</Name>
      <Type>instm</Type>
      <Scope>InstantiationAwareBeanPostProcessorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html</Path>
    <Anchor>postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPropertyValues(PropertyValues, PropertyDescriptor[], Object, String)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessPropertyValues(PropertyValues, PropertyDescriptor[], Object, String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessReport(JasperPrint, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>postProcessReport(net.sf.jasperreports.engine.JasperPrint, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessRequest(MockHttpServletRequest)</Name>
      <Type>intfm</Type>
      <Scope>RequestPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/RequestPostProcessor.html</Path>
    <Anchor>postProcessRequest(org.springframework.mock.web.MockHttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessResponse(Message, Message)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>postProcessResponse(javax.jms.Message, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessResult(T, PersistenceManager, boolean)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>postProcessResult(T, javax.jdo.PersistenceManager, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessTargetObject(Object)</Name>
      <Type>instm</Type>
      <Scope>LazyInitTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/LazyInitTargetSource.html</Path>
    <Anchor>postProcessTargetObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessTemplateLoaders(List&amp;lt;TemplateLoader&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>postProcessTemplateLoaders(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessTemplateLoaders(List&amp;lt;TemplateLoader&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerConfigurer.html</Path>
    <Anchor>postProcessTemplateLoaders(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessVelocityEngine(VelocityEngine)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>postProcessVelocityEngine(org.apache.velocity.app.VelocityEngine)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessVelocityEngine(VelocityEngine)</Name>
      <Type>instm</Type>
      <Scope>VelocityConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityConfigurer.html</Path>
    <Anchor>postProcessVelocityEngine(org.apache.velocity.app.VelocityEngine)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessViewName(String)</Name>
      <Type>instm</Type>
      <Scope>UrlFilenameViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/UrlFilenameViewController.html</Path>
    <Anchor>postProcessViewName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessWebApplicationContext(ConfigurableWebApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>postProcessWebApplicationContext(org.springframework.web.context.ConfigurableWebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postProcessXml(Element)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>postProcessXml(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>precedenceOf(PropertySource&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>precedenceOf(org.springframework.core.env.PropertySource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predictBeanType(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>predictBeanType(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predictBeanType(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>InstantiationAwareBeanPostProcessorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html</Path>
    <Anchor>predictBeanType(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predictBeanType(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>intfm</Type>
      <Scope>SmartInstantiationAwareBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html</Path>
    <Anchor>predictBeanType(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predictBeanType(String, RootBeanDefinition, Class...)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>predictBeanType(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predictBeanType(String, RootBeanDefinition, Class&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>predictBeanType(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predictBeanType(Class, String)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>predictBeanType(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreferencesPlaceholderConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreferencesPlaceholderConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>PreferencesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html</Path>
    <Anchor>PreferencesPlaceholderConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>intfm</Type>
      <Scope>SchedulingTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/SchedulingTaskExecutor.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefersShortLivedTasks()</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>prefersShortLivedTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PREFIX_COMMIT_RULE</Name>
      <Type>Field</Type>
      <Scope>RuleBasedTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html</Path>
    <Anchor>PREFIX_COMMIT_RULE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PREFIX_COMMONS_POOL</Name>
      <Type>Field</Type>
      <Scope>QuickTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/QuickTargetSourceCreator.html</Path>
    <Anchor>PREFIX_COMMONS_POOL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PREFIX_ISOLATION</Name>
      <Type>Field</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>PREFIX_ISOLATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PREFIX_PROPAGATION</Name>
      <Type>Field</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>PREFIX_PROPAGATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PREFIX_PROTOTYPE</Name>
      <Type>Field</Type>
      <Scope>QuickTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/QuickTargetSourceCreator.html</Path>
    <Anchor>PREFIX_PROTOTYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PREFIX_ROLLBACK_RULE</Name>
      <Type>Field</Type>
      <Scope>RuleBasedTransactionAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html</Path>
    <Anchor>PREFIX_ROLLBACK_RULE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PREFIX_THREAD_LOCAL</Name>
      <Type>Field</Type>
      <Scope>QuickTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/QuickTargetSourceCreator.html</Path>
    <Anchor>PREFIX_THREAD_LOCAL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PREFIX_TIMEOUT</Name>
      <Type>Field</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>PREFIX_TIMEOUT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>preHandle(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>preHandle(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>OpenPersistenceManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/OpenPersistenceManagerInViewInterceptor.html</Path>
    <Anchor>preHandle(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.html</Path>
    <Anchor>preHandle(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>Log4jNestedDiagnosticContextInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor.html</Path>
    <Anchor>preHandle(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(WebRequest)</Name>
      <Type>intfm</Type>
      <Scope>WebRequestInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/WebRequestInterceptor.html</Path>
    <Anchor>preHandle(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(PortletRequest, PortletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>preHandle(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(PortletRequest, PortletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>UserRoleAuthorizationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/UserRoleAuthorizationInterceptor.html</Path>
    <Anchor>preHandle(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>ConversionServiceExposingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/ConversionServiceExposingInterceptor.html</Path>
    <Anchor>preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>UserRoleAuthorizationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/UserRoleAuthorizationInterceptor.html</Path>
    <Anchor>preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerInterceptor.html</Path>
    <Anchor>preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>LocaleChangeInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/LocaleChangeInterceptor.html</Path>
    <Anchor>preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>WebContentInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
    <Anchor>preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>ThemeChangeInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/ThemeChangeInterceptor.html</Path>
    <Anchor>preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleAction(ActionRequest, ActionResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleAction(ActionRequest, ActionResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>ParameterMappingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterMappingInterceptor.html</Path>
    <Anchor>preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleAction(ActionRequest, ActionResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleAction(ActionRequest, ActionResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleEvent(EventRequest, EventResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>preHandleEvent(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleEvent(EventRequest, EventResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>preHandleEvent(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleEvent(EventRequest, EventResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>preHandleEvent(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleRender(RenderRequest, RenderResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>preHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleRender(RenderRequest, RenderResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>preHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleRender(RenderRequest, RenderResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>preHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleResource(ResourceRequest, ResourceResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>preHandleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleResource(ResourceRequest, ResourceResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>preHandleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preHandleResource(ResourceRequest, ResourceResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>preHandleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preInstantiateSingletons()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html</Path>
    <Anchor>preInstantiateSingletons()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preInstantiateSingletons()</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>preInstantiateSingletons()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>premain(String, Instrumentation)</Name>
      <Type>clm</Type>
      <Scope>InstrumentationSavingAgent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/InstrumentationSavingAgent.html</Path>
    <Anchor>premain(java.lang.String, java.lang.instrument.Instrumentation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/NotificationListenerRegistrar.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare(MimeMessage)</Name>
      <Type>intfm</Type>
      <Scope>MimeMessagePreparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessagePreparator.html</Path>
    <Anchor>prepare(javax.mail.internet.MimeMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>BurlapExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapExporter.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>HessianExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>JndiRmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiServiceExporter.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare()</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>prepare()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareApplicationContext(GenericApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>prepareApplicationContext(org.springframework.context.support.GenericApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>prepareBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareBinder(PortletRequestDataBinder)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>prepareBinder(org.springframework.web.portlet.bind.PortletRequestDataBinder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareBinder(ServletRequestDataBinder)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>prepareBinder(org.springframework.web.bind.ServletRequestDataBinder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareConnection(HttpURLConnection, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/SimpleClientHttpRequestFactory.html</Path>
    <Anchor>prepareConnection(java.net.HttpURLConnection, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>prepareConnection(javax.resource.cci.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>prepareConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>prepareConnection(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareConnection(HttpURLConnection, int)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html</Path>
    <Anchor>prepareConnection(java.net.HttpURLConnection, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareConnectionForTransaction(Connection, TransactionDefinition)</Name>
      <Type>clm</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>prepareConnectionForTransaction(java.sql.Connection, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)</Name>
      <Type>instm</Type>
      <Scope>AbstractContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractContextLoader.html</Path>
    <Anchor>prepareContext(org.springframework.context.ConfigurableApplicationContext, org.springframework.test.context.MergedContextConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareContext(GenericApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractGenericContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractGenericContextLoader.html</Path>
    <Anchor>prepareContext(org.springframework.context.support.GenericApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareCriteria(Criteria)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>prepareCriteria(org.hibernate.Criteria)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreparedStatementCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreparedStatementCreator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreparedStatementCreatorFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreparedStatementCreatorFactory(String)</Name>
      <Type>Constructor</Type>
      <Scope>PreparedStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
    <Anchor>PreparedStatementCreatorFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreparedStatementCreatorFactory(String, int[])</Name>
      <Type>Constructor</Type>
      <Scope>PreparedStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
    <Anchor>PreparedStatementCreatorFactory(java.lang.String, int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreparedStatementCreatorFactory(String, List&amp;lt;SqlParameter&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>PreparedStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
    <Anchor>PreparedStatementCreatorFactory(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreparedStatementSetter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementSetter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareFileUpload(String)</Name>
      <Type>instm</Type>
      <Scope>CommonsFileUploadSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
    <Anchor>prepareFileUpload(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>prepareForCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForCommit(DefaultTransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>prepareForCommit(org.springframework.transaction.support.DefaultTransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForRendering(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>prepareForRendering(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForRendering(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesView.html</Path>
    <Anchor>prepareForRendering(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareJaxRpcCall(Call)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>prepareJaxRpcCall(javax.xml.rpc.Call)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareLob(Connection, Class)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler.OracleLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html</Path>
    <Anchor>prepareLob(java.sql.Connection, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareMethodOverride(MethodOverride)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>prepareMethodOverride(org.springframework.beans.factory.support.MethodOverride)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareMethodOverrides()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>prepareMethodOverrides()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preparePersistenceUnitInfos()</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>preparePersistenceUnitInfos()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preparePortStub(Stub)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>preparePortStub(javax.xml.rpc.Stub)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preparePortStub(Object)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>preparePortStub(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareQuery(Query)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>prepareQuery(org.hibernate.Query)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareQuery(Query)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>prepareQuery(javax.jdo.Query)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareQuery(Query)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>prepareQuery(javax.persistence.Query)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareRefresh()</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
    <Anchor>prepareRefresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareRefresh()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>prepareRefresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareResponse(Exception, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>prepareResponse(java.lang.Exception, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareResponse(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>prepareResponse(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareResponse(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>prepareResponse(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareResponse(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>prepareResponse(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareScriptBeans(BeanDefinition, String, String)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>prepareScriptBeans(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareSharedConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>prepareSharedConnection(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareSharedConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>prepareSharedConnection(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareSynchronization(DefaultTransactionStatus, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>prepareSynchronization(org.springframework.transaction.support.DefaultTransactionStatus, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTestInstance()</Name>
      <Type>instm</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>prepareTestInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTestInstance()</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>prepareTestInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTestInstance(TestContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractTestExecutionListener.html</Path>
    <Anchor>prepareTestInstance(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTestInstance(TestContext)</Name>
      <Type>instm</Type>
      <Scope>DependencyInjectionTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html</Path>
    <Anchor>prepareTestInstance(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTestInstance(Object)</Name>
      <Type>instm</Type>
      <Scope>TestContextManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestContextManager.html</Path>
    <Anchor>prepareTestInstance(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTestInstance(TestContext)</Name>
      <Type>intfm</Type>
      <Scope>TestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestExecutionListener.html</Path>
    <Anchor>prepareTestInstance(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTestInstance(TestContext)</Name>
      <Type>instm</Type>
      <Scope>ServletTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/ServletTestExecutionListener.html</Path>
    <Anchor>prepareTestInstance(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTransaction(EntityManager, boolean, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/DefaultJpaDialect.html</Path>
    <Anchor>prepareTransaction(javax.persistence.EntityManager, boolean, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTransaction(EntityManager, boolean, String)</Name>
      <Type>intfm</Type>
      <Scope>JpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaDialect.html</Path>
    <Anchor>prepareTransaction(javax.persistence.EntityManager, boolean, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTransaction(EntityManager, boolean, String)</Name>
      <Type>instm</Type>
      <Scope>HibernateJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaDialect.html</Path>
    <Anchor>prepareTransaction(javax.persistence.EntityManager, boolean, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTransactionInfo(PlatformTransactionManager, TransactionAttribute, String, TransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>prepareTransactionInfo(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String, org.springframework.transaction.TransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareTransactionStatus(TransactionDefinition, Object, boolean, boolean, boolean, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>prepareTransactionStatus(org.springframework.transaction.TransactionDefinition, java.lang.Object, boolean, boolean, boolean, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareWriter(Map&amp;lt;String, Object&amp;gt;, PdfWriter, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractPdfView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfView.html</Path>
    <Anchor>prepareWriter(java.util.Map, com.lowagie.text.pdf.PdfWriter, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preProcess(NativeWebRequest, Callable&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>CallableProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptor.html</Path>
    <Anchor>preProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preProcess(NativeWebRequest, Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CallableProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter.html</Path>
    <Anchor>preProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preProcess(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>DeferredResultProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptor.html</Path>
    <Anchor>preProcess(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preProcess(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DeferredResultProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptorAdapter.html</Path>
    <Anchor>preProcess(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preProcessXml(Element)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>preProcessXml(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PRESERVE_TARGET_CLASS_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AutoProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AutoProxyUtils.html</Path>
    <Anchor>PRESERVE_TARGET_CLASS_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prettyPrint()</Name>
      <Type>instm</Type>
      <Scope>StopWatch</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
    <Anchor>prettyPrint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preventCaching(MimeResponse)</Name>
      <Type>instm</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>preventCaching(javax.portlet.MimeResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preventCaching(HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>preventCaching(javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preventCaching(HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>preventCaching(javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preventTransaction()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>preventTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>previous()</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>previous()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>previous()</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>previous()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>previousPage()</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>previousPage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Primary</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Primary.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PRIMARY_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>PRIMARY_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>principal(Principal)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>principal(java.security.Principal)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(Date, Locale)</Name>
      <Type>instm</Type>
      <Scope>DateFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatter.html</Path>
    <Anchor>print(java.util.Date, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(Long, Locale)</Name>
      <Type>instm</Type>
      <Scope>MillisecondInstantPrinter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/MillisecondInstantPrinter.html</Path>
    <Anchor>print(java.lang.Long, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(ReadableInstant, Locale)</Name>
      <Type>instm</Type>
      <Scope>ReadableInstantPrinter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/ReadableInstantPrinter.html</Path>
    <Anchor>print(org.joda.time.ReadableInstant, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(ReadablePartial, Locale)</Name>
      <Type>instm</Type>
      <Scope>ReadablePartialPrinter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/ReadablePartialPrinter.html</Path>
    <Anchor>print(org.joda.time.ReadablePartial, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(Number, Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractNumberFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/AbstractNumberFormatter.html</Path>
    <Anchor>print(java.lang.Number, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(T, Locale)</Name>
      <Type>intfm</Type>
      <Scope>Printer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/Printer.html</Path>
    <Anchor>print(T, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>print(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(char)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>print(char)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(char[])</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>print(char[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(double)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>print(double)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(float)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>print(float)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(int)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>print(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(long)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>print(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(Object)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>print(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(String)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>print(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>print(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(char)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>print(char)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(char[])</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>print(char[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(double)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>print(double)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(float)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>print(float)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(int)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>print(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(long)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>print(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(Object)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>print(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print(String)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>print(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print()</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultHandlers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultHandlers.html</Path>
    <Anchor>print()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printAsyncResult(MvcResult)</Name>
      <Type>instm</Type>
      <Scope>PrintingResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
    <Anchor>printAsyncResult(org.springframework.test.web.servlet.MvcResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Printer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.format</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/Printer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printFlashMap(FlashMap)</Name>
      <Type>instm</Type>
      <Scope>PrintingResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
    <Anchor>printFlashMap(org.springframework.web.servlet.FlashMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printHandler(Object, HandlerInterceptor[])</Name>
      <Type>instm</Type>
      <Scope>PrintingResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
    <Anchor>printHandler(java.lang.Object, org.springframework.web.servlet.HandlerInterceptor[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printHeading(String)</Name>
      <Type>intfm</Type>
      <Scope>PrintingResultHandler.ResultValuePrinter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.ResultValuePrinter.html</Path>
    <Anchor>printHeading(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrintingResultHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.result</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrintingResultHandler(PrintingResultHandler.ResultValuePrinter)</Name>
      <Type>Constructor</Type>
      <Scope>PrintingResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
    <Anchor>PrintingResultHandler(org.springframework.test.web.servlet.result.PrintingResultHandler.ResultValuePrinter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrintingResultHandler.ResultValuePrinter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.web.servlet.result</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.ResultValuePrinter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println()</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(char)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println(char)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(char[])</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println(char[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(double)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println(double)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(float)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println(float)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(int)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(long)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(Object)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(String)</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>println(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println()</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(boolean)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(char)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println(char)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(char[])</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println(char[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(double)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println(double)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(float)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println(float)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(int)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(long)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(Object)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>println(String)</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>println(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printModelAndView(ModelAndView)</Name>
      <Type>instm</Type>
      <Scope>PrintingResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
    <Anchor>printModelAndView(org.springframework.web.servlet.ModelAndView)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printRequest(MockHttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>PrintingResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
    <Anchor>printRequest(org.springframework.mock.web.MockHttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printResolvedException(Exception)</Name>
      <Type>instm</Type>
      <Scope>PrintingResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
    <Anchor>printResolvedException(java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printResponse(MockHttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>PrintingResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
    <Anchor>printResponse(org.springframework.mock.web.MockHttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printStackTrace(PrintStream)</Name>
      <Type>clm</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>printStackTrace(java.io.PrintStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printStackTrace(PrintWriter)</Name>
      <Type>clm</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>printStackTrace(java.io.PrintWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printStackTrace(PrintStream)</Name>
      <Type>clm</Type>
      <Scope>PropertyBatchUpdateException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyBatchUpdateException.html</Path>
    <Anchor>printStackTrace(java.io.PrintStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printStackTrace(PrintWriter)</Name>
      <Type>clm</Type>
      <Scope>PropertyBatchUpdateException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyBatchUpdateException.html</Path>
    <Anchor>printStackTrace(java.io.PrintWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printStackTrace(PrintStream)</Name>
      <Type>clm</Type>
      <Scope>MailSendException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailSendException.html</Path>
    <Anchor>printStackTrace(java.io.PrintStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printStackTrace(PrintWriter)</Name>
      <Type>clm</Type>
      <Scope>MailSendException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/MailSendException.html</Path>
    <Anchor>printStackTrace(java.io.PrintWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printValue(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>PrintingResultHandler.ResultValuePrinter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.ResultValuePrinter.html</Path>
    <Anchor>printValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrioritizedParameterNameDiscoverer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/PrioritizedParameterNameDiscoverer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrioritizedParameterNameDiscoverer()</Name>
      <Type>Constructor</Type>
      <Scope>PrioritizedParameterNameDiscoverer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/PrioritizedParameterNameDiscoverer.html</Path>
    <Anchor>PrioritizedParameterNameDiscoverer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PriorityOrdered</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/PriorityOrdered.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Problem</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/Problem.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Problem(String, Location)</Name>
      <Type>Constructor</Type>
      <Scope>Problem</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/Problem.html</Path>
    <Anchor>Problem(java.lang.String, org.springframework.beans.factory.parsing.Location)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Problem(String, Location, ParseState)</Name>
      <Type>Constructor</Type>
      <Scope>Problem</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/Problem.html</Path>
    <Anchor>Problem(java.lang.String, org.springframework.beans.factory.parsing.Location, org.springframework.beans.factory.parsing.ParseState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Problem(String, Location, ParseState, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>Problem</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/Problem.html</Path>
    <Anchor>Problem(java.lang.String, org.springframework.beans.factory.parsing.Location, org.springframework.beans.factory.parsing.ParseState, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProblemReporter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ProblemReporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>procedureNameToUse(String)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>procedureNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>procedureNameToUse(String)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>procedureNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>proceed()</Name>
      <Type>instm</Type>
      <Scope>MethodInvocationProceedingJoinPoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.html</Path>
    <Anchor>proceed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>proceed(Object[])</Name>
      <Type>instm</Type>
      <Scope>MethodInvocationProceedingJoinPoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.html</Path>
    <Anchor>proceed(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>proceed()</Name>
      <Type>instm</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>proceed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process(ImageReadParam)</Name>
      <Type>instm</Type>
      <Scope>BufferedImageHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
    <Anchor>process(javax.imageio.ImageReadParam)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process(ImageWriteParam)</Name>
      <Type>instm</Type>
      <Scope>BufferedImageHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
    <Anchor>process(javax.imageio.ImageWriteParam)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processAction(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>processAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processAction(HttpServletRequest, String)</Name>
      <Type>intfm</Type>
      <Scope>RequestDataValueProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestDataValueProcessor.html</Path>
    <Anchor>processAction(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processActionCreate(HttpServletRequest, HttpServletResponse, ActionMapping)</Name>
      <Type>instm</Type>
      <Scope>AutowiringRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringRequestProcessor.html</Path>
    <Anchor>processActionCreate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.struts.action.ActionMapping)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processActionCreate(HttpServletRequest, HttpServletResponse, ActionMapping)</Name>
      <Type>instm</Type>
      <Scope>AutowiringTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringTilesRequestProcessor.html</Path>
    <Anchor>processActionCreate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.struts.action.ActionMapping)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processActionCreate(HttpServletRequest, HttpServletResponse, ActionMapping)</Name>
      <Type>instm</Type>
      <Scope>DelegatingRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingRequestProcessor.html</Path>
    <Anchor>processActionCreate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.struts.action.ActionMapping)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processActionCreate(HttpServletRequest, HttpServletResponse, ActionMapping)</Name>
      <Type>instm</Type>
      <Scope>DelegatingTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html</Path>
    <Anchor>processActionCreate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.struts.action.ActionMapping)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processAliasRegistration(Element)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>processAliasRegistration(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processBeanDefinition(Element, BeanDefinitionParserDelegate)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>processBeanDefinition(org.w3c.dom.Element, org.springframework.beans.factory.xml.BeanDefinitionParserDelegate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processCancel(ActionRequest, ActionResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>processCancel(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processCancel(HttpServletRequest, HttpServletResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>processCancel(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processConfigBeanDefinitions(BeanDefinitionRegistry)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>processConfigBeanDefinitions(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processConstraintViolations(Set&amp;lt;ConstraintViolation&amp;lt;Object&amp;gt;&amp;gt;, Errors)</Name>
      <Type>instm</Type>
      <Scope>SpringValidatorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/SpringValidatorAdapter.html</Path>
    <Anchor>processConstraintViolations(java.util.Set, org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processContextConfiguration(ContextConfigurationAttributes)</Name>
      <Type>intfm</Type>
      <Scope>SmartContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/SmartContextLoader.html</Path>
    <Anchor>processContextConfiguration(org.springframework.test.context.ContextConfigurationAttributes)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processContextConfiguration(ContextConfigurationAttributes)</Name>
      <Type>instm</Type>
      <Scope>AbstractContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractContextLoader.html</Path>
    <Anchor>processContextConfiguration(org.springframework.test.context.ContextConfigurationAttributes)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processContextConfiguration(ContextConfigurationAttributes)</Name>
      <Type>instm</Type>
      <Scope>AbstractDelegatingSmartContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.html</Path>
    <Anchor>processContextConfiguration(org.springframework.test.context.ContextConfigurationAttributes)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processContextConfiguration(ContextConfigurationAttributes)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AnnotationConfigContextLoader.html</Path>
    <Anchor>processContextConfiguration(org.springframework.test.context.ContextConfigurationAttributes)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processContextConfiguration(ContextConfigurationAttributes)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigWebContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/AnnotationConfigWebContextLoader.html</Path>
    <Anchor>processContextConfiguration(org.springframework.test.context.ContextConfigurationAttributes)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processDeferredClose(SessionFactory)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>processDeferredClose(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent(EventRequest, EventResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>processEvent(javax.portlet.EventRequest, javax.portlet.EventResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFieldValue(String, String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>processFieldValue(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFinish(ActionRequest, ActionResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>processFinish(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFinish(HttpServletRequest, HttpServletResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>processFinish(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFormFieldValue(HttpServletRequest, String, String, String)</Name>
      <Type>intfm</Type>
      <Scope>RequestDataValueProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestDataValueProcessor.html</Path>
    <Anchor>processFormFieldValue(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFormSubmission(ActionRequest, ActionResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>processFormSubmission(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFormSubmission(ActionRequest, ActionResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>processFormSubmission(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFormSubmission(ActionRequest, ActionResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>processFormSubmission(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFormSubmission(HttpServletRequest, HttpServletResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFormSubmission(HttpServletRequest, HttpServletResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFormSubmission(HttpServletRequest, HttpServletResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>CancellableFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/CancellableFormController.html</Path>
    <Anchor>processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFormSubmission(HttpServletRequest, HttpServletResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processHandlerException(RenderRequest, RenderResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>processHandlerException(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processHandlerException(ResourceRequest, ResourceResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>processHandlerException(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processHandlerException(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>processHandlerException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processInjection(Object)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>processInjection(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processInjectionBasedOnCurrentContext(Object)</Name>
      <Type>clm</Type>
      <Scope>SpringBeanAutowiringSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/SpringBeanAutowiringSupport.html</Path>
    <Anchor>processInjectionBasedOnCurrentContext(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processInjectionBasedOnServletContext(Object, ServletContext)</Name>
      <Type>clm</Type>
      <Scope>SpringBeanAutowiringSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/SpringBeanAutowiringSupport.html</Path>
    <Anchor>processInjectionBasedOnServletContext(java.lang.Object, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processKey(ConfigurableListableBeanFactory, String, String)</Name>
      <Type>instm</Type>
      <Scope>PropertyOverrideConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html</Path>
    <Anchor>processKey(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processLocations(Class&amp;lt;?&amp;gt;, String...)</Name>
      <Type>intfm</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextLoader.html</Path>
    <Anchor>processLocations(java.lang.Class, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processLocations(Class&amp;lt;?&amp;gt;, String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractContextLoader.html</Path>
    <Anchor>processLocations(java.lang.Class, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processLocations(Class&amp;lt;?&amp;gt;, String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractDelegatingSmartContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.html</Path>
    <Anchor>processLocations(java.lang.Class, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMessage(Message, Session)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>processMessage(javax.jms.Message, javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMetaData(DataSource, List&amp;lt;String&amp;gt;, String[])</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>processMetaData(javax.sql.DataSource, java.util.List, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMetaData(DatabaseMetaData)</Name>
      <Type>intfm</Type>
      <Scope>DatabaseMetaDataCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseMetaDataCallback.html</Path>
    <Anchor>processMetaData(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMissingFieldError(String, BindingResult)</Name>
      <Type>intfm</Type>
      <Scope>BindingErrorProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingErrorProcessor.html</Path>
    <Anchor>processMissingFieldError(java.lang.String, org.springframework.validation.BindingResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMissingFieldError(String, BindingResult)</Name>
      <Type>instm</Type>
      <Scope>DefaultBindingErrorProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultBindingErrorProcessor.html</Path>
    <Anchor>processMissingFieldError(java.lang.String, org.springframework.validation.BindingResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processParameters(List&amp;lt;SqlParameter&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>processParameters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processProperties(ConfigurableListableBeanFactory, Properties)</Name>
      <Type>instm</Type>
      <Scope>PropertyOverrideConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html</Path>
    <Anchor>processProperties(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processProperties(ConfigurableListableBeanFactory, Properties)</Name>
      <Type>instm</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>processProperties(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processProperties(ConfigurableListableBeanFactory, Properties)</Name>
      <Type>instm</Type>
      <Scope>PropertyResourceConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyResourceConfigurer.html</Path>
    <Anchor>processProperties(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processProperties(ConfigurableListableBeanFactory, ConfigurablePropertyResolver)</Name>
      <Type>instm</Type>
      <Scope>PropertySourcesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/PropertySourcesPlaceholderConfigurer.html</Path>
    <Anchor>processProperties(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, org.springframework.core.env.ConfigurablePropertyResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processProperties(ConfigurableListableBeanFactory, Properties)</Name>
      <Type>instm</Type>
      <Scope>PropertySourcesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/PropertySourcesPlaceholderConfigurer.html</Path>
    <Anchor>processProperties(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processPropertyAccessException(PropertyAccessException, BindingResult)</Name>
      <Type>intfm</Type>
      <Scope>BindingErrorProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingErrorProcessor.html</Path>
    <Anchor>processPropertyAccessException(org.springframework.beans.PropertyAccessException, org.springframework.validation.BindingResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processPropertyAccessException(PropertyAccessException, BindingResult)</Name>
      <Type>instm</Type>
      <Scope>DefaultBindingErrorProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultBindingErrorProcessor.html</Path>
    <Anchor>processPropertyAccessException(org.springframework.beans.PropertyAccessException, org.springframework.validation.BindingResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processRequest(PortletRequest, PortletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>processRequest(javax.portlet.PortletRequest, javax.portlet.PortletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ViewRendererServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ViewRendererServlet.html</Path>
    <Anchor>processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processResourceAfterCommit(H)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>processResourceAfterCommit(H)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processResultSet(ResultSet, ResultSetSupportingSqlParameter)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>processResultSet(java.sql.ResultSet, org.springframework.jdbc.core.ResultSetSupportingSqlParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processRow(ResultSet)</Name>
      <Type>intfm</Type>
      <Scope>RowCallbackHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowCallbackHandler.html</Path>
    <Anchor>processRow(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processRow(ResultSet)</Name>
      <Type>instm</Type>
      <Scope>RowCountCallbackHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowCountCallbackHandler.html</Path>
    <Anchor>processRow(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processRow(ResultSet, int)</Name>
      <Type>instm</Type>
      <Scope>RowCountCallbackHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowCountCallbackHandler.html</Path>
    <Anchor>processRow(java.sql.ResultSet, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processTemplate(Template, SimpleHash, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>processTemplate(freemarker.template.Template, freemarker.template.SimpleHash, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processTemplateIntoString(Template, Object)</Name>
      <Type>clm</Type>
      <Scope>FreeMarkerTemplateUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerTemplateUtils.html</Path>
    <Anchor>processTemplateIntoString(freemarker.template.Template, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processUrl(HttpServletRequest, String)</Name>
      <Type>intfm</Type>
      <Scope>RequestDataValueProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestDataValueProcessor.html</Path>
    <Anchor>processUrl(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProducerCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/ProducerCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProducesRequestCondition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProducesRequestCondition(String...)</Name>
      <Type>Constructor</Type>
      <Scope>ProducesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.html</Path>
    <Anchor>ProducesRequestCondition(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProducesRequestCondition(String[], String[])</Name>
      <Type>Constructor</Type>
      <Scope>ProducesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.html</Path>
    <Anchor>ProducesRequestCondition(java.lang.String[], java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProducesRequestCondition(String[], String[], ContentNegotiationManager)</Name>
      <Type>Constructor</Type>
      <Scope>ProducesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.html</Path>
    <Anchor>ProducesRequestCondition(java.lang.String[], java.lang.String[], org.springframework.web.accept.ContentNegotiationManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>HandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerMapping.html</Path>
    <Anchor>PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Profile</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Profile.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROFILE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>PROFILE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>profileValueSource</Name>
      <Type>Field</Type>
      <Scope>AbstractAnnotationAwareTransactionalTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
    <Anchor>profileValueSource</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProfileValueSource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/ProfileValueSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>profileValueSource</Name>
      <Type>Field</Type>
      <Scope>AbstractJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html</Path>
    <Anchor>profileValueSource</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProfileValueSourceConfiguration</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/ProfileValueSourceConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProfileValueUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/ProfileValueUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProfileValueUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ProfileValueUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/ProfileValueUtils.html</Path>
    <Anchor>ProfileValueUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Projection</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Projection.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Projection(boolean, int, SpelNodeImpl)</Name>
      <Type>Constructor</Type>
      <Scope>Projection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Projection.html</Path>
    <Anchor>Projection(boolean, int, org.springframework.expression.spel.ast.SpelNodeImpl)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROP_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>PROP_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROP_THREAD_COUNT</Name>
      <Type>Field</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>PROP_THREAD_COUNT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Propagation</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.transaction.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/Propagation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPAGATION_MANDATORY</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>PROPAGATION_MANDATORY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPAGATION_NESTED</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>PROPAGATION_NESTED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPAGATION_NEVER</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>PROPAGATION_NEVER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPAGATION_NOT_SUPPORTED</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>PROPAGATION_NOT_SUPPORTED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPAGATION_REQUIRED</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>PROPAGATION_REQUIRED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPAGATION_REQUIRES_NEW</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>PROPAGATION_REQUIRES_NEW</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPAGATION_SUPPORTS</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>PROPAGATION_SUPPORTS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesBeanDefinitionReader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesBeanDefinitionReader(BeanDefinitionRegistry)</Name>
      <Type>Constructor</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>PropertiesBeanDefinitionReader(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/PropertiesEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesEditor()</Name>
      <Type>Constructor</Type>
      <Scope>PropertiesEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/PropertiesEditor.html</Path>
    <Anchor>PropertiesEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertiesFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>PropertiesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertiesFactoryBean.html</Path>
    <Anchor>PropertiesFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesLoaderSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesLoaderSupport()</Name>
      <Type>Constructor</Type>
      <Scope>PropertiesLoaderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderSupport.html</Path>
    <Anchor>PropertiesLoaderSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesLoaderUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesLoaderUtils()</Name>
      <Type>Constructor</Type>
      <Scope>PropertiesLoaderUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderUtils.html</Path>
    <Anchor>PropertiesLoaderUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesMethodNameResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.multiaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/PropertiesMethodNameResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesMethodNameResolver()</Name>
      <Type>Constructor</Type>
      <Scope>PropertiesMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/PropertiesMethodNameResolver.html</Path>
    <Anchor>PropertiesMethodNameResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesPersister</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertiesPersister.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesPropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertiesPropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertiesPropertySource(String, Properties)</Name>
      <Type>Constructor</Type>
      <Scope>PropertiesPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertiesPropertySource.html</Path>
    <Anchor>PropertiesPropertySource(java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Property</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.convert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/Property.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Property(Class&amp;lt;?&amp;gt;, Method, Method)</Name>
      <Type>Constructor</Type>
      <Scope>Property</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/Property.html</Path>
    <Anchor>Property(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Property(Class&amp;lt;?&amp;gt;, Method, Method, String)</Name>
      <Type>Constructor</Type>
      <Scope>Property</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/Property.html</Path>
    <Anchor>Property(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPERTY_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>PROPERTY_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPERTY_KEY_PREFIX</Name>
      <Type>Field</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>PROPERTY_KEY_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPERTY_KEY_PREFIX_CHAR</Name>
      <Type>Field</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>PROPERTY_KEY_PREFIX_CHAR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPERTY_KEY_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>PROPERTY_KEY_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPERTY_KEY_SUFFIX_CHAR</Name>
      <Type>Field</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>PROPERTY_KEY_SUFFIX_CHAR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyAccessException(PropertyChangeEvent, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessException.html</Path>
    <Anchor>PropertyAccessException(java.beans.PropertyChangeEvent, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessException.html</Path>
    <Anchor>PropertyAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyAccessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyAccessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/PropertyAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyAccessorFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessorFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyAccessorFactory()</Name>
      <Type>Constructor</Type>
      <Scope>PropertyAccessorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessorFactory.html</Path>
    <Anchor>PropertyAccessorFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyAccessorUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessorUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyAccessorUtils()</Name>
      <Type>Constructor</Type>
      <Scope>PropertyAccessorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessorUtils.html</Path>
    <Anchor>PropertyAccessorUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyBatchUpdateException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyBatchUpdateException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyBatchUpdateException(PropertyAccessException[])</Name>
      <Type>Constructor</Type>
      <Scope>PropertyBatchUpdateException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyBatchUpdateException.html</Path>
    <Anchor>PropertyBatchUpdateException(org.springframework.beans.PropertyAccessException[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PropertyComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyComparator(SortDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PropertyComparator.html</Path>
    <Anchor>PropertyComparator(org.springframework.beans.support.SortDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyComparator(String, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PropertyComparator.html</Path>
    <Anchor>PropertyComparator(java.lang.String, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyEditorRegistrar</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyEditorRegistry</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyEditorRegistrySupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyEditorRegistrySupport()</Name>
      <Type>Constructor</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>PropertyEditorRegistrySupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyEntry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/PropertyEntry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyEntry(String)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyEntry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/PropertyEntry.html</Path>
    <Anchor>PropertyEntry(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyOrFieldReference</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/PropertyOrFieldReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyOrFieldReference(boolean, String, int)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyOrFieldReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/PropertyOrFieldReference.html</Path>
    <Anchor>PropertyOrFieldReference(boolean, java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyOverrideConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyOverrideConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>PropertyOverrideConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html</Path>
    <Anchor>PropertyOverrideConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyPathFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPathFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyPathFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>PropertyPathFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPathFactoryBean.html</Path>
    <Anchor>PropertyPathFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyPlaceholderConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyPlaceholderConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>PropertyPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html</Path>
    <Anchor>PropertyPlaceholderConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyPlaceholderHelper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertyPlaceholderHelper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyPlaceholderHelper(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyPlaceholderHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertyPlaceholderHelper.html</Path>
    <Anchor>PropertyPlaceholderHelper(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyPlaceholderHelper(String, String, String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyPlaceholderHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertyPlaceholderHelper.html</Path>
    <Anchor>PropertyPlaceholderHelper(java.lang.String, java.lang.String, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyPlaceholderHelper.PlaceholderResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PropertyPlaceholderHelper.PlaceholderResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertyResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyResourceConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyResourceConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyResourceConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>PropertyResourceConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyResourceConfigurer.html</Path>
    <Anchor>PropertyResourceConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySource</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/PropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySource(String, T)</Name>
      <Type>Constructor</Type>
      <Scope>PropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySource.html</Path>
    <Anchor>PropertySource(java.lang.String, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySource(String)</Name>
      <Type>Constructor</Type>
      <Scope>PropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySource.html</Path>
    <Anchor>PropertySource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySource.StubPropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySource.StubPropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySource.StubPropertySource(String)</Name>
      <Type>Constructor</Type>
      <Scope>PropertySource.StubPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySource.StubPropertySource.html</Path>
    <Anchor>PropertySource.StubPropertySource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySources</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySources.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySourcesPlaceholderConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/PropertySourcesPlaceholderConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySourcesPlaceholderConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>PropertySourcesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/PropertySourcesPlaceholderConfigurer.html</Path>
    <Anchor>PropertySourcesPlaceholderConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySourcesPropertyResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySourcesPropertyResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertySourcesPropertyResolver(PropertySources)</Name>
      <Type>Constructor</Type>
      <Scope>PropertySourcesPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySourcesPropertyResolver.html</Path>
    <Anchor>PropertySourcesPropertyResolver(org.springframework.core.env.PropertySources)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>propertyToConstantNamePrefix(String)</Name>
      <Type>instm</Type>
      <Scope>Constants</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Constants.html</Path>
    <Anchor>propertyToConstantNamePrefix(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyValue</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyValue(String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
    <Anchor>PropertyValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyValue(PropertyValue)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
    <Anchor>PropertyValue(org.springframework.beans.PropertyValue)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyValue(PropertyValue, Object)</Name>
      <Type>Constructor</Type>
      <Scope>PropertyValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
    <Anchor>PropertyValue(org.springframework.beans.PropertyValue, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyValues</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValues.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyValuesEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValuesEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PropertyValuesEditor()</Name>
      <Type>Constructor</Type>
      <Scope>PropertyValuesEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValuesEditor.html</Path>
    <Anchor>PropertyValuesEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROPS_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>PROPS_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrototypeAspectInstanceFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/PrototypeAspectInstanceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrototypeAspectInstanceFactory(BeanFactory, String)</Name>
      <Type>Constructor</Type>
      <Scope>PrototypeAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/PrototypeAspectInstanceFactory.html</Path>
    <Anchor>PrototypeAspectInstanceFactory(org.springframework.beans.factory.BeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrototypeTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/PrototypeTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrototypeTargetSource()</Name>
      <Type>Constructor</Type>
      <Scope>PrototypeTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/PrototypeTargetSource.html</Path>
    <Anchor>PrototypeTargetSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProviderCreatingFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ProviderCreatingFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProviderCreatingFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ProviderCreatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ProviderCreatingFactoryBean.html</Path>
    <Anchor>ProviderCreatingFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provideXml(OutputStream)</Name>
      <Type>intfm</Type>
      <Scope>XmlBinaryStreamProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/xml/XmlBinaryStreamProvider.html</Path>
    <Anchor>provideXml(java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provideXml(Writer)</Name>
      <Type>intfm</Type>
      <Scope>XmlCharacterStreamProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/xml/XmlCharacterStreamProvider.html</Path>
    <Anchor>provideXml(java.io.Writer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provideXml(Result)</Name>
      <Type>intfm</Type>
      <Scope>XmlResultProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/xml/XmlResultProvider.html</Path>
    <Anchor>provideXml(javax.xml.transform.Result)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>proxiedUserInterfaces(Object)</Name>
      <Type>clm</Type>
      <Scope>AopProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyUtils.html</Path>
    <Anchor>proxiedUserInterfaces(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>proxy</Name>
      <Type>Field</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>proxy</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROXY_TARGET_CLASS_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AopNamespaceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceUtils.html</Path>
    <Anchor>PROXY_TARGET_CLASS_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROXY_TARGET_CLASS_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>PROXY_TARGET_CLASS_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS</Name>
      <Type>Field</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyAsyncConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ProxyAsyncConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyAsyncConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>ProxyAsyncConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ProxyAsyncConfiguration.html</Path>
    <Anchor>ProxyAsyncConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyCachingConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/ProxyCachingConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyCachingConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>ProxyCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/ProxyCachingConfiguration.html</Path>
    <Anchor>ProxyCachingConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyConfig</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyConfig()</Name>
      <Type>Constructor</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>ProxyConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyCreationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.autoproxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/ProxyCreationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyCreationContext()</Name>
      <Type>Constructor</Type>
      <Scope>ProxyCreationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/ProxyCreationContext.html</Path>
    <Anchor>ProxyCreationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyCreatorSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyCreatorSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyCreatorSupport()</Name>
      <Type>Constructor</Type>
      <Scope>ProxyCreatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyCreatorSupport.html</Path>
    <Anchor>ProxyCreatorSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyCreatorSupport(AopProxyFactory)</Name>
      <Type>Constructor</Type>
      <Scope>ProxyCreatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyCreatorSupport.html</Path>
    <Anchor>ProxyCreatorSupport(org.springframework.aop.framework.AopProxyFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactory()</Name>
      <Type>Constructor</Type>
      <Scope>ProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactory.html</Path>
    <Anchor>ProxyFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactory(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactory.html</Path>
    <Anchor>ProxyFactory(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactory(Class[])</Name>
      <Type>Constructor</Type>
      <Scope>ProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactory.html</Path>
    <Anchor>ProxyFactory(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactory(Class, Interceptor)</Name>
      <Type>Constructor</Type>
      <Scope>ProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactory.html</Path>
    <Anchor>ProxyFactory(java.lang.Class, org.aopalliance.intercept.Interceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactory(Class, TargetSource)</Name>
      <Type>Constructor</Type>
      <Scope>ProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactory.html</Path>
    <Anchor>ProxyFactory(java.lang.Class, org.springframework.aop.TargetSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>ProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/ProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/ProxyFactoryBean.html</Path>
    <Anchor>ProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyMethodInvocation</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/ProxyMethodInvocation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyTransactionManagementConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProxyTransactionManagementConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>ProxyTransactionManagementConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.html</Path>
    <Anchor>ProxyTransactionManagementConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishedInterfaces</Name>
      <Type>Field</Type>
      <Scope>IntroductionInfoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/IntroductionInfoSupport.html</Path>
    <Anchor>publishedInterfaces</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishEndpoint(Endpoint, WebService)</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>publishEndpoint(javax.xml.ws.Endpoint, javax.jws.WebService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishEndpoint(Endpoint, WebServiceProvider)</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>publishEndpoint(javax.xml.ws.Endpoint, javax.xml.ws.WebServiceProvider)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishEndpoint(Endpoint, WebService)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>publishEndpoint(javax.xml.ws.Endpoint, javax.jws.WebService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishEndpoint(Endpoint, WebServiceProvider)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>publishEndpoint(javax.xml.ws.Endpoint, javax.xml.ws.WebServiceProvider)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishEndpoint(Endpoint, WebService)</Name>
      <Type>instm</Type>
      <Scope>SimpleJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter.html</Path>
    <Anchor>publishEndpoint(javax.xml.ws.Endpoint, javax.jws.WebService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishEndpoint(Endpoint, WebServiceProvider)</Name>
      <Type>instm</Type>
      <Scope>SimpleJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter.html</Path>
    <Anchor>publishEndpoint(javax.xml.ws.Endpoint, javax.xml.ws.WebServiceProvider)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishEndpoints()</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>publishEndpoints()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishEvent(ApplicationEvent)</Name>
      <Type>intfm</Type>
      <Scope>ApplicationEventPublisher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationEventPublisher.html</Path>
    <Anchor>publishEvent(org.springframework.context.ApplicationEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publishEvent(ApplicationEvent)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>publishEvent(org.springframework.context.ApplicationEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push(ParseState.Entry)</Name>
      <Type>instm</Type>
      <Scope>ParseState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ParseState.html</Path>
    <Anchor>push(org.springframework.beans.factory.parsing.ParseState.Entry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushActiveContextObject(TypedValue)</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>pushActiveContextObject(org.springframework.expression.TypedValue)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushContainingComponent(CompositeComponentDefinition)</Name>
      <Type>instm</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushNestedPath(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>pushNestedPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushNestedPath(String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>pushNestedPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushNestedPath(String)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>pushNestedPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushNestedPath(String)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>pushNestedPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(Object, Object)</Name>
      <Type>intfm</Type>
      <Scope>Cache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/Cache.html</Path>
    <Anchor>put(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCache.html</Path>
    <Anchor>put(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>EhCacheCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheCache.html</Path>
    <Anchor>put(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>JCacheCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheCache.html</Path>
    <Anchor>put(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareCacheDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/TransactionAwareCacheDecorator.html</Path>
    <Anchor>put(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(String, List&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>put(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(String, Object...)</Name>
      <Type>clm</Type>
      <Scope>MockMvcRequestBuilders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.html</Path>
    <Anchor>put(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(K, V)</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>put(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(K, V)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>put(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(String, V)</Name>
      <Type>instm</Type>
      <Scope>LinkedCaseInsensitiveMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedCaseInsensitiveMap.html</Path>
    <Anchor>put(java.lang.String, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(K, List&amp;lt;V&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>put(K, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(String, Object)</Name>
      <Type>instm</Type>
      <Scope>BindingAwareModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/support/BindingAwareModelMap.html</Path>
    <Anchor>put(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(String, Object, Object...)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>put(java.lang.String, java.lang.Object, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(String, Object, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>put(java.lang.String, java.lang.Object, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(URI, Object)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>put(java.net.URI, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(String, Object, Object...)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>put(java.lang.String, java.lang.Object, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(String, Object, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>put(java.lang.String, java.lang.Object, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(URI, Object)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>put(java.net.URI, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put(String, Object)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>put(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>putAll(Map&amp;lt;? extends String, ? extends List&amp;lt;String&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>putAll(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>putAll(Map&amp;lt;? extends K, ? extends V&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>putAll(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>putAll(Map&amp;lt;? extends String, ? extends V&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>LinkedCaseInsensitiveMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedCaseInsensitiveMap.html</Path>
    <Anchor>putAll(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>putAll(Map&amp;lt;? extends K, ? extends List&amp;lt;V&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>putAll(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>putAll(Map&amp;lt;? extends String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>BindingAwareModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/support/BindingAwareModelMap.html</Path>
    <Anchor>putAll(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>putAll(Map&amp;lt;? extends String, ? extends Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>putAll(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>putIfAbsent(Object, Object)</Name>
      <Type>intfm</Type>
      <Scope>ConcurrentMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConcurrentMap.html</Path>
    <Anchor>putIfAbsent(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>putIfAbsent(K, V)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>putIfAbsent(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>putValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>putValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
</Tokens>
