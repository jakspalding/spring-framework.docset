<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>H2SequenceMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/H2SequenceMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>H2SequenceMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>H2SequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/H2SequenceMaxValueIncrementer.html</Path>
    <Anchor>H2SequenceMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>H2SequenceMaxValueIncrementer(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>H2SequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/H2SequenceMaxValueIncrementer.html</Path>
    <Anchor>H2SequenceMaxValueIncrementer(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpExchange)</Name>
      <Type>instm</Type>
      <Scope>SimpleBurlapServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/SimpleBurlapServiceExporter.html</Path>
    <Anchor>handle(com.sun.net.httpserver.HttpExchange)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpExchange)</Name>
      <Type>instm</Type>
      <Scope>SimpleHessianServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/SimpleHessianServiceExporter.html</Path>
    <Anchor>handle(com.sun.net.httpserver.HttpExchange)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpExchange)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html</Path>
    <Anchor>handle(com.sun.net.httpserver.HttpExchange)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(MvcResult)</Name>
      <Type>instm</Type>
      <Scope>PrintingResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/PrintingResultHandler.html</Path>
    <Anchor>handle(org.springframework.test.web.servlet.MvcResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(MvcResult)</Name>
      <Type>intfm</Type>
      <Scope>ResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/ResultHandler.html</Path>
    <Anchor>handle(org.springframework.test.web.servlet.MvcResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleServletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleServletHandlerAdapter.html</Path>
    <Anchor>handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerAdapter.html</Path>
    <Anchor>handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpServletRequest, HttpServletResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractCommandController.html</Path>
    <Anchor>handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>HttpRequestHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/HttpRequestHandlerAdapter.html</Path>
    <Anchor>handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.html</Path>
    <Anchor>handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleAction(ActionRequest, ActionResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletHandlerAdapter.html</Path>
    <Anchor>handleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleAction(ActionRequest, ActionResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerAdapter.html</Path>
    <Anchor>handleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleAction(ActionRequest, ActionResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
    <Anchor>handleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleAction(ActionRequest, ActionResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>handleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleAction(ActionRequest, ActionResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>handleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleActionRequest(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
    <Anchor>handleActionRequest(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleActionRequest(ActionRequest, ActionResponse)</Name>
      <Type>intfm</Type>
      <Scope>Controller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/Controller.html</Path>
    <Anchor>handleActionRequest(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleActionRequest(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>PortletModeNameViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletModeNameViewController.html</Path>
    <Anchor>handleActionRequest(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleActionRequestInternal(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
    <Anchor>handleActionRequestInternal(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleActionRequestInternal(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
    <Anchor>handleActionRequestInternal(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleActionRequestInternal(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>handleActionRequestInternal(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleActionRequestInternal(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>handleActionRequestInternal(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleBindException(BindException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleBindException(org.springframework.validation.BindException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleBindException(BindException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleBindException(org.springframework.validation.BindException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleConnectFailure(MethodInvocation, Exception)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>handleConnectFailure(org.aopalliance.intercept.MethodInvocation, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleConversionNotSupported(ConversionNotSupportedException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleConversionNotSupported(org.springframework.beans.ConversionNotSupportedException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleConversionNotSupported(ConversionNotSupportedException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleConversionNotSupported(org.springframework.beans.ConversionNotSupportedException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError(Throwable)</Name>
      <Type>intfm</Type>
      <Scope>ErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ErrorHandler.html</Path>
    <Anchor>handleError(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError(ClientHttpResponse)</Name>
      <Type>instm</Type>
      <Scope>DefaultResponseErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/DefaultResponseErrorHandler.html</Path>
    <Anchor>handleError(org.springframework.http.client.ClientHttpResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError(ClientHttpResponse)</Name>
      <Type>intfm</Type>
      <Scope>ResponseErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/ResponseErrorHandler.html</Path>
    <Anchor>handleError(org.springframework.http.client.ClientHttpResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent(EventRequest, EventResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletHandlerAdapter.html</Path>
    <Anchor>handleEvent(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent(EventRequest, EventResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerAdapter.html</Path>
    <Anchor>handleEvent(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent(EventRequest, EventResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>handleEvent(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent(EventRequest, EventResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>handleEvent(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEventRequest(EventRequest, EventResponse)</Name>
      <Type>intfm</Type>
      <Scope>EventAwareController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/EventAwareController.html</Path>
    <Anchor>handleEventRequest(javax.portlet.EventRequest, javax.portlet.EventResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEventRequest(EventRequest, EventResponse)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>handleEventRequest(javax.portlet.EventRequest, javax.portlet.EventResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleException(Exception, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleException(java.lang.Exception, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleExceptionInternal(java.lang.Exception, java.lang.Object, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleGetObject(String)</Name>
      <Type>instm</Type>
      <Scope>MessageSourceResourceBundle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/MessageSourceResourceBundle.html</Path>
    <Anchor>handleGetObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleHttpMediaTypeNotAcceptable(org.springframework.web.HttpMediaTypeNotAcceptableException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleHttpMediaTypeNotAcceptable(org.springframework.web.HttpMediaTypeNotAcceptableException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleHttpMediaTypeNotSupported(org.springframework.web.HttpMediaTypeNotSupportedException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleHttpMediaTypeNotSupported(org.springframework.web.HttpMediaTypeNotSupportedException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpMessageNotReadable(HttpMessageNotReadableException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleHttpMessageNotReadable(org.springframework.http.converter.HttpMessageNotReadableException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpMessageNotReadable(HttpMessageNotReadableException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleHttpMessageNotReadable(org.springframework.http.converter.HttpMessageNotReadableException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpMessageNotWritable(HttpMessageNotWritableException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleHttpMessageNotWritable(org.springframework.http.converter.HttpMessageNotWritableException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpMessageNotWritable(HttpMessageNotWritableException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleHttpMessageNotWritable(org.springframework.http.converter.HttpMessageNotWritableException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleHttpRequestMethodNotSupported(org.springframework.web.HttpRequestMethodNotSupportedException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleHttpRequestMethodNotSupported(org.springframework.web.HttpRequestMethodNotSupportedException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleInternal(HttpServletRequest, HttpServletResponse, HandlerMethod)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.html</Path>
    <Anchor>handleInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.method.HandlerMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleInternal(HttpServletRequest, HttpServletResponse, HandlerMethod)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>handleInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.method.HandlerMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleInvalidSubmit(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>handleInvalidSubmit(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleInvalidSubmit(ActionRequest, ActionResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>handleInvalidSubmit(javax.portlet.ActionRequest, javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleInvalidSubmit(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>handleInvalidSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleInvalidSubmit(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>handleInvalidSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleInvocationTargetException(InvocationTargetException)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>handleInvocationTargetException(java.lang.reflect.InvocationTargetException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleListenerException(Throwable)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>handleListenerException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleListenerException(Throwable)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>handleListenerException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleListenerSetupFailure(Throwable, boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>handleListenerSetupFailure(java.lang.Throwable, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMatch(String, MediaType)</Name>
      <Type>instm</Type>
      <Scope>AbstractMappingContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.html</Path>
    <Anchor>handleMatch(java.lang.String, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMatch(String, MediaType)</Name>
      <Type>instm</Type>
      <Scope>ParameterContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ParameterContentNegotiationStrategy.html</Path>
    <Anchor>handleMatch(java.lang.String, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMatch(String, MediaType)</Name>
      <Type>instm</Type>
      <Scope>PathExtensionContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.html</Path>
    <Anchor>handleMatch(java.lang.String, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMatch(T, String, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>handleMatch(T, java.lang.String, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMatch(RequestMappingInfo, String, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingInfoHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.html</Path>
    <Anchor>handleMatch(org.springframework.web.servlet.mvc.method.RequestMappingInfo, java.lang.String, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMessage(IMessage)</Name>
      <Type>instm</Type>
      <Scope>AspectJWeaverMessageHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html</Path>
    <Anchor>handleMessage(org.aspectj.bridge.IMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMethodArgumentNotValidException(MethodArgumentNotValidException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleMethodArgumentNotValidException(org.springframework.web.bind.MethodArgumentNotValidException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingServletRequestParameter(MissingServletRequestParameterException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleMissingServletRequestParameter(org.springframework.web.bind.MissingServletRequestParameterException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingServletRequestParameter(MissingServletRequestParameterException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleMissingServletRequestParameter(org.springframework.web.bind.MissingServletRequestParameterException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingServletRequestPart(MissingServletRequestPartException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleMissingServletRequestPart(org.springframework.web.multipart.support.MissingServletRequestPartException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingServletRequestPartException(MissingServletRequestPartException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleMissingServletRequestPartException(org.springframework.web.multipart.support.MissingServletRequestPartException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingValue(String, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>AbstractCookieValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractCookieValueMethodArgumentResolver.html</Path>
    <Anchor>handleMissingValue(java.lang.String, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingValue(String, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>AbstractNamedValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.html</Path>
    <Anchor>handleMissingValue(java.lang.String, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingValue(String, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ExpressionValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExpressionValueMethodArgumentResolver.html</Path>
    <Anchor>handleMissingValue(java.lang.String, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingValue(String, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestHeaderMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver.html</Path>
    <Anchor>handleMissingValue(java.lang.String, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingValue(String, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestParamMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.html</Path>
    <Anchor>handleMissingValue(java.lang.String, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingValue(String, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>MatrixVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMethodArgumentResolver.html</Path>
    <Anchor>handleMissingValue(java.lang.String, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMissingValue(String, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>PathVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMethodArgumentResolver.html</Path>
    <Anchor>handleMissingValue(java.lang.String, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleMultipleRowsFound()</Name>
      <Type>instm</Type>
      <Scope>AbstractLobStreamingResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobStreamingResultSetExtractor.html</Path>
    <Anchor>handleMultipleRowsFound()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNavigation(FacesContext, String, String)</Name>
      <Type>instm</Type>
      <Scope>DecoratingNavigationHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DecoratingNavigationHandler.html</Path>
    <Anchor>handleNavigation(javax.faces.context.FacesContext, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNavigation(FacesContext, String, String, NavigationHandler)</Name>
      <Type>instm</Type>
      <Scope>DecoratingNavigationHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DecoratingNavigationHandler.html</Path>
    <Anchor>handleNavigation(javax.faces.context.FacesContext, java.lang.String, java.lang.String, javax.faces.application.NavigationHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNavigation(FacesContext, String, String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingNavigationHandlerProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingNavigationHandlerProxy.html</Path>
    <Anchor>handleNavigation(javax.faces.context.FacesContext, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNoMatch(NativeWebRequest, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractMappingContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.html</Path>
    <Anchor>handleNoMatch(org.springframework.web.context.request.NativeWebRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNoMatch(NativeWebRequest, String)</Name>
      <Type>instm</Type>
      <Scope>PathExtensionContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.html</Path>
    <Anchor>handleNoMatch(org.springframework.web.context.request.NativeWebRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNoMatch(NativeWebRequest, String)</Name>
      <Type>instm</Type>
      <Scope>ServletPathExtensionContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ServletPathExtensionContentNegotiationStrategy.html</Path>
    <Anchor>handleNoMatch(org.springframework.web.context.request.NativeWebRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNoMatch(Set&amp;lt;T&amp;gt;, String, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>handleNoMatch(java.util.Set, java.lang.String, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNoMatch(Set&amp;lt;RequestMappingInfo&amp;gt;, String, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingInfoHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.html</Path>
    <Anchor>handleNoMatch(java.util.Set, java.lang.String, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNoRowFound()</Name>
      <Type>instm</Type>
      <Scope>AbstractLobStreamingResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobStreamingResultSetExtractor.html</Path>
    <Anchor>handleNoRowFound()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleNoSuchRequestHandlingMethod(org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>handleNoSuchRequestHandlingMethod(org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleNoSuchRequestHandlingMethod(org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNotAuthorized(PortletRequest, PortletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>UserRoleAuthorizationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/UserRoleAuthorizationInterceptor.html</Path>
    <Anchor>handleNotAuthorized(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleNotAuthorized(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>UserRoleAuthorizationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/UserRoleAuthorizationInterceptor.html</Path>
    <Anchor>handleNotAuthorized(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handlePageException(Exception)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>handlePageException(java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handlePageException(Throwable)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>handlePageException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handler()</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html</Path>
    <Anchor>handler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HANDLER_ADAPTER_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>HANDLER_ADAPTER_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HANDLER_ADAPTER_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>HANDLER_ADAPTER_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HANDLER_EXCEPTION_RESOLVER_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>HANDLER_EXCEPTION_RESOLVER_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HANDLER_EXCEPTION_RESOLVER_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>HANDLER_EXCEPTION_RESOLVER_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HANDLER_MAPPING_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>HANDLER_MAPPING_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HANDLER_MAPPING_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>HANDLER_MAPPING_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerAdapter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerAdapter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReflectionException(Exception)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>handleReflectionException(java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRemoteException(Method, RemoteException)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>handleRemoteException(java.lang.reflect.Method, java.rmi.RemoteException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRender(RenderRequest, RenderResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletHandlerAdapter.html</Path>
    <Anchor>handleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRender(RenderRequest, RenderResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerAdapter.html</Path>
    <Anchor>handleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRender(RenderRequest, RenderResponse, Object, BindException)</Name>
      <Type>instm</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
    <Anchor>handleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRender(RenderRequest, RenderResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>handleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRender(RenderRequest, RenderResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>handleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRenderRequest(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
    <Anchor>handleRenderRequest(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRenderRequest(RenderRequest, RenderResponse)</Name>
      <Type>intfm</Type>
      <Scope>Controller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/Controller.html</Path>
    <Anchor>handleRenderRequest(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRenderRequest(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>PortletModeNameViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletModeNameViewController.html</Path>
    <Anchor>handleRenderRequest(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRenderRequestInternal(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
    <Anchor>handleRenderRequestInternal(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRenderRequestInternal(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
    <Anchor>handleRenderRequestInternal(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRenderRequestInternal(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>handleRenderRequestInternal(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRenderRequestInternal(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>ParameterizableViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/ParameterizableViewController.html</Path>
    <Anchor>handleRenderRequestInternal(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRenderRequestInternal(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>handleRenderRequestInternal(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>BurlapServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapServiceExporter.html</Path>
    <Anchor>handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>HessianServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianServiceExporter.html</Path>
    <Anchor>handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html</Path>
    <Anchor>handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>intfm</Type>
      <Scope>HttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpRequestHandler.html</Path>
    <Anchor>handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractController.html</Path>
    <Anchor>handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>intfm</Type>
      <Scope>Controller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/Controller.html</Path>
    <Anchor>handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>DefaultServletHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/DefaultServletHttpRequestHandler.html</Path>
    <Anchor>handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ResourceHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html</Path>
    <Anchor>handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequestInternal(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractCommandController.html</Path>
    <Anchor>handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequestInternal(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractController.html</Path>
    <Anchor>handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequestInternal(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequestInternal(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractUrlViewController.html</Path>
    <Anchor>handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequestInternal(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequestInternal(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ParameterizableViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ParameterizableViewController.html</Path>
    <Anchor>handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequestInternal(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ServletForwardingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletForwardingController.html</Path>
    <Anchor>handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleRequestInternal(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>ServletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletWrappingController.html</Path>
    <Anchor>handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResolvedValue(Object, String, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractNamedValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.html</Path>
    <Anchor>handleResolvedValue(java.lang.Object, java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResolvedValue(Object, String, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>PathVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMethodArgumentResolver.html</Path>
    <Anchor>handleResolvedValue(java.lang.Object, java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResource(ResourceRequest, ResourceResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimplePortletHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimplePortletHandlerAdapter.html</Path>
    <Anchor>handleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResource(ResourceRequest, ResourceResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>HandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerAdapter.html</Path>
    <Anchor>handleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResource(ResourceRequest, ResourceResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>handleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResource(ResourceRequest, ResourceResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleControllerHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleControllerHandlerAdapter.html</Path>
    <Anchor>handleResource(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResourceRequest(ResourceRequest, ResourceResponse)</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>handleResourceRequest(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResourceRequest(ResourceRequest, ResourceResponse)</Name>
      <Type>intfm</Type>
      <Scope>ResourceAwareController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/ResourceAwareController.html</Path>
    <Anchor>handleResourceRequest(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResult(Object, Message, Session)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>handleResult(java.lang.Object, javax.jms.Message, javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleResult(Object)</Name>
      <Type>intfm</Type>
      <Scope>DeferredResult.DeferredResultHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.DeferredResultHandler.html</Path>
    <Anchor>handleResult(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>MapMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/MapMethodProcessor.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ModelMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelMethodProcessor.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>intfm</Type>
      <Scope>HandlerMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodReturnValueHandler.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodReturnValueHandlerComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>AsyncTaskMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AsyncTaskMethodReturnValueHandler.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>CallableMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/CallableMethodReturnValueHandler.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>DeferredResultMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/DeferredResultMethodReturnValueHandler.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HttpEntityMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ModelAndViewMethodReturnValueHandler.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewResolverMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ModelAndViewResolverMethodReturnValueHandler.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>RequestResponseBodyMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ViewMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ViewMethodReturnValueHandler.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleReturnValue(Object, MethodParameter, ModelAndViewContainer, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ViewNameMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ViewNameMethodReturnValueHandler.html</Path>
    <Anchor>handleReturnValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExceptionResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handlerExceptionResolver()</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>handlerExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExceptionResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExceptionResolverComposite</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerExceptionResolverComposite.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExceptionResolverComposite()</Name>
      <Type>Constructor</Type>
      <Scope>HandlerExceptionResolverComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerExceptionResolverComposite.html</Path>
    <Anchor>HandlerExceptionResolverComposite()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExecutionChain</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerExecutionChain.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExecutionChain(Object)</Name>
      <Type>Constructor</Type>
      <Scope>HandlerExecutionChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerExecutionChain.html</Path>
    <Anchor>HandlerExecutionChain(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExecutionChain(Object, HandlerInterceptor[])</Name>
      <Type>Constructor</Type>
      <Scope>HandlerExecutionChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerExecutionChain.html</Path>
    <Anchor>HandlerExecutionChain(java.lang.Object, org.springframework.web.portlet.HandlerInterceptor[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExecutionChain</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerExecutionChain.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExecutionChain(Object)</Name>
      <Type>Constructor</Type>
      <Scope>HandlerExecutionChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerExecutionChain.html</Path>
    <Anchor>HandlerExecutionChain(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerExecutionChain(Object, HandlerInterceptor[])</Name>
      <Type>Constructor</Type>
      <Scope>HandlerExecutionChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerExecutionChain.html</Path>
    <Anchor>HandlerExecutionChain(java.lang.Object, org.springframework.web.servlet.HandlerInterceptor[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerInterceptor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerInterceptor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerInterceptorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerInterceptorAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>HandlerInterceptorAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerInterceptorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerInterceptorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerInterceptorAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>HandlerInterceptorAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMapping</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMapping</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethod</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethod.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethod(Object, Method)</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethod.html</Path>
    <Anchor>HandlerMethod(java.lang.Object, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethod(Object, String, Class&amp;lt;?&amp;gt;...)</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethod.html</Path>
    <Anchor>HandlerMethod(java.lang.Object, java.lang.String, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethod(String, BeanFactory, Method)</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethod.html</Path>
    <Anchor>HandlerMethod(java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethod(HandlerMethod)</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethod.html</Path>
    <Anchor>HandlerMethod(org.springframework.web.method.HandlerMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodArgumentResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.method.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodArgumentResolverComposite</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodArgumentResolverComposite()</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethodArgumentResolverComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.html</Path>
    <Anchor>HandlerMethodArgumentResolverComposite()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodInvocationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.bind.annotation.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvocationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodInvocationException(Method, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethodInvocationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvocationException.html</Path>
    <Anchor>HandlerMethodInvocationException(java.lang.reflect.Method, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodInvoker</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind.annotation.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodInvoker(HandlerMethodResolver)</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>HandlerMethodInvoker(org.springframework.web.bind.annotation.support.HandlerMethodResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodInvoker(HandlerMethodResolver, WebBindingInitializer)</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>HandlerMethodInvoker(org.springframework.web.bind.annotation.support.HandlerMethodResolver, org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodInvoker(HandlerMethodResolver, WebBindingInitializer, SessionAttributeStore, ParameterNameDiscoverer, WebArgumentResolver[], HttpMessageConverter[])</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>HandlerMethodInvoker(org.springframework.web.bind.annotation.support.HandlerMethodResolver, org.springframework.web.bind.support.WebBindingInitializer, org.springframework.web.bind.support.SessionAttributeStore, org.springframework.core.ParameterNameDiscoverer, org.springframework.web.bind.support.WebArgumentResolver[], org.springframework.http.converter.HttpMessageConverter[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind.annotation.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodResolver()</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
    <Anchor>HandlerMethodResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodReturnValueHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.method.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodReturnValueHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodReturnValueHandlerComposite</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodReturnValueHandlerComposite()</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethodReturnValueHandlerComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.html</Path>
    <Anchor>HandlerMethodReturnValueHandlerComposite()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodSelector</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethodSelector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerMethodSelector()</Name>
      <Type>Constructor</Type>
      <Scope>HandlerMethodSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethodSelector.html</Path>
    <Anchor>HandlerMethodSelector()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handlerMethodsInitialized(Map&amp;lt;T, HandlerMethod&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>handlerMethodsInitialized(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerResultMatchers</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.result</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/HandlerResultMatchers.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HandlerResultMatchers()</Name>
      <Type>Constructor</Type>
      <Scope>HandlerResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/HandlerResultMatchers.html</Path>
    <Anchor>HandlerResultMatchers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handlerType(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HandlerResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/HandlerResultMatchers.html</Path>
    <Anchor>handlerType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleServletRequestBindingException(ServletRequestBindingException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleServletRequestBindingException(org.springframework.web.bind.ServletRequestBindingException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleServletRequestBindingException(ServletRequestBindingException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleServletRequestBindingException(org.springframework.web.bind.ServletRequestBindingException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleTimeout(NativeWebRequest, Callable&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>CallableProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptor.html</Path>
    <Anchor>handleTimeout(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleTimeout(NativeWebRequest, Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CallableProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter.html</Path>
    <Anchor>handleTimeout(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleTimeout(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>DeferredResultProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptor.html</Path>
    <Anchor>handleTimeout(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleTimeout(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DeferredResultProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptorAdapter.html</Path>
    <Anchor>handleTimeout(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleTimeout(NativeWebRequest, Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TimeoutCallableProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/TimeoutCallableProcessingInterceptor.html</Path>
    <Anchor>handleTimeout(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleTimeout(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TimeoutDeferredResultProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/TimeoutDeferredResultProcessingInterceptor.html</Path>
    <Anchor>handleTimeout(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleTypeMismatch(TypeMismatchException, HttpHeaders, HttpStatus, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntityExceptionHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html</Path>
    <Anchor>handleTypeMismatch(org.springframework.beans.TypeMismatchException, org.springframework.http.HttpHeaders, org.springframework.http.HttpStatus, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleTypeMismatch(TypeMismatchException, HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html</Path>
    <Anchor>handleTypeMismatch(org.springframework.beans.TypeMismatchException, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleWarnings(Statement)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>handleWarnings(java.sql.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleWarnings(SQLWarning)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>handleWarnings(java.sql.SQLWarning)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAncestorOfType(Tag, Class)</Name>
      <Type>clm</Type>
      <Scope>TagUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/TagUtils.html</Path>
    <Anchor>hasAncestorOfType(javax.servlet.jsp.tagext.Tag, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAnnotatedMethods(String)</Name>
      <Type>intfm</Type>
      <Scope>AnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/AnnotationMetadata.html</Path>
    <Anchor>hasAnnotatedMethods(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAnnotatedMethods(String)</Name>
      <Type>instm</Type>
      <Scope>StandardAnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardAnnotationMetadata.html</Path>
    <Anchor>hasAnnotatedMethods(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAnnotation(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>hasAnnotation(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAnnotation(String)</Name>
      <Type>intfm</Type>
      <Scope>AnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/AnnotationMetadata.html</Path>
    <Anchor>hasAnnotation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAnnotation(String)</Name>
      <Type>instm</Type>
      <Scope>StandardAnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardAnnotationMetadata.html</Path>
    <Anchor>hasAnnotation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAtLeastOneMethodWithName(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>hasAtLeastOneMethodWithName(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAttribute(String)</Name>
      <Type>intfm</Type>
      <Scope>AttributeAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessor.html</Path>
    <Anchor>hasAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>AttributeAccessorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessorSupport.html</Path>
    <Anchor>hasAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBeanClass()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>hasBeanClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBeanFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>hasBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBeforeDeliveryBeenCalled()</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory.AbstractMessageEndpoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html</Path>
    <Anchor>hasBeforeDeliveryBeenCalled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBody()</Name>
      <Type>instm</Type>
      <Scope>HttpEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpEntity.html</Path>
    <Anchor>hasBody()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasCachedContext(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSpringContextTests.html</Path>
    <Anchor>hasCachedContext(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasClasses()</Name>
      <Type>instm</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>hasClasses()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasConcurrentResult()</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>hasConcurrentResult()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasConnection()</Name>
      <Type>instm</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>hasConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasConnectionHolder()</Name>
      <Type>instm</Type>
      <Scope>JdbcTransactionObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html</Path>
    <Anchor>hasConnectionHolder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasConstructor(Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;...)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>hasConstructor(java.lang.Class, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasConstructorArgumentValues()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>hasConstructorArgumentValues()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasCustomEditorForElement(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>hasCustomEditorForElement(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasDependentBean(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>hasDependentBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasDestructionAwareBeanPostProcessors()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>hasDestructionAwareBeanPostProcessors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEnclosingClass()</Name>
      <Type>intfm</Type>
      <Scope>ClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/ClassMetadata.html</Path>
    <Anchor>hasEnclosingClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEnclosingClass()</Name>
      <Type>instm</Type>
      <Scope>StandardClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardClassMetadata.html</Path>
    <Anchor>hasEnclosingClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasError(ClientHttpResponse)</Name>
      <Type>instm</Type>
      <Scope>DefaultResponseErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/DefaultResponseErrorHandler.html</Path>
    <Anchor>hasError(org.springframework.http.client.ClientHttpResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasError(HttpStatus)</Name>
      <Type>instm</Type>
      <Scope>DefaultResponseErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/DefaultResponseErrorHandler.html</Path>
    <Anchor>hasError(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasError(ClientHttpResponse)</Name>
      <Type>intfm</Type>
      <Scope>ResponseErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/ResponseErrorHandler.html</Path>
    <Anchor>hasError(org.springframework.http.client.ClientHttpResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasErrors()</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>hasErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasErrors()</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>hasErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasErrors()</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>hasErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasErrors()</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>hasErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasErrors()</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>hasErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasErrors()</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>hasErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasException()</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationResult.html</Path>
    <Anchor>hasException()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasExceptionMappings()</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExceptionHandlerMethodResolver.html</Path>
    <Anchor>hasExceptionMappings()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFieldErrors()</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>hasFieldErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFieldErrors(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>hasFieldErrors(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFieldErrors()</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>hasFieldErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFieldErrors(String)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>hasFieldErrors(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFieldErrors()</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>hasFieldErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFieldErrors(String)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>hasFieldErrors(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFieldErrors()</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>hasFieldErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFieldErrors(String)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>hasFieldErrors(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasGlobalErrors()</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>hasGlobalErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasGlobalErrors()</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>hasGlobalErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasGlobalErrors()</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>hasGlobalErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasGlobalErrors()</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>hasGlobalErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HASH_CODE_KEY</Name>
      <Type>Field</Type>
      <Scope>IdentityNamingStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/IdentityNamingStrategy.html</Path>
    <Anchor>HASH_CODE_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasHandlerMethods()</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
    <Anchor>hasHandlerMethods()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AspectJPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJPointcutAdvisor.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AbstractPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractPointcutAdvisor.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AbstractRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMethodMatcher.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ControlFlowPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ControlFlowPointcut.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>DefaultIntroductionAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultIntroductionAdvisor.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcut.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>EmptyTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/EmptyTargetSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>HotSwappableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/HotSwappableTargetSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>SingletonTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/SingletonTargetSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>BeanMetadataAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttribute.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>clm</Type>
      <Scope>BeansException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeansException.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>InjectionMetadata.InjectedElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionHolder.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>BeanExpressionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanExpressionContext.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>RuntimeBeanNameReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanNameReference.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>RuntimeBeanReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanReference.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>LookupOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/LookupOverride.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>MethodOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverride.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>MethodOverrides</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverrides.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ReplaceOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ReplaceOverride.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>PropertyValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>MutableSortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/MutableSortDefinition.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>SpringCacheAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/SpringCacheAnnotationParser.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>CacheOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperation.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>NameMatchCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/NameMatchCacheOperationSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageSourceResolvable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AttributeAccessorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessorSupport.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>GenericConverter.ConvertiblePair</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/GenericConverter.ConvertiblePair.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>Property</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/Property.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AbstractLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractLabeledEnum.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>PropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AbstractResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ByteArrayResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ByteArrayResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ClassPathResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassPathResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>DescriptiveResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DescriptiveResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>FileSystemResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>InputStreamResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/InputStreamResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>EncodedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/EncodedResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>UrlResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/UrlResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>VfsResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/VfsResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>MethodParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/MethodParameter.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ParameterizedTypeReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ParameterizedTypeReference.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>HttpEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpEntity.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ResponseEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/ResponseEntity.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/NotificationListenerHolder.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
    <Anchor>hashCode(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>CronSequenceGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/CronSequenceGenerator.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>CronTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/CronTrigger.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>PeriodicTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/PeriodicTrigger.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>MergedContextConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/MergedContextConfiguration.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>WebMergedContextConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/WebMergedContextConfiguration.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>Ejb3TransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/Ejb3TransactionAnnotationParser.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>SpringTransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>MatchAlwaysTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MatchAlwaysTransactionAttributeSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>NameMatchTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>RollbackRuleAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RollbackRuleAttribute.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>DelegatingTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DelegatingTransactionDefinition.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>BooleanComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/BooleanComparator.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>InvertibleComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InvertibleComparator.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>NullSafeComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/NullSafeComparator.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap.Entry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Entry.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode(boolean)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>hashCode(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode(double)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>hashCode(double)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode(float)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>hashCode(float)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode(long)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>hashCode(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>FieldError</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/FieldError.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ObjectError</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ObjectError.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ServletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>ControllerAdviceBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/ControllerAdviceBean.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>HandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethod.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>PortletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResource.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/AbstractRequestCondition.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashCode()</Name>
      <Type>instm</Type>
      <Scope>RequestMappingInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfo.html</Path>
    <Anchor>hashCode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasIndexedArgumentValue(int)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>hasIndexedArgumentValue(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasInstantiationAwareBeanPostProcessors()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>hasInstantiationAwareBeanPostProcessors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasInvocationTargetException()</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationResult.html</Path>
    <Anchor>hasInvocationTargetException()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasLength(String, String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>hasLength(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasLength(String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>hasLength(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasLength(CharSequence)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>hasLength(java.lang.CharSequence)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasLength(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>hasLength(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasLocations()</Name>
      <Type>instm</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>hasLocations()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMessageBody(ClientHttpResponse)</Name>
      <Type>instm</Type>
      <Scope>HttpMessageConverterExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpMessageConverterExtractor.html</Path>
    <Anchor>hasMessageBody(org.springframework.http.client.ClientHttpResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMetaAnnotation(String)</Name>
      <Type>intfm</Type>
      <Scope>AnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/AnnotationMetadata.html</Path>
    <Anchor>hasMetaAnnotation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMetaAnnotation(String)</Name>
      <Type>instm</Type>
      <Scope>StandardAnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardAnnotationMetadata.html</Path>
    <Anchor>hasMetaAnnotation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMethod(Class&amp;lt;?&amp;gt;, String, Class&amp;lt;?&amp;gt;...)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>hasMethod(java.lang.Class, java.lang.String, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasNext()</Name>
      <Type>instm</Type>
      <Scope>CompositeIterator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CompositeIterator.html</Path>
    <Anchor>hasNext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasNoErrors()</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>hasNoErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParameterAnnotation(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MethodParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/MethodParameter.html</Path>
    <Anchor>hasParameterAnnotation(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParameterAnnotations()</Name>
      <Type>instm</Type>
      <Scope>MethodParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/MethodParameter.html</Path>
    <Anchor>hasParameterAnnotations()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPropertyOverridesFor(String)</Name>
      <Type>instm</Type>
      <Scope>PropertyOverrideConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html</Path>
    <Anchor>hasPropertyOverridesFor(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasQualifier(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>hasQualifier(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasResource(Object)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>hasResource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasResources()</Name>
      <Type>instm</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>hasResources()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSavepoint()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>hasSavepoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSavepoint()</Name>
      <Type>intfm</Type>
      <Scope>TransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionStatus.html</Path>
    <Anchor>hasSavepoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSessionAttributes()</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
    <Anchor>hasSessionAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSessionAttributes()</Name>
      <Type>instm</Type>
      <Scope>SessionAttributesHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionAttributesHandler.html</Path>
    <Anchor>hasSessionAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSubmitParameter(PortletRequest, String)</Name>
      <Type>clm</Type>
      <Scope>PortletUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/util/PortletUtils.html</Path>
    <Anchor>hasSubmitParameter(javax.portlet.PortletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSubmitParameter(ServletRequest, String)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>hasSubmitParameter(javax.servlet.ServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSuperClass()</Name>
      <Type>intfm</Type>
      <Scope>ClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/ClassMetadata.html</Path>
    <Anchor>hasSuperClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSuperClass()</Name>
      <Type>instm</Type>
      <Scope>StandardClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardClassMetadata.html</Path>
    <Anchor>hasSuperClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTargetType()</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>hasTargetType()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTasks()</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>hasTasks()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasText(String, String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>hasText(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasText(String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>hasText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasText(CharSequence)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>hasText(java.lang.CharSequence)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasText(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>hasText(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTimeout()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>hasTimeout()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTransaction()</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport.TransactionInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.TransactionInfo.html</Path>
    <Anchor>hasTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTransaction()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
    <Anchor>hasTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTransactionalSession(SessionFactory)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>hasTransactionalSession(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTypeLevelMapping()</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
    <Anchor>hasTypeLevelMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasUniqueObject(Collection)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>hasUniqueObject(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasValue(String)</Name>
      <Type>instm</Type>
      <Scope>BeanPropertySqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/BeanPropertySqlParameterSource.html</Path>
    <Anchor>hasValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasValue(String)</Name>
      <Type>instm</Type>
      <Scope>MapSqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/MapSqlParameterSource.html</Path>
    <Anchor>hasValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasValue(String)</Name>
      <Type>intfm</Type>
      <Scope>SqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/SqlParameterSource.html</Path>
    <Anchor>hasValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasView()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>hasView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasView()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>hasView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>header(String, Matcher&amp;lt;? super String&amp;gt;...)</Name>
      <Type>clm</Type>
      <Scope>MockRestRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/MockRestRequestMatchers.html</Path>
    <Anchor>header(java.lang.String, org.hamcrest.Matcher...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>header(String, String...)</Name>
      <Type>clm</Type>
      <Scope>MockRestRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/MockRestRequestMatchers.html</Path>
    <Anchor>header(java.lang.String, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>header(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>header(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>header()</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html</Path>
    <Anchor>header()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HEADER_CONTENT_DISPOSITION</Name>
      <Type>Field</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>HEADER_CONTENT_DISPOSITION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HeaderContentNegotiationStrategy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.accept</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/HeaderContentNegotiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HeaderContentNegotiationStrategy()</Name>
      <Type>Constructor</Type>
      <Scope>HeaderContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/HeaderContentNegotiationStrategy.html</Path>
    <Anchor>HeaderContentNegotiationStrategy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HeaderResultMatchers</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.result</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/HeaderResultMatchers.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HeaderResultMatchers()</Name>
      <Type>Constructor</Type>
      <Scope>HeaderResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/HeaderResultMatchers.html</Path>
    <Anchor>HeaderResultMatchers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headers(HttpHeaders)</Name>
      <Type>instm</Type>
      <Scope>DefaultResponseCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/DefaultResponseCreator.html</Path>
    <Anchor>headers(org.springframework.http.HttpHeaders)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headers(HttpHeaders)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>headers(org.springframework.http.HttpHeaders)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HeadersRequestCondition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/HeadersRequestCondition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HeadersRequestCondition(String...)</Name>
      <Type>Constructor</Type>
      <Scope>HeadersRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/HeadersRequestCondition.html</Path>
    <Anchor>HeadersRequestCondition(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headForHeaders(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>headForHeaders(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headForHeaders(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>headForHeaders(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headForHeaders(URI)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>headForHeaders(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headForHeaders(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>headForHeaders(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headForHeaders(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>headForHeaders(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headForHeaders(URI)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>headForHeaders(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HessianClientInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HessianClientInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>HessianClientInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HessianExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HessianExporter()</Name>
      <Type>Constructor</Type>
      <Scope>HessianExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
    <Anchor>HessianExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HessianProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HessianProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>HessianProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianProxyFactoryBean.html</Path>
    <Anchor>HessianProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HessianServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HessianServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>HessianServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianServiceExporter.html</Path>
    <Anchor>HessianServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HeuristicCompletionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/HeuristicCompletionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HeuristicCompletionException(int, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>HeuristicCompletionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/HeuristicCompletionException.html</Path>
    <Anchor>HeuristicCompletionException(int, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>HibernateAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateDaoSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/HibernateDaoSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateDaoSupport()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/HibernateDaoSupport.html</Path>
    <Anchor>HibernateDaoSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateExceptionTranslator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateExceptionTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateExceptionTranslator()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateExceptionTranslator.html</Path>
    <Anchor>HibernateExceptionTranslator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateExceptionTranslator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateExceptionTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateExceptionTranslator()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateExceptionTranslator.html</Path>
    <Anchor>HibernateExceptionTranslator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateInterceptor.html</Path>
    <Anchor>HibernateInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJdbcException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateJdbcException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJdbcException(JDBCException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateJdbcException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateJdbcException.html</Path>
    <Anchor>HibernateJdbcException(org.hibernate.JDBCException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJdbcException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateJdbcException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJdbcException(JDBCException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateJdbcException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateJdbcException.html</Path>
    <Anchor>HibernateJdbcException(org.hibernate.JDBCException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJpaDialect</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa.vendor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaDialect.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJpaDialect()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaDialect.html</Path>
    <Anchor>HibernateJpaDialect()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJpaSessionFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa.vendor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaSessionFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJpaSessionFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateJpaSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaSessionFactoryBean.html</Path>
    <Anchor>HibernateJpaSessionFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJpaVendorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa.vendor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateJpaVendorAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter.html</Path>
    <Anchor>HibernateJpaVendorAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateObjectRetrievalFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateObjectRetrievalFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateObjectRetrievalFailureException(UnresolvableObjectException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateObjectRetrievalFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateObjectRetrievalFailureException.html</Path>
    <Anchor>HibernateObjectRetrievalFailureException(org.hibernate.UnresolvableObjectException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateObjectRetrievalFailureException(WrongClassException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateObjectRetrievalFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateObjectRetrievalFailureException.html</Path>
    <Anchor>HibernateObjectRetrievalFailureException(org.hibernate.WrongClassException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateObjectRetrievalFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateObjectRetrievalFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateObjectRetrievalFailureException(UnresolvableObjectException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateObjectRetrievalFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateObjectRetrievalFailureException.html</Path>
    <Anchor>HibernateObjectRetrievalFailureException(org.hibernate.UnresolvableObjectException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateObjectRetrievalFailureException(WrongClassException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateObjectRetrievalFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateObjectRetrievalFailureException.html</Path>
    <Anchor>HibernateObjectRetrievalFailureException(org.hibernate.WrongClassException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateOperations</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateOptimisticLockingFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateOptimisticLockingFailureException(StaleObjectStateException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateOptimisticLockingFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException.html</Path>
    <Anchor>HibernateOptimisticLockingFailureException(org.hibernate.StaleObjectStateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateOptimisticLockingFailureException(StaleStateException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateOptimisticLockingFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException.html</Path>
    <Anchor>HibernateOptimisticLockingFailureException(org.hibernate.StaleStateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateOptimisticLockingFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateOptimisticLockingFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateOptimisticLockingFailureException(StaleObjectStateException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateOptimisticLockingFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateOptimisticLockingFailureException.html</Path>
    <Anchor>HibernateOptimisticLockingFailureException(org.hibernate.StaleObjectStateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateOptimisticLockingFailureException(StaleStateException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateOptimisticLockingFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateOptimisticLockingFailureException.html</Path>
    <Anchor>HibernateOptimisticLockingFailureException(org.hibernate.StaleStateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateQueryException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateQueryException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateQueryException(QueryException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateQueryException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateQueryException.html</Path>
    <Anchor>HibernateQueryException(org.hibernate.QueryException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateQueryException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateQueryException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateQueryException(QueryException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateQueryException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateQueryException.html</Path>
    <Anchor>HibernateQueryException(org.hibernate.QueryException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateSystemException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateSystemException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateSystemException(HibernateException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateSystemException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateSystemException.html</Path>
    <Anchor>HibernateSystemException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateSystemException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateSystemException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateSystemException(HibernateException)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateSystemException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateSystemException.html</Path>
    <Anchor>HibernateSystemException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTemplate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTemplate()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>HibernateTemplate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTemplate(SessionFactory)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>HibernateTemplate(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTemplate(SessionFactory, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>HibernateTemplate(org.hibernate.SessionFactory, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTransactionManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTransactionManager()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>HibernateTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTransactionManager(SessionFactory)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>HibernateTransactionManager(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTransactionManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTransactionManager()</Name>
      <Type>Constructor</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>HibernateTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HibernateTransactionManager(SessionFactory)</Name>
      <Type>Constructor</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>HibernateTransactionManager(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HiddenHttpMethodFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/HiddenHttpMethodFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HiddenHttpMethodFilter()</Name>
      <Type>Constructor</Type>
      <Scope>HiddenHttpMethodFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/HiddenHttpMethodFilter.html</Path>
    <Anchor>HiddenHttpMethodFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HiddenInputTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/HiddenInputTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HiddenInputTag()</Name>
      <Type>Constructor</Type>
      <Scope>HiddenInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/HiddenInputTag.html</Path>
    <Anchor>HiddenInputTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HierarchicalBeanFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/HierarchicalBeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HierarchicalMessageSource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/HierarchicalMessageSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HierarchicalThemeSource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.ui.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/HierarchicalThemeSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HIGHEST_PRECEDENCE</Name>
      <Type>Field</Type>
      <Scope>Ordered</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Ordered.html</Path>
    <Anchor>HIGHEST_PRECEDENCE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>host(String)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>host(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HotSwappableTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/HotSwappableTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HotSwappableTargetSource(Object)</Name>
      <Type>Constructor</Type>
      <Scope>HotSwappableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/HotSwappableTargetSource.html</Path>
    <Anchor>HotSwappableTargetSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HsqlMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/HsqlMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HsqlMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>HsqlMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/HsqlMaxValueIncrementer.html</Path>
    <Anchor>HsqlMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HsqlMaxValueIncrementer(DataSource, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>HsqlMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/HsqlMaxValueIncrementer.html</Path>
    <Anchor>HsqlMaxValueIncrementer(javax.sql.DataSource, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HsqlSequenceMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/HsqlSequenceMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HsqlSequenceMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>HsqlSequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/HsqlSequenceMaxValueIncrementer.html</Path>
    <Anchor>HsqlSequenceMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HsqlSequenceMaxValueIncrementer(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>HsqlSequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/HsqlSequenceMaxValueIncrementer.html</Path>
    <Anchor>HsqlSequenceMaxValueIncrementer(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HsqlTableMetaDataProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HsqlTableMetaDataProvider(DatabaseMetaData)</Name>
      <Type>Constructor</Type>
      <Scope>HsqlTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.html</Path>
    <Anchor>HsqlTableMetaDataProvider(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTML_ESCAPE_CONTEXT_PARAM</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>HTML_ESCAPE_CONTEXT_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>htmlEscape(String)</Name>
      <Type>clm</Type>
      <Scope>HtmlUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HtmlUtils.html</Path>
    <Anchor>htmlEscape(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>htmlEscapeDecimal(String)</Name>
      <Type>clm</Type>
      <Scope>HtmlUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HtmlUtils.html</Path>
    <Anchor>htmlEscapeDecimal(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>htmlEscapeHex(String)</Name>
      <Type>clm</Type>
      <Scope>HtmlUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HtmlUtils.html</Path>
    <Anchor>htmlEscapeHex(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HtmlEscapeTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/HtmlEscapeTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HtmlEscapeTag()</Name>
      <Type>Constructor</Type>
      <Scope>HtmlEscapeTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/HtmlEscapeTag.html</Path>
    <Anchor>HtmlEscapeTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HtmlEscapingAwareTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/HtmlEscapingAwareTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HtmlEscapingAwareTag()</Name>
      <Type>Constructor</Type>
      <Scope>HtmlEscapingAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/HtmlEscapingAwareTag.html</Path>
    <Anchor>HtmlEscapingAwareTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>htmlUnescape(String)</Name>
      <Type>clm</Type>
      <Scope>HtmlUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HtmlUtils.html</Path>
    <Anchor>htmlUnescape(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HtmlUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HtmlUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HtmlUtils()</Name>
      <Type>Constructor</Type>
      <Scope>HtmlUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HtmlUtils.html</Path>
    <Anchor>HtmlUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTP_HEADER_ACCEPT_ENCODING</Name>
      <Type>Field</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>HTTP_HEADER_ACCEPT_ENCODING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTP_HEADER_ACCEPT_LANGUAGE</Name>
      <Type>Field</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>HTTP_HEADER_ACCEPT_LANGUAGE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTP_HEADER_CONTENT_ENCODING</Name>
      <Type>Field</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>HTTP_HEADER_CONTENT_ENCODING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTP_HEADER_CONTENT_LENGTH</Name>
      <Type>Field</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>HTTP_HEADER_CONTENT_LENGTH</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTP_HEADER_CONTENT_TYPE</Name>
      <Type>Field</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>HTTP_HEADER_CONTENT_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTP_METHOD_POST</Name>
      <Type>Field</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>HTTP_METHOD_POST</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/HttpAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>HttpAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/HttpAccessor.html</Path>
    <Anchor>HttpAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpClientErrorException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpClientErrorException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpClientErrorException(HttpStatus)</Name>
      <Type>Constructor</Type>
      <Scope>HttpClientErrorException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpClientErrorException.html</Path>
    <Anchor>HttpClientErrorException(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpClientErrorException(HttpStatus, String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpClientErrorException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpClientErrorException.html</Path>
    <Anchor>HttpClientErrorException(org.springframework.http.HttpStatus, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpClientErrorException(HttpStatus, String, byte[], Charset)</Name>
      <Type>Constructor</Type>
      <Scope>HttpClientErrorException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpClientErrorException.html</Path>
    <Anchor>HttpClientErrorException(org.springframework.http.HttpStatus, java.lang.String, byte[], java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpClientErrorException(HttpStatus, String, HttpHeaders, byte[], Charset)</Name>
      <Type>Constructor</Type>
      <Scope>HttpClientErrorException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpClientErrorException.html</Path>
    <Anchor>HttpClientErrorException(org.springframework.http.HttpStatus, java.lang.String, org.springframework.http.HttpHeaders, byte[], java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpComponentsClientHttpRequestFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpComponentsClientHttpRequestFactory()</Name>
      <Type>Constructor</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>HttpComponentsClientHttpRequestFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpComponentsClientHttpRequestFactory(HttpClient)</Name>
      <Type>Constructor</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>HttpComponentsClientHttpRequestFactory(org.apache.http.client.HttpClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpComponentsHttpInvokerRequestExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpComponentsHttpInvokerRequestExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>HttpComponentsHttpInvokerRequestExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpComponentsHttpInvokerRequestExecutor(HttpClient)</Name>
      <Type>Constructor</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>HttpComponentsHttpInvokerRequestExecutor(org.apache.http.client.HttpClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpEntity</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpEntity.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpEntity()</Name>
      <Type>Constructor</Type>
      <Scope>HttpEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpEntity.html</Path>
    <Anchor>HttpEntity()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpEntity(T)</Name>
      <Type>Constructor</Type>
      <Scope>HttpEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpEntity.html</Path>
    <Anchor>HttpEntity(T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpEntity(MultiValueMap&amp;lt;String, String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>HttpEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpEntity.html</Path>
    <Anchor>HttpEntity(org.springframework.util.MultiValueMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpEntity(T, MultiValueMap&amp;lt;String, String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>HttpEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpEntity.html</Path>
    <Anchor>HttpEntity(T, org.springframework.util.MultiValueMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpEntityMethodProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpEntityMethodProcessor(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>HttpEntityMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.html</Path>
    <Anchor>HttpEntityMethodProcessor(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpEntityMethodProcessor(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;, ContentNegotiationManager)</Name>
      <Type>Constructor</Type>
      <Scope>HttpEntityMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.html</Path>
    <Anchor>HttpEntityMethodProcessor(java.util.List, org.springframework.web.accept.ContentNegotiationManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpHeaders</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpHeaders()</Name>
      <Type>Constructor</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>HttpHeaders()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpInputMessage</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpInputMessage.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpInvokerClientConfiguration</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpInvokerClientInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpInvokerClientInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>HttpInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html</Path>
    <Anchor>HttpInvokerClientInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpInvokerProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpInvokerProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>HttpInvokerProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.html</Path>
    <Anchor>HttpInvokerProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpInvokerRequestExecutor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerRequestExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpInvokerServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpInvokerServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>HttpInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html</Path>
    <Anchor>HttpInvokerServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeException(String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMediaTypeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeException.html</Path>
    <Anchor>HttpMediaTypeException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeException(String, List&amp;lt;MediaType&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMediaTypeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeException.html</Path>
    <Anchor>HttpMediaTypeException(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeNotAcceptableException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeNotAcceptableException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeNotAcceptableException(String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMediaTypeNotAcceptableException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeNotAcceptableException.html</Path>
    <Anchor>HttpMediaTypeNotAcceptableException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeNotAcceptableException(List&amp;lt;MediaType&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMediaTypeNotAcceptableException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeNotAcceptableException.html</Path>
    <Anchor>HttpMediaTypeNotAcceptableException(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeNotSupportedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeNotSupportedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeNotSupportedException(String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMediaTypeNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeNotSupportedException.html</Path>
    <Anchor>HttpMediaTypeNotSupportedException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeNotSupportedException(MediaType, List&amp;lt;MediaType&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMediaTypeNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeNotSupportedException.html</Path>
    <Anchor>HttpMediaTypeNotSupportedException(org.springframework.http.MediaType, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMediaTypeNotSupportedException(MediaType, List&amp;lt;MediaType&amp;gt;, String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMediaTypeNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpMediaTypeNotSupportedException.html</Path>
    <Anchor>HttpMediaTypeNotSupportedException(org.springframework.http.MediaType, java.util.List, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessage</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpMessage.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageConversionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageConversionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageConversionException(String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMessageConversionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageConversionException.html</Path>
    <Anchor>HttpMessageConversionException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageConversionException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMessageConversionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageConversionException.html</Path>
    <Anchor>HttpMessageConversionException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageConverter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageConverterExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpMessageConverterExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageConverterExtractor(Class&amp;lt;T&amp;gt;, List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMessageConverterExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpMessageConverterExtractor.html</Path>
    <Anchor>HttpMessageConverterExtractor(java.lang.Class, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageConverterExtractor(Type, List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMessageConverterExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpMessageConverterExtractor.html</Path>
    <Anchor>HttpMessageConverterExtractor(java.lang.reflect.Type, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageNotReadableException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageNotReadableException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageNotReadableException(String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMessageNotReadableException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageNotReadableException.html</Path>
    <Anchor>HttpMessageNotReadableException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageNotReadableException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMessageNotReadableException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageNotReadableException.html</Path>
    <Anchor>HttpMessageNotReadableException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageNotWritableException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageNotWritableException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageNotWritableException(String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMessageNotWritableException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageNotWritableException.html</Path>
    <Anchor>HttpMessageNotWritableException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMessageNotWritableException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>HttpMessageNotWritableException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageNotWritableException.html</Path>
    <Anchor>HttpMessageNotWritableException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpMethod</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpMethod.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpOutputMessage</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpOutputMessage.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpPutFormContentFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/HttpPutFormContentFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpPutFormContentFilter()</Name>
      <Type>Constructor</Type>
      <Scope>HttpPutFormContentFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/HttpPutFormContentFilter.html</Path>
    <Anchor>HttpPutFormContentFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequest</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpRequestHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>httpRequestHandlerAdapter()</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>httpRequestHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestHandlerAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/HttpRequestHandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestHandlerAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>HttpRequestHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/HttpRequestHandlerAdapter.html</Path>
    <Anchor>HttpRequestHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestHandlerServlet</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/HttpRequestHandlerServlet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestHandlerServlet()</Name>
      <Type>Constructor</Type>
      <Scope>HttpRequestHandlerServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/HttpRequestHandlerServlet.html</Path>
    <Anchor>HttpRequestHandlerServlet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestMethodNotSupportedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpRequestMethodNotSupportedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestMethodNotSupportedException(String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpRequestMethodNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpRequestMethodNotSupportedException.html</Path>
    <Anchor>HttpRequestMethodNotSupportedException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestMethodNotSupportedException(String, String[])</Name>
      <Type>Constructor</Type>
      <Scope>HttpRequestMethodNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpRequestMethodNotSupportedException.html</Path>
    <Anchor>HttpRequestMethodNotSupportedException(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestMethodNotSupportedException(String, Collection&amp;lt;String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>HttpRequestMethodNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpRequestMethodNotSupportedException.html</Path>
    <Anchor>HttpRequestMethodNotSupportedException(java.lang.String, java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestMethodNotSupportedException(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpRequestMethodNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpRequestMethodNotSupportedException.html</Path>
    <Anchor>HttpRequestMethodNotSupportedException(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestMethodNotSupportedException(String, String[], String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpRequestMethodNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpRequestMethodNotSupportedException.html</Path>
    <Anchor>HttpRequestMethodNotSupportedException(java.lang.String, java.lang.String[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestWrapper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/HttpRequestWrapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpRequestWrapper(HttpRequest)</Name>
      <Type>Constructor</Type>
      <Scope>HttpRequestWrapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/HttpRequestWrapper.html</Path>
    <Anchor>HttpRequestWrapper(org.springframework.http.HttpRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpServerErrorException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpServerErrorException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpServerErrorException(HttpStatus)</Name>
      <Type>Constructor</Type>
      <Scope>HttpServerErrorException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpServerErrorException.html</Path>
    <Anchor>HttpServerErrorException(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpServerErrorException(HttpStatus, String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpServerErrorException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpServerErrorException.html</Path>
    <Anchor>HttpServerErrorException(org.springframework.http.HttpStatus, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpServerErrorException(HttpStatus, String, byte[], Charset)</Name>
      <Type>Constructor</Type>
      <Scope>HttpServerErrorException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpServerErrorException.html</Path>
    <Anchor>HttpServerErrorException(org.springframework.http.HttpStatus, java.lang.String, byte[], java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpServerErrorException(HttpStatus, String, HttpHeaders, byte[], Charset)</Name>
      <Type>Constructor</Type>
      <Scope>HttpServerErrorException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpServerErrorException.html</Path>
    <Anchor>HttpServerErrorException(org.springframework.http.HttpStatus, java.lang.String, org.springframework.http.HttpHeaders, byte[], java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpServletBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HttpServletBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpServletBean()</Name>
      <Type>Constructor</Type>
      <Scope>HttpServletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HttpServletBean.html</Path>
    <Anchor>HttpServletBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpSessionMutexListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HttpSessionMutexListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpSessionMutexListener()</Name>
      <Type>Constructor</Type>
      <Scope>HttpSessionMutexListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/HttpSessionMutexListener.html</Path>
    <Anchor>HttpSessionMutexListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpSessionRequiredException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpSessionRequiredException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpSessionRequiredException(String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpSessionRequiredException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/HttpSessionRequiredException.html</Path>
    <Anchor>HttpSessionRequiredException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpStatus</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpStatus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpStatus.Series</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.http</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpStatus.Series.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpStatusCodeException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.web.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpStatusCodeException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpStatusCodeException(HttpStatus)</Name>
      <Type>Constructor</Type>
      <Scope>HttpStatusCodeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpStatusCodeException.html</Path>
    <Anchor>HttpStatusCodeException(org.springframework.http.HttpStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpStatusCodeException(HttpStatus, String)</Name>
      <Type>Constructor</Type>
      <Scope>HttpStatusCodeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpStatusCodeException.html</Path>
    <Anchor>HttpStatusCodeException(org.springframework.http.HttpStatus, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpStatusCodeException(HttpStatus, String, byte[], Charset)</Name>
      <Type>Constructor</Type>
      <Scope>HttpStatusCodeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpStatusCodeException.html</Path>
    <Anchor>HttpStatusCodeException(org.springframework.http.HttpStatus, java.lang.String, byte[], java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HttpStatusCodeException(HttpStatus, String, HttpHeaders, byte[], Charset)</Name>
      <Type>Constructor</Type>
      <Scope>HttpStatusCodeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpStatusCodeException.html</Path>
    <Anchor>HttpStatusCodeException(org.springframework.http.HttpStatus, java.lang.String, org.springframework.http.HttpHeaders, byte[], java.nio.charset.Charset)</Anchor>
  </Token>
</Tokens>
