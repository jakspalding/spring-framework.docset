<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>FacesContextUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.jsf</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/FacesContextUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FacesContextUtils()</Name>
      <Type>Constructor</Type>
      <Scope>FacesContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/FacesContextUtils.html</Path>
    <Anchor>FacesContextUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FacesRequestAttributes</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesRequestAttributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FacesRequestAttributes(FacesContext)</Name>
      <Type>Constructor</Type>
      <Scope>FacesRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesRequestAttributes.html</Path>
    <Anchor>FacesRequestAttributes(javax.faces.context.FacesContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FacesWebRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesWebRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FacesWebRequest(FacesContext)</Name>
      <Type>Constructor</Type>
      <Scope>FacesWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesWebRequest.html</Path>
    <Anchor>FacesWebRequest(javax.faces.context.FacesContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FACTORY_BEAN_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>FACTORY_BEAN_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FACTORY_BEAN_PREFIX</Name>
      <Type>Field</Type>
      <Scope>BeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactory.html</Path>
    <Anchor>FACTORY_BEAN_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FACTORY_METHOD_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>FACTORY_METHOD_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryBean</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/FactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryBeanNotInitializedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/FactoryBeanNotInitializedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryBeanNotInitializedException()</Name>
      <Type>Constructor</Type>
      <Scope>FactoryBeanNotInitializedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/FactoryBeanNotInitializedException.html</Path>
    <Anchor>FactoryBeanNotInitializedException()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryBeanNotInitializedException(String)</Name>
      <Type>Constructor</Type>
      <Scope>FactoryBeanNotInitializedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/FactoryBeanNotInitializedException.html</Path>
    <Anchor>FactoryBeanNotInitializedException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryBeanRegistrySupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryBeanRegistrySupport()</Name>
      <Type>Constructor</Type>
      <Scope>FactoryBeanRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.html</Path>
    <Anchor>FactoryBeanRegistrySupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fail(String)</Name>
      <Type>clm</Type>
      <Scope>AssertionErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/AssertionErrors.html</Path>
    <Anchor>fail(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fail(String, Object, Object)</Name>
      <Type>clm</Type>
      <Scope>AssertionErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/AssertionErrors.html</Path>
    <Anchor>fail(java.lang.String, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FailFastProblemReporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/FailFastProblemReporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FailFastProblemReporter()</Name>
      <Type>Constructor</Type>
      <Scope>FailFastProblemReporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/FailFastProblemReporter.html</Path>
    <Anchor>FailFastProblemReporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FALLBACK_TRANSACTION_MANAGER_NAMES</Name>
      <Type>Field</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>FALLBACK_TRANSACTION_MANAGER_NAMES</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FALSE</Name>
      <Type>Field</Type>
      <Scope>BooleanTypedValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/BooleanTypedValue.html</Path>
    <Anchor>FALSE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FALSE_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>FALSE_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fatal(Problem)</Name>
      <Type>instm</Type>
      <Scope>FailFastProblemReporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/FailFastProblemReporter.html</Path>
    <Anchor>fatal(org.springframework.beans.factory.parsing.Problem)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fatal(Problem)</Name>
      <Type>intfm</Type>
      <Scope>ProblemReporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ProblemReporter.html</Path>
    <Anchor>fatal(org.springframework.beans.factory.parsing.Problem)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fatal(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>fatal(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fatal(String, Object, Throwable)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>fatal(java.lang.String, java.lang.Object, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fatal(String, Object, ParseState)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>fatal(java.lang.String, java.lang.Object, org.springframework.beans.factory.parsing.ParseState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fatal(String, Object, ParseState, Throwable)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>fatal(java.lang.String, java.lang.Object, org.springframework.beans.factory.parsing.ParseState, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FatalBeanException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/FatalBeanException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FatalBeanException(String)</Name>
      <Type>Constructor</Type>
      <Scope>FatalBeanException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/FatalBeanException.html</Path>
    <Anchor>FatalBeanException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FatalBeanException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>FatalBeanException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/FatalBeanException.html</Path>
    <Anchor>FatalBeanException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fatalError(SAXParseException)</Name>
      <Type>instm</Type>
      <Scope>SimpleSaxErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleSaxErrorHandler.html</Path>
    <Anchor>fatalError(org.xml.sax.SAXParseException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fatalError(TransformerException)</Name>
      <Type>instm</Type>
      <Scope>SimpleTransformErrorListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleTransformErrorListener.html</Path>
    <Anchor>fatalError(javax.xml.transform.TransformerException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>favorParameter(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.html</Path>
    <Anchor>favorParameter(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>favorPathExtension(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.html</Path>
    <Anchor>favorPathExtension(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_CLASS</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_CLASS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_CURRENCY_TIME_LIMIT</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_CURRENCY_TIME_LIMIT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_DEFAULT</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_DEFAULT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_DISPLAY_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_DISPLAY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_GET_METHOD</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_GET_METHOD</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_LOG</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_LOG</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_LOG_FILE</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_LOG_FILE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_METRIC_CATEGORY</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_METRIC_CATEGORY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_METRIC_TYPE</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_METRIC_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_PERSIST_LOCATION</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_PERSIST_LOCATION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_PERSIST_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_PERSIST_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_PERSIST_PERIOD</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_PERSIST_PERIOD</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_PERSIST_POLICY</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_PERSIST_POLICY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_ROLE</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_ROLE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_SET_METHOD</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_SET_METHOD</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_UNITS</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_UNITS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIELD_VISIBILITY</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>FIELD_VISIBILITY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FieldError</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/FieldError.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FieldError(String, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>FieldError</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/FieldError.html</Path>
    <Anchor>FieldError(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FieldError(String, String, Object, boolean, String[], Object[], String)</Name>
      <Type>Constructor</Type>
      <Scope>FieldError</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/FieldError.html</Path>
    <Anchor>FieldError(java.lang.String, java.lang.String, java.lang.Object, boolean, java.lang.String[], java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FieldRetrievingFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FieldRetrievingFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>FieldRetrievingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
    <Anchor>FieldRetrievingFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>file(String, byte[])</Name>
      <Type>instm</Type>
      <Scope>MockMultipartHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder.html</Path>
    <Anchor>file(java.lang.String, byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>file(MockMultipartFile)</Name>
      <Type>instm</Type>
      <Scope>MockMultipartHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder.html</Path>
    <Anchor>file(org.springframework.mock.web.MockMultipartFile)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FILE_URL_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>FILE_URL_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileCopyUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileCopyUtils()</Name>
      <Type>Constructor</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>FileCopyUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/FileEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileEditor()</Name>
      <Type>Constructor</Type>
      <Scope>FileEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/FileEditor.html</Path>
    <Anchor>FileEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileEditor(ResourceEditor)</Name>
      <Type>Constructor</Type>
      <Scope>FileEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/FileEditor.html</Path>
    <Anchor>FileEditor(org.springframework.core.io.ResourceEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemResource(File)</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
    <Anchor>FileSystemResource(java.io.File)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemResource(String)</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
    <Anchor>FileSystemResource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemResourceLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResourceLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemResourceLoader()</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResourceLoader.html</Path>
    <Anchor>FileSystemResourceLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileSystemUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemUtils()</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileSystemUtils.html</Path>
    <Anchor>FileSystemUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemXmlApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/FileSystemXmlApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemXmlApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/FileSystemXmlApplicationContext.html</Path>
    <Anchor>FileSystemXmlApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemXmlApplicationContext(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/FileSystemXmlApplicationContext.html</Path>
    <Anchor>FileSystemXmlApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemXmlApplicationContext(String)</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/FileSystemXmlApplicationContext.html</Path>
    <Anchor>FileSystemXmlApplicationContext(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemXmlApplicationContext(String...)</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/FileSystemXmlApplicationContext.html</Path>
    <Anchor>FileSystemXmlApplicationContext(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemXmlApplicationContext(String[], ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/FileSystemXmlApplicationContext.html</Path>
    <Anchor>FileSystemXmlApplicationContext(java.lang.String[], org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemXmlApplicationContext(String[], boolean)</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/FileSystemXmlApplicationContext.html</Path>
    <Anchor>FileSystemXmlApplicationContext(java.lang.String[], boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileSystemXmlApplicationContext(String[], boolean, ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>FileSystemXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/FileSystemXmlApplicationContext.html</Path>
    <Anchor>FileSystemXmlApplicationContext(java.lang.String[], boolean, org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fileUpload(String, Object...)</Name>
      <Type>clm</Type>
      <Scope>MockMvcRequestBuilders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.html</Path>
    <Anchor>fileUpload(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillInClientStackTraceIfPossible(Throwable)</Name>
      <Type>clm</Type>
      <Scope>RemoteInvocationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationUtils.html</Path>
    <Anchor>fillInClientStackTraceIfPossible(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillProperties(Properties, EncodedResource)</Name>
      <Type>clm</Type>
      <Scope>PropertiesLoaderUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderUtils.html</Path>
    <Anchor>fillProperties(java.util.Properties, org.springframework.core.io.support.EncodedResource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillProperties(Properties, Resource)</Name>
      <Type>clm</Type>
      <Scope>PropertiesLoaderUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PropertiesLoaderUtils.html</Path>
    <Anchor>fillProperties(java.util.Properties, org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillReport(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>fillReport(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filter(List&amp;lt;Method&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>MethodFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/MethodFilter.html</Path>
    <Anchor>filter(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilterDefinitionFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilterDefinitionFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>FilterDefinitionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html</Path>
    <Anchor>FilterDefinitionFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filterModel(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2JsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJackson2JsonView.html</Path>
    <Anchor>filterModel(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filterModel(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonJsonView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html</Path>
    <Anchor>filterModel(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filterPropertyDescriptorsForDependencyCheck(BeanWrapper, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>filterPropertyDescriptorsForDependencyCheck(org.springframework.beans.BeanWrapper, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filterPropertyDescriptorsForDependencyCheck(BeanWrapper)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>filterPropertyDescriptorsForDependencyCheck(org.springframework.beans.BeanWrapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilterType</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/FilterType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>find(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>find(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String, Object[], String)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String, Map&amp;lt;String, ?&amp;gt;, String)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String, java.util.Map, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>find(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String, Object...)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String, Object[], String)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, String, String, Map&amp;lt;String, ?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.Class, java.lang.String, java.lang.String, java.util.Map, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>find(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, Object)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>find(java.lang.Class, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>find(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(Class&amp;lt;T&amp;gt;, Object)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>find(java.lang.Class, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>find(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>find(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAdvisorBeans()</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryAdvisorRetrievalHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.html</Path>
    <Anchor>findAdvisorBeans()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAdvisorsThatCanApply(List&amp;lt;Advisor&amp;gt;, Class, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>findAdvisorsThatCanApply(java.util.List, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAdvisorsThatCanApply(List&amp;lt;Advisor&amp;gt;, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>findAdvisorsThatCanApply(java.util.List, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAllClassPathResources(String)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>findAllClassPathResources(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAnnotatedBeans(ApplicationContext)</Name>
      <Type>clm</Type>
      <Scope>ControllerAdviceBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/ControllerAdviceBean.html</Path>
    <Anchor>findAnnotatedBeans(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAnnotation(Method, Class&amp;lt;A&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationUtils.html</Path>
    <Anchor>findAnnotation(java.lang.reflect.Method, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAnnotation(Class&amp;lt;?&amp;gt;, Class&amp;lt;A&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationUtils.html</Path>
    <Anchor>findAnnotation(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAnnotationDeclaringClass(Class&amp;lt;? extends Annotation&amp;gt;, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationUtils.html</Path>
    <Anchor>findAnnotationDeclaringClass(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAnnotationOnBean(String, Class&amp;lt;A&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/ListableBeanFactory.html</Path>
    <Anchor>findAnnotationOnBean(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAnnotationOnBean(String, Class&amp;lt;A&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>findAnnotationOnBean(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAnnotationOnBean(String, Class&amp;lt;A&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StaticListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/StaticListableBeanFactory.html</Path>
    <Anchor>findAnnotationOnBean(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAnnotationOnBean(String, Class&amp;lt;A&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>findAnnotationOnBean(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findApplicationContexts()</Name>
      <Type>instm</Type>
      <Scope>LiveBeansView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/LiveBeansView.html</Path>
    <Anchor>findApplicationContexts()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findApplicationContexts()</Name>
      <Type>instm</Type>
      <Scope>ServletContextLiveBeansView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextLiveBeansView.html</Path>
    <Anchor>findApplicationContexts()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAspectJAnnotationOnMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>AbstractAspectJAdvisorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html</Path>
    <Anchor>findAspectJAnnotationOnMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>findAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAutowireCandidates(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>findAutowireCandidates(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAutowireCandidates(String, Class&amp;lt;?&amp;gt;, DependencyDescriptor)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>findAutowireCandidates(java.lang.String, java.lang.Class, org.springframework.beans.factory.config.DependencyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findBridgedMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>BridgeMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/BridgeMethodResolver.html</Path>
    <Anchor>findBridgedMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByCriteria(DetachedCriteria)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByCriteria(org.hibernate.criterion.DetachedCriteria)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByCriteria(DetachedCriteria, int, int)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByCriteria(org.hibernate.criterion.DetachedCriteria, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByCriteria(DetachedCriteria)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByCriteria(org.hibernate.criterion.DetachedCriteria)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByCriteria(DetachedCriteria, int, int)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByCriteria(org.hibernate.criterion.DetachedCriteria, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByExample(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByExample(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByExample(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByExample(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByExample(Object, int, int)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByExample(java.lang.Object, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByExample(String, Object, int, int)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByExample(java.lang.String, java.lang.Object, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByExample(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByExample(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByExample(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByExample(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByExample(Object, int, int)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByExample(java.lang.Object, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByExample(String, Object, int, int)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByExample(java.lang.String, java.lang.Object, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedParam(String, String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByNamedParam(java.lang.String, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedParam(String, String[], Object[])</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByNamedParam(java.lang.String, java.lang.String[], java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedParam(String, String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByNamedParam(java.lang.String, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedParam(String, String[], Object[])</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByNamedParam(java.lang.String, java.lang.String[], java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedParams(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>findByNamedParams(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedParams(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>findByNamedParams(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByNamedQuery(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByNamedQuery(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByNamedQuery(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByNamedQuery(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByNamedQuery(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByNamedQuery(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(Class&amp;lt;T&amp;gt;, String)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>findByNamedQuery(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(Class&amp;lt;T&amp;gt;, String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>findByNamedQuery(java.lang.Class, java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(Class&amp;lt;T&amp;gt;, String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>findByNamedQuery(java.lang.Class, java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(Class&amp;lt;T&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>findByNamedQuery(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(Class&amp;lt;T&amp;gt;, String, Object...)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>findByNamedQuery(java.lang.Class, java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(Class&amp;lt;T&amp;gt;, String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>findByNamedQuery(java.lang.Class, java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>findByNamedQuery(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>findByNamedQuery(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>findByNamedQuery(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQuery(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>findByNamedQuery(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQueryAndNamedParam(String, String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByNamedQueryAndNamedParam(java.lang.String, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQueryAndNamedParam(String, String[], Object[])</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByNamedQueryAndNamedParam(java.lang.String, java.lang.String[], java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQueryAndNamedParam(String, String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByNamedQueryAndNamedParam(java.lang.String, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQueryAndNamedParam(String, String[], Object[])</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByNamedQueryAndNamedParam(java.lang.String, java.lang.String[], java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQueryAndNamedParams(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>findByNamedQueryAndNamedParams(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQueryAndNamedParams(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>findByNamedQueryAndNamedParams(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQueryAndValueBean(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByNamedQueryAndValueBean(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByNamedQueryAndValueBean(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByNamedQueryAndValueBean(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByValueBean(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>findByValueBean(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findByValueBean(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>findByValueBean(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCacheOperations(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>findCacheOperations(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCacheOperations(Method)</Name>
      <Type>instm</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>findCacheOperations(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCacheOperations(Method)</Name>
      <Type>instm</Type>
      <Scope>AbstractFallbackCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.html</Path>
    <Anchor>findCacheOperations(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCacheOperations(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractFallbackCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.html</Path>
    <Anchor>findCacheOperations(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCandidateAdvisors()</Name>
      <Type>instm</Type>
      <Scope>AnnotationAwareAspectJAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html</Path>
    <Anchor>findCandidateAdvisors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCandidateAdvisors()</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>findCandidateAdvisors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCandidateComponents(String)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>findCandidateComponents(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findClosestMatch(Collection&amp;lt;Class&amp;lt;? extends Throwable&amp;gt;&amp;gt;, Throwable)</Name>
      <Type>clm</Type>
      <Scope>ExceptionDepthComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ExceptionDepthComparator.html</Path>
    <Anchor>findClosestMatch(java.util.Collection, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findColumn(String)</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>findColumn(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findColumn(String)</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>findColumn(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCommonElementType(Collection)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>findCommonElementType(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCustomEditor(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyEditorRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistry.html</Path>
    <Anchor>findCustomEditor(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCustomEditor(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>findCustomEditor(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCustomEditor(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>findCustomEditor(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findDeclaredMethod(Class&amp;lt;?&amp;gt;, String, Class&amp;lt;?&amp;gt;[])</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>findDeclaredMethod(java.lang.Class, java.lang.String, java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findDeclaredMethodWithMinimalParameters(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>findDeclaredMethodWithMinimalParameters(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findDefaultEntityManagerFactory(String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>findDefaultEntityManagerFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEditor(String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>findEditor(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEditor(String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractPropertyBindingResult.html</Path>
    <Anchor>findEditor(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEditor(String, Class)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>findEditor(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEditor(String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>BindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingResult.html</Path>
    <Anchor>findEditor(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEditor(Class)</Name>
      <Type>instm</Type>
      <Scope>BindStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/BindStatus.html</Path>
    <Anchor>findEditor(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEditorByConvention(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>findEditorByConvention(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEligibleAdvisors(Class, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>findEligibleAdvisors(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEntityManagerFactory(ListableBeanFactory, String)</Name>
      <Type>clm</Type>
      <Scope>EntityManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryUtils.html</Path>
    <Anchor>findEntityManagerFactory(org.springframework.beans.factory.ListableBeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEntityManagerFactory(String, String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>findEntityManagerFactory(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findField(String, Class&amp;lt;?&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>ReflectivePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
    <Anchor>findField(java.lang.String, java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findField(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>findField(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findField(Class&amp;lt;?&amp;gt;, String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>findField(java.lang.Class, java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findFirstMatch(Collection, Collection)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>findFirstMatch(java.util.Collection, java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findGetterForProperty(String, Class&amp;lt;?&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>ReflectivePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
    <Anchor>findGetterForProperty(java.lang.String, java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findLabeledEnums(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingLabeledEnumResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractCachingLabeledEnumResolver.html</Path>
    <Anchor>findLabeledEnums(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findLabeledEnums(Class)</Name>
      <Type>instm</Type>
      <Scope>StaticLabeledEnumResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StaticLabeledEnumResolver.html</Path>
    <Anchor>findLabeledEnums(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findLocalizedResource(String, String, Locale)</Name>
      <Type>instm</Type>
      <Scope>LocalizedResourceHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/LocalizedResourceHelper.html</Path>
    <Anchor>findLocalizedResource(java.lang.String, java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findMatchingMethod()</Name>
      <Type>instm</Type>
      <Scope>ArgumentConvertingMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ArgumentConvertingMethodInvoker.html</Path>
    <Anchor>findMatchingMethod()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findMatchingMethod()</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>findMatchingMethod()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findMatchingViewName(Properties, Exception)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>findMatchingViewName(java.util.Properties, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findMatchingViewName(Properties, Exception)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>findMatchingViewName(java.util.Properties, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findMethod(Class&amp;lt;?&amp;gt;, String, Class&amp;lt;?&amp;gt;...)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>findMethod(java.lang.Class, java.lang.String, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findMethod(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>findMethod(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findMethod(Class&amp;lt;?&amp;gt;, String, Class&amp;lt;?&amp;gt;...)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>findMethod(java.lang.Class, java.lang.String, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findMethodWithMinimalParameters(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>findMethodWithMinimalParameters(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findMethodWithMinimalParameters(Method[], String)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>findMethodWithMinimalParameters(java.lang.reflect.Method[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findNamedEntityManagerFactory(String, String)</Name>
      <Type>instm</Type>
      <Scope>PersistenceAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html</Path>
    <Anchor>findNamedEntityManagerFactory(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(Object[], Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(java.lang.Object[], java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(Object...)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(int, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(int, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(int)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(int, int, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(int, int, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(int, int)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(long, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(long, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(long)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(String, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObject(String)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObjectByNamedParam(Map&amp;lt;String, ?&amp;gt;, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObjectByNamedParam(java.util.Map, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findObjectByNamedParam(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>findObjectByNamedParam(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findParameterValue(ServletRequest, String)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>findParameterValue(javax.servlet.ServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findParameterValue(Map&amp;lt;String, ?&amp;gt;, String)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>findParameterValue(java.util.Map, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findPathMatchingResources(String)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>findPathMatchingResources(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findPropertyForMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>findPropertyForMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findPropertyType(String, Class&amp;lt;?&amp;gt;[])</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>findPropertyType(java.lang.String, java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findRequiredWebApplicationContext(ActionServlet, ModuleConfig)</Name>
      <Type>clm</Type>
      <Scope>DelegatingActionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionUtils.html</Path>
    <Anchor>findRequiredWebApplicationContext(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findResourceInternal(String, String)</Name>
      <Type>instm</Type>
      <Scope>TomcatInstrumentableClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/tomcat/TomcatInstrumentableClassLoader.html</Path>
    <Anchor>findResourceInternal(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findScheduler(String)</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessorBean.html</Path>
    <Anchor>findScheduler(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSetterForProperty(String, Class&amp;lt;?&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>ReflectivePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
    <Anchor>findSetterForProperty(java.lang.String, java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTemplateSource(String)</Name>
      <Type>instm</Type>
      <Scope>SpringTemplateLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/SpringTemplateLoader.html</Path>
    <Anchor>findTemplateSource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTransactionAttribute(Method)</Name>
      <Type>instm</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>findTransactionAttribute(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTransactionAttribute(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>findTransactionAttribute(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTransactionAttribute(Method)</Name>
      <Type>instm</Type>
      <Scope>AbstractFallbackTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.html</Path>
    <Anchor>findTransactionAttribute(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTransactionAttribute(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractFallbackTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.html</Path>
    <Anchor>findTransactionAttribute(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTransactionManager(UserTransaction)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>findTransactionManager(javax.transaction.UserTransaction)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTransactionSynchronizationRegistry(UserTransaction, TransactionManager)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>findTransactionSynchronizationRegistry(javax.transaction.UserTransaction, javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTranslatorForDatabase(String)</Name>
      <Type>instm</Type>
      <Scope>CustomSQLExceptionTranslatorRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistry.html</Path>
    <Anchor>findTranslatorForDatabase(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findType(String)</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>findType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findType(String)</Name>
      <Type>instm</Type>
      <Scope>StandardTypeLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeLocator.html</Path>
    <Anchor>findType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findType(String)</Name>
      <Type>intfm</Type>
      <Scope>TypeLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/TypeLocator.html</Path>
    <Anchor>findType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findUniqueProfileValueSourceFromContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractAnnotationAwareTransactionalTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
    <Anchor>findUniqueProfileValueSourceFromContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findUserTransaction()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>findUserTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findValue(Annotation[])</Name>
      <Type>instm</Type>
      <Scope>QualifierAnnotationAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html</Path>
    <Anchor>findValue(java.lang.annotation.Annotation[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findValueOfType(Collection&amp;lt;?&amp;gt;, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>findValueOfType(java.util.Collection, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findValueOfType(Collection&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;[])</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>findValueOfType(java.util.Collection, java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findWebApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>findWebApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findWebApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>findWebApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishBeanFactoryInitialization(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>finishBeanFactoryInitialization(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishRefresh()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>finishRefresh()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fireAliasRegistered(String, String, Object)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>fireAliasRegistered(java.lang.String, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fireComponentRegistered(ComponentDefinition)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>fireComponentRegistered(org.springframework.beans.factory.parsing.ComponentDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fireDefaultsRegistered(DefaultsDefinition)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>fireDefaultsRegistered(org.springframework.beans.factory.parsing.DefaultsDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fireImportProcessed(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>fireImportProcessed(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fireImportProcessed(String, Resource[], Object)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>fireImportProcessed(java.lang.String, org.springframework.core.io.Resource[], java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIRST</Name>
      <Type>Field</Type>
      <Scope>Selection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Selection.html</Path>
    <Anchor>FIRST</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>first()</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>first()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>first()</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>first()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FixedContentNegotiationStrategy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.accept</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/FixedContentNegotiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FixedContentNegotiationStrategy(MediaType)</Name>
      <Type>Constructor</Type>
      <Scope>FixedContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/FixedContentNegotiationStrategy.html</Path>
    <Anchor>FixedContentNegotiationStrategy(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fixedField(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>fixedField(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FixedLocaleResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.i18n</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/FixedLocaleResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FixedLocaleResolver()</Name>
      <Type>Constructor</Type>
      <Scope>FixedLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/FixedLocaleResolver.html</Path>
    <Anchor>FixedLocaleResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FixedLocaleResolver(Locale)</Name>
      <Type>Constructor</Type>
      <Scope>FixedLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/FixedLocaleResolver.html</Path>
    <Anchor>FixedLocaleResolver(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FixedThemeResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.theme</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/FixedThemeResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FixedThemeResolver()</Name>
      <Type>Constructor</Type>
      <Scope>FixedThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/FixedThemeResolver.html</Path>
    <Anchor>FixedThemeResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flash()</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html</Path>
    <Anchor>flash()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLASH_MAP_MANAGER_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>FLASH_MAP_MANAGER_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLASH_MAP_MANAGER_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>FLASH_MAP_MANAGER_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flashAttr(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>flashAttr(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FlashAttributeResultMatchers</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.result</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/FlashAttributeResultMatchers.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FlashAttributeResultMatchers()</Name>
      <Type>Constructor</Type>
      <Scope>FlashAttributeResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/FlashAttributeResultMatchers.html</Path>
    <Anchor>FlashAttributeResultMatchers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flashAttrs(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>flashAttrs(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FlashMap</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMap.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FlashMap()</Name>
      <Type>Constructor</Type>
      <Scope>FlashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMap.html</Path>
    <Anchor>FlashMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FlashMapManager</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMapManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatLiteral</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/FloatLiteral.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>JdbcTransactionObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>DelegatingServletOutputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/DelegatingServletOutputStream.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionObject</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionObject.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>intfm</Type>
      <Scope>SmartTransactionObject</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/SmartTransactionObject.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>intfm</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>TransactionSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationAdapter.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>intfm</Type>
      <Scope>TransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionStatus.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush()</Name>
      <Type>instm</Type>
      <Scope>CommonsLogWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CommonsLogWriter.html</Path>
    <Anchor>flush()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLUSH_ALWAYS</Name>
      <Type>Field</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>FLUSH_ALWAYS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLUSH_AUTO</Name>
      <Type>Field</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>FLUSH_AUTO</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLUSH_COMMIT</Name>
      <Type>Field</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>FLUSH_COMMIT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLUSH_EAGER</Name>
      <Type>Field</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>FLUSH_EAGER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLUSH_NEVER</Name>
      <Type>Field</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>FLUSH_NEVER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushBuffer()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>flushBuffer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushBuffer()</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>flushBuffer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushBufferedBodyContent(BodyContent)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>flushBufferedBodyContent(javax.servlet.jsp.tagext.BodyContent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushIfNecessary(Session, boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>flushIfNecessary(org.hibernate.Session, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushIfNecessary(PersistenceManager, boolean)</Name>
      <Type>instm</Type>
      <Scope>JdoAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoAccessor.html</Path>
    <Anchor>flushIfNecessary(javax.jdo.PersistenceManager, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushIfNecessary(EntityManager, boolean)</Name>
      <Type>instm</Type>
      <Scope>JpaAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaAccessor.html</Path>
    <Anchor>flushIfNecessary(javax.persistence.EntityManager, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushResource(H)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>flushResource(H)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forBeanPropertyAccess(Object)</Name>
      <Type>clm</Type>
      <Scope>PropertyAccessorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessorFactory.html</Path>
    <Anchor>forBeanPropertyAccess(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceAutoProxyCreatorToUseClassProxying(BeanDefinitionRegistry)</Name>
      <Type>clm</Type>
      <Scope>AopConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
    <Anchor>forceAutoProxyCreatorToUseClassProxying(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceAutoProxyCreatorToUseClassProxying(BeanDefinitionRegistry)</Name>
      <Type>clm</Type>
      <Scope>AopNamespaceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceUtils.html</Path>
    <Anchor>forceAutoProxyCreatorToUseClassProxying(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceBlock()</Name>
      <Type>instm</Type>
      <Scope>TagWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TagWriter.html</Path>
    <Anchor>forceBlock()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forClass(Class)</Name>
      <Type>clm</Type>
      <Scope>EmptyTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/EmptyTargetSource.html</Path>
    <Anchor>forClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forClass(Class, boolean)</Name>
      <Type>clm</Type>
      <Scope>EmptyTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/EmptyTargetSource.html</Path>
    <Anchor>forClass(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>TypeCode</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/TypeCode.html</Path>
    <Anchor>forClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forClassAnnotation(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationMatchingPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMatchingPointcut.html</Path>
    <Anchor>forClassAnnotation(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forDirectFieldAccess(Object)</Name>
      <Type>clm</Type>
      <Scope>PropertyAccessorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessorFactory.html</Path>
    <Anchor>forDirectFieldAccess(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ForkJoinPoolFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ForkJoinPoolFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ForkJoinPoolFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.html</Path>
    <Anchor>ForkJoinPoolFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FORM_CHARSET</Name>
      <Type>Field</Type>
      <Scope>ServletServerHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServletServerHttpRequest.html</Path>
    <Anchor>FORM_CHARSET</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FORM_CONTENT_TYPE</Name>
      <Type>Field</Type>
      <Scope>ServletServerHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServletServerHttpRequest.html</Path>
    <Anchor>FORM_CONTENT_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>format(String, String, String)</Name>
      <Type>intfm</Type>
      <Scope>MessageCodeFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/MessageCodeFormatter.html</Path>
    <Anchor>format(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formatClassNameForMessage(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>FormatHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/FormatHelper.html</Path>
    <Anchor>formatClassNameForMessage(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formatFieldValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>formatFieldValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formatFieldValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractPropertyBindingResult.html</Path>
    <Anchor>formatFieldValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormatHelper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/FormatHelper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormatHelper()</Name>
      <Type>Constructor</Type>
      <Scope>FormatHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/FormatHelper.html</Path>
    <Anchor>FormatHelper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formatMessage(String, Object[], Locale)</Name>
      <Type>instm</Type>
      <Scope>MessageSourceSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/MessageSourceSupport.html</Path>
    <Anchor>formatMessage(java.lang.String, java.lang.Object[], java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formatMessage(int, Object...)</Name>
      <Type>clm</Type>
      <Scope>SpelMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelMessage.html</Path>
    <Anchor>formatMessage(int, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formatMethodForMessage(String, List&amp;lt;TypeDescriptor&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>FormatHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/FormatHelper.html</Path>
    <Anchor>formatMethodForMessage(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Formatter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.format</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/Formatter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormatterRegistrar</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.format</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/FormatterRegistrar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormatterRegistry</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.format</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/FormatterRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormattingConversionService</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionService.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormattingConversionService()</Name>
      <Type>Constructor</Type>
      <Scope>FormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionService.html</Path>
    <Anchor>FormattingConversionService()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormattingConversionServiceFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormattingConversionServiceFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>FormattingConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
    <Anchor>FormattingConversionServiceFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formBackingObject(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>formBackingObject(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formBackingObject(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>formBackingObject(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forMethodAnnotation(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationMatchingPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMatchingPointcut.html</Path>
    <Anchor>forMethodAnnotation(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forMethodOrConstructor(Object, int)</Name>
      <Type>clm</Type>
      <Scope>MethodParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/MethodParameter.html</Path>
    <Anchor>forMethodOrConstructor(java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>FormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
    <Anchor>FormHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FormTag()</Name>
      <Type>Constructor</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>FormTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forName(String)</Name>
      <Type>clm</Type>
      <Scope>TypeCode</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/TypeCode.html</Path>
    <Anchor>forName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forName(String)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>forName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forName(String, ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>forName(java.lang.String, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forObject(Object)</Name>
      <Type>clm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>forObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forValue(boolean)</Name>
      <Type>clm</Type>
      <Scope>BooleanTypedValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/BooleanTypedValue.html</Path>
    <Anchor>forValue(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forward(String)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>forward(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forward(ServletRequest, ServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MockRequestDispatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockRequestDispatcher.html</Path>
    <Anchor>forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forward(PortletRequest, PortletResponse)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequestDispatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequestDispatcher.html</Path>
    <Anchor>forward(javax.portlet.PortletRequest, javax.portlet.PortletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FORWARD_CONTEXT_PATH_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>FORWARD_CONTEXT_PATH_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FORWARD_PATH_INFO_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>FORWARD_PATH_INFO_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FORWARD_QUERY_STRING_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>FORWARD_QUERY_STRING_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FORWARD_REQUEST_URI_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>FORWARD_REQUEST_URI_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FORWARD_SERVLET_PATH_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>FORWARD_SERVLET_PATH_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FORWARD_URL_PREFIX</Name>
      <Type>Field</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>FORWARD_URL_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardedUrl(String)</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html</Path>
    <Anchor>forwardedUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fragment(String)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>fragment(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameworkPortlet</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameworkPortlet()</Name>
      <Type>Constructor</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>FrameworkPortlet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameworkServlet</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameworkServlet()</Name>
      <Type>Constructor</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>FrameworkServlet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameworkServlet(WebApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>FrameworkServlet(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerConfig</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet.view.freemarker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerConfig.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerConfigurationFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.freemarker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerConfigurationFactory()</Name>
      <Type>Constructor</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>FreeMarkerConfigurationFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerConfigurationFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.freemarker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerConfigurationFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>FreeMarkerConfigurationFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactoryBean.html</Path>
    <Anchor>FreeMarkerConfigurationFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.freemarker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>FreeMarkerConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerConfigurer.html</Path>
    <Anchor>FreeMarkerConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerTemplateUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.freemarker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerTemplateUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerTemplateUtils()</Name>
      <Type>Constructor</Type>
      <Scope>FreeMarkerTemplateUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerTemplateUtils.html</Path>
    <Anchor>FreeMarkerTemplateUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.freemarker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerView()</Name>
      <Type>Constructor</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>FreeMarkerView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerViewResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.freemarker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerViewResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreeMarkerViewResolver()</Name>
      <Type>Constructor</Type>
      <Scope>FreeMarkerViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerViewResolver.html</Path>
    <Anchor>FreeMarkerViewResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freezeConfiguration()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html</Path>
    <Anchor>freezeConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freezeConfiguration()</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>freezeConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freshTarget()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html</Path>
    <Anchor>freshTarget()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freshTarget()</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryRefreshableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/BeanFactoryRefreshableTargetSource.html</Path>
    <Anchor>freshTarget()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromContextPath(HttpServletRequest)</Name>
      <Type>clm</Type>
      <Scope>ServletUriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
    <Anchor>fromContextPath(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromCurrentContextPath()</Name>
      <Type>clm</Type>
      <Scope>ServletUriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
    <Anchor>fromCurrentContextPath()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromCurrentRequest()</Name>
      <Type>clm</Type>
      <Scope>ServletUriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
    <Anchor>fromCurrentRequest()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromCurrentRequestUri()</Name>
      <Type>clm</Type>
      <Scope>ServletUriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
    <Anchor>fromCurrentRequestUri()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromCurrentServletMapping()</Name>
      <Type>clm</Type>
      <Scope>ServletUriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
    <Anchor>fromCurrentServletMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromHttpUrl(String)</Name>
      <Type>clm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>fromHttpUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromMap(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAttributes.html</Path>
    <Anchor>fromMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromMessage(Message)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>fromMessage(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromMessage(Message)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>fromMessage(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromMessage(Message)</Name>
      <Type>instm</Type>
      <Scope>MarshallingMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MarshallingMessageConverter.html</Path>
    <Anchor>fromMessage(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromMessage(Message)</Name>
      <Type>intfm</Type>
      <Scope>MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MessageConverter.html</Path>
    <Anchor>fromMessage(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromMessage(Message)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>fromMessage(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromPath(String)</Name>
      <Type>clm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>fromPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromRequest(HttpServletRequest)</Name>
      <Type>clm</Type>
      <Scope>ServletUriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
    <Anchor>fromRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromRequestUri(HttpServletRequest)</Name>
      <Type>clm</Type>
      <Scope>ServletUriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
    <Anchor>fromRequestUri(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromServletMapping(HttpServletRequest)</Name>
      <Type>clm</Type>
      <Scope>ServletUriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/ServletUriComponentsBuilder.html</Path>
    <Anchor>fromServletMapping(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromStoreValue(Object)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCache.html</Path>
    <Anchor>fromStoreValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromStoreValue(Object)</Name>
      <Type>instm</Type>
      <Scope>JCacheCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheCache.html</Path>
    <Anchor>fromStoreValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromUri(URI)</Name>
      <Type>clm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>fromUri(java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromUriString(String)</Name>
      <Type>clm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>fromUriString(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FunctionReference</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/FunctionReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FunctionReference(String, int, SpelNodeImpl...)</Name>
      <Type>Constructor</Type>
      <Scope>FunctionReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/FunctionReference.html</Path>
    <Anchor>FunctionReference(java.lang.String, int, org.springframework.expression.spel.ast.SpelNodeImpl...)</Anchor>
  </Token>
</Tokens>
