<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>BadSqlGrammarException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/BadSqlGrammarException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BadSqlGrammarException(String, String, SQLException)</Name>
      <Type>Constructor</Type>
      <Scope>BadSqlGrammarException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/BadSqlGrammarException.html</Path>
    <Anchor>BadSqlGrammarException(java.lang.String, java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BASE_NAME_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>ResourceBundleEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ResourceBundleEditor.html</Path>
    <Anchor>BASE_NAME_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseCommandController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseCommandController()</Name>
      <Type>Constructor</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>BaseCommandController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseCommandController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseCommandController()</Name>
      <Type>Constructor</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>BaseCommandController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BatchPreparedStatementSetter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BatchPreparedStatementSetter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BatchSqlUpdate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BatchSqlUpdate()</Name>
      <Type>Constructor</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>BatchSqlUpdate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BatchSqlUpdate(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>BatchSqlUpdate(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BatchSqlUpdate(DataSource, String, int[])</Name>
      <Type>Constructor</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>BatchSqlUpdate(javax.sql.DataSource, java.lang.String, int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BatchSqlUpdate(DataSource, String, int[], int)</Name>
      <Type>Constructor</Type>
      <Scope>BatchSqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/BatchSqlUpdate.html</Path>
    <Anchor>BatchSqlUpdate(javax.sql.DataSource, java.lang.String, int[], int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String[])</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, BatchPreparedStatementSetter)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, org.springframework.jdbc.core.BatchPreparedStatementSetter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, List&amp;lt;Object[]&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, List&amp;lt;Object[]&amp;gt;, int[])</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.List, int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, Collection&amp;lt;T&amp;gt;, int, ParameterizedPreparedStatementSetter&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.Collection, int, org.springframework.jdbc.core.ParameterizedPreparedStatementSetter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String[])</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, BatchPreparedStatementSetter)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, org.springframework.jdbc.core.BatchPreparedStatementSetter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, List&amp;lt;Object[]&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, List&amp;lt;Object[]&amp;gt;, int[])</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.List, int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, Collection&amp;lt;T&amp;gt;, int, ParameterizedPreparedStatementSetter&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.Collection, int, org.springframework.jdbc.core.ParameterizedPreparedStatementSetter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, Map&amp;lt;String, ?&amp;gt;[])</Name>
      <Type>intfm</Type>
      <Scope>NamedParameterJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.Map[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, SqlParameterSource[])</Name>
      <Type>intfm</Type>
      <Scope>NamedParameterJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, Map&amp;lt;String, ?&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.Map[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, SqlParameterSource[])</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, Map&amp;lt;String, ?&amp;gt;[])</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.Map[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, SqlParameterSource[])</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, List&amp;lt;Object[]&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, List&amp;lt;Object[]&amp;gt;, int[])</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcOperations.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.List, int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, List&amp;lt;Object[]&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, List&amp;lt;Object[]&amp;gt;, int[])</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.List, int[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, Map&amp;lt;String, ?&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, java.util.Map[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batchUpdate(String, SqlParameterSource[])</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html</Path>
    <Anchor>batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BatchUpdateUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BatchUpdateUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BatchUpdateUtils()</Name>
      <Type>Constructor</Type>
      <Scope>BatchUpdateUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BatchUpdateUtils.html</Path>
    <Anchor>BatchUpdateUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Bean</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Bean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BEAN_CONFIGURER_ASPECT_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>SpringConfiguredConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/aspectj/SpringConfiguredConfiguration.html</Path>
    <Anchor>BEAN_CONFIGURER_ASPECT_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BEAN_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>BEAN_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BEAN_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>BEAN_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BEAN_FACTORY_PATH_DELIMITERS</Name>
      <Type>Field</Type>
      <Scope>ContextJndiBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextJndiBeanFactoryLocator.html</Path>
    <Anchor>BEAN_FACTORY_PATH_DELIMITERS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BEAN_FACTORY_PATH_ENVIRONMENT_KEY</Name>
      <Type>Field</Type>
      <Scope>AbstractEnterpriseBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractEnterpriseBean.html</Path>
    <Anchor>BEAN_FACTORY_PATH_ENVIRONMENT_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BEAN_NAME_DELIMITERS</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>BEAN_NAME_DELIMITERS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BEAN_REF_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>BEAN_REF_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanClassLoaderAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanClassLoaderAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanComponentDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/BeanComponentDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanComponentDefinition(BeanDefinition, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/BeanComponentDefinition.html</Path>
    <Anchor>BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanComponentDefinition(BeanDefinition, String, String[])</Name>
      <Type>Constructor</Type>
      <Scope>BeanComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/BeanComponentDefinition.html</Path>
    <Anchor>BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanComponentDefinition(BeanDefinitionHolder)</Name>
      <Type>Constructor</Type>
      <Scope>BeanComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/BeanComponentDefinition.html</Path>
    <Anchor>BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beanConfigurerAspect()</Name>
      <Type>instm</Type>
      <Scope>SpringConfiguredConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/aspectj/SpringConfiguredConfiguration.html</Path>
    <Anchor>beanConfigurerAspect()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanConfigurerSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.wiring</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanConfigurerSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanConfigurerSupport()</Name>
      <Type>Constructor</Type>
      <Scope>BeanConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanConfigurerSupport.html</Path>
    <Anchor>BeanConfigurerSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCreationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCreationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>BeanCreationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCreationException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>BeanCreationException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCreationException(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>BeanCreationException(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCreationException(String, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>BeanCreationException(java.lang.String, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCreationException(String, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>BeanCreationException(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCreationException(String, String, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>BeanCreationException(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCreationNotAllowedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationNotAllowedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCreationNotAllowedException(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanCreationNotAllowedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationNotAllowedException.html</Path>
    <Anchor>BeanCreationNotAllowedException(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCurrentlyInCreationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCurrentlyInCreationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCurrentlyInCreationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanCurrentlyInCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCurrentlyInCreationException.html</Path>
    <Anchor>BeanCurrentlyInCreationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanCurrentlyInCreationException(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanCurrentlyInCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCurrentlyInCreationException.html</Path>
    <Anchor>BeanCurrentlyInCreationException(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinition</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionBuilder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionDecorator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionDecorator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionDefaults</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionDefaults.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionDefaults()</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionDefaults</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionDefaults.html</Path>
    <Anchor>BeanDefinitionDefaults()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionDocumentReader</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionDocumentReader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionHolder(BeanDefinition, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionHolder.html</Path>
    <Anchor>BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinition, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionHolder(BeanDefinition, String, String[])</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionHolder.html</Path>
    <Anchor>BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionHolder(BeanDefinitionHolder)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionHolder.html</Path>
    <Anchor>BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinitionHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionParser</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionParserDelegate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionParserDelegate(XmlReaderContext, Environment)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>BeanDefinitionParserDelegate(org.springframework.beans.factory.xml.XmlReaderContext, org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionParserDelegate(XmlReaderContext)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>BeanDefinitionParserDelegate(org.springframework.beans.factory.xml.XmlReaderContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionParsingException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/BeanDefinitionParsingException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionParsingException(Problem)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionParsingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/BeanDefinitionParsingException.html</Path>
    <Anchor>BeanDefinitionParsingException(org.springframework.beans.factory.parsing.Problem)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionReader</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionReader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionReaderUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionReaderUtils()</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionReaderUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html</Path>
    <Anchor>BeanDefinitionReaderUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionRegistry</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionRegistryPostProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionRegistryPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionStoreException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanDefinitionStoreException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionStoreException(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionStoreException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanDefinitionStoreException.html</Path>
    <Anchor>BeanDefinitionStoreException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionStoreException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionStoreException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanDefinitionStoreException.html</Path>
    <Anchor>BeanDefinitionStoreException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionStoreException(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionStoreException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanDefinitionStoreException.html</Path>
    <Anchor>BeanDefinitionStoreException(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionStoreException(String, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionStoreException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanDefinitionStoreException.html</Path>
    <Anchor>BeanDefinitionStoreException(java.lang.String, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionStoreException(String, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionStoreException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanDefinitionStoreException.html</Path>
    <Anchor>BeanDefinitionStoreException(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionStoreException(String, String, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionStoreException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanDefinitionStoreException.html</Path>
    <Anchor>BeanDefinitionStoreException(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionValidationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionValidationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionValidationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionValidationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionValidationException.html</Path>
    <Anchor>BeanDefinitionValidationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionValidationException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionValidationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionValidationException.html</Path>
    <Anchor>BeanDefinitionValidationException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionVisitor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionVisitor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionVisitor(StringValueResolver)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionVisitor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionVisitor.html</Path>
    <Anchor>BeanDefinitionVisitor(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanDefinitionVisitor()</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionVisitor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionVisitor.html</Path>
    <Anchor>BeanDefinitionVisitor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanEntry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/BeanEntry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanEntry(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanEntry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/BeanEntry.html</Path>
    <Anchor>BeanEntry(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanExpressionContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanExpressionContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanExpressionContext(ConfigurableBeanFactory, Scope)</Name>
      <Type>Constructor</Type>
      <Scope>BeanExpressionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanExpressionContext.html</Path>
    <Anchor>BeanExpressionContext(org.springframework.beans.factory.config.ConfigurableBeanFactory, org.springframework.beans.factory.config.Scope)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanExpressionContextAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanExpressionContextAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanExpressionContextAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>BeanExpressionContextAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanExpressionContextAccessor.html</Path>
    <Anchor>BeanExpressionContextAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanExpressionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanExpressionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanExpressionException(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanExpressionException.html</Path>
    <Anchor>BeanExpressionException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanExpressionException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanExpressionException.html</Path>
    <Anchor>BeanExpressionException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanExpressionResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanExpressionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanFactoryAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanFactoryAccessor.html</Path>
    <Anchor>BeanFactoryAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAdvisorRetrievalHelper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.autoproxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAdvisorRetrievalHelper(ConfigurableListableBeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryAdvisorRetrievalHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.html</Path>
    <Anchor>BeanFactoryAdvisorRetrievalHelper(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAnnotationUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/BeanFactoryAnnotationUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAnnotationUtils()</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryAnnotationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/BeanFactoryAnnotationUtils.html</Path>
    <Anchor>BeanFactoryAnnotationUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAspectInstanceFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAspectInstanceFactory(BeanFactory, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.html</Path>
    <Anchor>BeanFactoryAspectInstanceFactory(org.springframework.beans.factory.BeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAspectInstanceFactory(BeanFactory, String, Class)</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryAspectInstanceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.html</Path>
    <Anchor>BeanFactoryAspectInstanceFactory(org.springframework.beans.factory.BeanFactory, java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAspectJAdvisorsBuilder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAspectJAdvisorsBuilder(ListableBeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryAspectJAdvisorsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html</Path>
    <Anchor>BeanFactoryAspectJAdvisorsBuilder(org.springframework.beans.factory.ListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAspectJAdvisorsBuilder(ListableBeanFactory, AspectJAdvisorFactory)</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryAspectJAdvisorsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html</Path>
    <Anchor>BeanFactoryAspectJAdvisorsBuilder(org.springframework.beans.factory.ListableBeanFactory, org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryCacheOperationSourceAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/BeanFactoryCacheOperationSourceAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryCacheOperationSourceAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryCacheOperationSourceAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/BeanFactoryCacheOperationSourceAdvisor.html</Path>
    <Anchor>BeanFactoryCacheOperationSourceAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryDataSourceLookup</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.lookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryDataSourceLookup()</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryDataSourceLookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html</Path>
    <Anchor>BeanFactoryDataSourceLookup()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryDataSourceLookup(BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryDataSourceLookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html</Path>
    <Anchor>BeanFactoryDataSourceLookup(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryDestinationResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.support.destination</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryDestinationResolver()</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html</Path>
    <Anchor>BeanFactoryDestinationResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryDestinationResolver(BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html</Path>
    <Anchor>BeanFactoryDestinationResolver(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryLocator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/BeanFactoryLocator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryPostProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanFactoryPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryReference</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/BeanFactoryReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryRefreshableTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target.dynamic</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/BeanFactoryRefreshableTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryRefreshableTargetSource(BeanFactory, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryRefreshableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/BeanFactoryRefreshableTargetSource.html</Path>
    <Anchor>BeanFactoryRefreshableTargetSource(org.springframework.beans.factory.BeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanFactoryResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryResolver(BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanFactoryResolver.html</Path>
    <Anchor>BeanFactoryResolver(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryTransactionAttributeSourceAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryTransactionAttributeSourceAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryTransactionAttributeSourceAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor.html</Path>
    <Anchor>BeanFactoryTransactionAttributeSourceAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanFactoryUtils()</Name>
      <Type>Constructor</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>BeanFactoryUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanInfoFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanInfoFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanInitializationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanInitializationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanInitializationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanInitializationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanInitializationException.html</Path>
    <Anchor>BeanInitializationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanInitializationException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanInitializationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanInitializationException.html</Path>
    <Anchor>BeanInitializationException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanInstantiationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanInstantiationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanInstantiationException(Class, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanInstantiationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanInstantiationException.html</Path>
    <Anchor>BeanInstantiationException(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanInstantiationException(Class, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeanInstantiationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanInstantiationException.html</Path>
    <Anchor>BeanInstantiationException(java.lang.Class, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanIsAbstractException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanIsAbstractException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanIsAbstractException(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanIsAbstractException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanIsAbstractException.html</Path>
    <Anchor>BeanIsAbstractException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanIsNotAFactoryException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanIsNotAFactoryException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanIsNotAFactoryException(String, Class)</Name>
      <Type>Constructor</Type>
      <Scope>BeanIsNotAFactoryException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanIsNotAFactoryException.html</Path>
    <Anchor>BeanIsNotAFactoryException(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanMetadataAttribute</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttribute.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanMetadataAttribute(String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>BeanMetadataAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttribute.html</Path>
    <Anchor>BeanMetadataAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanMetadataAttributeAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttributeAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanMetadataAttributeAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>BeanMetadataAttributeAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttributeAccessor.html</Path>
    <Anchor>BeanMetadataAttributeAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanMetadataElement</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataElement.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNameAutoProxyCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.autoproxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/BeanNameAutoProxyCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNameAutoProxyCreator()</Name>
      <Type>Constructor</Type>
      <Scope>BeanNameAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/BeanNameAutoProxyCreator.html</Path>
    <Anchor>BeanNameAutoProxyCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNameAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanNameAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNameGenerator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanNameGenerator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beanNameHandlerMapping()</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>beanNameHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beanNamesIncludingAncestors(ListableBeanFactory)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>beanNamesIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNameUrlHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/BeanNameUrlHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNameUrlHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>BeanNameUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/BeanNameUrlHandlerMapping.html</Path>
    <Anchor>BeanNameUrlHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNameViewResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/BeanNameViewResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNameViewResolver()</Name>
      <Type>Constructor</Type>
      <Scope>BeanNameViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/BeanNameViewResolver.html</Path>
    <Anchor>BeanNameViewResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNotOfRequiredTypeException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanNotOfRequiredTypeException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanNotOfRequiredTypeException(String, Class, Class)</Name>
      <Type>Constructor</Type>
      <Scope>BeanNotOfRequiredTypeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanNotOfRequiredTypeException.html</Path>
    <Anchor>BeanNotOfRequiredTypeException(java.lang.String, java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beanOfType(ListableBeanFactory, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>beanOfType(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beanOfType(ListableBeanFactory, Class&amp;lt;T&amp;gt;, boolean, boolean)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>beanOfType(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beanOfTypeIncludingAncestors(ListableBeanFactory, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>beanOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beanOfTypeIncludingAncestors(ListableBeanFactory, Class&amp;lt;T&amp;gt;, boolean, boolean)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>beanOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPostProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPropertyBindingResult</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BeanPropertyBindingResult.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPropertyBindingResult(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanPropertyBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BeanPropertyBindingResult.html</Path>
    <Anchor>BeanPropertyBindingResult(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPropertyBindingResult(Object, String, boolean, int)</Name>
      <Type>Constructor</Type>
      <Scope>BeanPropertyBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BeanPropertyBindingResult.html</Path>
    <Anchor>BeanPropertyBindingResult(java.lang.Object, java.lang.String, boolean, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPropertyRowMapper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPropertyRowMapper()</Name>
      <Type>Constructor</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>BeanPropertyRowMapper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPropertyRowMapper(Class&amp;lt;T&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>BeanPropertyRowMapper(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPropertyRowMapper(Class&amp;lt;T&amp;gt;, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>BeanPropertyRowMapper(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPropertySqlParameterSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.namedparam</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/BeanPropertySqlParameterSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanPropertySqlParameterSource(Object)</Name>
      <Type>Constructor</Type>
      <Scope>BeanPropertySqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/BeanPropertySqlParameterSource.html</Path>
    <Anchor>BeanPropertySqlParameterSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanReference</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanReference</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/BeanReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanReference(int, String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/BeanReference.html</Path>
    <Anchor>BeanReference(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanReferenceFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanReferenceFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>BeanReferenceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html</Path>
    <Anchor>BeanReferenceFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/BeanResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BEANS_NAMESPACE_URI</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>BEANS_NAMESPACE_URI</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeansDtdResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeansDtdResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeansDtdResolver()</Name>
      <Type>Constructor</Type>
      <Scope>BeansDtdResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeansDtdResolver.html</Path>
    <Anchor>BeansDtdResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeansException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeansException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeansException(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeansException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeansException.html</Path>
    <Anchor>BeansException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeansException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BeansException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeansException.html</Path>
    <Anchor>BeansException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beansOfTypeIncludingAncestors(ListableBeanFactory, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beansOfTypeIncludingAncestors(ListableBeanFactory, Class&amp;lt;T&amp;gt;, boolean, boolean)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanUtils()</Name>
      <Type>Constructor</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>BeanUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanValidationPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation.beanvalidation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanValidationPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>BeanValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html</Path>
    <Anchor>BeanValidationPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWiringInfo</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.wiring</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWiringInfo()</Name>
      <Type>Constructor</Type>
      <Scope>BeanWiringInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfo.html</Path>
    <Anchor>BeanWiringInfo()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWiringInfo(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanWiringInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfo.html</Path>
    <Anchor>BeanWiringInfo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWiringInfo(String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>BeanWiringInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfo.html</Path>
    <Anchor>BeanWiringInfo(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWiringInfo(int, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>BeanWiringInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfo.html</Path>
    <Anchor>BeanWiringInfo(int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWiringInfoResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.wiring</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfoResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWrapper</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWrapperImpl</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWrapperImpl()</Name>
      <Type>Constructor</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>BeanWrapperImpl()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWrapperImpl(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>BeanWrapperImpl(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWrapperImpl(Object)</Name>
      <Type>Constructor</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>BeanWrapperImpl(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWrapperImpl(Class&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>BeanWrapperImpl(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeanWrapperImpl(Object, String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>BeanWrapperImpl(java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>before(Method, Object[], Object)</Name>
      <Type>instm</Type>
      <Scope>AspectJMethodBeforeAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html</Path>
    <Anchor>before(java.lang.reflect.Method, java.lang.Object[], java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>before(Method, Object[], Object)</Name>
      <Type>intfm</Type>
      <Scope>MethodBeforeAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/MethodBeforeAdvice.html</Path>
    <Anchor>before(java.lang.reflect.Method, java.lang.Object[], java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeAccess()</Name>
      <Type>instm</Type>
      <Scope>ConcurrencyThrottleSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrencyThrottleSupport.html</Path>
    <Anchor>beforeAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeforeAdvice</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/BeforeAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCommit(boolean)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>beforeCommit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCommit(boolean)</Name>
      <Type>intfm</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>beforeCommit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCommit(boolean)</Name>
      <Type>instm</Type>
      <Scope>TransactionSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationAdapter.html</Path>
    <Anchor>beforeCommit(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCompletion()</Name>
      <Type>instm</Type>
      <Scope>JtaLobCreatorSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/JtaLobCreatorSynchronization.html</Path>
    <Anchor>beforeCompletion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCompletion()</Name>
      <Type>instm</Type>
      <Scope>SpringLobCreatorSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/SpringLobCreatorSynchronization.html</Path>
    <Anchor>beforeCompletion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCompletion()</Name>
      <Type>instm</Type>
      <Scope>JtaAfterCompletionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaAfterCompletionSynchronization.html</Path>
    <Anchor>beforeCompletion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCompletion()</Name>
      <Type>instm</Type>
      <Scope>SpringJtaSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.html</Path>
    <Anchor>beforeCompletion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCompletion()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>beforeCompletion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCompletion()</Name>
      <Type>intfm</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>beforeCompletion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeCompletion()</Name>
      <Type>instm</Type>
      <Scope>TransactionSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationAdapter.html</Path>
    <Anchor>beforeCompletion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeConcurrentHandling(NativeWebRequest, Callable&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>CallableProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptor.html</Path>
    <Anchor>beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeConcurrentHandling(NativeWebRequest, Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CallableProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter.html</Path>
    <Anchor>beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeConcurrentHandling(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>DeferredResultProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptor.html</Path>
    <Anchor>beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeConcurrentHandling(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DeferredResultProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptorAdapter.html</Path>
    <Anchor>beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeDelivery(Method)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory.AbstractMessageEndpoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html</Path>
    <Anchor>beforeDelivery(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeFirst()</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>beforeFirst()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeFirst()</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>beforeFirst()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforePhase(PhaseEvent)</Name>
      <Type>instm</Type>
      <Scope>DelegatingPhaseListenerMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingPhaseListenerMulticaster.html</Path>
    <Anchor>beforePhase(javax.faces.event.PhaseEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforePrototypeCreation(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>beforePrototypeCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeRequest(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeRequest(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>CommonsRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CommonsRequestLoggingFilter.html</Path>
    <Anchor>beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeRequest(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>Log4jNestedDiagnosticContextFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/Log4jNestedDiagnosticContextFilter.html</Path>
    <Anchor>beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeRequest(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/ServletContextRequestLoggingFilter.html</Path>
    <Anchor>beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeSessionFactoryDestruction()</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>beforeSessionFactoryDestruction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeSingletonCreation(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>beforeSingletonCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeTestClass(TestContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractTestExecutionListener.html</Path>
    <Anchor>beforeTestClass(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeTestClass()</Name>
      <Type>instm</Type>
      <Scope>TestContextManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestContextManager.html</Path>
    <Anchor>beforeTestClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeTestClass(TestContext)</Name>
      <Type>intfm</Type>
      <Scope>TestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestExecutionListener.html</Path>
    <Anchor>beforeTestClass(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeTestMethod(TestContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractTestExecutionListener.html</Path>
    <Anchor>beforeTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeTestMethod(TestContext)</Name>
      <Type>instm</Type>
      <Scope>DependencyInjectionTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html</Path>
    <Anchor>beforeTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeTestMethod(Object, Method)</Name>
      <Type>instm</Type>
      <Scope>TestContextManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestContextManager.html</Path>
    <Anchor>beforeTestMethod(java.lang.Object, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeTestMethod(TestContext)</Name>
      <Type>intfm</Type>
      <Scope>TestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestExecutionListener.html</Path>
    <Anchor>beforeTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeTestMethod(TestContext)</Name>
      <Type>instm</Type>
      <Scope>TransactionalTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/TransactionalTestExecutionListener.html</Path>
    <Anchor>beforeTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeTestMethod(TestContext)</Name>
      <Type>instm</Type>
      <Scope>ServletTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/ServletTestExecutionListener.html</Path>
    <Anchor>beforeTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeforeTransaction</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.context.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/BeforeTransaction.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin()</Name>
      <Type>instm</Type>
      <Scope>UserTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/UserTransactionAdapter.html</Path>
    <Anchor>begin()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginTransaction(Transaction, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>DefaultJdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/DefaultJdoDialect.html</Path>
    <Anchor>beginTransaction(javax.jdo.Transaction, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginTransaction(Transaction, TransactionDefinition)</Name>
      <Type>intfm</Type>
      <Scope>JdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoDialect.html</Path>
    <Anchor>beginTransaction(javax.jdo.Transaction, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginTransaction(EntityManager, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>DefaultJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/DefaultJpaDialect.html</Path>
    <Anchor>beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginTransaction(EntityManager, TransactionDefinition)</Name>
      <Type>intfm</Type>
      <Scope>JpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaDialect.html</Path>
    <Anchor>beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginTransaction(EntityManager, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>EclipseLinkJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/EclipseLinkJpaDialect.html</Path>
    <Anchor>beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginTransaction(EntityManager, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>HibernateJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaDialect.html</Path>
    <Anchor>beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginTransaction(EntityManager, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>OpenJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/OpenJpaDialect.html</Path>
    <Anchor>beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginTransaction(EntityManager, TransactionDefinition)</Name>
      <Type>instm</Type>
      <Scope>TopLinkJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html</Path>
    <Anchor>beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BEST_MATCHING_PATTERN_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>HandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerMapping.html</Path>
    <Anchor>BEST_MATCHING_PATTERN_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind(String, Object)</Name>
      <Type>instm</Type>
      <Scope>JndiTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiTemplate.html</Path>
    <Anchor>bind(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind(String, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>bind(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind(Name, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>bind(javax.naming.Name, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind(String, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContextBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContextBuilder.html</Path>
    <Anchor>bind(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind(PropertyValues)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>bind(org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind(ServletRequest)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestDataBinder.html</Path>
    <Anchor>bind(javax.servlet.ServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>WebRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebRequestDataBinder.html</Path>
    <Anchor>bind(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>PortletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestDataBinder.html</Path>
    <Anchor>bind(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>bind(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindAndValidate(PortletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>bindAndValidate(javax.portlet.PortletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindAndValidate(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>bindAndValidate(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDefaultNamespaceUri(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamespaceContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleNamespaceContext.html</Path>
    <Anchor>bindDefaultNamespaceUri(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindErrorsTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindErrorsTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindErrorsTag()</Name>
      <Type>Constructor</Type>
      <Scope>BindErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindErrorsTag.html</Path>
    <Anchor>BindErrorsTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindException(BindingResult)</Name>
      <Type>Constructor</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>BindException(org.springframework.validation.BindingResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindException(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>BindException(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindingAwareModelMap</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/support/BindingAwareModelMap.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindingAwareModelMap()</Name>
      <Type>Constructor</Type>
      <Scope>BindingAwareModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/support/BindingAwareModelMap.html</Path>
    <Anchor>BindingAwareModelMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindingErrorProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingErrorProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindingResult</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingResult.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindingResultUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingResultUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindingResultUtils()</Name>
      <Type>Constructor</Type>
      <Scope>BindingResultUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingResultUtils.html</Path>
    <Anchor>BindingResultUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindMultipart(Map&amp;lt;String, List&amp;lt;MultipartFile&amp;gt;&amp;gt;, MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>bindMultipart(java.util.Map, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindMultipartFiles(Map&amp;lt;String, MultipartFile&amp;gt;, MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>bindMultipartFiles(java.util.Map, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindNamespaceUri(String, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamespaceContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleNamespaceContext.html</Path>
    <Anchor>bindNamespaceUri(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindRequestParameters(WebDataBinder, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.html</Path>
    <Anchor>bindRequestParameters(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindRequestParameters(WebDataBinder, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ServletModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletModelAttributeMethodProcessor.html</Path>
    <Anchor>bindRequestParameters(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindResource(Object, Object)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>bindResource(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindStatus</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/BindStatus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindStatus(RequestContext, String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>BindStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/BindStatus.html</Path>
    <Anchor>BindStatus(org.springframework.web.servlet.support.RequestContext, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BindTag()</Name>
      <Type>Constructor</Type>
      <Scope>BindTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindTag.html</Path>
    <Anchor>BindTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobByteArrayType</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobByteArrayType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobByteArrayType()</Name>
      <Type>Constructor</Type>
      <Scope>BlobByteArrayType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobByteArrayType.html</Path>
    <Anchor>BlobByteArrayType()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobByteArrayType(LobHandler, TransactionManager)</Name>
      <Type>Constructor</Type>
      <Scope>BlobByteArrayType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobByteArrayType.html</Path>
    <Anchor>BlobByteArrayType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobByteArrayTypeHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.ibatis.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobByteArrayTypeHandler()</Name>
      <Type>Constructor</Type>
      <Scope>BlobByteArrayTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler.html</Path>
    <Anchor>BlobByteArrayTypeHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobByteArrayTypeHandler(LobHandler)</Name>
      <Type>Constructor</Type>
      <Scope>BlobByteArrayTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler.html</Path>
    <Anchor>BlobByteArrayTypeHandler(org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobSerializableType</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobSerializableType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobSerializableType()</Name>
      <Type>Constructor</Type>
      <Scope>BlobSerializableType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobSerializableType.html</Path>
    <Anchor>BlobSerializableType()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobSerializableType(LobHandler, TransactionManager)</Name>
      <Type>Constructor</Type>
      <Scope>BlobSerializableType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobSerializableType.html</Path>
    <Anchor>BlobSerializableType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobSerializableTypeHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.ibatis.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/BlobSerializableTypeHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobSerializableTypeHandler()</Name>
      <Type>Constructor</Type>
      <Scope>BlobSerializableTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/BlobSerializableTypeHandler.html</Path>
    <Anchor>BlobSerializableTypeHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobSerializableTypeHandler(LobHandler)</Name>
      <Type>Constructor</Type>
      <Scope>BlobSerializableTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/BlobSerializableTypeHandler.html</Path>
    <Anchor>BlobSerializableTypeHandler(org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobStringType</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobStringType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobStringType()</Name>
      <Type>Constructor</Type>
      <Scope>BlobStringType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobStringType.html</Path>
    <Anchor>BlobStringType()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlobStringType(LobHandler, TransactionManager)</Name>
      <Type>Constructor</Type>
      <Scope>BlobStringType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobStringType.html</Path>
    <Anchor>BlobStringType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockForAvailableThreads()</Name>
      <Type>instm</Type>
      <Scope>LocalTaskExecutorThreadPool</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html</Path>
    <Anchor>blockForAvailableThreads()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>body(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultResponseCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/DefaultResponseCreator.html</Path>
    <Anchor>body(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>body(byte[])</Name>
      <Type>instm</Type>
      <Scope>DefaultResponseCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/DefaultResponseCreator.html</Path>
    <Anchor>body(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>body(Resource)</Name>
      <Type>instm</Type>
      <Scope>DefaultResponseCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/DefaultResponseCreator.html</Path>
    <Anchor>body(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BooleanComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.comparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/BooleanComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BooleanComparator(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>BooleanComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/BooleanComparator.html</Path>
    <Anchor>BooleanComparator(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BooleanLiteral</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/BooleanLiteral.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BooleanLiteral(String, int, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>BooleanLiteral</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/BooleanLiteral.html</Path>
    <Anchor>BooleanLiteral(java.lang.String, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BooleanTypedValue</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/BooleanTypedValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>booleanValue(Boolean)</Name>
      <Type>instm</Type>
      <Scope>XpathRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/XpathRequestMatchers.html</Path>
    <Anchor>booleanValue(java.lang.Boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>booleanValue(Boolean)</Name>
      <Type>instm</Type>
      <Scope>XpathResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/XpathResultMatchers.html</Path>
    <Anchor>booleanValue(java.lang.Boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BootstrapContextAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jca.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/BootstrapContextAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BootstrapException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/BootstrapException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BootstrapException(String)</Name>
      <Type>Constructor</Type>
      <Scope>BootstrapException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/BootstrapException.html</Path>
    <Anchor>BootstrapException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BootstrapException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>BootstrapException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/BootstrapException.html</Path>
    <Anchor>BootstrapException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BridgeMethodResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/BridgeMethodResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BridgeMethodResolver()</Name>
      <Type>Constructor</Type>
      <Scope>BridgeMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/BridgeMethodResolver.html</Path>
    <Anchor>BridgeMethodResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browse(BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>browse(org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browse(Queue, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>browse(javax.jms.Queue, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browse(String, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>browse(java.lang.String, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browse(BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>browse(org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browse(Queue, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>browse(javax.jms.Queue, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browse(String, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>browse(java.lang.String, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BrowserCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/BrowserCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browseSelected(String, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>browseSelected(java.lang.String, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browseSelected(Queue, String, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>browseSelected(javax.jms.Queue, java.lang.String, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browseSelected(String, String, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>browseSelected(java.lang.String, java.lang.String, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browseSelected(String, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>browseSelected(java.lang.String, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browseSelected(Queue, String, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>browseSelected(javax.jms.Queue, java.lang.String, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browseSelected(String, String, BrowserCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>browseSelected(java.lang.String, java.lang.String, org.springframework.jms.core.BrowserCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BshScriptFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scripting.bsh</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BshScriptFactory(String)</Name>
      <Type>Constructor</Type>
      <Scope>BshScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptFactory.html</Path>
    <Anchor>BshScriptFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BshScriptFactory(String, Class[])</Name>
      <Type>Constructor</Type>
      <Scope>BshScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptFactory.html</Path>
    <Anchor>BshScriptFactory(java.lang.String, java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BshScriptUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scripting.bsh</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BshScriptUtils()</Name>
      <Type>Constructor</Type>
      <Scope>BshScriptUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptUtils.html</Path>
    <Anchor>BshScriptUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BshScriptUtils.BshExecutionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.scripting.bsh</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptUtils.BshExecutionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BUFFER_SIZE</Name>
      <Type>Field</Type>
      <Scope>SimpleMessageConverter102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter102.html</Path>
    <Anchor>BUFFER_SIZE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BUFFER_SIZE</Name>
      <Type>Field</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>BUFFER_SIZE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferedImageHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferedImageHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>BufferedImageHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
    <Anchor>BufferedImageHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferingClientHttpRequestFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/BufferingClientHttpRequestFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferingClientHttpRequestFactory(ClientHttpRequestFactory)</Name>
      <Type>Constructor</Type>
      <Scope>BufferingClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/BufferingClientHttpRequestFactory.html</Path>
    <Anchor>BufferingClientHttpRequestFactory(org.springframework.http.client.ClientHttpRequestFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build()</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html</Path>
    <Anchor>build()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build()</Name>
      <Type>intfm</Type>
      <Scope>MockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/MockMvcBuilder.html</Path>
    <Anchor>build()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build()</Name>
      <Type>instm</Type>
      <Scope>DefaultMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
    <Anchor>build()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build()</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>build()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build(boolean)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>build(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildAdvice(Executor)</Name>
      <Type>instm</Type>
      <Scope>AsyncAnnotationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html</Path>
    <Anchor>buildAdvice(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildAdvisors(String, Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>buildAdvisors(java.lang.String, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildAndExpand(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>buildAndExpand(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildAndExpand(Object...)</Name>
      <Type>instm</Type>
      <Scope>UriComponentsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponentsBuilder.html</Path>
    <Anchor>buildAndExpand(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildAspectJAdvisors()</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryAspectJAdvisorsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html</Path>
    <Anchor>buildAspectJAdvisors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildCache(String, Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalCacheProviderProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalCacheProviderProxy.html</Path>
    <Anchor>buildCache(java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildCollectionRegion(String, Properties, CacheDataDescription)</Name>
      <Type>instm</Type>
      <Scope>LocalRegionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html</Path>
    <Anchor>buildCollectionRegion(java.lang.String, java.util.Properties, org.hibernate.cache.CacheDataDescription)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefaultBeanName(BeanDefinition, BeanDefinitionRegistry)</Name>
      <Type>instm</Type>
      <Scope>AnnotationBeanNameGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationBeanNameGenerator.html</Path>
    <Anchor>buildDefaultBeanName(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefaultBeanName(BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AnnotationBeanNameGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationBeanNameGenerator.html</Path>
    <Anchor>buildDefaultBeanName(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildEntityRegion(String, Properties, CacheDataDescription)</Name>
      <Type>instm</Type>
      <Scope>LocalRegionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html</Path>
    <Anchor>buildEntityRegion(java.lang.String, java.util.Properties, org.hibernate.cache.CacheDataDescription)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildExcelDocument(Map&amp;lt;String, Object&amp;gt;, HSSFWorkbook, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractExcelView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractExcelView.html</Path>
    <Anchor>buildExcelDocument(java.util.Map, org.apache.poi.hssf.usermodel.HSSFWorkbook, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildExcelDocument(Map&amp;lt;String, Object&amp;gt;, WritableWorkbook, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractJExcelView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractJExcelView.html</Path>
    <Anchor>buildExcelDocument(java.util.Map, jxl.write.WritableWorkbook, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildExceptionMessage(JMSException)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>buildExceptionMessage(javax.jms.JMSException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildFeedEntries(Map&amp;lt;String, Object&amp;gt;, Feed, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractAtomFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html</Path>
    <Anchor>buildFeedEntries(java.util.Map, com.sun.syndication.feed.atom.Feed, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildFeedEntries(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractAtomFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html</Path>
    <Anchor>buildFeedEntries(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildFeedEntries(Map&amp;lt;String, Object&amp;gt;, T, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractFeedView.html</Path>
    <Anchor>buildFeedEntries(java.util.Map, T, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildFeedEntries(Map&amp;lt;String, Object&amp;gt;, Channel, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractRssFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractRssFeedView.html</Path>
    <Anchor>buildFeedEntries(java.util.Map, com.sun.syndication.feed.rss.Channel, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildFeedItems(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractRssFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractRssFeedView.html</Path>
    <Anchor>buildFeedItems(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildFeedMetadata(Map&amp;lt;String, Object&amp;gt;, T, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractFeedView.html</Path>
    <Anchor>buildFeedMetadata(java.util.Map, T, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildFieldList(String, List&amp;lt;String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.html</Path>
    <Anchor>buildFieldList(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildHttpContext(Endpoint, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>buildHttpContext(javax.xml.ws.Endpoint, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildInternalBeanFactory(ConfigurableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html</Path>
    <Anchor>buildInternalBeanFactory(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildListenerArguments(Object)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>buildListenerArguments(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildLiveBeansView()</Name>
      <Type>instm</Type>
      <Scope>LiveBeansViewServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/LiveBeansViewServlet.html</Path>
    <Anchor>buildLiveBeansView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildLocaleContext(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>buildLocaleContext(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildLocaleContext(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>buildLocaleContext(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildLocaleContext(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>buildLocaleContext(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildLogMessage(Exception, PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>buildLogMessage(java.lang.Exception, javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildLogMessage(Exception, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>buildLogMessage(java.lang.Exception, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMessage(String, Throwable)</Name>
      <Type>clm</Type>
      <Scope>NestedExceptionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/NestedExceptionUtils.html</Path>
    <Anchor>buildMessage(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMessage(String, String, SQLException)</Name>
      <Type>instm</Type>
      <Scope>AbstractFallbackSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/AbstractFallbackSQLExceptionTranslator.html</Path>
    <Anchor>buildMessage(java.lang.String, java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMessage(Session, Object)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>buildMessage(javax.jms.Session, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildOrObtainSession()</Name>
      <Type>instm</Type>
      <Scope>SpringJtaSessionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SpringJtaSessionContext.html</Path>
    <Anchor>buildOrObtainSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildPathExposingHandler(Object, String, String, Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
    <Anchor>buildPathExposingHandler(java.lang.Object, java.lang.String, java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildPdfDocument(Map&amp;lt;String, Object&amp;gt;, Document, PdfWriter, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractPdfView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfView.html</Path>
    <Anchor>buildPdfDocument(java.util.Map, com.lowagie.text.Document, com.lowagie.text.pdf.PdfWriter, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildPdfMetadata(Map&amp;lt;String, Object&amp;gt;, Document, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractPdfView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfView.html</Path>
    <Anchor>buildPdfMetadata(java.util.Map, com.lowagie.text.Document, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildPointcut(Set&amp;lt;Class&amp;lt;? extends Annotation&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AsyncAnnotationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html</Path>
    <Anchor>buildPointcut(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildQueryResultsRegion(String, Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalRegionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html</Path>
    <Anchor>buildQueryResultsRegion(java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildRequest(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>buildRequest(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildRequest(ServletContext)</Name>
      <Type>intfm</Type>
      <Scope>RequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/RequestBuilder.html</Path>
    <Anchor>buildRequest(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildSafePointcut()</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>buildSafePointcut()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildSessionFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>buildSessionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildSessionFactory()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>buildSessionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildSessionFactory(LocalSessionFactoryBuilder)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>buildSessionFactory(org.springframework.orm.hibernate4.LocalSessionFactoryBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildSessionFactory()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.html</Path>
    <Anchor>buildSessionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildSqlMapClient(Resource[], Resource[], Properties)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>buildSqlMapClient(org.springframework.core.io.Resource[], org.springframework.core.io.Resource[], java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildSqlParameterList(ParsedSql, SqlParameterSource)</Name>
      <Type>clm</Type>
      <Scope>NamedParameterUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterUtils.html</Path>
    <Anchor>buildSqlParameterList(org.springframework.jdbc.core.namedparam.ParsedSql, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildSqlTypeArray(ParsedSql, SqlParameterSource)</Name>
      <Type>clm</Type>
      <Scope>NamedParameterUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterUtils.html</Path>
    <Anchor>buildSqlTypeArray(org.springframework.jdbc.core.namedparam.ParsedSql, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTemplateModel(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>buildTemplateModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTimestampsRegion(String, Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalRegionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html</Path>
    <Anchor>buildTimestampsRegion(java.lang.String, java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTransformer(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>buildTransformer(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTypedStringValue(String, String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>buildTypedStringValue(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTypedStringValueForMap(String, String, Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>buildTypedStringValueForMap(java.lang.String, java.lang.String, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildUrlsForHandler(String, Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractControllerUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
    <Anchor>buildUrlsForHandler(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildUrlsForHandler(String, Class)</Name>
      <Type>instm</Type>
      <Scope>ControllerBeanNameHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html</Path>
    <Anchor>buildUrlsForHandler(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildUrlsForHandler(String, Class)</Name>
      <Type>instm</Type>
      <Scope>ControllerClassNameHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html</Path>
    <Anchor>buildUrlsForHandler(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildUserTransaction(TransactionManager)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>buildUserTransaction(javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildValueArray(ParsedSql, SqlParameterSource, List&amp;lt;SqlParameter&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>NamedParameterUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterUtils.html</Path>
    <Anchor>buildValueArray(org.springframework.jdbc.core.namedparam.ParsedSql, org.springframework.jdbc.core.namedparam.SqlParameterSource, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildValueArray(String, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>NamedParameterUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterUtils.html</Path>
    <Anchor>buildValueArray(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildView(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateViewResolver.html</Path>
    <Anchor>buildView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildView(String)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceViewResolver.html</Path>
    <Anchor>buildView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildView(String)</Name>
      <Type>instm</Type>
      <Scope>JasperReportsViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html</Path>
    <Anchor>buildView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildView(String)</Name>
      <Type>instm</Type>
      <Scope>TilesViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesViewResolver.html</Path>
    <Anchor>buildView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildView(String)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>buildView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildView(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutViewResolver.html</Path>
    <Anchor>buildView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildView(String)</Name>
      <Type>instm</Type>
      <Scope>VelocityViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityViewResolver.html</Path>
    <Anchor>buildView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildView(String)</Name>
      <Type>instm</Type>
      <Scope>XsltViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltViewResolver.html</Path>
    <Anchor>buildView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildWiringInfo(Object, Configurable)</Name>
      <Type>instm</Type>
      <Scope>AnnotationBeanWiringInfoResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AnnotationBeanWiringInfoResolver.html</Path>
    <Anchor>buildWiringInfo(java.lang.Object, org.springframework.beans.factory.annotation.Configurable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bulkUpdate(String)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>bulkUpdate(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bulkUpdate(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>bulkUpdate(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bulkUpdate(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>bulkUpdate(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bulkUpdate(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>bulkUpdate(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bulkUpdate(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>bulkUpdate(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bulkUpdate(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>bulkUpdate(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BurlapClientInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BurlapClientInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>BurlapClientInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BurlapExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BurlapExporter()</Name>
      <Type>Constructor</Type>
      <Scope>BurlapExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapExporter.html</Path>
    <Anchor>BurlapExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BurlapProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BurlapProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>BurlapProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapProxyFactoryBean.html</Path>
    <Anchor>BurlapProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BurlapServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.caucho</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BurlapServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>BurlapServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapServiceExporter.html</Path>
    <Anchor>BurlapServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ButtonTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ButtonTag()</Name>
      <Type>Constructor</Type>
      <Scope>ButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
    <Anchor>ButtonTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>byPassReturnParameter(String)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>byPassReturnParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>byPassReturnParameter(String)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>byPassReturnParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>byPassReturnParameter(String)</Name>
      <Type>instm</Type>
      <Scope>PostgresCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html</Path>
    <Anchor>byPassReturnParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>byPassReturnParameter(String)</Name>
      <Type>instm</Type>
      <Scope>SqlServerCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/SqlServerCallMetaDataProvider.html</Path>
    <Anchor>byPassReturnParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>byPassReturnParameter(String)</Name>
      <Type>instm</Type>
      <Scope>SybaseCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/SybaseCallMetaDataProvider.html</Path>
    <Anchor>byPassReturnParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ByteArrayHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ByteArrayHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ByteArrayHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>ByteArrayHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ByteArrayHttpMessageConverter.html</Path>
    <Anchor>ByteArrayHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ByteArrayMultipartFileEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/ByteArrayMultipartFileEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ByteArrayMultipartFileEditor()</Name>
      <Type>Constructor</Type>
      <Scope>ByteArrayMultipartFileEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/ByteArrayMultipartFileEditor.html</Path>
    <Anchor>ByteArrayMultipartFileEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ByteArrayPropertyEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ByteArrayPropertyEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ByteArrayPropertyEditor()</Name>
      <Type>Constructor</Type>
      <Scope>ByteArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ByteArrayPropertyEditor.html</Path>
    <Anchor>ByteArrayPropertyEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ByteArrayResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ByteArrayResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ByteArrayResource(byte[])</Name>
      <Type>Constructor</Type>
      <Scope>ByteArrayResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ByteArrayResource.html</Path>
    <Anchor>ByteArrayResource(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ByteArrayResource(byte[], String)</Name>
      <Type>Constructor</Type>
      <Scope>ByteArrayResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ByteArrayResource.html</Path>
    <Anchor>ByteArrayResource(byte[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytes(byte[])</Name>
      <Type>instm</Type>
      <Scope>ContentRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
    <Anchor>bytes(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytes(byte[])</Name>
      <Type>instm</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>bytes(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytesToObject(byte[])</Name>
      <Type>instm</Type>
      <Scope>MappingCommAreaOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/MappingCommAreaOperation.html</Path>
    <Anchor>bytesToObject(byte[])</Anchor>
  </Token>
</Tokens>
