<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>EclipseLinkJpaDialect</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa.vendor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/EclipseLinkJpaDialect.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EclipseLinkJpaDialect()</Name>
      <Type>Constructor</Type>
      <Scope>EclipseLinkJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/EclipseLinkJpaDialect.html</Path>
    <Anchor>EclipseLinkJpaDialect()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EclipseLinkJpaVendorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa.vendor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/EclipseLinkJpaVendorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EclipseLinkJpaVendorAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>EclipseLinkJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/EclipseLinkJpaVendorAdapter.html</Path>
    <Anchor>EclipseLinkJpaVendorAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EditorAwareTag</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EditorAwareTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EhCacheCache</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.ehcache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheCache.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EhCacheCache(Ehcache)</Name>
      <Type>Constructor</Type>
      <Scope>EhCacheCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheCache.html</Path>
    <Anchor>EhCacheCache(net.sf.ehcache.Ehcache)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EhCacheCacheManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.ehcache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheCacheManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EhCacheCacheManager()</Name>
      <Type>Constructor</Type>
      <Scope>EhCacheCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheCacheManager.html</Path>
    <Anchor>EhCacheCacheManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EhCacheCacheManager(CacheManager)</Name>
      <Type>Constructor</Type>
      <Scope>EhCacheCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheCacheManager.html</Path>
    <Anchor>EhCacheCacheManager(net.sf.ehcache.CacheManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EhCacheFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.ehcache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EhCacheFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>EhCacheFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EhCacheManagerFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.ehcache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EhCacheManagerFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>EhCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html</Path>
    <Anchor>EhCacheManagerFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EisOperation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.object</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/EisOperation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EisOperation()</Name>
      <Type>Constructor</Type>
      <Scope>EisOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/EisOperation.html</Path>
    <Anchor>EisOperation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Ejb3TransactionAnnotationParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/Ejb3TransactionAnnotationParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Ejb3TransactionAnnotationParser()</Name>
      <Type>Constructor</Type>
      <Scope>Ejb3TransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/Ejb3TransactionAnnotationParser.html</Path>
    <Anchor>Ejb3TransactionAnnotationParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EjbAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.ejb.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/EjbAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EjbAccessException(String)</Name>
      <Type>Constructor</Type>
      <Scope>EjbAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/EjbAccessException.html</Path>
    <Anchor>EjbAccessException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EjbAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>EjbAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/EjbAccessException.html</Path>
    <Anchor>EjbAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ejbActivate()</Name>
      <Type>instm</Type>
      <Scope>AbstractStatelessSessionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractStatelessSessionBean.html</Path>
    <Anchor>ejbActivate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ejbCreate()</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageDrivenBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractMessageDrivenBean.html</Path>
    <Anchor>ejbCreate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ejbCreate()</Name>
      <Type>instm</Type>
      <Scope>AbstractStatelessSessionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractStatelessSessionBean.html</Path>
    <Anchor>ejbCreate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ejbPassivate()</Name>
      <Type>instm</Type>
      <Scope>AbstractStatelessSessionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractStatelessSessionBean.html</Path>
    <Anchor>ejbPassivate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ejbRemove()</Name>
      <Type>instm</Type>
      <Scope>AbstractEnterpriseBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractEnterpriseBean.html</Path>
    <Anchor>ejbRemove()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementTypeDescriptor(Object)</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>elementTypeDescriptor(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Elvis</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Elvis.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Elvis(int, SpelNodeImpl...)</Name>
      <Type>Constructor</Type>
      <Scope>Elvis</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Elvis.html</Path>
    <Anchor>Elvis(int, org.springframework.expression.spel.ast.SpelNodeImpl...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabase</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.datasource.embedded</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabaseBuilder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.embedded</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabaseBuilder()</Name>
      <Type>Constructor</Type>
      <Scope>EmbeddedDatabaseBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html</Path>
    <Anchor>EmbeddedDatabaseBuilder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabaseBuilder(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>EmbeddedDatabaseBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html</Path>
    <Anchor>EmbeddedDatabaseBuilder(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabaseConfigurer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.datasource.embedded</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabaseFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.embedded</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabaseFactory()</Name>
      <Type>Constructor</Type>
      <Scope>EmbeddedDatabaseFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html</Path>
    <Anchor>EmbeddedDatabaseFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabaseFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.embedded</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabaseFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>EmbeddedDatabaseFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactoryBean.html</Path>
    <Anchor>EmbeddedDatabaseFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedDatabaseType</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.jdbc.datasource.embedded</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmbeddedValueResolverAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/EmbeddedValueResolverAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EMPTY</Name>
      <Type>Field</Type>
      <Scope>HttpEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpEntity.html</Path>
    <Anchor>EMPTY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EMPTY</Name>
      <Type>Field</Type>
      <Scope>ManagedAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedAttribute.html</Path>
    <Anchor>EMPTY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EMPTY_NAMES_ARRAY</Name>
      <Type>Field</Type>
      <Scope>EnumerablePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/EnumerablePropertySource.html</Path>
    <Anchor>EMPTY_NAMES_ARRAY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EMPTY_TARGET_SOURCE</Name>
      <Type>Field</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>EMPTY_TARGET_SOURCE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emptyActivatedContextBuilder()</Name>
      <Type>clm</Type>
      <Scope>SimpleNamingContextBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContextBuilder.html</Path>
    <Anchor>emptyActivatedContextBuilder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmptyReaderEventListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/EmptyReaderEventListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmptyReaderEventListener()</Name>
      <Type>Constructor</Type>
      <Scope>EmptyReaderEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/EmptyReaderEventListener.html</Path>
    <Anchor>EmptyReaderEventListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmptyResultDataAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/EmptyResultDataAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmptyResultDataAccessException(int)</Name>
      <Type>Constructor</Type>
      <Scope>EmptyResultDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/EmptyResultDataAccessException.html</Path>
    <Anchor>EmptyResultDataAccessException(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmptyResultDataAccessException(String, int)</Name>
      <Type>Constructor</Type>
      <Scope>EmptyResultDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/EmptyResultDataAccessException.html</Path>
    <Anchor>EmptyResultDataAccessException(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmptyResultDataAccessException(String, int, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>EmptyResultDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/EmptyResultDataAccessException.html</Path>
    <Anchor>EmptyResultDataAccessException(java.lang.String, int, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EmptyTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/EmptyTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enable()</Name>
      <Type>instm</Type>
      <Scope>DefaultServletHandlerConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DefaultServletHandlerConfigurer.html</Path>
    <Anchor>enable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enable(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultServletHandlerConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DefaultServletHandlerConfigurer.html</Path>
    <Anchor>enable(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableAspectJAutoProxy</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/EnableAspectJAutoProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableAspectJWeaving(LoadTimeWeaver, ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>AspectJWeavingEnabler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/AspectJWeavingEnabler.html</Path>
    <Anchor>enableAspectJWeaving(org.springframework.instrument.classloading.LoadTimeWeaver, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableAsync</Name>
      <Type>Field</Type>
      <Scope>AbstractAsyncConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.html</Path>
    <Anchor>enableAsync</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableAsync</Name>
      <Type>clm</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/EnableAsync.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableCaching</Name>
      <Type>Field</Type>
      <Scope>AbstractCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AbstractCachingConfiguration.html</Path>
    <Anchor>enableCaching</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableCaching</Name>
      <Type>clm</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/EnableCaching.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFilter(String)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>enableFilter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFilter(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>enableFilter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFilters(Session)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>enableFilters(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableIndenting(Transformer)</Name>
      <Type>clm</Type>
      <Scope>TransformerUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/TransformerUtils.html</Path>
    <Anchor>enableIndenting(javax.xml.transform.Transformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableIndenting(Transformer, int)</Name>
      <Type>clm</Type>
      <Scope>TransformerUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/TransformerUtils.html</Path>
    <Anchor>enableIndenting(javax.xml.transform.Transformer, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableLoadTimeWeaving</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/EnableLoadTimeWeaving.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableLoadTimeWeaving.AspectJWeaving</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/EnableLoadTimeWeaving.AspectJWeaving.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableMBeanExport</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/EnableMBeanExport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableScheduling</Name>
      <Type>clm</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/EnableScheduling.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableSpringConfigured</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/aspectj/EnableSpringConfigured.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableTransactionManagement</Name>
      <Type>clm</Type>
      <Scope>org.springframework.transaction.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/EnableTransactionManagement.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableTx</Name>
      <Type>Field</Type>
      <Scope>AbstractTransactionManagementConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration.html</Path>
    <Anchor>enableTx</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableWebMvc</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/EnableWebMvc.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encode()</Name>
      <Type>instm</Type>
      <Scope>UriComponents</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponents.html</Path>
    <Anchor>encode()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encode(String)</Name>
      <Type>instm</Type>
      <Scope>UriComponents</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponents.html</Path>
    <Anchor>encode(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeAuthority(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeAuthority(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EncodedResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/EncodedResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EncodedResource(Resource)</Name>
      <Type>Constructor</Type>
      <Scope>EncodedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/EncodedResource.html</Path>
    <Anchor>EncodedResource(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EncodedResource(Resource, String)</Name>
      <Type>Constructor</Type>
      <Scope>EncodedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/EncodedResource.html</Path>
    <Anchor>EncodedResource(org.springframework.core.io.Resource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EncodedResource(Resource, Charset)</Name>
      <Type>Constructor</Type>
      <Scope>EncodedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/EncodedResource.html</Path>
    <Anchor>EncodedResource(org.springframework.core.io.Resource, java.nio.charset.Charset)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeFragment(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeFragment(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeHost(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeHost(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeHttpUrl(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeHttpUrl(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>encodeParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeParameter(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>encodeParameter(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodePath(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodePath(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodePathSegment(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodePathSegment(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodePort(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodePort(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeQuery(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeQuery(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeQueryParam(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeQueryParam(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeRedirectURL(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>encodeRedirectURL(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeRedirectUrl(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>encodeRedirectUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeScheme(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeScheme(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeUri(String)</Name>
      <Type>instm</Type>
      <Scope>UriTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriTemplate.html</Path>
    <Anchor>encodeUri(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeUri(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeUri(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeUriComponents(String, String, String, String, String, String, String, String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeUriComponents(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeURL(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>encodeURL(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeUrl(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>encodeUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeURL(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletResponse.html</Path>
    <Anchor>encodeURL(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encodeUserInfo(String, String)</Name>
      <Type>clm</Type>
      <Scope>UriUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriUtils.html</Path>
    <Anchor>encodeUserInfo(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encoding(String)</Name>
      <Type>instm</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>encoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ENCODING_GZIP</Name>
      <Type>Field</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>ENCODING_GZIP</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endpointActivation(MessageEndpointFactory, ActivationSpec)</Name>
      <Type>instm</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>endpointActivation(javax.resource.spi.endpoint.MessageEndpointFactory, javax.resource.spi.ActivationSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endpointDeactivation(MessageEndpointFactory, ActivationSpec)</Name>
      <Type>instm</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>endpointDeactivation(javax.resource.spi.endpoint.MessageEndpointFactory, javax.resource.spi.ActivationSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endsWithContinuationMarker(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>endsWithContinuationMarker(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endsWithIgnoreCase(String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>endsWithIgnoreCase(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endTag()</Name>
      <Type>instm</Type>
      <Scope>TagWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TagWriter.html</Path>
    <Anchor>endTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endTag(boolean)</Name>
      <Type>instm</Type>
      <Scope>TagWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TagWriter.html</Path>
    <Anchor>endTag(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endTransaction()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>endTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enhanceConfigurationClasses(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>enhanceConfigurationClasses(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enlistResource(XAResource)</Name>
      <Type>instm</Type>
      <Scope>ManagedTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/ManagedTransactionAdapter.html</Path>
    <Anchor>enlistResource(javax.transaction.xa.XAResource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enterScope(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>enterScope(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enterScope(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>enterScope(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ENTITY_MANAGER_SYNCHRONIZATION_ORDER</Name>
      <Type>Field</Type>
      <Scope>EntityManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryUtils.html</Path>
    <Anchor>ENTITY_MANAGER_SYNCHRONIZATION_ORDER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>entityIsTransient(MergeEvent, Map)</Name>
      <Type>instm</Type>
      <Scope>IdTransferringMergeEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener.html</Path>
    <Anchor>entityIsTransient(org.hibernate.event.MergeEvent, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>entityManagerFactory</Name>
      <Type>Field</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>entityManagerFactory</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerFactoryAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerFactoryAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>EntityManagerFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryAccessor.html</Path>
    <Anchor>EntityManagerFactoryAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerFactoryInfo</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerFactoryPlus</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryPlus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerFactoryPlusOperations</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryPlusOperations.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerFactoryUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerFactoryUtils()</Name>
      <Type>Constructor</Type>
      <Scope>EntityManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryUtils.html</Path>
    <Anchor>EntityManagerFactoryUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerHolder(EntityManager)</Name>
      <Type>Constructor</Type>
      <Scope>EntityManagerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerHolder.html</Path>
    <Anchor>EntityManagerHolder(javax.persistence.EntityManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerPlus</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerPlus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerPlusOperations</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerPlusOperations.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EntityManagerProxy</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ENTRY_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>ENTRY_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>entrySet()</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>entrySet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>entrySet()</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>entrySet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>entrySet()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>entrySet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>entrySet()</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>entrySet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnumerablePropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/EnumerablePropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnumerablePropertySource(String, T)</Name>
      <Type>Constructor</Type>
      <Scope>EnumerablePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/EnumerablePropertySource.html</Path>
    <Anchor>EnumerablePropertySource(java.lang.String, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Environment</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/Environment.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ENVIRONMENT_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>ENVIRONMENT_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ENVIRONMENT_PROPERTIES_PROPERTY_SOURCE_NAME</Name>
      <Type>Field</Type>
      <Scope>PropertySourcesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/PropertySourcesPlaceholderConfigurer.html</Path>
    <Anchor>ENVIRONMENT_PROPERTIES_PROPERTY_SOURCE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnvironmentAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/EnvironmentAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnvironmentAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>EnvironmentAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/EnvironmentAccessor.html</Path>
    <Anchor>EnvironmentAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnvironmentAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/EnvironmentAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnvironmentCapable</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/EnvironmentCapable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AspectJPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJPointcutAdvisor.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractPointcutAdvisor.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMethodMatcher.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ControlFlowPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ControlFlowPointcut.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultIntroductionAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultIntroductionAdvisor.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcut.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>EmptyTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/EmptyTargetSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>HotSwappableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/HotSwappableTargetSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>SingletonTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/SingletonTargetSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanMetadataAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttribute.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>clm</Type>
      <Scope>BeansException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeansException.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>InjectionMetadata.InjectedElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinitionHolder.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanExpressionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanExpressionContext.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>RuntimeBeanNameReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanNameReference.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>RuntimeBeanReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanReference.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/BeanComponentDefinition.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>GenericBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/GenericBeanDefinition.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>LookupOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/LookupOverride.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>MethodOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverride.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>MethodOverrides</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverrides.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ReplaceOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ReplaceOverride.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>PropertyValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>MutableSortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/MutableSortDefinition.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>SpringCacheAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/SpringCacheAnnotationParser.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>CacheOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperation.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>NameMatchCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/NameMatchCacheOperationSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageSourceResolvable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultMessageSourceResolvable.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AttributeAccessorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessorSupport.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>GenericConverter.ConvertiblePair</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/GenericConverter.ConvertiblePair.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>Property</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/Property.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractLabeledEnum.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>PropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ByteArrayResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ByteArrayResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ClassPathResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassPathResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>DescriptiveResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DescriptiveResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>FileSystemResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>InputStreamResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/InputStreamResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>EncodedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/EncodedResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>UrlResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/UrlResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>VfsResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/VfsResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>MethodParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/MethodParameter.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ParameterizedTypeReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ParameterizedTypeReference.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>HttpEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpEntity.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ResponseEntity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/ResponseEntity.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/NotificationListenerHolder.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
    <Anchor>equals(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>BlobByteArrayType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobByteArrayType.html</Path>
    <Anchor>equals(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>CronSequenceGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/CronSequenceGenerator.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>CronTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/CronTrigger.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>PeriodicTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/PeriodicTrigger.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>MergedContextConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/MergedContextConfiguration.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>WebMergedContextConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/WebMergedContextConfiguration.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>Ejb3TransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/Ejb3TransactionAnnotationParser.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>SpringTransactionAnnotationParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>MatchAlwaysTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MatchAlwaysTransactionAttributeSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>NameMatchTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>RollbackRuleAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/RollbackRuleAttribute.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>DelegatingTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DelegatingTransactionDefinition.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>BooleanComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/BooleanComparator.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>InvertibleComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InvertibleComparator.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>NullSafeComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/NullSafeComparator.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap.Entry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Entry.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>FieldError</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/FieldError.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ObjectError</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ObjectError.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ServletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>ControllerAdviceBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/ControllerAdviceBean.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethod.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>PortletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResource.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/AbstractRequestCondition.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equals(Object)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfo.html</Path>
    <Anchor>equals(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equalsAdvisors(AdvisedSupport, AdvisedSupport)</Name>
      <Type>clm</Type>
      <Scope>AopProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyUtils.html</Path>
    <Anchor>equalsAdvisors(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equalsInProxy(AdvisedSupport, AdvisedSupport)</Name>
      <Type>clm</Type>
      <Scope>AopProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyUtils.html</Path>
    <Anchor>equalsInProxy(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equalsProxiedInterfaces(AdvisedSupport, AdvisedSupport)</Name>
      <Type>clm</Type>
      <Scope>AopProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyUtils.html</Path>
    <Anchor>equalsProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(Problem)</Name>
      <Type>instm</Type>
      <Scope>FailFastProblemReporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/FailFastProblemReporter.html</Path>
    <Anchor>error(org.springframework.beans.factory.parsing.Problem)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(Problem)</Name>
      <Type>intfm</Type>
      <Scope>ProblemReporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ProblemReporter.html</Path>
    <Anchor>error(org.springframework.beans.factory.parsing.Problem)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>error(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(String, Object, Throwable)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>error(java.lang.String, java.lang.Object, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(String, Object, ParseState)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>error(java.lang.String, java.lang.Object, org.springframework.beans.factory.parsing.ParseState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(String, Object, ParseState, Throwable)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>error(java.lang.String, java.lang.Object, org.springframework.beans.factory.parsing.ParseState, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(String, Node)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>error(java.lang.String, org.w3c.dom.Node)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(String, Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>error(java.lang.String, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(String, Element, Throwable)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>error(java.lang.String, org.w3c.dom.Element, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(SAXParseException)</Name>
      <Type>instm</Type>
      <Scope>SimpleSaxErrorHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleSaxErrorHandler.html</Path>
    <Anchor>error(org.xml.sax.SAXParseException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error(TransformerException)</Name>
      <Type>instm</Type>
      <Scope>SimpleTransformErrorListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleTransformErrorListener.html</Path>
    <Anchor>error(javax.xml.transform.TransformerException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ERROR_CODE</Name>
      <Type>Field</Type>
      <Scope>MethodInvocationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MethodInvocationException.html</Path>
    <Anchor>ERROR_CODE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ERROR_CODE</Name>
      <Type>Field</Type>
      <Scope>TypeMismatchException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/TypeMismatchException.html</Path>
    <Anchor>ERROR_CODE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ERROR_EXCEPTION_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>ERROR_EXCEPTION_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ERROR_EXCEPTION_TYPE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>ERROR_EXCEPTION_TYPE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ERROR_MESSAGE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>ERROR_MESSAGE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ERROR_REQUEST_URI_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>ERROR_REQUEST_URI_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ERROR_SERVLET_NAME_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>ERROR_SERVLET_NAME_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ERROR_STATUS_CODE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>ERROR_STATUS_CODE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrorCoded</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ErrorCoded.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>errorCount(int)</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>errorCount(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrorHandler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ErrorHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Errors</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ERRORS_VARIABLE_NAME</Name>
      <Type>Field</Type>
      <Scope>BindErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindErrorsTag.html</Path>
    <Anchor>ERRORS_VARIABLE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrorsMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ErrorsMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrorsMethodArgumentResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ErrorsMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ErrorsMethodArgumentResolver.html</Path>
    <Anchor>ErrorsMethodArgumentResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrorsTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrorsTag()</Name>
      <Type>Constructor</Type>
      <Scope>ErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
    <Anchor>ErrorsTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>escape(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultPropertiesPersister</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DefaultPropertiesPersister.html</Path>
    <Anchor>escape(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EscapeBodyTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EscapeBodyTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EscapeBodyTag()</Name>
      <Type>Constructor</Type>
      <Scope>EscapeBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EscapeBodyTag.html</Path>
    <Anchor>EscapeBodyTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EscapedErrors</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EscapedErrors(Errors)</Name>
      <Type>Constructor</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>EscapedErrors(org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>establishSharedConnection()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>establishSharedConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>establishSharedConnection()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>establishSharedConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EvalTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EvalTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EvalTag()</Name>
      <Type>Constructor</Type>
      <Scope>EvalTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/EvalTag.html</Path>
    <Anchor>EvalTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate(String, BeanExpressionContext)</Name>
      <Type>intfm</Type>
      <Scope>BeanExpressionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanExpressionResolver.html</Path>
    <Anchor>evaluate(java.lang.String, org.springframework.beans.factory.config.BeanExpressionContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate(String, BeanExpressionContext)</Name>
      <Type>instm</Type>
      <Scope>StandardBeanExpressionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/StandardBeanExpressionResolver.html</Path>
    <Anchor>evaluate(java.lang.String, org.springframework.beans.factory.config.BeanExpressionContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate(String, Class, VariableResolver, FunctionMapper)</Name>
      <Type>instm</Type>
      <Scope>MockExpressionEvaluator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockExpressionEvaluator.html</Path>
    <Anchor>evaluate(java.lang.String, java.lang.Class, javax.servlet.jsp.el.VariableResolver, javax.servlet.jsp.el.FunctionMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate()</Name>
      <Type>instm</Type>
      <Scope>RunAfterTestClassCallbacks</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunAfterTestClassCallbacks.html</Path>
    <Anchor>evaluate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate()</Name>
      <Type>instm</Type>
      <Scope>RunAfterTestMethodCallbacks</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunAfterTestMethodCallbacks.html</Path>
    <Anchor>evaluate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate()</Name>
      <Type>instm</Type>
      <Scope>RunBeforeTestClassCallbacks</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunBeforeTestClassCallbacks.html</Path>
    <Anchor>evaluate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate()</Name>
      <Type>instm</Type>
      <Scope>RunBeforeTestMethodCallbacks</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/RunBeforeTestMethodCallbacks.html</Path>
    <Anchor>evaluate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate()</Name>
      <Type>instm</Type>
      <Scope>SpringFailOnTimeout</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/SpringFailOnTimeout.html</Path>
    <Anchor>evaluate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate()</Name>
      <Type>instm</Type>
      <Scope>SpringRepeat</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/statements/SpringRepeat.html</Path>
    <Anchor>evaluate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractFormTag.html</Path>
    <Anchor>evaluate(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate(String, String, Class, PageContext)</Name>
      <Type>clm</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>evaluate(java.lang.String, java.lang.String, java.lang.Class, javax.servlet.jsp.PageContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate(String, String, PageContext)</Name>
      <Type>clm</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>evaluate(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluateBeanDefinitionString(String, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>evaluateBeanDefinitionString(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluateBoolean(String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractFormTag.html</Path>
    <Anchor>evaluateBoolean(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluateBoolean(String, String, PageContext)</Name>
      <Type>clm</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>evaluateBoolean(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluateInteger(String, String, PageContext)</Name>
      <Type>clm</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>evaluateInteger(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluateString(String, String, PageContext)</Name>
      <Type>clm</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluateXpath(Document, QName, Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>evaluateXpath(org.w3c.dom.Document, javax.xml.namespace.QName, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EvaluationContext</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/EvaluationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EvaluationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/EvaluationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EvaluationException(int, String)</Name>
      <Type>Constructor</Type>
      <Scope>EvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/EvaluationException.html</Path>
    <Anchor>EvaluationException(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EvaluationException(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>EvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/EvaluationException.html</Path>
    <Anchor>EvaluationException(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EvaluationException(int, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>EvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/EvaluationException.html</Path>
    <Anchor>EvaluationException(int, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EvaluationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>EvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/EvaluationException.html</Path>
    <Anchor>EvaluationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EvaluationException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>EvaluationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/EvaluationException.html</Path>
    <Anchor>EvaluationException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventAwareController</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/EventAwareController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventMapping</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.portlet.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/annotation/EventMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventPublicationInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/EventPublicationInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventPublicationInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>EventPublicationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/EventPublicationInterceptor.html</Path>
    <Anchor>EventPublicationInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evict(Object)</Name>
      <Type>intfm</Type>
      <Scope>Cache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/Cache.html</Path>
    <Anchor>evict(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evict(Object)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCache.html</Path>
    <Anchor>evict(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evict(Object)</Name>
      <Type>instm</Type>
      <Scope>EhCacheCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheCache.html</Path>
    <Anchor>evict(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evict(Object)</Name>
      <Type>instm</Type>
      <Scope>JCacheCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheCache.html</Path>
    <Anchor>evict(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evict(Object)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareCacheDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/TransactionAwareCacheDecorator.html</Path>
    <Anchor>evict(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evict(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>evict(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evict(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>evict(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evict(Object)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>evict(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evict(Object)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>evict(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evictAll(Collection)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>evictAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evictAll()</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>evictAll()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evictAll(Collection)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>evictAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evictAll()</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>evictAll()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EXCEPTION_HANDLER_METHODS</Name>
      <Type>Field</Type>
      <Scope>ExceptionHandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExceptionHandlerMethodResolver.html</Path>
    <Anchor>EXCEPTION_HANDLER_METHODS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExceptionDepthComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ExceptionDepthComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExceptionDepthComparator(Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ExceptionDepthComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ExceptionDepthComparator.html</Path>
    <Anchor>ExceptionDepthComparator(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExceptionDepthComparator(Class&amp;lt;? extends Throwable&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ExceptionDepthComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ExceptionDepthComparator.html</Path>
    <Anchor>ExceptionDepthComparator(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExceptionHandler</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/ExceptionHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExceptionHandlerExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExceptionHandlerExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>ExceptionHandlerExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExceptionHandlerMethodResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExceptionHandlerMethodResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExceptionHandlerMethodResolver(Class&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ExceptionHandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExceptionHandlerMethodResolver.html</Path>
    <Anchor>ExceptionHandlerMethodResolver(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(String, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(String, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(URI, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, Class&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>exchange(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(String, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, ParameterizedTypeReference&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, org.springframework.core.ParameterizedTypeReference, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(String, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, ParameterizedTypeReference&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, org.springframework.core.ParameterizedTypeReference, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(URI, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, ParameterizedTypeReference&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>exchange(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, org.springframework.core.ParameterizedTypeReference)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(String, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(String, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(URI, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>exchange(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(String, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, ParameterizedTypeReference&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, org.springframework.core.ParameterizedTypeReference, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(String, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, ParameterizedTypeReference&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, org.springframework.core.ParameterizedTypeReference, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exchange(URI, HttpMethod, HttpEntity&amp;lt;?&amp;gt;, ParameterizedTypeReference&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>exchange(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity, org.springframework.core.ParameterizedTypeReference)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>excludeClass(String)</Name>
      <Type>instm</Type>
      <Scope>DecoratingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/DecoratingClassLoader.html</Path>
    <Anchor>excludeClass(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>excludePackage(String)</Name>
      <Type>instm</Type>
      <Scope>DecoratingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/DecoratingClassLoader.html</Path>
    <Anchor>excludePackage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>excludePathPatterns(String...)</Name>
      <Type>instm</Type>
      <Scope>InterceptorRegistration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/InterceptorRegistration.html</Path>
    <Anchor>excludePathPatterns(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>excludeUnlistedClasses()</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>excludeUnlistedClasses()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(CacheAspectSupport.Invoker, Object, Method, Object[])</Name>
      <Type>instm</Type>
      <Scope>CacheAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.html</Path>
    <Anchor>execute(org.springframework.cache.interceptor.CacheAspectSupport.Invoker, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>intfm</Type>
      <Scope>AsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/AsyncTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentExecutorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ConcurrentExecutorAdapter.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ExecutorServiceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ExecutorServiceAdapter.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/TaskExecutorAdapter.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/TaskExecutorAdapter.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>SyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SyncTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>intfm</Type>
      <Scope>TaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/TaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(EvaluationContext, Object...)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ConstructorExecutor.html</Path>
    <Anchor>execute(org.springframework.expression.EvaluationContext, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(EvaluationContext, Object, Object...)</Name>
      <Type>intfm</Type>
      <Scope>MethodExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/MethodExecutor.html</Path>
    <Anchor>execute(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute()</Name>
      <Type>instm</Type>
      <Scope>AbstractClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpRequest.html</Path>
    <Anchor>execute()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute()</Name>
      <Type>intfm</Type>
      <Scope>ClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpRequest.html</Path>
    <Anchor>execute()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(HttpRequest, byte[])</Name>
      <Type>intfm</Type>
      <Scope>ClientHttpRequestExecution</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpRequestExecution.html</Path>
    <Anchor>execute(org.springframework.http.HttpRequest, byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(ConnectionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>CciOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciOperations.html</Path>
    <Anchor>execute(org.springframework.jca.cci.core.ConnectionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>CciOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciOperations.html</Path>
    <Anchor>execute(org.springframework.jca.cci.core.InteractionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, Record)</Name>
      <Type>intfm</Type>
      <Scope>CciOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciOperations.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, Record, Record)</Name>
      <Type>intfm</Type>
      <Scope>CciOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciOperations.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, javax.resource.cci.Record, javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, RecordCreator)</Name>
      <Type>intfm</Type>
      <Scope>CciOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciOperations.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, org.springframework.jca.cci.core.RecordCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, Record, RecordExtractor&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>CciOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciOperations.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, javax.resource.cci.Record, org.springframework.jca.cci.core.RecordExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, RecordCreator, RecordExtractor&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>CciOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciOperations.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, org.springframework.jca.cci.core.RecordCreator, org.springframework.jca.cci.core.RecordExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(ConnectionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>execute(org.springframework.jca.cci.core.ConnectionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>execute(org.springframework.jca.cci.core.InteractionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, Record)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, Record, Record)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, javax.resource.cci.Record, javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, RecordCreator)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, org.springframework.jca.cci.core.RecordCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, Record, RecordExtractor&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, javax.resource.cci.Record, org.springframework.jca.cci.core.RecordExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(InteractionSpec, RecordCreator, RecordExtractor&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>execute(javax.resource.cci.InteractionSpec, org.springframework.jca.cci.core.RecordCreator, org.springframework.jca.cci.core.RecordExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Object)</Name>
      <Type>instm</Type>
      <Scope>MappingRecordOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/MappingRecordOperation.html</Path>
    <Anchor>execute(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Record)</Name>
      <Type>instm</Type>
      <Scope>SimpleRecordOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/SimpleRecordOperation.html</Path>
    <Anchor>execute(javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Record, Record)</Name>
      <Type>instm</Type>
      <Scope>SimpleRecordOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/SimpleRecordOperation.html</Path>
    <Anchor>execute(javax.resource.cci.Record, javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(ConnectionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.ConnectionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(StatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.StatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>execute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(PreparedStatementCreator, PreparedStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.core.PreparedStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, PreparedStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.jdbc.core.PreparedStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(CallableStatementCreator, CallableStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.CallableStatementCreator, org.springframework.jdbc.core.CallableStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, CallableStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.jdbc.core.CallableStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(ConnectionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.ConnectionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(StatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.StatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>execute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(PreparedStatementCreator, PreparedStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.core.PreparedStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, PreparedStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.jdbc.core.PreparedStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(CallableStatementCreator, CallableStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.CallableStatementCreator, org.springframework.jdbc.core.CallableStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, CallableStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.jdbc.core.CallableStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, SqlParameterSource, PreparedStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>NamedParameterJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.PreparedStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, Map&amp;lt;String, ?&amp;gt;, PreparedStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>NamedParameterJdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html</Path>
    <Anchor>execute(java.lang.String, java.util.Map, org.springframework.jdbc.core.PreparedStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, SqlParameterSource, PreparedStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.PreparedStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, Map&amp;lt;String, ?&amp;gt;, PreparedStatementCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html</Path>
    <Anchor>execute(java.lang.String, java.util.Map, org.springframework.jdbc.core.PreparedStatementCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Object...)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>execute(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>execute(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Object...)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>execute(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>execute(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(SqlParameterSource)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>execute(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>execute(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(SqlParameterSource)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(DatabasePopulator, DataSource)</Name>
      <Type>clm</Type>
      <Scope>DatabasePopulatorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DatabasePopulatorUtils.html</Path>
    <Anchor>execute(org.springframework.jdbc.datasource.init.DatabasePopulator, javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Object[], Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(java.lang.Object[], java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Object...)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute()</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(int, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(int, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(int)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(int, int, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(int, int, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(int, int)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(long, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(long, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(long)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(java.lang.String, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>execute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Object...)</Name>
      <Type>instm</Type>
      <Scope>StoredProcedure</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/StoredProcedure.html</Path>
    <Anchor>execute(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StoredProcedure</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/StoredProcedure.html</Path>
    <Anchor>execute(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(ParameterMapper)</Name>
      <Type>instm</Type>
      <Scope>StoredProcedure</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/StoredProcedure.html</Path>
    <Anchor>execute(org.springframework.jdbc.core.ParameterMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(SessionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>execute(org.springframework.jms.core.SessionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(ProducerCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>execute(org.springframework.jms.core.ProducerCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Destination, ProducerCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>execute(javax.jms.Destination, org.springframework.jms.core.ProducerCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, ProducerCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.jms.core.ProducerCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(SessionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>execute(org.springframework.jms.core.SessionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(SessionCallback&amp;lt;T&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>execute(org.springframework.jms.core.SessionCallback, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(ProducerCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>execute(org.springframework.jms.core.ProducerCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Destination, ProducerCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>execute(javax.jms.Destination, org.springframework.jms.core.ProducerCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, ProducerCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.jms.core.ProducerCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(JndiCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JndiTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiTemplate.html</Path>
    <Anchor>execute(org.springframework.jndi.JndiCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute()</Name>
      <Type>instm</Type>
      <Scope>MockClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/http/client/MockClientHttpRequest.html</Path>
    <Anchor>execute()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(HibernateCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>execute(org.springframework.orm.hibernate3.HibernateCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(HibernateCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>execute(org.springframework.orm.hibernate3.HibernateCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(SqlMapClientCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>execute(org.springframework.orm.ibatis.SqlMapClientCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(JdoCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>execute(org.springframework.orm.jdo.JdoCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(JdoCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>execute(org.springframework.orm.jdo.JdoCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(JdoCallback&amp;lt;T&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>execute(org.springframework.orm.jdo.JdoCallback, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(JpaCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>execute(org.springframework.orm.jpa.JpaCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(JpaCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>execute(org.springframework.orm.jpa.JpaCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(JpaCallback&amp;lt;T&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>execute(org.springframework.orm.jpa.JpaCallback, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(JobExecutionContext)</Name>
      <Type>instm</Type>
      <Scope>DelegatingJob</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/DelegatingJob.html</Path>
    <Anchor>execute(org.quartz.JobExecutionContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(JobExecutionContext)</Name>
      <Type>instm</Type>
      <Scope>QuartzJobBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/QuartzJobBean.html</Path>
    <Anchor>execute(org.quartz.JobExecutionContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable)</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>execute(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(TransactionDefinition, TransactionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebSphereUowTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
    <Anchor>execute(org.springframework.transaction.TransactionDefinition, org.springframework.transaction.support.TransactionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(TransactionDefinition, TransactionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>CallbackPreferringPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager.html</Path>
    <Anchor>execute(org.springframework.transaction.TransactionDefinition, org.springframework.transaction.support.TransactionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(TransactionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>TransactionOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionOperations.html</Path>
    <Anchor>execute(org.springframework.transaction.support.TransactionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(TransactionCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TransactionTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionTemplate.html</Path>
    <Anchor>execute(org.springframework.transaction.support.TransactionCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, HttpMethod, RequestCallback, ResponseExtractor&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, HttpMethod, RequestCallback, ResponseExtractor&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(URI, HttpMethod, RequestCallback, ResponseExtractor&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RestOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestOperations.html</Path>
    <Anchor>execute(java.net.URI, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, HttpMethod, RequestCallback, ResponseExtractor&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(String, HttpMethod, RequestCallback, ResponseExtractor&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>execute(java.lang.String, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(URI, HttpMethod, RequestCallback, ResponseExtractor&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RestTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/RestTemplate.html</Path>
    <Anchor>execute(java.net.URI, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(ComponentContext, HttpServletRequest, HttpServletResponse, ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ComponentControllerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html</Path>
    <Anchor>execute(org.apache.struts.tiles.ComponentContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute(ActionMapping, ActionForm, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>DelegatingActionProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionProxy.html</Path>
    <Anchor>execute(org.apache.struts.action.ActionMapping, org.apache.struts.action.ActionForm, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeAndReturnKey(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>executeAndReturnKey(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeAndReturnKey(SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>executeAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeAndReturnKey(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>executeAndReturnKey(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeAndReturnKey(SqlParameterSource)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>executeAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeAndReturnKeyHolder(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>executeAndReturnKeyHolder(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeAndReturnKeyHolder(SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>executeAndReturnKeyHolder(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeAndReturnKeyHolder(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>executeAndReturnKeyHolder(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeAndReturnKeyHolder(SqlParameterSource)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>executeAndReturnKeyHolder(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeBatch(Map&amp;lt;String, Object&amp;gt;[])</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>executeBatch(java.util.Map[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeBatch(SqlParameterSource[])</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>executeBatch(org.springframework.jdbc.core.namedparam.SqlParameterSource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeBatch(Map&amp;lt;String, Object&amp;gt;[])</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>executeBatch(java.util.Map[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeBatch(SqlParameterSource[])</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>executeBatch(org.springframework.jdbc.core.namedparam.SqlParameterSource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeBatchUpdate(String, List&amp;lt;Object[]&amp;gt;, int[], JdbcOperations)</Name>
      <Type>clm</Type>
      <Scope>BatchUpdateUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BatchUpdateUtils.html</Path>
    <Anchor>executeBatchUpdate(java.lang.String, java.util.List, int[], org.springframework.jdbc.core.JdbcOperations)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeBatchUpdateWithNamedParameters(ParsedSql, SqlParameterSource[], JdbcOperations)</Name>
      <Type>clm</Type>
      <Scope>NamedParameterBatchUpdateUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterBatchUpdateUtils.html</Path>
    <Anchor>executeBatchUpdateWithNamedParameters(org.springframework.jdbc.core.namedparam.ParsedSql, org.springframework.jdbc.core.namedparam.SqlParameterSource[], org.springframework.jdbc.core.JdbcOperations)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeByNamedParam(Map&amp;lt;String, ?&amp;gt;, Map)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>executeByNamedParam(java.util.Map, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeByNamedParam(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlQuery.html</Path>
    <Anchor>executeByNamedParam(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeController(Controller, ComponentContext, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesView.html</Path>
    <Anchor>executeController(org.apache.struts.tiles.Controller, org.apache.struts.tiles.ComponentContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFind(HibernateCallback&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>executeFind(org.springframework.orm.hibernate3.HibernateCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFind(HibernateCallback&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>executeFind(org.springframework.orm.hibernate3.HibernateCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFind(JdoCallback&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdoOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoOperations.html</Path>
    <Anchor>executeFind(org.springframework.orm.jdo.JdoCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFind(JdoCallback&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>executeFind(org.springframework.orm.jdo.JdoCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFind(JpaCallback&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>executeFind(org.springframework.orm.jpa.JpaCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFind(JpaCallback&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>executeFind(org.springframework.orm.jpa.JpaCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFunction(Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>executeFunction(java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFunction(Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>executeFunction(java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFunction(Class&amp;lt;T&amp;gt;, SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>executeFunction(java.lang.Class, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFunction(Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>executeFunction(java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFunction(Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>executeFunction(java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeFunction(Class&amp;lt;T&amp;gt;, SqlParameterSource)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>executeFunction(java.lang.Class, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeHttpPost(HttpInvokerClientConfiguration, HttpClient, HttpPost)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>executeHttpPost(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.apache.http.client.HttpClient, org.apache.http.client.methods.HttpPost)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeInternal(HttpHeaders)</Name>
      <Type>instm</Type>
      <Scope>AbstractClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpRequest.html</Path>
    <Anchor>executeInternal(org.springframework.http.HttpHeaders)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeInternal()</Name>
      <Type>instm</Type>
      <Scope>MockClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/http/client/MockClientHttpRequest.html</Path>
    <Anchor>executeInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeInternal(JobExecutionContext)</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean.MethodInvokingJob</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.MethodInvokingJob.html</Path>
    <Anchor>executeInternal(org.quartz.JobExecutionContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeInternal(JobExecutionContext)</Name>
      <Type>instm</Type>
      <Scope>QuartzJobBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/QuartzJobBean.html</Path>
    <Anchor>executeInternal(org.quartz.JobExecutionContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeListener(Session, Message)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>executeListener(javax.jms.Session, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeObject(Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>executeObject(java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeObject(Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>executeObject(java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeObject(Class&amp;lt;T&amp;gt;, SqlParameterSource)</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCall.html</Path>
    <Anchor>executeObject(java.lang.Class, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeObject(Class&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>executeObject(java.lang.Class, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeObject(Class&amp;lt;T&amp;gt;, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>executeObject(java.lang.Class, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeObject(Class&amp;lt;T&amp;gt;, SqlParameterSource)</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcCallOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html</Path>
    <Anchor>executeObject(java.lang.Class, org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executePostMethod(HttpInvokerClientConfiguration, HttpClient, PostMethod)</Name>
      <Type>instm</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>executePostMethod(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.apache.commons.httpclient.HttpClient, org.apache.commons.httpclient.methods.PostMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeRequest(RemoteInvocation)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>executeRequest(org.springframework.remoting.support.RemoteInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeRequest(HttpInvokerClientConfiguration, RemoteInvocation)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>executeRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.springframework.remoting.support.RemoteInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeRequest(RemoteInvocation, MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html</Path>
    <Anchor>executeRequest(org.springframework.remoting.support.RemoteInvocation, org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeRequest(RemoteInvocation)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html</Path>
    <Anchor>executeRequest(org.springframework.remoting.support.RemoteInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeRequest(HttpInvokerClientConfiguration, RemoteInvocation)</Name>
      <Type>intfm</Type>
      <Scope>HttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerRequestExecutor.html</Path>
    <Anchor>executeRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.springframework.remoting.support.RemoteInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSchemaScript(Connection, String[])</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>executeSchemaScript(java.sql.Connection, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSchemaStatement(Statement, String)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>executeSchemaStatement(java.sql.Statement, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeScript(ScriptSource, Class)</Name>
      <Type>instm</Type>
      <Scope>GroovyScriptFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/groovy/GroovyScriptFactory.html</Path>
    <Anchor>executeScript(org.springframework.scripting.ScriptSource, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalDataSourceSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html</Path>
    <Anchor>executeSqlScript(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html</Path>
    <Anchor>executeSqlScript(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
    <Anchor>executeSqlScript(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
    <Anchor>executeSqlScript(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(JdbcTemplate, ResourceLoader, String, boolean)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>executeSqlScript(org.springframework.jdbc.core.JdbcTemplate, org.springframework.core.io.ResourceLoader, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(JdbcTemplate, Resource, boolean)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>executeSqlScript(org.springframework.jdbc.core.JdbcTemplate, org.springframework.core.io.Resource, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(JdbcTemplate, EncodedResource, boolean)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>executeSqlScript(org.springframework.jdbc.core.JdbcTemplate, org.springframework.core.io.support.EncodedResource, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(SimpleJdbcTemplate, ResourceLoader, String, boolean)</Name>
      <Type>clm</Type>
      <Scope>SimpleJdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html</Path>
    <Anchor>executeSqlScript(org.springframework.jdbc.core.simple.SimpleJdbcTemplate, org.springframework.core.io.ResourceLoader, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(SimpleJdbcTemplate, Resource, boolean)</Name>
      <Type>clm</Type>
      <Scope>SimpleJdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html</Path>
    <Anchor>executeSqlScript(org.springframework.jdbc.core.simple.SimpleJdbcTemplate, org.springframework.core.io.Resource, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeSqlScript(SimpleJdbcTemplate, EncodedResource, boolean)</Name>
      <Type>clm</Type>
      <Scope>SimpleJdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html</Path>
    <Anchor>executeSqlScript(org.springframework.jdbc.core.simple.SimpleJdbcTemplate, org.springframework.core.io.support.EncodedResource, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeWithListResult(SqlMapClientCallback&amp;lt;List&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>executeWithListResult(org.springframework.orm.ibatis.SqlMapClientCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeWithMapResult(SqlMapClientCallback&amp;lt;Map&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>executeWithMapResult(org.springframework.orm.ibatis.SqlMapClientCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeWithNativeSession(HibernateCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>executeWithNativeSession(org.springframework.orm.hibernate3.HibernateCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeWithNewSession(HibernateCallback&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>executeWithNewSession(org.springframework.orm.hibernate3.HibernateCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executeWork(TaskExecutor, Work, long, boolean, ExecutionContext, WorkListener)</Name>
      <Type>instm</Type>
      <Scope>SimpleTaskWorkManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/SimpleTaskWorkManager.html</Path>
    <Anchor>executeWork(org.springframework.core.task.TaskExecutor, javax.resource.spi.work.Work, long, boolean, javax.resource.spi.work.ExecutionContext, javax.resource.spi.work.WorkListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>executor</Name>
      <Type>Field</Type>
      <Scope>AbstractAsyncConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.html</Path>
    <Anchor>executor</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExecutorBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ExecutorBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExecutorBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>ExecutorBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ExecutorBeanDefinitionParser.html</Path>
    <Anchor>ExecutorBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExecutorConfigurationSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExecutorConfigurationSupport()</Name>
      <Type>Constructor</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>ExecutorConfigurationSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExecutorServiceAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.task.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ExecutorServiceAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExecutorServiceAdapter(TaskExecutor)</Name>
      <Type>Constructor</Type>
      <Scope>ExecutorServiceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ExecutorServiceAdapter.html</Path>
    <Anchor>ExecutorServiceAdapter(org.springframework.core.task.TaskExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>AbstractFileResolvingResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractFileResolvingResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>AbstractResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>ByteArrayResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ByteArrayResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>ClassPathResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassPathResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>DescriptiveResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DescriptiveResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>FileSystemResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>InputStreamResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/InputStreamResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>intfm</Type>
      <Scope>Resource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/Resource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>VfsResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/VfsResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists(String)</Name>
      <Type>instm</Type>
      <Scope>JsonPathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/JsonPathExpectationsHelper.html</Path>
    <Anchor>exists(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists(String)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>exists(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>JsonPathRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/JsonPathRequestMatchers.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>XpathRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/XpathRequestMatchers.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists(String)</Name>
      <Type>instm</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>exists(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>JsonPathResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/JsonPathResultMatchers.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>XpathResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/XpathResultMatchers.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>ServletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists()</Name>
      <Type>instm</Type>
      <Scope>PortletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResource.html</Path>
    <Anchor>exists()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitScope()</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>exitScope()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expand(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>UriComponents</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponents.html</Path>
    <Anchor>expand(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expand(Object...)</Name>
      <Type>instm</Type>
      <Scope>UriComponents</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriComponents.html</Path>
    <Anchor>expand(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expand(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>UriTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriTemplate.html</Path>
    <Anchor>expand(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expand(Object...)</Name>
      <Type>instm</Type>
      <Scope>UriTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/UriTemplate.html</Path>
    <Anchor>expand(java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expect(RequestMatcher)</Name>
      <Type>instm</Type>
      <Scope>MockRestServiceServer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/MockRestServiceServer.html</Path>
    <Anchor>expect(org.springframework.test.web.client.RequestMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpectedException</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/ExpectedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpectedLookupTemplate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mock.jndi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/ExpectedLookupTemplate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpectedLookupTemplate()</Name>
      <Type>Constructor</Type>
      <Scope>ExpectedLookupTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/ExpectedLookupTemplate.html</Path>
    <Anchor>ExpectedLookupTemplate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpectedLookupTemplate(String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>ExpectedLookupTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/ExpectedLookupTemplate.html</Path>
    <Anchor>ExpectedLookupTemplate(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expose(Errors, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>SpringBindingActionForm</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/SpringBindingActionForm.html</Path>
    <Anchor>expose(org.springframework.validation.Errors, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EXPOSE_WEB_APP_ROOT_PARAM</Name>
      <Type>Field</Type>
      <Scope>Log4jWebConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/Log4jWebConfigurer.html</Path>
    <Anchor>EXPOSE_WEB_APP_ROOT_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeActionException(PortletRequest, StateAwareResponse, Exception)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>exposeActionException(javax.portlet.PortletRequest, javax.portlet.StateAwareResponse, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeAttributes()</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>exposeAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeAttributes()</Name>
      <Type>instm</Type>
      <Scope>ErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
    <Anchor>exposeAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeAttributes()</Name>
      <Type>instm</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>exposeAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExposeBeanNameAdvisors</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ExposeBeanNameAdvisors.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExposeBeanNameAdvisors()</Name>
      <Type>Constructor</Type>
      <Scope>ExposeBeanNameAdvisors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ExposeBeanNameAdvisors.html</Path>
    <Anchor>ExposeBeanNameAdvisors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeErrorRequestAttributes(HttpServletRequest, Throwable, String)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>exposeErrorRequestAttributes(javax.servlet.http.HttpServletRequest, java.lang.Throwable, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeForwardRequestAttributes(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>exposeForwardRequestAttributes(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeForwardRequestAttributes(HttpServletRequest)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>exposeForwardRequestAttributes(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeHelpers(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>exposeHelpers(java.util.Map, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeHelpers(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>exposeHelpers(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeHelpers(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>JstlView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/JstlView.html</Path>
    <Anchor>exposeHelpers(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeHelpers(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>TilesJstlView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesJstlView.html</Path>
    <Anchor>exposeHelpers(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeHelpers(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>exposeHelpers(java.util.Map, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeHelpers(Context, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>exposeHelpers(org.apache.velocity.context.Context, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeHelpers(Context, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>exposeHelpers(org.apache.velocity.context.Context, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExposeInvocationInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ExposeInvocationInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeLocalizationContext(HttpServletRequest, MessageSource)</Name>
      <Type>clm</Type>
      <Scope>JstlUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/JstlUtils.html</Path>
    <Anchor>exposeLocalizationContext(javax.servlet.http.HttpServletRequest, org.springframework.context.MessageSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeLocalizationContext(RequestContext)</Name>
      <Type>clm</Type>
      <Scope>JstlUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/JstlUtils.html</Path>
    <Anchor>exposeLocalizationContext(org.springframework.web.servlet.support.RequestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeLocalizationContext(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>exposeLocalizationContext(java.util.Map, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeModelAsRequestAttributes(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>exposeModelAsRequestAttributes(java.util.Map, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposePathWithinMapping(String, String, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
    <Anchor>exposePathWithinMapping(java.lang.String, java.lang.String, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeRequestAttributes(PortletRequest, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>PortletUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/util/PortletUtils.html</Path>
    <Anchor>exposeRequestAttributes(javax.portlet.PortletRequest, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeRequestAttributes(ServletRequest, Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>exposeRequestAttributes(javax.servlet.ServletRequest, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeToolAttributes(Context, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>exposeToolAttributes(org.apache.velocity.context.Context, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeUriTemplateVariables(Map&amp;lt;String, String&amp;gt;, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
    <Anchor>exposeUriTemplateVariables(java.util.Map, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Expression</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/Expression.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EXPRESSION_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>EXPRESSION_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EXPRESSION_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>EXPRESSION_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EXPRESSION_SUPPORT_CONTEXT_PARAM</Name>
      <Type>Field</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>EXPRESSION_SUPPORT_CONTEXT_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionEvaluationUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionEvaluationUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>ExpressionEvaluationUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionException(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionException.html</Path>
    <Anchor>ExpressionException(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionException(String, int, String)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionException.html</Path>
    <Anchor>ExpressionException(java.lang.String, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionException(int, String)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionException.html</Path>
    <Anchor>ExpressionException(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionException(int, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionException.html</Path>
    <Anchor>ExpressionException(int, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionException(String)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionException.html</Path>
    <Anchor>ExpressionException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionException.html</Path>
    <Anchor>ExpressionException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionInvocationTargetException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionInvocationTargetException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionInvocationTargetException(int, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionInvocationTargetException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionInvocationTargetException.html</Path>
    <Anchor>ExpressionInvocationTargetException(int, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionInvocationTargetException(int, String)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionInvocationTargetException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionInvocationTargetException.html</Path>
    <Anchor>ExpressionInvocationTargetException(int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionInvocationTargetException(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionInvocationTargetException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionInvocationTargetException.html</Path>
    <Anchor>ExpressionInvocationTargetException(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionInvocationTargetException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionInvocationTargetException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionInvocationTargetException.html</Path>
    <Anchor>ExpressionInvocationTargetException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionInvocationTargetException(String)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionInvocationTargetException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionInvocationTargetException.html</Path>
    <Anchor>ExpressionInvocationTargetException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionParser</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionPointcut</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ExpressionPointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionState</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionState(EvaluationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>ExpressionState(org.springframework.expression.EvaluationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionState(EvaluationContext, SpelParserConfiguration)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>ExpressionState(org.springframework.expression.EvaluationContext, org.springframework.expression.spel.SpelParserConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionState(EvaluationContext, TypedValue)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>ExpressionState(org.springframework.expression.EvaluationContext, org.springframework.expression.TypedValue)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionState(EvaluationContext, TypedValue, SpelParserConfiguration)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>ExpressionState(org.springframework.expression.EvaluationContext, org.springframework.expression.TypedValue, org.springframework.expression.spel.SpelParserConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expressionString</Name>
      <Type>Field</Type>
      <Scope>ExpressionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ExpressionException.html</Path>
    <Anchor>expressionString</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.common</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/ExpressionUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/ExpressionUtils.html</Path>
    <Anchor>ExpressionUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionValueMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExpressionValueMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExpressionValueMethodArgumentResolver(ConfigurableBeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>ExpressionValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExpressionValueMethodArgumentResolver.html</Path>
    <Anchor>ExpressionValueMethodArgumentResolver(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extendAdvisors(List&amp;lt;Advisor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AspectJAwareAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/autoproxy/AspectJAwareAdvisorAutoProxyCreator.html</Path>
    <Anchor>extendAdvisors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extendAdvisors(List&amp;lt;Advisor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>extendAdvisors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtendedBeanInfoFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/ExtendedBeanInfoFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtendedBeanInfoFactory()</Name>
      <Type>Constructor</Type>
      <Scope>ExtendedBeanInfoFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/ExtendedBeanInfoFactory.html</Path>
    <Anchor>ExtendedBeanInfoFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtendedEntityManagerCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtendedEntityManagerCreator()</Name>
      <Type>Constructor</Type>
      <Scope>ExtendedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
    <Anchor>ExtendedEntityManagerCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtendedModelMap</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ExtendedModelMap.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtendedModelMap()</Name>
      <Type>Constructor</Type>
      <Scope>ExtendedModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ExtendedModelMap.html</Path>
    <Anchor>ExtendedModelMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtendedServletRequestDataBinder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExtendedServletRequestDataBinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtendedServletRequestDataBinder(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ExtendedServletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExtendedServletRequestDataBinder.html</Path>
    <Anchor>ExtendedServletRequestDataBinder(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtendedServletRequestDataBinder(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>ExtendedServletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExtendedServletRequestDataBinder.html</Path>
    <Anchor>ExtendedServletRequestDataBinder(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extendInterceptors(List)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>extendInterceptors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extendInterceptors(List&amp;lt;Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>extendInterceptors(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractByteArrayFromMessage(BytesMessage)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>extractByteArrayFromMessage(javax.jms.BytesMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractByteArrayFromMessage(BytesMessage)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter102.html</Path>
    <Anchor>extractByteArrayFromMessage(javax.jms.BytesMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractCaseInsensitiveParameterNames(SqlParameterSource)</Name>
      <Type>clm</Type>
      <Scope>SqlParameterSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.html</Path>
    <Anchor>extractCaseInsensitiveParameterNames(org.springframework.jdbc.core.namedparam.SqlParameterSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractData(Record)</Name>
      <Type>intfm</Type>
      <Scope>RecordExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/RecordExtractor.html</Path>
    <Anchor>extractData(javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractData(Record)</Name>
      <Type>instm</Type>
      <Scope>MappingRecordOperation.RecordExtractorImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/MappingRecordOperation.RecordExtractorImpl.html</Path>
    <Anchor>extractData(javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractData(ResultSet)</Name>
      <Type>intfm</Type>
      <Scope>ResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetExtractor.html</Path>
    <Anchor>extractData(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractData(ResultSet)</Name>
      <Type>instm</Type>
      <Scope>RowMapperResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/RowMapperResultSetExtractor.html</Path>
    <Anchor>extractData(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractData(ResultSet)</Name>
      <Type>instm</Type>
      <Scope>SqlRowSetResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlRowSetResultSetExtractor.html</Path>
    <Anchor>extractData(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractData(ResultSet)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobStreamingResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobStreamingResultSetExtractor.html</Path>
    <Anchor>extractData(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractData(ClientHttpResponse)</Name>
      <Type>instm</Type>
      <Scope>HttpMessageConverterExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/HttpMessageConverterExtractor.html</Path>
    <Anchor>extractData(org.springframework.http.client.ClientHttpResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractData(ClientHttpResponse)</Name>
      <Type>intfm</Type>
      <Scope>ResponseExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/client/ResponseExtractor.html</Path>
    <Anchor>extractData(org.springframework.http.client.ClientHttpResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractDatabaseMetaData(DataSource, DatabaseMetaDataCallback)</Name>
      <Type>clm</Type>
      <Scope>JdbcUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcUtils.html</Path>
    <Anchor>extractDatabaseMetaData(javax.sql.DataSource, org.springframework.jdbc.support.DatabaseMetaDataCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractDatabaseMetaData(DataSource, String)</Name>
      <Type>clm</Type>
      <Scope>JdbcUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcUtils.html</Path>
    <Anchor>extractDatabaseMetaData(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractFilenameFromUrlPath(String)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>extractFilenameFromUrlPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractFullFilenameFromUrlPath(String)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>extractFullFilenameFromUrlPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractHandlerMethodNameFromUrlPath(String)</Name>
      <Type>instm</Type>
      <Scope>InternalPathMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/InternalPathMethodNameResolver.html</Path>
    <Anchor>extractHandlerMethodNameFromUrlPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractInvocationResult(Message)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>extractInvocationResult(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractJarFileURL(URL)</Name>
      <Type>clm</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>extractJarFileURL(java.net.URL)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractMapFromMessage(MapMessage)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>extractMapFromMessage(javax.jms.MapMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractMessage(Message)</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>extractMessage(javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractOperableUrl(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>UrlFilenameViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/UrlFilenameViewController.html</Path>
    <Anchor>extractOperableUrl(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractOutputData(Record)</Name>
      <Type>instm</Type>
      <Scope>MappingCommAreaOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/MappingCommAreaOperation.html</Path>
    <Anchor>extractOutputData(javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractOutputData(Record)</Name>
      <Type>instm</Type>
      <Scope>MappingRecordOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/MappingRecordOperation.html</Path>
    <Anchor>extractOutputData(javax.resource.cci.Record)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractOutputParameters(CallableStatement, List&amp;lt;SqlParameter&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>extractOutputParameters(java.sql.CallableStatement, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractPathWithinPattern(String, String)</Name>
      <Type>instm</Type>
      <Scope>AntPathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
    <Anchor>extractPathWithinPattern(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractPathWithinPattern(String, String)</Name>
      <Type>intfm</Type>
      <Scope>PathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PathMatcher.html</Path>
    <Anchor>extractPathWithinPattern(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractPropertyName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractSimpleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html</Path>
    <Anchor>extractPropertyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractReturnedResults(CallableStatement, List, List, int)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>extractReturnedResults(java.sql.CallableStatement, java.util.List, java.util.List, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSerializableFromMessage(ObjectMessage)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>extractSerializableFromMessage(javax.jms.ObjectMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSource(Object, Resource)</Name>
      <Type>instm</Type>
      <Scope>NullSourceExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/NullSourceExtractor.html</Path>
    <Anchor>extractSource(java.lang.Object, org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSource(Object, Resource)</Name>
      <Type>instm</Type>
      <Scope>PassThroughSourceExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/PassThroughSourceExtractor.html</Path>
    <Anchor>extractSource(java.lang.Object, org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSource(Object)</Name>
      <Type>instm</Type>
      <Scope>ReaderContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderContext.html</Path>
    <Anchor>extractSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSource(Object, Resource)</Name>
      <Type>intfm</Type>
      <Scope>SourceExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/SourceExtractor.html</Path>
    <Anchor>extractSource(java.lang.Object, org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSource(Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>extractSource(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSource(Element)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>extractSource(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSource(Object)</Name>
      <Type>instm</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>extractSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSqlStringFromException(JDOException)</Name>
      <Type>instm</Type>
      <Scope>DefaultJdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/DefaultJdoDialect.html</Path>
    <Anchor>extractSqlStringFromException(javax.jdo.JDOException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractStringFromMessage(TextMessage)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>extractStringFromMessage(javax.jms.TextMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractUriTemplateVariables(String, String)</Name>
      <Type>instm</Type>
      <Scope>AntPathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
    <Anchor>extractUriTemplateVariables(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractUriTemplateVariables(String, String)</Name>
      <Type>intfm</Type>
      <Scope>PathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PathMatcher.html</Path>
    <Anchor>extractUriTemplateVariables(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractValue(Annotation)</Name>
      <Type>instm</Type>
      <Scope>QualifierAnnotationAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html</Path>
    <Anchor>extractValue(java.lang.annotation.Annotation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractViewNameFromUrlPath(String)</Name>
      <Type>instm</Type>
      <Scope>UrlFilenameViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/UrlFilenameViewController.html</Path>
    <Anchor>extractViewNameFromUrlPath(java.lang.String)</Anchor>
  </Token>
</Tokens>
