<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>ID_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>ID_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ID_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>ID_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Identifier</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Identifier.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Identifier(String, int)</Name>
      <Type>Constructor</Type>
      <Scope>Identifier</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Identifier.html</Path>
    <Anchor>Identifier(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IDENTITY_OBJECT_NAME_KEY</Name>
      <Type>Field</Type>
      <Scope>JmxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/JmxUtils.html</Path>
    <Anchor>IDENTITY_OBJECT_NAME_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IdentityNamingStrategy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export.naming</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/IdentityNamingStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IdentityNamingStrategy()</Name>
      <Type>Constructor</Type>
      <Scope>IdentityNamingStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/IdentityNamingStrategy.html</Path>
    <Anchor>IdentityNamingStrategy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>identityToString(Object)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>identityToString(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IDREF_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>IDREF_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IdTransferringMergeEventListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IdTransferringMergeEventListener()</Name>
      <Type>Constructor</Type>
      <Scope>IdTransferringMergeEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener.html</Path>
    <Anchor>IdTransferringMergeEventListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IfProfileValue</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/IfProfileValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignore(IMessage.Kind)</Name>
      <Type>instm</Type>
      <Scope>AspectJWeaverMessageHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html</Path>
    <Anchor>ignore(org.aspectj.bridge.IMessage.Kind)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignoreAcceptHeader(boolean)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.html</Path>
    <Anchor>ignoreAcceptHeader(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignoreDependencyInterface(Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html</Path>
    <Anchor>ignoreDependencyInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignoreDependencyInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>ignoreDependencyInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignoreDependencyType(Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html</Path>
    <Anchor>ignoreDependencyType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignoreDependencyType(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>ignoreDependencyType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignoreResourceType(String)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>ignoreResourceType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignoreUnresolvablePlaceholders</Name>
      <Type>Field</Type>
      <Scope>PlaceholderConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PlaceholderConfigurerSupport.html</Path>
    <Anchor>ignoreUnresolvablePlaceholders</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IllegalStateException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jms</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/IllegalStateException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IllegalStateException(IllegalStateException)</Name>
      <Type>Constructor</Type>
      <Scope>IllegalStateException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/IllegalStateException.html</Path>
    <Anchor>IllegalStateException(javax.jms.IllegalStateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IllegalTransactionStateException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/IllegalTransactionStateException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IllegalTransactionStateException(String)</Name>
      <Type>Constructor</Type>
      <Scope>IllegalTransactionStateException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/IllegalTransactionStateException.html</Path>
    <Anchor>IllegalTransactionStateException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IllegalTransactionStateException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>IllegalTransactionStateException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/IllegalTransactionStateException.html</Path>
    <Anchor>IllegalTransactionStateException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IMAGE_GIF</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>IMAGE_GIF</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IMAGE_GIF_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>IMAGE_GIF_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IMAGE_JPEG</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>IMAGE_JPEG</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IMAGE_JPEG_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>IMAGE_JPEG_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IMAGE_PNG</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>IMAGE_PNG</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IMAGE_PNG_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>IMAGE_PNG_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>implementInterfacesOnObject(Object)</Name>
      <Type>instm</Type>
      <Scope>IntroductionInfoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/IntroductionInfoSupport.html</Path>
    <Anchor>implementInterfacesOnObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>implementsInterface(Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>DynamicIntroductionAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/DynamicIntroductionAdvice.html</Path>
    <Anchor>implementsInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>implementsInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>IntroductionInfoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/IntroductionInfoSupport.html</Path>
    <Anchor>implementsInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IMPLICIT_MODEL_RENDER_PARAMETER</Name>
      <Type>Field</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>IMPLICIT_MODEL_RENDER_PARAMETER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IMPLICIT_MODEL_SESSION_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>IMPLICIT_MODEL_SESSION_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Import</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Import.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IMPORT_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>IMPORT_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImportAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ImportAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImportBeanDefinitionRegistrar</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ImportBeanDefinitionRegistrar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importBeanDefinitionResource(Element)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>importBeanDefinitionResource(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImportDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ImportDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImportDefinition(String)</Name>
      <Type>Constructor</Type>
      <Scope>ImportDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ImportDefinition.html</Path>
    <Anchor>ImportDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImportDefinition(String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>ImportDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ImportDefinition.html</Path>
    <Anchor>ImportDefinition(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImportDefinition(String, Resource[], Object)</Name>
      <Type>Constructor</Type>
      <Scope>ImportDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ImportDefinition.html</Path>
    <Anchor>ImportDefinition(java.lang.String, org.springframework.core.io.Resource[], java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importProcessed(ImportDefinition)</Name>
      <Type>instm</Type>
      <Scope>EmptyReaderEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/EmptyReaderEventListener.html</Path>
    <Anchor>importProcessed(org.springframework.beans.factory.parsing.ImportDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importProcessed(ImportDefinition)</Name>
      <Type>intfm</Type>
      <Scope>ReaderEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderEventListener.html</Path>
    <Anchor>importProcessed(org.springframework.beans.factory.parsing.ImportDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImportResource</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ImportResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImportSelector</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ImportSelector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>include(String)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>include(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>include(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>include(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>include(ServletRequest, ServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MockRequestDispatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockRequestDispatcher.html</Path>
    <Anchor>include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>include(RenderRequest, RenderResponse)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequestDispatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequestDispatcher.html</Path>
    <Anchor>include(javax.portlet.RenderRequest, javax.portlet.RenderResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>include(PortletRequest, PortletResponse)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequestDispatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequestDispatcher.html</Path>
    <Anchor>include(javax.portlet.PortletRequest, javax.portlet.PortletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INCLUDE_CONTEXT_PATH_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>INCLUDE_CONTEXT_PATH_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INCLUDE_PATH_INFO_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>INCLUDE_PATH_INFO_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INCLUDE_QUERY_STRING_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>INCLUDE_QUERY_STRING_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INCLUDE_REQUEST_URI_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>INCLUDE_REQUEST_URI_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INCLUDE_SERVLET_PATH_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>INCLUDE_SERVLET_PATH_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeBean(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>intfm</Type>
      <Scope>AutodetectCapableMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AutodetectCapableMBeanInfoAssembler.html</Path>
    <Anchor>includeBean(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeBean(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>includeBean(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeOperation(Method, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>includeOperation(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeOperation(Method, String)</Name>
      <Type>instm</Type>
      <Scope>InterfaceBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html</Path>
    <Anchor>includeOperation(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeOperation(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>includeOperation(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeOperation(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MethodExclusionMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html</Path>
    <Anchor>includeOperation(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeOperation(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MethodNameBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html</Path>
    <Anchor>includeOperation(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeOperation(Method, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>includeOperation(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeReadAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>includeReadAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeReadAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>InterfaceBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html</Path>
    <Anchor>includeReadAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeReadAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>includeReadAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeReadAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MethodExclusionMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html</Path>
    <Anchor>includeReadAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeReadAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MethodNameBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html</Path>
    <Anchor>includeReadAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeReadAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>includeReadAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includes(MediaType)</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>includes(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeSynonymsForTableColumnMetaData()</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsert.html</Path>
    <Anchor>includeSynonymsForTableColumnMetaData()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeSynonymsForTableColumnMetaData()</Name>
      <Type>intfm</Type>
      <Scope>SimpleJdbcInsertOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html</Path>
    <Anchor>includeSynonymsForTableColumnMetaData()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeWriteAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>includeWriteAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeWriteAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>InterfaceBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html</Path>
    <Anchor>includeWriteAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeWriteAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>includeWriteAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeWriteAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MethodExclusionMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html</Path>
    <Anchor>includeWriteAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeWriteAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MethodNameBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html</Path>
    <Anchor>includeWriteAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>includeWriteAttribute(Method, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>includeWriteAttribute(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSetColumnCountException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/IncorrectResultSetColumnCountException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSetColumnCountException(int, int)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectResultSetColumnCountException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/IncorrectResultSetColumnCountException.html</Path>
    <Anchor>IncorrectResultSetColumnCountException(int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSetColumnCountException(String, int, int)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectResultSetColumnCountException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/IncorrectResultSetColumnCountException.html</Path>
    <Anchor>IncorrectResultSetColumnCountException(java.lang.String, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSizeDataAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectResultSizeDataAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSizeDataAccessException(int)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectResultSizeDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectResultSizeDataAccessException.html</Path>
    <Anchor>IncorrectResultSizeDataAccessException(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSizeDataAccessException(int, int)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectResultSizeDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectResultSizeDataAccessException.html</Path>
    <Anchor>IncorrectResultSizeDataAccessException(int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSizeDataAccessException(String, int)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectResultSizeDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectResultSizeDataAccessException.html</Path>
    <Anchor>IncorrectResultSizeDataAccessException(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSizeDataAccessException(String, int, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectResultSizeDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectResultSizeDataAccessException.html</Path>
    <Anchor>IncorrectResultSizeDataAccessException(java.lang.String, int, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSizeDataAccessException(String, int, int)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectResultSizeDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectResultSizeDataAccessException.html</Path>
    <Anchor>IncorrectResultSizeDataAccessException(java.lang.String, int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectResultSizeDataAccessException(String, int, int, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectResultSizeDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectResultSizeDataAccessException.html</Path>
    <Anchor>IncorrectResultSizeDataAccessException(java.lang.String, int, int, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectUpdateSemanticsDataAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectUpdateSemanticsDataAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectUpdateSemanticsDataAccessException(String)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectUpdateSemanticsDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectUpdateSemanticsDataAccessException.html</Path>
    <Anchor>IncorrectUpdateSemanticsDataAccessException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IncorrectUpdateSemanticsDataAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>IncorrectUpdateSemanticsDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/IncorrectUpdateSemanticsDataAccessException.html</Path>
    <Anchor>IncorrectUpdateSemanticsDataAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increaseNestingLevel()</Name>
      <Type>instm</Type>
      <Scope>DependencyDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
    <Anchor>increaseNestingLevel()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increaseNestingLevel()</Name>
      <Type>instm</Type>
      <Scope>MethodParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/MethodParameter.html</Path>
    <Anchor>increaseNestingLevel()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INDEX_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>INDEX_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Indexer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Indexer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Indexer(int, SpelNodeImpl)</Name>
      <Type>Constructor</Type>
      <Scope>Indexer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Indexer.html</Path>
    <Anchor>Indexer(int, org.springframework.expression.spel.ast.SpelNodeImpl)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexOf(Advisor)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>indexOf(org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexOf(Advice)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>indexOf(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexOf(Advisor)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>indexOf(org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexOf(Advice)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>indexOf(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexOf(Object)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>indexOf(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indicatesAutowiring()</Name>
      <Type>instm</Type>
      <Scope>BeanWiringInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfo.html</Path>
    <Anchor>indicatesAutowiring()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INFER_METHOD</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>INFER_METHOD</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InfrastructureAdvisorAutoProxyCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.autoproxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InfrastructureAdvisorAutoProxyCreator()</Name>
      <Type>Constructor</Type>
      <Scope>InfrastructureAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html</Path>
    <Anchor>InfrastructureAdvisorAutoProxyCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InfrastructureProxy</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/InfrastructureProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>AopNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>intfm</Type>
      <Scope>NamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/NamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>Constructor</Type>
      <Scope>SimpleConstructorNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimpleConstructorNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>SimplePropertyNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/SimplePropertyNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>UtilNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/UtilNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>CacheNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/config/CacheNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>ContextNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/config/ContextNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>JeeNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/config/JeeNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>JdbcNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/config/JdbcNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>JmsNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/config/JmsNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>OxmNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/config/OxmNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(Object)</Name>
      <Type>instm</Type>
      <Scope>ServletEndpointSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/ServletEndpointSupport.html</Path>
    <Anchor>init(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>TaskNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/TaskNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>LangNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/config/LangNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>TxNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/config/TxNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(RuntimeServices)</Name>
      <Type>instm</Type>
      <Scope>CommonsLoggingLogSystem</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/CommonsLoggingLogSystem.html</Path>
    <Anchor>init(org.apache.velocity.runtime.RuntimeServices)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(ExtendedProperties)</Name>
      <Type>instm</Type>
      <Scope>SpringResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/SpringResourceLoader.html</Path>
    <Anchor>init(org.apache.commons.collections.ExtendedProperties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
    <Anchor>init(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>HttpRequestHandlerServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/HttpRequestHandlerServlet.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>LiveBeansViewServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/LiveBeansViewServlet.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(FilterConfig)</Name>
      <Type>instm</Type>
      <Scope>CompositeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CompositeFilter.html</Path>
    <Anchor>init(javax.servlet.FilterConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(FilterConfig)</Name>
      <Type>instm</Type>
      <Scope>GenericFilterBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/GenericFilterBean.html</Path>
    <Anchor>init(javax.servlet.FilterConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>GenericPortletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/GenericPortletBean.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>MvcNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/MvcNamespaceHandler.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init()</Name>
      <Type>instm</Type>
      <Scope>HttpServletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HttpServletBean.html</Path>
    <Anchor>init()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SpringTilesApplicationContextFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SpringTilesApplicationContextFactory.html</Path>
    <Anchor>init(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>AutowiringRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringRequestProcessor.html</Path>
    <Anchor>init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>AutowiringTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringTilesRequestProcessor.html</Path>
    <Anchor>init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>DelegatingRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingRequestProcessor.html</Path>
    <Anchor>init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>DelegatingTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html</Path>
    <Anchor>init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INIT_BINDER_METHODS</Name>
      <Type>Field</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>INIT_BINDER_METHODS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INIT_METHOD_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>INIT_METHOD_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initAnnotation(AnnotatedElement)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor.LookupElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html</Path>
    <Anchor>initAnnotation(java.lang.reflect.AnnotatedElement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>ApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ApplicationObjectSupport.html</Path>
    <Anchor>initApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>ApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ApplicationObjectSupport.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>WebApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationObjectSupport.html</Path>
    <Anchor>initApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>ParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/ParameterHandlerMapping.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>PortletModeHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeHandlerMapping.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>PortletModeParameterHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>ParameterizableViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/ParameterizableViewController.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>AbstractDetectingUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>SimpleUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>ComponentControllerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesView.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>VelocityViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityViewResolver.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>MarshallingView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xml/MarshallingView.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>initApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationEventMulticaster()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>initApplicationEventMulticaster()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initApplicationException(Throwable)</Name>
      <Type>clm</Type>
      <Scope>TransactionSystemException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionSystemException.html</Path>
    <Anchor>initApplicationException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initAutowireMode(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>AutowiringRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringRequestProcessor.html</Path>
    <Anchor>initAutowireMode(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initAutowireMode(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>AutowiringTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringTilesRequestProcessor.html</Path>
    <Anchor>initAutowireMode(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanDefinitionReader(XmlBeanDefinitionReader)</Name>
      <Type>instm</Type>
      <Scope>AbstractXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractXmlApplicationContext.html</Path>
    <Anchor>initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanDefinitionReader(XmlBeanDefinitionReader)</Name>
      <Type>instm</Type>
      <Scope>XmlWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/XmlWebApplicationContext.html</Path>
    <Anchor>initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanDefinitionReader(XmlBeanDefinitionReader)</Name>
      <Type>instm</Type>
      <Scope>XmlPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/XmlPortletApplicationContext.html</Path>
    <Anchor>initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AnnotationAwareAspectJAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html</Path>
    <Anchor>initBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>initBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanFactory(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>InfrastructureAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html</Path>
    <Anchor>initBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanPropertyAccess()</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>initBeanPropertyAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanWrapper(BeanWrapper)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>initBeanWrapper(org.springframework.beans.BeanWrapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanWrapper(BeanWrapper)</Name>
      <Type>instm</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>initBeanWrapper(org.springframework.beans.BeanWrapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanWrapper(BeanWrapper)</Name>
      <Type>instm</Type>
      <Scope>GenericFilterBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/GenericFilterBean.html</Path>
    <Anchor>initBeanWrapper(org.springframework.beans.BeanWrapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanWrapper(BeanWrapper)</Name>
      <Type>instm</Type>
      <Scope>GenericPortletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/GenericPortletBean.html</Path>
    <Anchor>initBeanWrapper(org.springframework.beans.BeanWrapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBeanWrapper(BeanWrapper)</Name>
      <Type>instm</Type>
      <Scope>HttpServletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HttpServletBean.html</Path>
    <Anchor>initBeanWrapper(org.springframework.beans.BeanWrapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InitBinder</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/InitBinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBinder(Object, String, WebDataBinder, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>initBinder(java.lang.Object, java.lang.String, org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBinder(WebDataBinder, WebRequest)</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>initBinder(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBinder(WebDataBinder, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>DefaultDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultDataBinderFactory.html</Path>
    <Anchor>initBinder(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBinder(WebDataBinder, WebRequest)</Name>
      <Type>intfm</Type>
      <Scope>WebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebBindingInitializer.html</Path>
    <Anchor>initBinder(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBinder(WebDataBinder, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>InitBinderDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/InitBinderDataBinderFactory.html</Path>
    <Anchor>initBinder(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBinder(PortletRequest, PortletRequestDataBinder)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>initBinder(javax.portlet.PortletRequest, org.springframework.web.portlet.bind.PortletRequestDataBinder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBinder(HttpServletRequest, ServletRequestDataBinder)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>initBinder(javax.servlet.http.HttpServletRequest, org.springframework.web.bind.ServletRequestDataBinder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initBinder(HttpServletRequest, ServletRequestDataBinder)</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>initBinder(javax.servlet.http.HttpServletRequest, org.springframework.web.bind.ServletRequestDataBinder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InitBinderDataBinderFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/InitBinderDataBinderFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InitBinderDataBinderFactory(List&amp;lt;InvocableHandlerMethod&amp;gt;, WebBindingInitializer)</Name>
      <Type>Constructor</Type>
      <Scope>InitBinderDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/InitBinderDataBinderFactory.html</Path>
    <Anchor>InitBinderDataBinderFactory(java.util.List, org.springframework.web.bind.support.WebBindingInitializer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>initConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>initConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>initConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initContext(PageContext, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JspAwareRequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/JspAwareRequestContext.html</Path>
    <Anchor>initContext(javax.servlet.jsp.PageContext, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initContext(HttpServletRequest, HttpServletResponse, ServletContext, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>initContext(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initConversion(ConversionService)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractPropertyBindingResult.html</Path>
    <Anchor>initConversion(org.springframework.core.convert.ConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDao()</Name>
      <Type>instm</Type>
      <Scope>DaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DaoSupport.html</Path>
    <Anchor>initDao()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDatabase()</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html</Path>
    <Anchor>initDatabase()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDefaults(Element, BeanDefinitionParserDelegate)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>initDefaults(org.w3c.dom.Element, org.springframework.beans.factory.xml.BeanDefinitionParserDelegate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDefaults(Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>initDefaults(org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDefaultStrategies()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>initDefaultStrategies()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDefaultStrategies()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate102.html</Path>
    <Anchor>initDefaultStrategies()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDefaultStrategies()</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>initDefaultStrategies()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDefaultStrategies()</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter102.html</Path>
    <Anchor>initDefaultStrategies()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDeferredClose(SessionFactory)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>initDeferredClose(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDelegate(WebApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>initDelegate(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDependencyCheck(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>AutowiringRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringRequestProcessor.html</Path>
    <Anchor>initDependencyCheck(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDependencyCheck(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>AutowiringTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringTilesRequestProcessor.html</Path>
    <Anchor>initDependencyCheck(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InitDestroyAnnotationBeanPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InitDestroyAnnotationBeanPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>InitDestroyAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html</Path>
    <Anchor>InitDestroyAnnotationBeanPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDirectFieldAccess()</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>initDirectFieldAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initExcludedPatternRepresentation(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
    <Anchor>initExcludedPatternRepresentation(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initExcludedPatternRepresentation(String[])</Name>
      <Type>instm</Type>
      <Scope>JdkRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/JdkRegexpMethodPointcut.html</Path>
    <Anchor>initExcludedPatternRepresentation(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFactory(Locale)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>initFactory(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFactory()</Name>
      <Type>instm</Type>
      <Scope>XmlViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/XmlViewResolver.html</Path>
    <Anchor>initFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFilterBean()</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>initFilterBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFilterBean()</Name>
      <Type>instm</Type>
      <Scope>GenericFilterBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/GenericFilterBean.html</Path>
    <Anchor>initFilterBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFrameworkPortlet()</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>initFrameworkPortlet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFrameworkServlet()</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>initFrameworkServlet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initGateway()</Name>
      <Type>instm</Type>
      <Scope>JmsGatewaySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/support/JmsGatewaySupport.html</Path>
    <Anchor>initGateway()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initHandlerMethods()</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>initHandlerMethods()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize(C)</Name>
      <Type>intfm</Type>
      <Scope>ApplicationContextInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationContextInitializer.html</Path>
    <Anchor>initialize(C)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>initialize(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>initialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize()</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>initialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>initialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize(Servlet, ServletRequest, ServletResponse, String, boolean, int, boolean)</Name>
      <Type>instm</Type>
      <Scope>MockPageContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockPageContext.html</Path>
    <Anchor>initialize(javax.servlet.Servlet, javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, boolean, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>initialize(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>initialize(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize()</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>initialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize()</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>initialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize(ClassLoadHelper, SchedulerSignaler)</Name>
      <Type>instm</Type>
      <Scope>LocalDataSourceJobStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/LocalDataSourceJobStore.html</Path>
    <Anchor>initialize(org.quartz.spi.ClassLoadHelper, org.quartz.spi.SchedulerSignaler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize()</Name>
      <Type>instm</Type>
      <Scope>LocalTaskExecutorThreadPool</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html</Path>
    <Anchor>initialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize()</Name>
      <Type>instm</Type>
      <Scope>ResourceLoaderClassLoadHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html</Path>
    <Anchor>initialize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeBean(Object, String)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>initializeBean(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeBean(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>initializeBean(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeBean(String, Object, RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>initializeBean(java.lang.String, java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeConsumers()</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>initializeConsumers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeDefinition(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>SingletonBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html</Path>
    <Anchor>initializeDefinition(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeDefinition(BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>ContextSingletonBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html</Path>
    <Anchor>initializeDefinition(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
    <Anchor>initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMetaData(DataSource)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>initializeMetaData(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMultipart()</Name>
      <Type>instm</Type>
      <Scope>AbstractMultipartHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.html</Path>
    <Anchor>initializeMultipart()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMultipart()</Name>
      <Type>instm</Type>
      <Scope>DefaultMultipartActionRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/DefaultMultipartActionRequest.html</Path>
    <Anchor>initializeMultipart()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeResourcesBeforeRead(Connection, Object)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.html</Path>
    <Anchor>initializeResourcesBeforeRead(java.sql.Connection, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithMetaData(DatabaseMetaData)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>initializeWithMetaData(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithMetaData(DatabaseMetaData)</Name>
      <Type>instm</Type>
      <Scope>Db2CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/Db2CallMetaDataProvider.html</Path>
    <Anchor>initializeWithMetaData(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithMetaData(DatabaseMetaData)</Name>
      <Type>instm</Type>
      <Scope>DerbyTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.html</Path>
    <Anchor>initializeWithMetaData(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithMetaData(DatabaseMetaData)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>initializeWithMetaData(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithMetaData(DatabaseMetaData)</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>initializeWithMetaData(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithMetaData(DatabaseMetaData)</Name>
      <Type>intfm</Type>
      <Scope>TableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProvider.html</Path>
    <Anchor>initializeWithMetaData(java.sql.DatabaseMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithProcedureColumnMetaData(DatabaseMetaData, String, String, String)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>initializeWithProcedureColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithProcedureColumnMetaData(DatabaseMetaData, String, String, String)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>initializeWithProcedureColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithTableColumnMetaData(DatabaseMetaData, String, String, String)</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>initializeWithTableColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithTableColumnMetaData(DatabaseMetaData, String, String, String)</Name>
      <Type>instm</Type>
      <Scope>OracleTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.html</Path>
    <Anchor>initializeWithTableColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWithTableColumnMetaData(DatabaseMetaData, String, String, String)</Name>
      <Type>intfm</Type>
      <Scope>TableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProvider.html</Path>
    <Anchor>initializeWithTableColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InitializingBean</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/InitializingBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initInterceptors()</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>initInterceptors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initInterceptors()</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>initInterceptors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initJaxbMarshaller(Marshaller)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>initJaxbMarshaller(javax.xml.bind.Marshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initJaxbUnmarshaller(Unmarshaller)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>initJaxbUnmarshaller(javax.xml.bind.Unmarshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initLifecycleProcessor()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>initLifecycleProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initLogging(String)</Name>
      <Type>clm</Type>
      <Scope>Log4jConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Log4jConfigurer.html</Path>
    <Anchor>initLogging(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initLogging(String, long)</Name>
      <Type>clm</Type>
      <Scope>Log4jConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Log4jConfigurer.html</Path>
    <Anchor>initLogging(java.lang.String, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initLogging(ServletContext)</Name>
      <Type>clm</Type>
      <Scope>Log4jWebConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/Log4jWebConfigurer.html</Path>
    <Anchor>initLogging(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initMessageSource()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>initMessageSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initMethodMap(Map&amp;lt;String, TransactionAttribute&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>initMethodMap(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initModel(NativeWebRequest, ModelAndViewContainer, HandlerMethod)</Name>
      <Type>instm</Type>
      <Scope>ModelFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelFactory.html</Path>
    <Anchor>initModel(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.method.HandlerMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initOracleDriverClasses(Connection)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.html</Path>
    <Anchor>initOracleDriverClasses(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initParameterNameDiscovery(ParameterNameDiscoverer)</Name>
      <Type>instm</Type>
      <Scope>DependencyDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
    <Anchor>initParameterNameDiscovery(org.springframework.core.ParameterNameDiscoverer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initParameterNameDiscovery(ParameterNameDiscoverer)</Name>
      <Type>instm</Type>
      <Scope>MethodParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/MethodParameter.html</Path>
    <Anchor>initParameterNameDiscovery(org.springframework.core.ParameterNameDiscoverer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initParent(Theme)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleThemeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/ResourceBundleThemeSource.html</Path>
    <Anchor>initParent(org.springframework.ui.context.Theme)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPatternRepresentation(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
    <Anchor>initPatternRepresentation(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPatternRepresentation(String[])</Name>
      <Type>instm</Type>
      <Scope>JdkRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/JdkRegexpMethodPointcut.html</Path>
    <Anchor>initPatternRepresentation(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPortletApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>initPortletApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPortletBean()</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>initPortletBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPortletBean()</Name>
      <Type>instm</Type>
      <Scope>GenericPortletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/GenericPortletBean.html</Path>
    <Anchor>initPortletBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPortletPropertySources(MutablePropertySources, ServletContext, PortletContext, PortletConfig)</Name>
      <Type>clm</Type>
      <Scope>PortletApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletApplicationContextUtils.html</Path>
    <Anchor>initPortletPropertySources(org.springframework.core.env.MutablePropertySources, javax.servlet.ServletContext, javax.portlet.PortletContext, javax.portlet.PortletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPropertySources()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>initPropertySources()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPropertySources(ServletContext, ServletConfig)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableWebEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebEnvironment.html</Path>
    <Anchor>initPropertySources(javax.servlet.ServletContext, javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPropertySources()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.html</Path>
    <Anchor>initPropertySources()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPropertySources()</Name>
      <Type>instm</Type>
      <Scope>GenericWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/GenericWebApplicationContext.html</Path>
    <Anchor>initPropertySources()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPropertySources(ServletContext, ServletConfig)</Name>
      <Type>instm</Type>
      <Scope>StandardServletEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StandardServletEnvironment.html</Path>
    <Anchor>initPropertySources(javax.servlet.ServletContext, javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPropertySources()</Name>
      <Type>instm</Type>
      <Scope>StaticWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
    <Anchor>initPropertySources()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPropertySources()</Name>
      <Type>instm</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>initPropertySources()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletBean()</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>initServletBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletBean()</Name>
      <Type>instm</Type>
      <Scope>HttpServletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HttpServletBean.html</Path>
    <Anchor>initServletBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletBean()</Name>
      <Type>instm</Type>
      <Scope>ResourceServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ResourceServlet.html</Path>
    <Anchor>initServletBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>WebApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationObjectSupport.html</Path>
    <Anchor>initServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>initServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>initServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>initServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>JstlView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/JstlView.html</Path>
    <Anchor>initServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesView.html</Path>
    <Anchor>initServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesView.html</Path>
    <Anchor>initServletContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletPropertySources(MutablePropertySources, ServletContext)</Name>
      <Type>clm</Type>
      <Scope>WebApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationContextUtils.html</Path>
    <Anchor>initServletPropertySources(org.springframework.core.env.MutablePropertySources, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initServletPropertySources(MutablePropertySources, ServletContext, ServletConfig)</Name>
      <Type>clm</Type>
      <Scope>WebApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationContextUtils.html</Path>
    <Anchor>initServletPropertySources(org.springframework.core.env.MutablePropertySources, javax.servlet.ServletContext, javax.servlet.ServletConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initSpringResourceLoader(VelocityEngine, String)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>initSpringResourceLoader(org.apache.velocity.app.VelocityEngine, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initStrategies(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>initStrategies(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initStrategies(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>initStrategies(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initSynchronization()</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>initSynchronization()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initTemplateConfig()</Name>
      <Type>instm</Type>
      <Scope>NamedParameterJdbcDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/NamedParameterJdbcDaoSupport.html</Path>
    <Anchor>initTemplateConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initTemplateConfig()</Name>
      <Type>instm</Type>
      <Scope>SimpleJdbcDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/SimpleJdbcDaoSupport.html</Path>
    <Anchor>initTemplateConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initTemplateConfig()</Name>
      <Type>instm</Type>
      <Scope>JdbcDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/JdbcDaoSupport.html</Path>
    <Anchor>initTemplateConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initThemeSource(ApplicationContext)</Name>
      <Type>clm</Type>
      <Scope>UiApplicationContextUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/UiApplicationContextUtils.html</Path>
    <Anchor>initThemeSource(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initTool(Object, Context)</Name>
      <Type>instm</Type>
      <Scope>VelocityToolboxView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityToolboxView.html</Path>
    <Anchor>initTool(java.lang.Object, org.apache.velocity.context.Context)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initTool(Object, Context)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>initTool(java.lang.Object, org.apache.velocity.context.Context)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initTransactionSynchronizationRegistry()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>initTransactionSynchronizationRegistry()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initUserTransactionAndTransactionManager()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>initUserTransactionAndTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initVelocityResourceLoader(VelocityEngine, String)</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>initVelocityResourceLoader(org.apache.velocity.app.VelocityEngine, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebAppContext(WebApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>DefaultMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
    <Anchor>initWebAppContext(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebAppContext(WebApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>initWebAppContext(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>initWebApplicationContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>initWebApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext(ActionServlet)</Name>
      <Type>instm</Type>
      <Scope>ActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ActionSupport.html</Path>
    <Anchor>initWebApplicationContext(org.apache.struts.action.ActionServlet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>AutowiringRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringRequestProcessor.html</Path>
    <Anchor>initWebApplicationContext(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>AutowiringTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringTilesRequestProcessor.html</Path>
    <Anchor>initWebApplicationContext(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>initWebApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>DelegatingRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingRequestProcessor.html</Path>
    <Anchor>initWebApplicationContext(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext(ActionServlet, ModuleConfig)</Name>
      <Type>instm</Type>
      <Scope>DelegatingTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html</Path>
    <Anchor>initWebApplicationContext(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext(ActionServlet)</Name>
      <Type>instm</Type>
      <Scope>DispatchActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DispatchActionSupport.html</Path>
    <Anchor>initWebApplicationContext(org.apache.struts.action.ActionServlet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext(ActionServlet)</Name>
      <Type>instm</Type>
      <Scope>LookupDispatchActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/LookupDispatchActionSupport.html</Path>
    <Anchor>initWebApplicationContext(org.apache.struts.action.ActionServlet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWebApplicationContext(ActionServlet)</Name>
      <Type>instm</Type>
      <Scope>MappingDispatchActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/MappingDispatchActionSupport.html</Path>
    <Anchor>initWebApplicationContext(org.apache.struts.action.ActionServlet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inject(Object, String, PropertyValues)</Name>
      <Type>instm</Type>
      <Scope>InjectionMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.html</Path>
    <Anchor>inject(java.lang.Object, java.lang.String, org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inject(Object, String, PropertyValues)</Name>
      <Type>instm</Type>
      <Scope>InjectionMetadata.InjectedElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
    <Anchor>inject(java.lang.Object, java.lang.String, org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>injectDependencies()</Name>
      <Type>instm</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>injectDependencies()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>injectDependencies(TestContext)</Name>
      <Type>instm</Type>
      <Scope>DependencyInjectionTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html</Path>
    <Anchor>injectDependencies(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InjectionMetadata</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InjectionMetadata(Class, Collection&amp;lt;InjectionMetadata.InjectedElement&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>InjectionMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.html</Path>
    <Anchor>InjectionMetadata(java.lang.Class, java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InjectionMetadata.InjectedElement</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InjectionMetadata.InjectedElement(Member, PropertyDescriptor)</Name>
      <Type>Constructor</Type>
      <Scope>InjectionMetadata.InjectedElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
    <Anchor>InjectionMetadata.InjectedElement(java.lang.reflect.Member, java.beans.PropertyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INLINE_SCRIPT_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>INLINE_SCRIPT_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InlineList</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/InlineList.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InlineList(int, SpelNodeImpl...)</Name>
      <Type>Constructor</Type>
      <Scope>InlineList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/InlineList.html</Path>
    <Anchor>InlineList(int, org.springframework.expression.spel.ast.SpelNodeImpl...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INPUT_FLASH_MAP_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>INPUT_FLASH_MAP_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputSourceEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/InputSourceEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputSourceEditor()</Name>
      <Type>Constructor</Type>
      <Scope>InputSourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/InputSourceEditor.html</Path>
    <Anchor>InputSourceEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputSourceEditor(ResourceEditor)</Name>
      <Type>Constructor</Type>
      <Scope>InputSourceEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/InputSourceEditor.html</Path>
    <Anchor>InputSourceEditor(org.springframework.core.io.ResourceEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputStreamEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/InputStreamEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputStreamEditor()</Name>
      <Type>Constructor</Type>
      <Scope>InputStreamEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/InputStreamEditor.html</Path>
    <Anchor>InputStreamEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputStreamEditor(ResourceEditor)</Name>
      <Type>Constructor</Type>
      <Scope>InputStreamEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/InputStreamEditor.html</Path>
    <Anchor>InputStreamEditor(org.springframework.core.io.ResourceEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputStreamResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/InputStreamResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputStreamResource(InputStream)</Name>
      <Type>Constructor</Type>
      <Scope>InputStreamResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/InputStreamResource.html</Path>
    <Anchor>InputStreamResource(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputStreamResource(InputStream, String)</Name>
      <Type>Constructor</Type>
      <Scope>InputStreamResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/InputStreamResource.html</Path>
    <Anchor>InputStreamResource(java.io.InputStream, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputStreamSource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/InputStreamSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputTag()</Name>
      <Type>Constructor</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>InputTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert(String)</Name>
      <Type>intfm</Type>
      <Scope>SqlMapClientOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientOperations.html</Path>
    <Anchor>insert(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>SqlMapClientOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientOperations.html</Path>
    <Anchor>insert(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert(String)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>insert(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert(String, Object)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>insert(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>installFormatters(FormatterRegistry)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
    <Anchor>installFormatters(org.springframework.format.FormatterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSTANCE</Name>
      <Type>Field</Type>
      <Scope>ExposeInvocationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ExposeInvocationInterceptor.html</Path>
    <Anchor>INSTANCE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSTANCE</Name>
      <Type>Field</Type>
      <Scope>EmptyTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/EmptyTargetSource.html</Path>
    <Anchor>INSTANCE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSTANCE</Name>
      <Type>Field</Type>
      <Scope>AnnotationAwareOrderComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAwareOrderComparator.html</Path>
    <Anchor>INSTANCE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance()</Name>
      <Type>clm</Type>
      <Scope>StaticLabeledEnumResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/StaticLabeledEnumResolver.html</Path>
    <Anchor>instance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSTANCE</Name>
      <Type>Field</Type>
      <Scope>OrderComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/OrderComparator.html</Path>
    <Anchor>INSTANCE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSTANCE</Name>
      <Type>Field</Type>
      <Scope>ComparableComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/ComparableComparator.html</Path>
    <Anchor>INSTANCE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstanceComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.comparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InstanceComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstanceComparator(Class&amp;lt;?&amp;gt;...)</Name>
      <Type>Constructor</Type>
      <Scope>InstanceComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InstanceComparator.html</Path>
    <Anchor>InstanceComparator(java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiate(Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>instantiate(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiate(RootBeanDefinition, String, BeanFactory)</Name>
      <Type>intfm</Type>
      <Scope>InstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/InstantiationStrategy.html</Path>
    <Anchor>instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiate(RootBeanDefinition, String, BeanFactory, Constructor&amp;lt;?&amp;gt;, Object[])</Name>
      <Type>Constructor</Type>
      <Scope>InstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/InstantiationStrategy.html</Path>
    <Anchor>instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Constructor, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiate(RootBeanDefinition, String, BeanFactory, Object, Method, Object[])</Name>
      <Type>intfm</Type>
      <Scope>InstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/InstantiationStrategy.html</Path>
    <Anchor>instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiate(RootBeanDefinition, String, BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>SimpleInstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleInstantiationStrategy.html</Path>
    <Anchor>instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiate(RootBeanDefinition, String, BeanFactory, Constructor&amp;lt;?&amp;gt;, Object[])</Name>
      <Type>Constructor</Type>
      <Scope>SimpleInstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleInstantiationStrategy.html</Path>
    <Anchor>instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Constructor, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiate(RootBeanDefinition, String, BeanFactory, Object, Method, Object[])</Name>
      <Type>instm</Type>
      <Scope>SimpleInstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleInstantiationStrategy.html</Path>
    <Anchor>instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiateBean(String, RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>instantiateBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiateClass(Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>instantiateClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiateClass(Class&amp;lt;?&amp;gt;, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>instantiateClass(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiateClass(Constructor&amp;lt;T&amp;gt;, Object...)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>instantiateClass(java.lang.reflect.Constructor, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>instantiateUsingFactoryMethod(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiateWithMethodInjection(RootBeanDefinition, String, BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>CglibSubclassingInstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html</Path>
    <Anchor>instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiateWithMethodInjection(RootBeanDefinition, String, BeanFactory, Constructor, Object[])</Name>
      <Type>Constructor</Type>
      <Scope>CglibSubclassingInstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html</Path>
    <Anchor>instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Constructor, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiateWithMethodInjection(RootBeanDefinition, String, BeanFactory)</Name>
      <Type>instm</Type>
      <Scope>SimpleInstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleInstantiationStrategy.html</Path>
    <Anchor>instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instantiateWithMethodInjection(RootBeanDefinition, String, BeanFactory, Constructor, Object[])</Name>
      <Type>Constructor</Type>
      <Scope>SimpleInstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleInstantiationStrategy.html</Path>
    <Anchor>instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Constructor, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstantiationAwareBeanPostProcessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstantiationAwareBeanPostProcessorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstantiationAwareBeanPostProcessorAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>InstantiationAwareBeanPostProcessorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html</Path>
    <Anchor>InstantiationAwareBeanPostProcessorAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstantiationModelAwarePointcutAdvisor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/InstantiationModelAwarePointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstantiationStrategy</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/InstantiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentationLoadTimeWeaver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument.classloading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentationLoadTimeWeaver()</Name>
      <Type>Constructor</Type>
      <Scope>InstrumentationLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html</Path>
    <Anchor>InstrumentationLoadTimeWeaver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentationLoadTimeWeaver(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>InstrumentationLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html</Path>
    <Anchor>InstrumentationLoadTimeWeaver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentationSavingAgent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.instrument</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/InstrumentationSavingAgent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentationSavingAgent()</Name>
      <Type>Constructor</Type>
      <Scope>InstrumentationSavingAgent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/InstrumentationSavingAgent.html</Path>
    <Anchor>InstrumentationSavingAgent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InteractionCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jca.cci.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/InteractionCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intercept(HttpRequest, byte[], ClientHttpRequestExecution)</Name>
      <Type>intfm</Type>
      <Scope>ClientHttpRequestInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpRequestInterceptor.html</Path>
    <Anchor>intercept(org.springframework.http.HttpRequest, byte[], org.springframework.http.client.ClientHttpRequestExecution)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterceptingClientHttpRequestFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/InterceptingClientHttpRequestFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterceptingClientHttpRequestFactory(ClientHttpRequestFactory, List&amp;lt;ClientHttpRequestInterceptor&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>InterceptingClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/InterceptingClientHttpRequestFactory.html</Path>
    <Anchor>InterceptingClientHttpRequestFactory(org.springframework.http.client.ClientHttpRequestFactory, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterceptingHttpAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/InterceptingHttpAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterceptingHttpAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>InterceptingHttpAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/InterceptingHttpAccessor.html</Path>
    <Anchor>InterceptingHttpAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterceptorRegistration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/InterceptorRegistration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterceptorRegistration(HandlerInterceptor)</Name>
      <Type>Constructor</Type>
      <Scope>InterceptorRegistration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/InterceptorRegistration.html</Path>
    <Anchor>InterceptorRegistration(org.springframework.web.servlet.HandlerInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterceptorRegistry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/InterceptorRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterceptorRegistry()</Name>
      <Type>Constructor</Type>
      <Scope>InterceptorRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/InterceptorRegistry.html</Path>
    <Anchor>InterceptorRegistry()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interceptorsAndDynamicMethodMatchers</Name>
      <Type>Field</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>interceptorsAndDynamicMethodMatchers</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterfaceBasedMBeanInfoAssembler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export.assembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterfaceBasedMBeanInfoAssembler()</Name>
      <Type>Constructor</Type>
      <Scope>InterfaceBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html</Path>
    <Anchor>InterfaceBasedMBeanInfoAssembler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalParseException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.expression.spel</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/InternalParseException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalParseException(SpelParseException)</Name>
      <Type>Constructor</Type>
      <Scope>InternalParseException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/InternalParseException.html</Path>
    <Anchor>InternalParseException(org.springframework.expression.spel.SpelParseException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalPathMethodNameResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.multiaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/InternalPathMethodNameResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalPathMethodNameResolver()</Name>
      <Type>Constructor</Type>
      <Scope>InternalPathMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/InternalPathMethodNameResolver.html</Path>
    <Anchor>InternalPathMethodNameResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalResourceView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalResourceView()</Name>
      <Type>Constructor</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>InternalResourceView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalResourceView(String)</Name>
      <Type>Constructor</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>InternalResourceView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalResourceView(String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>InternalResourceView(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalResourceViewResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceViewResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalResourceViewResolver()</Name>
      <Type>Constructor</Type>
      <Scope>InternalResourceViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceViewResolver.html</Path>
    <Anchor>InternalResourceViewResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternetAddressEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mail.javamail</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/InternetAddressEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternetAddressEditor()</Name>
      <Type>Constructor</Type>
      <Scope>InternetAddressEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/InternetAddressEditor.html</Path>
    <Anchor>InternetAddressEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interpolate(String, MessageInterpolator.Context)</Name>
      <Type>instm</Type>
      <Scope>LocaleContextMessageInterpolator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocaleContextMessageInterpolator.html</Path>
    <Anchor>interpolate(java.lang.String, javax.validation.MessageInterpolator.Context)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interpolate(String, MessageInterpolator.Context, Locale)</Name>
      <Type>instm</Type>
      <Scope>LocaleContextMessageInterpolator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocaleContextMessageInterpolator.html</Path>
    <Anchor>interpolate(java.lang.String, javax.validation.MessageInterpolator.Context, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterruptibleBatchPreparedStatementSetter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/InterruptibleBatchPreparedStatementSetter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersection(ClassFilter, ClassFilter)</Name>
      <Type>clm</Type>
      <Scope>ClassFilters</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ClassFilters.html</Path>
    <Anchor>intersection(org.springframework.aop.ClassFilter, org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersection(ClassFilter[])</Name>
      <Type>clm</Type>
      <Scope>ClassFilters</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ClassFilters.html</Path>
    <Anchor>intersection(org.springframework.aop.ClassFilter[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersection(ClassFilter)</Name>
      <Type>instm</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>intersection(org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersection(MethodMatcher)</Name>
      <Type>instm</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>intersection(org.springframework.aop.MethodMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersection(Pointcut)</Name>
      <Type>instm</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>intersection(org.springframework.aop.Pointcut)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersection(MethodMatcher, MethodMatcher)</Name>
      <Type>clm</Type>
      <Scope>MethodMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/MethodMatchers.html</Path>
    <Anchor>intersection(org.springframework.aop.MethodMatcher, org.springframework.aop.MethodMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersection(Pointcut, Pointcut)</Name>
      <Type>clm</Type>
      <Scope>Pointcuts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/Pointcuts.html</Path>
    <Anchor>intersection(org.springframework.aop.Pointcut, org.springframework.aop.Pointcut)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntervalTask</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/IntervalTask.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntervalTask(Runnable, long, long)</Name>
      <Type>Constructor</Type>
      <Scope>IntervalTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/IntervalTask.html</Path>
    <Anchor>IntervalTask(java.lang.Runnable, long, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntervalTask(Runnable, long)</Name>
      <Type>Constructor</Type>
      <Scope>IntervalTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/IntervalTask.html</Path>
    <Anchor>IntervalTask(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntLiteral</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/IntLiteral.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intResult(Collection)</Name>
      <Type>clm</Type>
      <Scope>DataAccessUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DataAccessUtils.html</Path>
    <Anchor>intResult(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntroductionAdvisor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/IntroductionAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntroductionAwareMethodMatcher</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/IntroductionAwareMethodMatcher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntroductionInfo</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/IntroductionInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntroductionInfoSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/IntroductionInfoSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntroductionInfoSupport()</Name>
      <Type>Constructor</Type>
      <Scope>IntroductionInfoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/IntroductionInfoSupport.html</Path>
    <Anchor>IntroductionInfoSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntroductionInterceptor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/IntroductionInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INTROSPECT_TYPE_LEVEL_MAPPING</Name>
      <Type>Field</Type>
      <Scope>HandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerMapping.html</Path>
    <Anchor>INTROSPECT_TYPE_LEVEL_MAPPING</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntrospectorCleanupListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/IntrospectorCleanupListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntrospectorCleanupListener()</Name>
      <Type>Constructor</Type>
      <Scope>IntrospectorCleanupListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/IntrospectorCleanupListener.html</Path>
    <Anchor>IntrospectorCleanupListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>invalidate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate()</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>invalidate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate()</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>invalidate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidClientIDException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jms</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/InvalidClientIDException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidClientIDException(InvalidClientIDException)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidClientIDException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/InvalidClientIDException.html</Path>
    <Anchor>InvalidClientIDException(javax.jms.InvalidClientIDException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidDataAccessApiUsageException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/InvalidDataAccessApiUsageException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidDataAccessApiUsageException(String)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidDataAccessApiUsageException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/InvalidDataAccessApiUsageException.html</Path>
    <Anchor>InvalidDataAccessApiUsageException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidDataAccessApiUsageException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidDataAccessApiUsageException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/InvalidDataAccessApiUsageException.html</Path>
    <Anchor>InvalidDataAccessApiUsageException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidDataAccessResourceUsageException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/InvalidDataAccessResourceUsageException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidDataAccessResourceUsageException(String)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidDataAccessResourceUsageException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/InvalidDataAccessResourceUsageException.html</Path>
    <Anchor>InvalidDataAccessResourceUsageException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidDataAccessResourceUsageException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidDataAccessResourceUsageException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/InvalidDataAccessResourceUsageException.html</Path>
    <Anchor>InvalidDataAccessResourceUsageException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidDestinationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jms</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/InvalidDestinationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidDestinationException(InvalidDestinationException)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidDestinationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/InvalidDestinationException.html</Path>
    <Anchor>InvalidDestinationException(javax.jms.InvalidDestinationException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidInvocationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jmx.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/InvalidInvocationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidInvocationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidInvocationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/InvalidInvocationException.html</Path>
    <Anchor>InvalidInvocationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidIsolationLevelException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/InvalidIsolationLevelException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidIsolationLevelException(String)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidIsolationLevelException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/InvalidIsolationLevelException.html</Path>
    <Anchor>InvalidIsolationLevelException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidMetadataException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jmx.export.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/InvalidMetadataException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidMetadataException(String)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidMetadataException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/InvalidMetadataException.html</Path>
    <Anchor>InvalidMetadataException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidPropertyException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/InvalidPropertyException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidPropertyException(Class, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidPropertyException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/InvalidPropertyException.html</Path>
    <Anchor>InvalidPropertyException(java.lang.Class, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidPropertyException(Class, String, String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidPropertyException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/InvalidPropertyException.html</Path>
    <Anchor>InvalidPropertyException(java.lang.Class, java.lang.String, java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidResultSetAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jca.cci</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/InvalidResultSetAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidResultSetAccessException(String, SQLException)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidResultSetAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/InvalidResultSetAccessException.html</Path>
    <Anchor>InvalidResultSetAccessException(java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidResultSetAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/InvalidResultSetAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidResultSetAccessException(String, String, SQLException)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidResultSetAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/InvalidResultSetAccessException.html</Path>
    <Anchor>InvalidResultSetAccessException(java.lang.String, java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidResultSetAccessException(SQLException)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidResultSetAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/InvalidResultSetAccessException.html</Path>
    <Anchor>InvalidResultSetAccessException(java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidSelectorException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jms</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/InvalidSelectorException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidSelectorException(InvalidSelectorException)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidSelectorException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/InvalidSelectorException.html</Path>
    <Anchor>InvalidSelectorException(javax.jms.InvalidSelectorException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidTimeoutException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/InvalidTimeoutException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvalidTimeoutException(String, int)</Name>
      <Type>Constructor</Type>
      <Scope>InvalidTimeoutException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/InvalidTimeoutException.html</Path>
    <Anchor>InvalidTimeoutException(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvertibleComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.comparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InvertibleComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvertibleComparator(Comparator&amp;lt;T&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>InvertibleComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InvertibleComparator.html</Path>
    <Anchor>InvertibleComparator(java.util.Comparator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvertibleComparator(Comparator&amp;lt;T&amp;gt;, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>InvertibleComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InvertibleComparator.html</Path>
    <Anchor>InvertibleComparator(java.util.Comparator, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invertOrder()</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>invertOrder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invertOrder(int)</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>invertOrder(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invertOrder()</Name>
      <Type>instm</Type>
      <Scope>InvertibleComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InvertibleComparator.html</Path>
    <Anchor>invertOrder()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invocableClone()</Name>
      <Type>instm</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>invocableClone()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invocableClone(Object[])</Name>
      <Type>instm</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>invocableClone(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invocableClone()</Name>
      <Type>intfm</Type>
      <Scope>ProxyMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/ProxyMethodInvocation.html</Path>
    <Anchor>invocableClone()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invocableClone(Object[])</Name>
      <Type>intfm</Type>
      <Scope>ProxyMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/ProxyMethodInvocation.html</Path>
    <Anchor>invocableClone(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvocableHandlerMethod</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/InvocableHandlerMethod.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvocableHandlerMethod(Object, Method)</Name>
      <Type>Constructor</Type>
      <Scope>InvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/InvocableHandlerMethod.html</Path>
    <Anchor>InvocableHandlerMethod(java.lang.Object, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvocableHandlerMethod(HandlerMethod)</Name>
      <Type>Constructor</Type>
      <Scope>InvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/InvocableHandlerMethod.html</Path>
    <Anchor>InvocableHandlerMethod(org.springframework.web.method.HandlerMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvocableHandlerMethod(Object, String, Class&amp;lt;?&amp;gt;...)</Name>
      <Type>Constructor</Type>
      <Scope>InvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/InvocableHandlerMethod.html</Path>
    <Anchor>InvocableHandlerMethod(java.lang.Object, java.lang.String, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvocationFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jmx.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/InvocationFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvocationFailureException(String)</Name>
      <Type>Constructor</Type>
      <Scope>InvocationFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/InvocationFailureException.html</Path>
    <Anchor>InvocationFailureException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvocationFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>InvocationFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/InvocationFailureException.html</Path>
    <Anchor>InvocationFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterAdvice.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterThrowingAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AspectJAroundAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAroundAdvice.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AfterReturningAdviceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AfterReturningAdviceInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>MethodBeforeAdviceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/MethodBeforeAdviceInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>ThrowsAdviceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/ThrowsAdviceInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AbstractTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AsyncExecutionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AsyncExecutionInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>ConcurrencyThrottleInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ConcurrencyThrottleInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>DebugInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/DebugInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>ExposeInvocationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ExposeInvocationInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>DelegatePerTargetObjectIntroductionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>DelegatingIntroductionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DelegatingIntroductionInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke()</Name>
      <Type>intfm</Type>
      <Scope>CacheAspectSupport.Invoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.Invoker.html</Path>
    <Anchor>invoke()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>CacheInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>EventPublicationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/EventPublicationInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>PersistenceExceptionTranslationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(String, Object[], String[])</Name>
      <Type>instm</Type>
      <Scope>SpringModelMBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/SpringModelMBean.html</Path>
    <Anchor>invoke(java.lang.String, java.lang.Object[], java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>HibernateInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JdoInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JpaInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(InputStream, OutputStream)</Name>
      <Type>instm</Type>
      <Scope>BurlapExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapExporter.html</Path>
    <Anchor>invoke(java.io.InputStream, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(InputStream, OutputStream)</Name>
      <Type>instm</Type>
      <Scope>HessianExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
    <Anchor>invoke(java.io.InputStream, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(RemoteInvocation, Object)</Name>
      <Type>instm</Type>
      <Scope>RmiBasedExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiBasedExporter.html</Path>
    <Anchor>invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation, Remote, String)</Name>
      <Type>clm</Type>
      <Scope>RmiClientInterceptorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptorUtils.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation, java.rmi.Remote, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(RemoteInvocation)</Name>
      <Type>intfm</Type>
      <Scope>RmiInvocationHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiInvocationHandler.html</Path>
    <Anchor>invoke(org.springframework.remoting.support.RemoteInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(RemoteInvocation, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultRemoteInvocationExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/DefaultRemoteInvocationExecutor.html</Path>
    <Anchor>invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(Object)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
    <Anchor>invoke(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(RemoteInvocation, Object)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationBasedExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedExporter.html</Path>
    <Anchor>invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(RemoteInvocation, Object)</Name>
      <Type>intfm</Type>
      <Scope>RemoteInvocationExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationExecutor.html</Path>
    <Anchor>invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>TransactionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke()</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>invoke()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>MethodValidationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/MethodValidationInterceptor.html</Path>
    <Anchor>invoke(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeAdviceMethod(JoinPointMatch, Object, Throwable)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>invokeAdviceMethod(org.aspectj.weaver.tools.JoinPointMatch, java.lang.Object, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeAdviceMethod(JoinPoint, JoinPointMatch, Object, Throwable)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>invokeAdviceMethod(org.aspectj.lang.JoinPoint, org.aspectj.weaver.tools.JoinPointMatch, java.lang.Object, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeAdviceMethodWithGivenArgs(Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>invokeAdviceMethodWithGivenArgs(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeAfterCommit(List&amp;lt;TransactionSynchronization&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationUtils.html</Path>
    <Anchor>invokeAfterCommit(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeAfterCompletion(List&amp;lt;TransactionSynchronization&amp;gt;, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>invokeAfterCompletion(java.util.List, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeAfterCompletion(List&amp;lt;TransactionSynchronization&amp;gt;, int)</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationUtils.html</Path>
    <Anchor>invokeAfterCompletion(java.util.List, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeAndCreateResult(RemoteInvocation, Object)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationBasedExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedExporter.html</Path>
    <Anchor>invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeAndHandle(ServletWebRequest, ModelAndViewContainer, Object...)</Name>
      <Type>instm</Type>
      <Scope>ServletInvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.html</Path>
    <Anchor>invokeAndHandle(org.springframework.web.context.request.ServletWebRequest, org.springframework.web.method.support.ModelAndViewContainer, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeCustomInitMethod(String, Object, RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>invokeCustomInitMethod(java.lang.String, java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeDelegate(Filter, ServletRequest, ServletResponse, FilterChain)</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>invokeDelegate(javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeErrorHandler(Throwable)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>invokeErrorHandler(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeExceptionListener(JMSException)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>invokeExceptionListener(javax.jms.JMSException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeForRequest(NativeWebRequest, ModelAndViewContainer, Object...)</Name>
      <Type>instm</Type>
      <Scope>InvocableHandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/InvocableHandlerMethod.html</Path>
    <Anchor>invokeForRequest(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.method.support.ModelAndViewContainer, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeGetterMethod(Object, String)</Name>
      <Type>clm</Type>
      <Scope>ReflectionTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/ReflectionTestUtils.html</Path>
    <Anchor>invokeGetterMethod(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeHandlerMethod(Method, Object, NativeWebRequest, ExtendedModelMap)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>invokeHandlerMethod(java.lang.reflect.Method, java.lang.Object, org.springframework.web.context.request.NativeWebRequest, org.springframework.ui.ExtendedModelMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeHandlerMethod(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>invokeHandlerMethod(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeInContext(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AbstractRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>invokeInContext(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeInContext(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>invokeInContext(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeInContext(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>LocalSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html</Path>
    <Anchor>invokeInContext(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeInitMethods(String, Object, RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>invokeInitMethods(java.lang.String, java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeJdbcMethod(Method, Object)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>invokeJdbcMethod(java.lang.reflect.Method, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeJdbcMethod(Method, Object, Object...)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>invokeJdbcMethod(java.lang.reflect.Method, java.lang.Object, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeJoinpoint()</Name>
      <Type>instm</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>invokeJoinpoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeJoinpointUsingReflection(Object, Method, Object[])</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>invokeJoinpointUsingReflection(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeListener(Session, Message)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>invokeListener(javax.jms.Session, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeListenerMethod(String, Object[])</Name>
      <Type>instm</Type>
      <Scope>MessageListenerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/adapter/MessageListenerAdapter.html</Path>
    <Anchor>invokeListenerMethod(java.lang.String, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeMethod(Object, String, Object...)</Name>
      <Type>clm</Type>
      <Scope>ReflectionTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/ReflectionTestUtils.html</Path>
    <Anchor>invokeMethod(java.lang.Object, java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeMethod(Method, Object)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>invokeMethod(java.lang.reflect.Method, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeMethod(Method, Object, Object...)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>invokeMethod(java.lang.reflect.Method, java.lang.Object, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeNamedMethod(String, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>invokeNamedMethod(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeRemoteMethod(MethodInvocation, Object)</Name>
      <Type>clm</Type>
      <Scope>RmiClientInterceptorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptorUtils.html</Path>
    <Anchor>invokeRemoteMethod(org.aopalliance.intercept.MethodInvocation, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeSetterMethod(Object, String, Object)</Name>
      <Type>clm</Type>
      <Scope>ReflectionTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/ReflectionTestUtils.html</Path>
    <Anchor>invokeSetterMethod(java.lang.Object, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeSetterMethod(Object, String, Object, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ReflectionTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/ReflectionTestUtils.html</Path>
    <Anchor>invokeSetterMethod(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeUnderTrace(MethodInvocation, Log)</Name>
      <Type>instm</Type>
      <Scope>AbstractTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
    <Anchor>invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeUnderTrace(MethodInvocation, Log)</Name>
      <Type>instm</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeUnderTrace(MethodInvocation, Log)</Name>
      <Type>instm</Type>
      <Scope>JamonPerformanceMonitorInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/JamonPerformanceMonitorInterceptor.html</Path>
    <Anchor>invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeUnderTrace(MethodInvocation, Log)</Name>
      <Type>instm</Type>
      <Scope>PerformanceMonitorInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/PerformanceMonitorInterceptor.html</Path>
    <Anchor>invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeUnderTrace(MethodInvocation, Log)</Name>
      <Type>instm</Type>
      <Scope>SimpleTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/SimpleTraceInterceptor.html</Path>
    <Anchor>invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeValidator(Validator, Object, Errors)</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>invokeValidator(org.springframework.validation.Validator, java.lang.Object, org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeValidator(Validator, Object, Errors, Object...)</Name>
      <Type>clm</Type>
      <Scope>ValidationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/ValidationUtils.html</Path>
    <Anchor>invokeValidator(org.springframework.validation.Validator, java.lang.Object, org.springframework.validation.Errors, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invokeVfsMethod(Method, Object, Object...)</Name>
      <Type>clm</Type>
      <Scope>VfsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/VfsUtils.html</Path>
    <Anchor>invokeVfsMethod(java.lang.reflect.Method, java.lang.Object, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is(Matcher&amp;lt;Integer&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>is(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is(int)</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>is(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbstract()</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>isAbstract()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbstract()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isAbstract()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbstract()</Name>
      <Type>intfm</Type>
      <Scope>ClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/ClassMetadata.html</Path>
    <Anchor>isAbstract()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbstract()</Name>
      <Type>instm</Type>
      <Scope>StandardClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardClassMetadata.html</Path>
    <Anchor>isAbstract()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAccepted()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isAccepted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAcceptGzipEncoding()</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>isAcceptGzipEncoding()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAcceptMessagesWhileStopping()</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>isAcceptMessagesWhileStopping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAcceptProxyClasses()</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>isAcceptProxyClasses()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAccessCallParameterMetaData()</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>isAccessCallParameterMetaData()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAccessTableColumnMetaData()</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>isAccessTableColumnMetaData()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive()</Name>
      <Type>instm</Type>
      <Scope>ProxyCreatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyCreatorSupport.html</Path>
    <Anchor>isActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>isActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>isActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>isActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>isActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive()</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>isActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActuallyInCreation(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isActuallyInCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActuallyInCreation(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>isActuallyInCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActualTransactionActive()</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>isActualTransactionActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAdviceInstantiated()</Name>
      <Type>intfm</Type>
      <Scope>InstantiationModelAwarePointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/InstantiationModelAwarePointcutAdvisor.html</Path>
    <Anchor>isAdviceInstantiated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfterAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterAdvice.html</Path>
    <Anchor>isAfterAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfterAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterReturningAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html</Path>
    <Anchor>isAfterAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfterAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterThrowingAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html</Path>
    <Anchor>isAfterAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfterAdvice(Advisor)</Name>
      <Type>clm</Type>
      <Scope>AspectJAopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAopUtils.html</Path>
    <Anchor>isAfterAdvice(org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfterAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJAroundAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAroundAdvice.html</Path>
    <Anchor>isAfterAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfterAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJMethodBeforeAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html</Path>
    <Anchor>isAfterAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfterAdvice()</Name>
      <Type>intfm</Type>
      <Scope>AspectJPrecedenceInformation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJPrecedenceInformation.html</Path>
    <Anchor>isAfterAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfterLast()</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>isAfterLast()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfterLast()</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>isAfterLast()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlias(String)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>isAlias(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlias(String)</Name>
      <Type>intfm</Type>
      <Scope>AliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AliasRegistry.html</Path>
    <Anchor>isAlias(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlias(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleAliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SimpleAliasRegistry.html</Path>
    <Anchor>isAlias(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowCreate()</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>isAllowCreate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowCreate()</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>isAllowCreate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowCreate()</Name>
      <Type>instm</Type>
      <Scope>SpringPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html</Path>
    <Anchor>isAllowCreate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowCreate()</Name>
      <Type>instm</Type>
      <Scope>TransactionAwarePersistenceManagerFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy.html</Path>
    <Anchor>isAllowCreate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowDirtyBack()</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isAllowDirtyBack()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowDirtyBack()</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isAllowDirtyBack()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowDirtyForward()</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isAllowDirtyForward()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowDirtyForward()</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isAllowDirtyForward()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowed(String)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>isAllowed(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowNullValues()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCache.html</Path>
    <Anchor>isAllowNullValues()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowNullValues()</Name>
      <Type>instm</Type>
      <Scope>JCacheCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheCache.html</Path>
    <Anchor>isAllowNullValues()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowNullValues()</Name>
      <Type>instm</Type>
      <Scope>JCacheCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheCacheManager.html</Path>
    <Anchor>isAllowNullValues()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlreadyReported()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isAlreadyReported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlwaysMustRevalidate()</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>isAlwaysMustRevalidate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlwaysUseMessageFormat()</Name>
      <Type>instm</Type>
      <Scope>MessageSourceSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/MessageSourceSupport.html</Path>
    <Anchor>isAlwaysUseMessageFormat()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlwaysUseNewSession()</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>isAlwaysUseNewSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnnotated(String)</Name>
      <Type>intfm</Type>
      <Scope>AnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/AnnotationMetadata.html</Path>
    <Anchor>isAnnotated(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnnotated(String)</Name>
      <Type>intfm</Type>
      <Scope>MethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/MethodMetadata.html</Path>
    <Anchor>isAnnotated(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnnotated(String)</Name>
      <Type>instm</Type>
      <Scope>StandardAnnotationMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardAnnotationMetadata.html</Path>
    <Anchor>isAnnotated(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnnotated(String)</Name>
      <Type>instm</Type>
      <Scope>StandardMethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardMethodMetadata.html</Path>
    <Anchor>isAnnotated(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnnotationDeclaredLocally(Class&amp;lt;? extends Annotation&amp;gt;, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationUtils.html</Path>
    <Anchor>isAnnotationDeclaredLocally(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnnotationInherited(Class&amp;lt;? extends Annotation&amp;gt;, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AnnotationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationUtils.html</Path>
    <Anchor>isAnnotationInherited(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAopProxy(Object)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>isAopProxy(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isApproximableCollectionType(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>isApproximableCollectionType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isApproximableMapType(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>isApproximableMapType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isArray()</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>isArray()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isArray()</Name>
      <Type>instm</Type>
      <Scope>JsonPathRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/JsonPathRequestMatchers.html</Path>
    <Anchor>isArray()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isArray()</Name>
      <Type>instm</Type>
      <Scope>JsonPathResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/JsonPathResultMatchers.html</Path>
    <Anchor>isArray()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isArray(Object)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>isArray(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAscending()</Name>
      <Type>instm</Type>
      <Scope>MutableSortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/MutableSortDefinition.html</Path>
    <Anchor>isAscending()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAscending()</Name>
      <Type>intfm</Type>
      <Scope>SortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/SortDefinition.html</Path>
    <Anchor>isAscending()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAscending()</Name>
      <Type>instm</Type>
      <Scope>InvertibleComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InvertibleComparator.html</Path>
    <Anchor>isAscending()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAspect(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvisorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html</Path>
    <Anchor>isAspect(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAspect(Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>AspectJAdvisorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectJAdvisorFactory.html</Path>
    <Anchor>isAspect(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAssignable(Class, Class)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>isAssignable(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAssignable(Class, Class, String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>isAssignable(java.lang.Class, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAssignable(Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isAssignable(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAssignable(Type, Type)</Name>
      <Type>clm</Type>
      <Scope>TypeUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/TypeUtils.html</Path>
    <Anchor>isAssignable(java.lang.reflect.Type, java.lang.reflect.Type)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAssignableBound(Type, Type)</Name>
      <Type>clm</Type>
      <Scope>TypeUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/TypeUtils.html</Path>
    <Anchor>isAssignableBound(java.lang.reflect.Type, java.lang.reflect.Type)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAssignableTo(TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>isAssignableTo(org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAssignableValue(Class&amp;lt;?&amp;gt;, Object)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isAssignableValue(java.lang.Class, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAsyncComplete()</Name>
      <Type>intfm</Type>
      <Scope>AsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/AsyncWebRequest.html</Path>
    <Anchor>isAsyncComplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAsyncComplete()</Name>
      <Type>instm</Type>
      <Scope>NoSupportAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/NoSupportAsyncWebRequest.html</Path>
    <Anchor>isAsyncComplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAsyncComplete()</Name>
      <Type>instm</Type>
      <Scope>StandardServletAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.html</Path>
    <Anchor>isAsyncComplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAsyncDispatch(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>OncePerRequestFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/OncePerRequestFilter.html</Path>
    <Anchor>isAsyncDispatch(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAsyncStarted()</Name>
      <Type>intfm</Type>
      <Scope>AsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/AsyncWebRequest.html</Path>
    <Anchor>isAsyncStarted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAsyncStarted()</Name>
      <Type>instm</Type>
      <Scope>NoSupportAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/NoSupportAsyncWebRequest.html</Path>
    <Anchor>isAsyncStarted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAsyncStarted()</Name>
      <Type>instm</Type>
      <Scope>StandardServletAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.html</Path>
    <Anchor>isAsyncStarted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAsyncStarted(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>OncePerRequestFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/OncePerRequestFilter.html</Path>
    <Anchor>isAsyncStarted(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAsyncSupported()</Name>
      <Type>instm</Type>
      <Scope>AbstractDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.html</Path>
    <Anchor>isAsyncSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAtLeastJava14()</Name>
      <Type>clm</Type>
      <Scope>JdkVersion</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/JdkVersion.html</Path>
    <Anchor>isAtLeastJava14()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAtLeastJava15()</Name>
      <Type>clm</Type>
      <Scope>JdkVersion</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/JdkVersion.html</Path>
    <Anchor>isAtLeastJava15()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAtLeastJava16()</Name>
      <Type>clm</Type>
      <Scope>JdkVersion</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/JdkVersion.html</Path>
    <Anchor>isAtLeastJava16()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoGrowCollections()</Name>
      <Type>instm</Type>
      <Scope>SpelParserConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelParserConfiguration.html</Path>
    <Anchor>isAutoGrowCollections()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoGrowNestedPaths()</Name>
      <Type>intfm</Type>
      <Scope>BeanWrapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapper.html</Path>
    <Anchor>isAutoGrowNestedPaths()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoGrowNestedPaths()</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>isAutoGrowNestedPaths()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoGrowNestedPaths()</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>isAutoGrowNestedPaths()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoGrowNestedPaths()</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>isAutoGrowNestedPaths()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoGrowNullReferences()</Name>
      <Type>instm</Type>
      <Scope>SpelParserConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelParserConfiguration.html</Path>
    <Anchor>isAutoGrowNullReferences()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoStartup()</Name>
      <Type>intfm</Type>
      <Scope>SmartLifecycle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/SmartLifecycle.html</Path>
    <Anchor>isAutoStartup()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoStartup()</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>isAutoStartup()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoStartup()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>isAutoStartup()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutoStartup()</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>isAutoStartup()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutowire()</Name>
      <Type>clm</Type>
      <Scope>Autowire</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/Autowire.html</Path>
    <Anchor>isAutowire()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutowireCandidate(BeanDefinitionHolder, DependencyDescriptor)</Name>
      <Type>instm</Type>
      <Scope>QualifierAnnotationAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html</Path>
    <Anchor>isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.DependencyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutowireCandidate()</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>isAutowireCandidate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutowireCandidate(String, DependencyDescriptor)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html</Path>
    <Anchor>isAutowireCandidate(java.lang.String, org.springframework.beans.factory.config.DependencyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutowireCandidate()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isAutowireCandidate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutowireCandidate(BeanDefinitionHolder, DependencyDescriptor)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AutowireCandidateResolver.html</Path>
    <Anchor>isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.DependencyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutowireCandidate(String, DependencyDescriptor)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>isAutowireCandidate(java.lang.String, org.springframework.beans.factory.config.DependencyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutowireCandidate(String, RootBeanDefinition, DependencyDescriptor)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>isAutowireCandidate(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, org.springframework.beans.factory.config.DependencyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAutowireCandidate(BeanDefinitionHolder, DependencyDescriptor)</Name>
      <Type>instm</Type>
      <Scope>SimpleAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleAutowireCandidateResolver.html</Path>
    <Anchor>isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.DependencyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAvailable()</Name>
      <Type>instm</Type>
      <Scope>CommonsMultipartFile</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartFile.html</Path>
    <Anchor>isAvailable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBadGateway()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isBadGateway()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBadRequest()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isBadRequest()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBandwidthLimitExceeded()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isBandwidthLimitExceeded()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBatchExhausted(int)</Name>
      <Type>intfm</Type>
      <Scope>InterruptibleBatchPreparedStatementSetter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/InterruptibleBatchPreparedStatementSetter.html</Path>
    <Anchor>isBatchExhausted(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBatchExhausted(int)</Name>
      <Type>instm</Type>
      <Scope>AbstractInterruptibleBatchPreparedStatementSetter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractInterruptibleBatchPreparedStatementSetter.html</Path>
    <Anchor>isBatchExhausted(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeanDefinitionLazyInit(ListableBeanFactory, String)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>isBeanDefinitionLazyInit(org.springframework.beans.factory.ListableBeanFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeanEligibleForMetadataCaching(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isBeanEligibleForMetadataCaching(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeanEligibleForMetadataCaching(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>isBeanEligibleForMetadataCaching(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeanNameInUse(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isBeanNameInUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeanNameInUse(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinitionRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionRegistry.html</Path>
    <Anchor>isBeanNameInUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeanNameInUse(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleBeanDefinitionRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html</Path>
    <Anchor>isBeanNameInUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeanNameInUse(String)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>isBeanNameInUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterAdvice.html</Path>
    <Anchor>isBeforeAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterReturningAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html</Path>
    <Anchor>isBeforeAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterThrowingAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html</Path>
    <Anchor>isBeforeAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeAdvice(Advisor)</Name>
      <Type>clm</Type>
      <Scope>AspectJAopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAopUtils.html</Path>
    <Anchor>isBeforeAdvice(org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJAroundAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAroundAdvice.html</Path>
    <Anchor>isBeforeAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeAdvice()</Name>
      <Type>instm</Type>
      <Scope>AspectJMethodBeforeAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html</Path>
    <Anchor>isBeforeAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeAdvice()</Name>
      <Type>intfm</Type>
      <Scope>AspectJPrecedenceInformation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJPrecedenceInformation.html</Path>
    <Anchor>isBeforeAdvice()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeFirst()</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>isBeforeFirst()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeFirst()</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>isBeforeFirst()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBeforeInvocation()</Name>
      <Type>instm</Type>
      <Scope>CacheEvictOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheEvictOperation.html</Path>
    <Anchor>isBeforeInvocation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBindEmptyMultipartFiles()</Name>
      <Type>instm</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>isBindEmptyMultipartFiles()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBinderMethodApplicable(HandlerMethod, WebDataBinder)</Name>
      <Type>instm</Type>
      <Scope>InitBinderDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/InitBinderDataBinderFactory.html</Path>
    <Anchor>isBinderMethodApplicable(org.springframework.web.method.HandlerMethod, org.springframework.web.bind.WebDataBinder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBindExceptionRequired(WebDataBinder, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.html</Path>
    <Anchor>isBindExceptionRequired(org.springframework.web.bind.WebDataBinder, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBindingCandidate(Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>isBindingCandidate(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBindingFailure()</Name>
      <Type>instm</Type>
      <Scope>FieldError</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/FieldError.html</Path>
    <Anchor>isBindingFailure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBindOnNewForm()</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>isBindOnNewForm()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBindOnNewForm()</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>isBindOnNewForm()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCache()</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>isCache()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCacheBeanMetadata()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>isCacheBeanMetadata()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCacheBeanMetadata()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isCacheBeanMetadata()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCacheConsumers()</Name>
      <Type>instm</Type>
      <Scope>CachingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/CachingConnectionFactory.html</Path>
    <Anchor>isCacheConsumers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCacheProducers()</Name>
      <Type>instm</Type>
      <Scope>CachingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/CachingConnectionFactory.html</Path>
    <Anchor>isCacheProducers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCacheQueries()</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>isCacheQueries()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCacheSafe(Class&amp;lt;?&amp;gt;, ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isCacheSafe(java.lang.Class, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCacheTemplate()</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>isCacheTemplate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCacheUnresolved()</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>isCacheUnresolved()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCacheWide()</Name>
      <Type>instm</Type>
      <Scope>CacheEvictOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheEvictOperation.html</Path>
    <Anchor>isCacheWide()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCancelled()</Name>
      <Type>instm</Type>
      <Scope>AsyncResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncResult.html</Path>
    <Anchor>isCancelled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCancelRequest(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isCancelRequest(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCancelRequest(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isCancelRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCancelRequest(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CancellableFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/CancellableFormController.html</Path>
    <Anchor>isCancelRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCandidateComponent(MetadataReader)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCandidateComponent(AnnotatedBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>isCandidateComponent(org.springframework.beans.factory.annotation.AnnotatedBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCaseSensitive(int)</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSetMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html</Path>
    <Anchor>isCaseSensitive(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCaseSensitive(int)</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSetMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html</Path>
    <Anchor>isCaseSensitive(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCglibProxy(Object)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>isCglibProxy(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCglibProxy(Object)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isCglibProxy(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCglibProxyClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>isCglibProxyClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCglibProxyClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isCglibProxyClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCglibProxyClassName(String)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>isCglibProxyClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCglibProxyClassName(String)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isCglibProxyClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCglibRenamedMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>isCglibRenamedMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCheckedException(Throwable)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>isCheckedException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCheckFullyPopulated()</Name>
      <Type>instm</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>isCheckFullyPopulated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCheckpoint()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isCheckpoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCheckWriteOperations()</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>isCheckWriteOperations()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClassReloadable(Class)</Name>
      <Type>intfm</Type>
      <Scope>SmartClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SmartClassLoader.html</Path>
    <Anchor>isClassReloadable(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClientAcknowledge(Session)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate102.html</Path>
    <Anchor>isClientAcknowledge(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClientAcknowledge(Session)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer102.html</Path>
    <Anchor>isClientAcknowledge(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClientAcknowledge(Session)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer102.html</Path>
    <Anchor>isClientAcknowledge(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClientAcknowledge(Session)</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>isClientAcknowledge(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCloseMatch()</Name>
      <Type>instm</Type>
      <Scope>ReflectionHelper.ArgumentsMatchInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html</Path>
    <Anchor>isCloseMatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCollection()</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>isCollection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCommandInSession(RenderRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
    <Anchor>isCommandInSession(javax.portlet.RenderRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCommitted()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>isCommitted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCommitted()</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>isCommitted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompatible(BeanDefinition, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>isCompatible(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompatibleWith(MediaType)</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>isCompatibleWith(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompatibleWithThrowsClause(Throwable, Class[])</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>isCompatibleWithThrowsClause(java.lang.Throwable, java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompiled()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>isCompiled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompiled()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>isCompiled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompiled()</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>isCompiled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComplete()</Name>
      <Type>intfm</Type>
      <Scope>SessionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SessionStatus.html</Path>
    <Anchor>isComplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComplete()</Name>
      <Type>instm</Type>
      <Scope>SimpleSessionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SimpleSessionStatus.html</Path>
    <Anchor>isComplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompleted()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>isCompleted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompleted()</Name>
      <Type>intfm</Type>
      <Scope>TransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionStatus.html</Path>
    <Anchor>isCompleted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConcrete()</Name>
      <Type>intfm</Type>
      <Scope>ClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/ClassMetadata.html</Path>
    <Anchor>isConcrete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConcrete()</Name>
      <Type>instm</Type>
      <Scope>StandardClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardClassMetadata.html</Path>
    <Anchor>isConcrete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConcrete()</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>isConcrete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConcurrentHandlingStarted()</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>isConcurrentHandlingStarted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConditionPassing()</Name>
      <Type>instm</Type>
      <Scope>CacheAspectSupport.CacheOperationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.CacheOperationContext.html</Path>
    <Anchor>isConditionPassing()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConfigurationFrozen()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html</Path>
    <Anchor>isConfigurationFrozen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConfigurationFrozen()</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>isConfigurationFrozen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConflict()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isConflict()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnectFailure(RemoteException)</Name>
      <Type>instm</Type>
      <Scope>AbstractRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>isConnectFailure(java.rmi.RemoteException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnectFailure(RemoteException)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>isConnectFailure(java.rmi.RemoteException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnectFailure(RemoteException)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>isConnectFailure(java.rmi.RemoteException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnectFailure(SystemException)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>isConnectFailure(org.omg.CORBA.SystemException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnectFailure(RemoteException)</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>isConnectFailure(java.rmi.RemoteException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnectFailure(RemoteException)</Name>
      <Type>clm</Type>
      <Scope>RmiClientInterceptorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptorUtils.html</Path>
    <Anchor>isConnectFailure(java.rmi.RemoteException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnectionTransactional(Connection, ConnectionFactory)</Name>
      <Type>clm</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>isConnectionTransactional(javax.resource.cci.Connection, javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnectionTransactional(Connection, DataSource)</Name>
      <Type>clm</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>isConnectionTransactional(java.sql.Connection, javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConstant()</Name>
      <Type>instm</Type>
      <Scope>InlineList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/InlineList.html</Path>
    <Anchor>isConstant()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isContextKeyEmpty(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSpringContextTests.html</Path>
    <Anchor>isContextKeyEmpty(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isContextRequired()</Name>
      <Type>instm</Type>
      <Scope>ApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ApplicationObjectSupport.html</Path>
    <Anchor>isContextRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isContextRequired()</Name>
      <Type>instm</Type>
      <Scope>WebApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/WebApplicationObjectSupport.html</Path>
    <Anchor>isContextRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isContextRequired()</Name>
      <Type>instm</Type>
      <Scope>PortletApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletApplicationObjectSupport.html</Path>
    <Anchor>isContextRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isContextRequired()</Name>
      <Type>instm</Type>
      <Scope>InternalResourceView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/InternalResourceView.html</Path>
    <Anchor>isContextRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isContextRequired()</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>isContextRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isContinue()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isContinue()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isControllerType(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractControllerUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
    <Anchor>isControllerType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConverted()</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>isConverted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConverted()</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>isConverted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConverted()</Name>
      <Type>instm</Type>
      <Scope>PropertyValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
    <Anchor>isConverted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCookieHttpOnly()</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>isCookieHttpOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCookieSecure()</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>isCookieSecure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCreated()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isCreated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrency(int)</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSetMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html</Path>
    <Anchor>isCurrency(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrency(int)</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSetMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html</Path>
    <Anchor>isCurrency(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrentlyInCreation(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>isCurrentlyInCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrentlyInCreation(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>isCurrentlyInCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrentTransactionReadOnly()</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>isCurrentTransactionReadOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDaemon()</Name>
      <Type>instm</Type>
      <Scope>DelegatingWork</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/DelegatingWork.html</Path>
    <Anchor>isDaemon()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDaemon()</Name>
      <Type>instm</Type>
      <Scope>CustomizableThreadCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
    <Anchor>isDaemon()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDebug()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
    <Anchor>isDebug()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultBeanName()</Name>
      <Type>instm</Type>
      <Scope>BeanWiringInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfo.html</Path>
    <Anchor>isDefaultBeanName()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultHtmlEscape()</Name>
      <Type>instm</Type>
      <Scope>RequestContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/RequestContext.html</Path>
    <Anchor>isDefaultHtmlEscape()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultHtmlEscape()</Name>
      <Type>instm</Type>
      <Scope>AbstractFormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractFormTag.html</Path>
    <Anchor>isDefaultHtmlEscape()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultHtmlEscape()</Name>
      <Type>instm</Type>
      <Scope>HtmlEscapingAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/HtmlEscapingAwareTag.html</Path>
    <Anchor>isDefaultHtmlEscape()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultHtmlEscape(ServletContext)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>isDefaultHtmlEscape(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultJndiEnvironmentAvailable()</Name>
      <Type>clm</Type>
      <Scope>JndiLocatorDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiLocatorDelegate.html</Path>
    <Anchor>isDefaultJndiEnvironmentAvailable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultLazyInit()</Name>
      <Type>instm</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>isDefaultLazyInit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultName</Name>
      <Type>Field</Type>
      <Scope>CommonAnnotationBeanPostProcessor.LookupElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html</Path>
    <Anchor>isDefaultName</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultNamespace(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>isDefaultNamespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultNamespace(Node)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>isDefaultNamespace(org.w3c.dom.Node)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultRollback()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>isDefaultRollback()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultRollback(TestContext)</Name>
      <Type>instm</Type>
      <Scope>TransactionalTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/TransactionalTestExecutionListener.html</Path>
    <Anchor>isDefaultRollback(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDefaultRollback()</Name>
      <Type>instm</Type>
      <Scope>TransactionConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/TransactionConfigurationAttributes.html</Path>
    <Anchor>isDefaultRollback()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDeferredCloseActive(SessionFactory)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>isDeferredCloseActive(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDeliveryTransacted(Method)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
    <Anchor>isDeliveryTransacted(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDependencyCheck()</Name>
      <Type>instm</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>isDependencyCheck()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDestinationLocked()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isDestinationLocked()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectFieldAccess()</Name>
      <Type>instm</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>isDirectFieldAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDisabled()</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>isDisabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDisabled()</Name>
      <Type>instm</Type>
      <Scope>ButtonTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ButtonTag.html</Path>
    <Anchor>isDisabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDisabled()</Name>
      <Type>instm</Type>
      <Scope>HiddenInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/HiddenInputTag.html</Path>
    <Anchor>isDisabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDisabled()</Name>
      <Type>instm</Type>
      <Scope>OptionsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionsTag.html</Path>
    <Anchor>isDisabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDisabled()</Name>
      <Type>instm</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>isDisabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDisabledInThisEnvironment(Method)</Name>
      <Type>instm</Type>
      <Scope>AbstractAnnotationAwareTransactionalTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
    <Anchor>isDisabledInThisEnvironment(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDisabledInThisEnvironment(String)</Name>
      <Type>instm</Type>
      <Scope>ConditionalTestCase</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/ConditionalTestCase.html</Path>
    <Anchor>isDisabledInThisEnvironment(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDone()</Name>
      <Type>instm</Type>
      <Scope>AsyncResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncResult.html</Path>
    <Anchor>isDone()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic()</Name>
      <Type>instm</Type>
      <Scope>TypedStringValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/TypedStringValue.html</Path>
    <Anchor>isDynamic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEager()</Name>
      <Type>instm</Type>
      <Scope>DependencyDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
    <Anchor>isEager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEagerInit()</Name>
      <Type>instm</Type>
      <Scope>BeanReferenceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html</Path>
    <Anchor>isEagerInit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEagerInit()</Name>
      <Type>intfm</Type>
      <Scope>SmartFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/SmartFactoryBean.html</Path>
    <Anchor>isEagerInit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligible(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisingBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractAdvisingBeanPostProcessor.html</Path>
    <Anchor>isEligible(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleAdvisorBean(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>isEligibleAdvisorBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleAdvisorBean(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html</Path>
    <Anchor>isEligibleAdvisorBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleAdvisorBean(String)</Name>
      <Type>instm</Type>
      <Scope>InfrastructureAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html</Path>
    <Anchor>isEligibleAdvisorBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleAspectBean(String)</Name>
      <Type>instm</Type>
      <Scope>AnnotationAwareAspectJAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html</Path>
    <Anchor>isEligibleAspectBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleAttribute(Attr, ParserContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractSimpleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html</Path>
    <Anchor>isEligibleAttribute(org.w3c.dom.Attr, org.springframework.beans.factory.xml.ParserContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleAttribute(Attr)</Name>
      <Type>instm</Type>
      <Scope>AbstractSimpleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html</Path>
    <Anchor>isEligibleAttribute(org.w3c.dom.Attr)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractSimpleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html</Path>
    <Anchor>isEligibleAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleBean(String)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryAspectJAdvisorsBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html</Path>
    <Anchor>isEligibleBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleBean(String)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryAdvisorRetrievalHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.html</Path>
    <Anchor>isEligibleBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleForEtag(HttpServletRequest, HttpServletResponse, int, byte[])</Name>
      <Type>instm</Type>
      <Scope>ShallowEtagHeaderFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/ShallowEtagHeaderFilter.html</Path>
    <Anchor>isEligibleForEtag(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int, byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleForMapping(String, Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractControllerUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
    <Anchor>isEligibleForMapping(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleForOverriding(String)</Name>
      <Type>instm</Type>
      <Scope>OverridingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/OverridingClassLoader.html</Path>
    <Anchor>isEligibleForOverriding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleForPropertyPopulation(Object)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanJobFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SpringBeanJobFactory.html</Path>
    <Anchor>isEligibleForPropertyPopulation(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleForShadowing(String)</Name>
      <Type>instm</Type>
      <Scope>ShadowingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ShadowingClassLoader.html</Path>
    <Anchor>isEligibleForShadowing(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleProperty(String, Object)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>isEligibleProperty(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEligibleValue(Object)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>isEligibleValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>MethodOverrides</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverrides.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>intfm</Type>
      <Scope>PropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValues.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>MockMultipartFile</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockMultipartFile.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty(Collection)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>isEmpty(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty(Map)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>isEmpty(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty(Object[])</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>isEmpty(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty(Object)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>isEmpty(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>CommonsMultipartFile</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartFile.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>intfm</Type>
      <Scope>MultipartFile</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/MultipartFile.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>CompositeRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/CompositeRequestCondition.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>ConsumesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ConsumesRequestCondition.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty()</Name>
      <Type>instm</Type>
      <Scope>ProducesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.html</Path>
    <Anchor>isEmpty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEnforceDestroyMethod()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isEnforceDestroyMethod()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEnforceInitMethod()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isEnforceInitMethod()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEqualsMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>isEqualsMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEqualsMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>isEqualsMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isError()</Name>
      <Type>instm</Type>
      <Scope>BindStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/BindStatus.html</Path>
    <Anchor>isError()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExactMatch()</Name>
      <Type>instm</Type>
      <Scope>ReflectionHelper.ArgumentsMatchInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html</Path>
    <Anchor>isExactMatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExcluded(String)</Name>
      <Type>instm</Type>
      <Scope>DecoratingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/DecoratingClassLoader.html</Path>
    <Anchor>isExcluded(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExcludedFromDependencyCheck(PropertyDescriptor)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExecuted()</Name>
      <Type>instm</Type>
      <Scope>MockClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/http/client/MockClientHttpRequest.html</Path>
    <Anchor>isExecuted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExistingTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>isExistingTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExistingTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>isExistingTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExistingTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>isExistingTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExistingTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>isExistingTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExistingTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>isExistingTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExistingTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>isExistingTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExistingTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>isExistingTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExistingTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>isExistingTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExistingTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>isExistingTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExpectationFailed()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isExpectationFailed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExpired()</Name>
      <Type>instm</Type>
      <Scope>FlashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMap.html</Path>
    <Anchor>isExpired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExplicitQosEnabled()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>isExplicitQosEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposeClassDescriptor()</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>isExposeClassDescriptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposeListenerSession()</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>isExposeListenerSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposeNativeEntityManager()</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>isExposeNativeEntityManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposeNativePersistenceManager()</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>isExposeNativePersistenceManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposeNativeSession()</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>isExposeNativeSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposePathVariables()</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>isExposePathVariables()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposeProxy()</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>isExposeProxy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposeProxy()</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>isExposeProxy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposeTransactionAwareSessionFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>isExposeTransactionAwareSessionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExpressionLanguage(String)</Name>
      <Type>clm</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>isExpressionLanguage(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExternallyManagedConfigMember(Member)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>isExternallyManagedConfigMember(java.lang.reflect.Member)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExternallyManagedDestroyMethod(String)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>isExternallyManagedDestroyMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExternallyManagedInitMethod(String)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>isExternallyManagedInitMethod(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExtractOldValueForEditor()</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
    <Anchor>isExtractOldValueForEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExtractOldValueForEditor()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurablePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/ConfigurablePropertyAccessor.html</Path>
    <Anchor>isExtractOldValueForEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFactoryBean(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>isFactoryBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFactoryBean(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isFactoryBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFactoryBean(String, RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isFactoryBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFactoryDereference(String)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>isFactoryDereference(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFactoryMethod(Method)</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>isFactoryMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFailEarlyOnGlobalRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>isFailEarlyOnGlobalRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFailedDependency()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isFailedDependency()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isField</Name>
      <Type>Field</Type>
      <Scope>InjectionMetadata.InjectedElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
    <Anchor>isField</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFileURL(URL)</Name>
      <Type>clm</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>isFileURL(java.net.URL)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFinal()</Name>
      <Type>intfm</Type>
      <Scope>ClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/ClassMetadata.html</Path>
    <Anchor>isFinal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFinal()</Name>
      <Type>intfm</Type>
      <Scope>MethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/MethodMetadata.html</Path>
    <Anchor>isFinal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFinal()</Name>
      <Type>instm</Type>
      <Scope>StandardClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardClassMetadata.html</Path>
    <Anchor>isFinal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFinal()</Name>
      <Type>instm</Type>
      <Scope>StandardMethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardMethodMetadata.html</Path>
    <Anchor>isFinal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFinalizeMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>isFinalizeMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFinishRequest(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isFinishRequest(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFinishRequest(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isFinishRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFirst()</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>isFirst()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFirst()</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>isFirst()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFirstPage()</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>isFirstPage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixedRate()</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>isFixedRate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixedRate()</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>isFixedRate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixedRate()</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>isFixedRate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlashMapForRequest(FlashMap, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractFlashMapManager.html</Path>
    <Anchor>isFlashMapForRequest(org.springframework.web.servlet.FlashMap, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlushEager()</Name>
      <Type>instm</Type>
      <Scope>JdoAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoAccessor.html</Path>
    <Anchor>isFlushEager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlushEager()</Name>
      <Type>instm</Type>
      <Scope>JpaAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaAccessor.html</Path>
    <Anchor>isFlushEager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isForbidden()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isForbidden()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFormChangeRequest(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/SimpleFormController.html</Path>
    <Anchor>isFormChangeRequest(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFormChangeRequest(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFormChangeRequest(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>SimpleFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/SimpleFormController.html</Path>
    <Anchor>isFormChangeRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFormSubmission(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>isFormSubmission(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFormSubmission(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isFormSubmission(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFormSubmission(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>isFormSubmission(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFormSubmission(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>isFormSubmission(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFormSubmission(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CancellableFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/CancellableFormController.html</Path>
    <Anchor>isFormSubmission(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFound()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isFound()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFrozen()</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>isFrozen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFrozen()</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>isFrozen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFrozen()</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>isFrozen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFrozen()</Name>
      <Type>instm</Type>
      <Scope>JmsResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsResourceHolder.html</Path>
    <Anchor>isFrozen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFunction()</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>isFunction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFunction()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>isFunction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFunction()</Name>
      <Type>instm</Type>
      <Scope>SqlCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlCall.html</Path>
    <Anchor>isFunction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGatewayTimeout()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isGatewayTimeout()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGeneratedBeanName(String)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>isGeneratedBeanName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGenerateDdl()</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html</Path>
    <Anchor>isGenerateDdl()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGenerateDefaultLocations()</Name>
      <Type>instm</Type>
      <Scope>AbstractContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractContextLoader.html</Path>
    <Anchor>isGenerateDefaultLocations()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGeneratedKeysColumnNameArraySupported()</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>isGeneratedKeysColumnNameArraySupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGeneratedKeysColumnNameArraySupported()</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>isGeneratedKeysColumnNameArraySupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGeneratedKeysColumnNameArraySupported()</Name>
      <Type>intfm</Type>
      <Scope>TableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProvider.html</Path>
    <Anchor>isGeneratedKeysColumnNameArraySupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGetGeneratedKeysSimulated()</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>isGetGeneratedKeysSimulated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGetGeneratedKeysSimulated()</Name>
      <Type>instm</Type>
      <Scope>HsqlTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.html</Path>
    <Anchor>isGetGeneratedKeysSimulated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGetGeneratedKeysSimulated()</Name>
      <Type>instm</Type>
      <Scope>PostgresTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/PostgresTableMetaDataProvider.html</Path>
    <Anchor>isGetGeneratedKeysSimulated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGetGeneratedKeysSimulated()</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>isGetGeneratedKeysSimulated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGetGeneratedKeysSimulated()</Name>
      <Type>intfm</Type>
      <Scope>TableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProvider.html</Path>
    <Anchor>isGetGeneratedKeysSimulated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGetGeneratedKeysSupported()</Name>
      <Type>instm</Type>
      <Scope>DerbyTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.html</Path>
    <Anchor>isGetGeneratedKeysSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGetGeneratedKeysSupported()</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>isGetGeneratedKeysSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGetGeneratedKeysSupported()</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>isGetGeneratedKeysSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGetGeneratedKeysSupported()</Name>
      <Type>intfm</Type>
      <Scope>TableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProvider.html</Path>
    <Anchor>isGetGeneratedKeysSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGlobalRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>isGlobalRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGlobalRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
    <Anchor>isGlobalRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGlobalRollbackOnParticipationFailure()</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>isGlobalRollbackOnParticipationFailure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGone()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isGone()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGzipResponse(PostMethod)</Name>
      <Type>instm</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>isGzipResponse(org.apache.commons.httpclient.methods.PostMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGzipResponse(HttpResponse)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>isGzipResponse(org.apache.http.HttpResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGzipResponse(HttpURLConnection)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html</Path>
    <Anchor>isGzipResponse(java.net.HttpURLConnection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHandler(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>isHandler(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHandler(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>isHandler(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHandlerMethod(Method)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
    <Anchor>isHandlerMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHandlerSessionAttribute(String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SessionAttributesHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionAttributesHandler.html</Path>
    <Anchor>isHandlerSessionAttribute(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHashCodeMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>isHashCodeMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHashCodeMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>isHashCodeMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHomeRefreshable()</Name>
      <Type>instm</Type>
      <Scope>AbstractRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>isHomeRefreshable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHomeRefreshable()</Name>
      <Type>instm</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>isHomeRefreshable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHtmlEscape()</Name>
      <Type>instm</Type>
      <Scope>HtmlEscapingAwareTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/HtmlEscapingAwareTag.html</Path>
    <Anchor>isHtmlEscape()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHttpVersionNotSupported()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isHttpVersionNotSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIAmATeapot()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isIAmATeapot()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIgnoreCase()</Name>
      <Type>instm</Type>
      <Scope>MutableSortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/MutableSortDefinition.html</Path>
    <Anchor>isIgnoreCase()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIgnoreCase()</Name>
      <Type>intfm</Type>
      <Scope>SortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/SortDefinition.html</Path>
    <Anchor>isIgnoreCase()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIgnoreInvalidFields()</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>isIgnoreInvalidFields()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIgnoreNestedPath()</Name>
      <Type>instm</Type>
      <Scope>BindTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/BindTag.html</Path>
    <Anchor>isIgnoreNestedPath()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIgnoreUnknownFields()</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>isIgnoreUnknownFields()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIgnoreWarnings()</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>isIgnoreWarnings()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIgnoring(IMessage.Kind)</Name>
      <Type>instm</Type>
      <Scope>AspectJWeaverMessageHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html</Path>
    <Anchor>isIgnoring(org.aspectj.bridge.IMessage.Kind)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isImUsed()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isImUsed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIncludeClientInfo()</Name>
      <Type>instm</Type>
      <Scope>Log4jNestedDiagnosticContextInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor.html</Path>
    <Anchor>isIncludeClientInfo()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIncludeClientInfo()</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>isIncludeClientInfo()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIncludePayload()</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>isIncludePayload()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIncludeQueryString()</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>isIncludeQueryString()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIncludeRequest(ServletRequest)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>isIncludeRequest(javax.servlet.ServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIndependent()</Name>
      <Type>intfm</Type>
      <Scope>ClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/ClassMetadata.html</Path>
    <Anchor>isIndependent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIndependent()</Name>
      <Type>instm</Type>
      <Scope>StandardClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardClassMetadata.html</Path>
    <Anchor>isIndependent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInfrastructureClass(Class)</Name>
      <Type>instm</Type>
      <Scope>AnnotationAwareAspectJAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html</Path>
    <Anchor>isInfrastructureClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInfrastructureClass(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>isInfrastructureClass(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInheritInitializers()</Name>
      <Type>instm</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>isInheritInitializers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInheritLocations()</Name>
      <Type>instm</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>isInheritLocations()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInitBinderMethod(Method)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
    <Anchor>isInitBinderMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInitialized()</Name>
      <Type>instm</Type>
      <Scope>AbstractLazyCreationTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractLazyCreationTargetSource.html</Path>
    <Anchor>isInitialized()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInputValueProvided()</Name>
      <Type>instm</Type>
      <Scope>ResultSetSupportingSqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html</Path>
    <Anchor>isInputValueProvided()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInputValueProvided()</Name>
      <Type>instm</Type>
      <Scope>SqlInOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlInOutParameter.html</Path>
    <Anchor>isInputValueProvided()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInputValueProvided()</Name>
      <Type>instm</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>isInputValueProvided()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInputValueProvided()</Name>
      <Type>instm</Type>
      <Scope>SqlReturnUpdateCount</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnUpdateCount.html</Path>
    <Anchor>isInputValueProvided()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInstanceOf(Class, Object)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>isInstanceOf(java.lang.Class, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInstanceOf(Class, Object, String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInstrumentationAvailable()</Name>
      <Type>clm</Type>
      <Scope>InstrumentationLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html</Path>
    <Anchor>isInstrumentationAvailable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInsufficientSpaceOnResource()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isInsufficientSpaceOnResource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInsufficientStorage()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isInsufficientStorage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInterceptorEnabled(MethodInvocation, Log)</Name>
      <Type>instm</Type>
      <Scope>AbstractTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
    <Anchor>isInterceptorEnabled(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInterceptorEnabled(MethodInvocation, Log)</Name>
      <Type>instm</Type>
      <Scope>JamonPerformanceMonitorInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/JamonPerformanceMonitorInterceptor.html</Path>
    <Anchor>isInterceptorEnabled(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInterface()</Name>
      <Type>intfm</Type>
      <Scope>ClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/ClassMetadata.html</Path>
    <Anchor>isInterface()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInterface()</Name>
      <Type>instm</Type>
      <Scope>StandardClassMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardClassMetadata.html</Path>
    <Anchor>isInterface()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInterfaceProxied(Class)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>isInterfaceProxied(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInterfaceProxied(Class)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>isInterfaceProxied(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInternalServerError()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isInternalServerError()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInvalid()</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>isInvalid()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInvalid()</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>isInvalid()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInvalidPath(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html</Path>
    <Anchor>isInvalidPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInvalidSubmission(PortletRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>isInvalidSubmission(javax.portlet.PortletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isJarResource(Resource)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>isJarResource(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isJarURL(URL)</Name>
      <Type>clm</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>isJarURL(java.net.URL)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isJdkDynamicProxy(Object)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>isJdkDynamicProxy(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLast()</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>isLast()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLast()</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>isLast()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLastPage()</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>isLastPage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLazilyInstantiated()</Name>
      <Type>instm</Type>
      <Scope>AspectMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectMetadata.html</Path>
    <Anchor>isLazilyInstantiated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLazy()</Name>
      <Type>intfm</Type>
      <Scope>InstantiationModelAwarePointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/InstantiationModelAwarePointcutAdvisor.html</Path>
    <Anchor>isLazy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLazyInit()</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>isLazyInit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLazyInit()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isLazyInit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLazyInit()</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionDefaults</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionDefaults.html</Path>
    <Anchor>isLazyInit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLazyInit()</Name>
      <Type>instm</Type>
      <Scope>JdbcAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcAccessor.html</Path>
    <Anchor>isLazyInit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLengthRequired()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isLengthRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLenientConstructorResolution()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isLenientConstructorResolution()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLocalRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>isLocalRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLocked()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isLocked()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLog()</Name>
      <Type>instm</Type>
      <Scope>ManagedResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/ManagedResource.html</Path>
    <Anchor>isLog()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLogEnabled(Log)</Name>
      <Type>instm</Type>
      <Scope>AbstractTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
    <Anchor>isLogEnabled(org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLogEnabled()</Name>
      <Type>instm</Type>
      <Scope>DeprecatedBeanWarner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DeprecatedBeanWarner.html</Path>
    <Anchor>isLogEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLongLived()</Name>
      <Type>intfm</Type>
      <Scope>SchedulingAwareRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/SchedulingAwareRunnable.html</Path>
    <Anchor>isLongLived()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLoopDetected()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isLoopDetected()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMaintainSession()</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>isMaintainSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMaintainSession()</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>isMaintainSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMap()</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>isMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMatch(String, String)</Name>
      <Type>instm</Type>
      <Scope>BeanNameAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/BeanNameAutoProxyCreator.html</Path>
    <Anchor>isMatch(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMatch(String, String)</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcut.html</Path>
    <Anchor>isMatch(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMatch(String, String)</Name>
      <Type>instm</Type>
      <Scope>NameMatchCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/NameMatchCacheOperationSource.html</Path>
    <Anchor>isMatch(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMatch(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MethodNameBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html</Path>
    <Anchor>isMatch(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMatch(String, String)</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>isMatch(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMatch(String, String)</Name>
      <Type>instm</Type>
      <Scope>NameMatchTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.html</Path>
    <Anchor>isMatch(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMatchingFieldError(String, FieldError)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>isMatchingFieldError(java.lang.String, org.springframework.validation.FieldError)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMatchRequiringConversion()</Name>
      <Type>instm</Type>
      <Scope>ReflectionHelper.ArgumentsMatchInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html</Path>
    <Anchor>isMatchRequiringConversion()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMaterialized()</Name>
      <Type>instm</Type>
      <Scope>LazySingletonAspectInstanceFactoryDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/LazySingletonAspectInstanceFactoryDecorator.html</Path>
    <Anchor>isMaterialized()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMBean(Class)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>isMBean(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMBean(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>JmxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/JmxUtils.html</Path>
    <Anchor>isMBean(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMergeEnabled()</Name>
      <Type>instm</Type>
      <Scope>ManagedList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedList.html</Path>
    <Anchor>isMergeEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMergeEnabled()</Name>
      <Type>instm</Type>
      <Scope>ManagedMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedMap.html</Path>
    <Anchor>isMergeEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMergeEnabled()</Name>
      <Type>instm</Type>
      <Scope>ManagedProperties</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedProperties.html</Path>
    <Anchor>isMergeEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMergeEnabled()</Name>
      <Type>instm</Type>
      <Scope>ManagedSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ManagedSet.html</Path>
    <Anchor>isMergeEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMergeEnabled()</Name>
      <Type>intfm</Type>
      <Scope>Mergeable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/Mergeable.html</Path>
    <Anchor>isMergeEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMergeEnabled()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>isMergeEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMessageIdEnabled()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>isMessageIdEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMessageTimestampEnabled()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>isMessageTimestampEnabled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMethodBrowserSupported(String)</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>isMethodBrowserSupported(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMethodFailure()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isMethodFailure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMethodNotAllowed()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isMethodNotAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMethodOnIntroducedInterface(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>IntroductionInfoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/IntroductionInfoSupport.html</Path>
    <Anchor>isMethodOnIntroducedInterface(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMinimalPutsEnabledByDefault()</Name>
      <Type>instm</Type>
      <Scope>LocalCacheProviderProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalCacheProviderProxy.html</Path>
    <Anchor>isMinimalPutsEnabledByDefault()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMinimalPutsEnabledByDefault()</Name>
      <Type>instm</Type>
      <Scope>LocalRegionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html</Path>
    <Anchor>isMinimalPutsEnabledByDefault()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModelAttributeMethod(Method)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
    <Anchor>isModelAttributeMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified()</Name>
      <Type>intfm</Type>
      <Scope>ScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/ScriptSource.html</Path>
    <Anchor>isModified()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified()</Name>
      <Type>instm</Type>
      <Scope>ResourceScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ResourceScriptSource.html</Path>
    <Anchor>isModified()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified()</Name>
      <Type>instm</Type>
      <Scope>StaticScriptSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/StaticScriptSource.html</Path>
    <Anchor>isModified()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMovedPermanently()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isMovedPermanently()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMovedTemporarily()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isMovedTemporarily()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMultiActionControllerType(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractControllerUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
    <Anchor>isMultiActionControllerType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMultipart()</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>isMultipart()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMultipart(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
    <Anchor>isMultipart(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMultipart(HttpServletRequest)</Name>
      <Type>intfm</Type>
      <Scope>MultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/MultipartResolver.html</Path>
    <Anchor>isMultipart(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMultipart(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>StandardServletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StandardServletMultipartResolver.html</Path>
    <Anchor>isMultipart(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMultipart(ActionRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsPortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
    <Anchor>isMultipart(javax.portlet.ActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMultipart(ActionRequest)</Name>
      <Type>intfm</Type>
      <Scope>PortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/PortletMultipartResolver.html</Path>
    <Anchor>isMultipart(javax.portlet.ActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMultipleChoices()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isMultipleChoices()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMultiStatus()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isMultiStatus()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMutable()</Name>
      <Type>instm</Type>
      <Scope>AbstractLobType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
    <Anchor>isMutable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMutable()</Name>
      <Type>instm</Type>
      <Scope>BlobByteArrayType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobByteArrayType.html</Path>
    <Anchor>isMutable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMutable()</Name>
      <Type>instm</Type>
      <Scope>BlobSerializableType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/BlobSerializableType.html</Path>
    <Anchor>isMutable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMXBeanSupportAvailable()</Name>
      <Type>clm</Type>
      <Scope>JmxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/JmxUtils.html</Path>
    <Anchor>isMXBeanSupportAvailable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNamespaceAware()</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>isNamespaceAware()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeCallableStatements()</Name>
      <Type>instm</Type>
      <Scope>C3P0NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeCallableStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeCallableStatements()</Name>
      <Type>intfm</Type>
      <Scope>NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeCallableStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeCallableStatements()</Name>
      <Type>instm</Type>
      <Scope>NativeJdbcExtractorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeCallableStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeCallableStatements()</Name>
      <Type>instm</Type>
      <Scope>SimpleNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeCallableStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeCallableStatements()</Name>
      <Type>instm</Type>
      <Scope>WebLogicNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeCallableStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeCallableStatements()</Name>
      <Type>instm</Type>
      <Scope>WebSphereNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeCallableStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativePreparedStatements()</Name>
      <Type>instm</Type>
      <Scope>C3P0NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativePreparedStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativePreparedStatements()</Name>
      <Type>intfm</Type>
      <Scope>NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativePreparedStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativePreparedStatements()</Name>
      <Type>instm</Type>
      <Scope>NativeJdbcExtractorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativePreparedStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativePreparedStatements()</Name>
      <Type>instm</Type>
      <Scope>SimpleNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativePreparedStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativePreparedStatements()</Name>
      <Type>instm</Type>
      <Scope>WebLogicNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativePreparedStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativePreparedStatements()</Name>
      <Type>instm</Type>
      <Scope>WebSphereNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativePreparedStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeStatements()</Name>
      <Type>instm</Type>
      <Scope>C3P0NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeStatements()</Name>
      <Type>intfm</Type>
      <Scope>NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeStatements()</Name>
      <Type>instm</Type>
      <Scope>NativeJdbcExtractorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeStatements()</Name>
      <Type>instm</Type>
      <Scope>SimpleNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeStatements()</Name>
      <Type>instm</Type>
      <Scope>WebLogicNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNativeConnectionNecessaryForNativeStatements()</Name>
      <Type>instm</Type>
      <Scope>WebSphereNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html</Path>
    <Anchor>isNativeConnectionNecessaryForNativeStatements()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNegated()</Name>
      <Type>intfm</Type>
      <Scope>MediaTypeExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/MediaTypeExpression.html</Path>
    <Anchor>isNegated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNegated()</Name>
      <Type>intfm</Type>
      <Scope>NameValueExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/NameValueExpression.html</Path>
    <Anchor>isNegated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNested()</Name>
      <Type>instm</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/ParserContext.html</Path>
    <Anchor>isNested()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNestedOrIndexedProperty(String)</Name>
      <Type>clm</Type>
      <Scope>PropertyAccessorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessorUtils.html</Path>
    <Anchor>isNestedOrIndexedProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNestedTransactionAllowed()</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>isNestedTransactionAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNetworkAuthenticationRequired()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isNetworkAuthenticationRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNew()</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>isNew()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNew()</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>isNew()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewSynchronization()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
    <Anchor>isNewSynchronization()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewTransaction()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
    <Anchor>isNewTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewTransaction()</Name>
      <Type>instm</Type>
      <Scope>SimpleTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/SimpleTransactionStatus.html</Path>
    <Anchor>isNewTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewTransaction()</Name>
      <Type>intfm</Type>
      <Scope>TransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionStatus.html</Path>
    <Anchor>isNewTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNoContent()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isNoContent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNonAuthoritativeInformation()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isNonAuthoritativeInformation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNonPublicAccessAllowed()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isNonPublicAccessAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNotAcceptable()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isNotAcceptable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNotExtended()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isNotExtended()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNotFound()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isNotFound()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNotIgnored(Method, String)</Name>
      <Type>instm</Type>
      <Scope>MethodExclusionMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html</Path>
    <Anchor>isNotIgnored(java.lang.reflect.Method, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNotImplemented()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isNotImplemented()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNotModified()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isNotModified()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNotModified()</Name>
      <Type>instm</Type>
      <Scope>ServletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletWebRequest.html</Path>
    <Anchor>isNotModified()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull(Object, String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>isNull(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull(Object)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>isNull(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNullable()</Name>
      <Type>instm</Type>
      <Scope>CallParameterMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallParameterMetaData.html</Path>
    <Anchor>isNullable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNullable()</Name>
      <Type>instm</Type>
      <Scope>TableParameterMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableParameterMetaData.html</Path>
    <Anchor>isNullable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNullSafe()</Name>
      <Type>instm</Type>
      <Scope>PropertyOrFieldReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/PropertyOrFieldReference.html</Path>
    <Anchor>isNullSafe()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNumeric(int)</Name>
      <Type>clm</Type>
      <Scope>JdbcUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcUtils.html</Path>
    <Anchor>isNumeric(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObjectMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>isObjectMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOk()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isOk()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Isolation</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.transaction.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/Isolation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ISOLATION_DEFAULT</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>ISOLATION_DEFAULT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ISOLATION_READ_COMMITTED</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>ISOLATION_READ_COMMITTED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ISOLATION_READ_UNCOMMITTED</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>ISOLATION_READ_UNCOMMITTED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ISOLATION_REPEATABLE_READ</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>ISOLATION_REPEATABLE_READ</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ISOLATION_SERIALIZABLE</Name>
      <Type>Field</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>ISOLATION_SERIALIZABLE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsolationLevelDataSourceAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/IsolationLevelDataSourceAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsolationLevelDataSourceAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>IsolationLevelDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/IsolationLevelDataSourceAdapter.html</Path>
    <Anchor>IsolationLevelDataSourceAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsolationLevelDataSourceRouter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.lookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/IsolationLevelDataSourceRouter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsolationLevelDataSourceRouter()</Name>
      <Type>Constructor</Type>
      <Scope>IsolationLevelDataSourceRouter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/IsolationLevelDataSourceRouter.html</Path>
    <Anchor>IsolationLevelDataSourceRouter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOneTimeTask()</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/ScheduledTimerListener.html</Path>
    <Anchor>isOneTimeTask()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOneTimeTask()</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorTask.html</Path>
    <Anchor>isOneTimeTask()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOneTimeTask()</Name>
      <Type>instm</Type>
      <Scope>ScheduledTimerTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/ScheduledTimerTask.html</Path>
    <Anchor>isOneTimeTask()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpaque()</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>isOpaque()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen()</Name>
      <Type>instm</Type>
      <Scope>AbstractResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractResource.html</Path>
    <Anchor>isOpen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen()</Name>
      <Type>instm</Type>
      <Scope>InputStreamResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/InputStreamResource.html</Path>
    <Anchor>isOpen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen()</Name>
      <Type>intfm</Type>
      <Scope>Resource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/Resource.html</Path>
    <Anchor>isOpen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>isOpen()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOptimize()</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>isOptimize()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOptional()</Name>
      <Type>instm</Type>
      <Scope>PropertyValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValue.html</Path>
    <Anchor>isOptional()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOutputStreamAccessAllowed()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>isOutputStreamAccessAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOverloaded()</Name>
      <Type>instm</Type>
      <Scope>MethodOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverride.html</Path>
    <Anchor>isOverloaded()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOverridable()</Name>
      <Type>intfm</Type>
      <Scope>MethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/MethodMetadata.html</Path>
    <Anchor>isOverridable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOverridable()</Name>
      <Type>instm</Type>
      <Scope>StandardMethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardMethodMetadata.html</Path>
    <Anchor>isOverridable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOverrideIncludeSynonymsDefault()</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>isOverrideIncludeSynonymsDefault()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPartialContent()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isPartialContent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPattern(String)</Name>
      <Type>instm</Type>
      <Scope>AntPathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
    <Anchor>isPattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPattern(String)</Name>
      <Type>intfm</Type>
      <Scope>PathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PathMatcher.html</Path>
    <Anchor>isPattern(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPaymentRequired()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isPaymentRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPerInstance()</Name>
      <Type>intfm</Type>
      <Scope>Advisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/Advisor.html</Path>
    <Anchor>isPerInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPerInstance()</Name>
      <Type>instm</Type>
      <Scope>AspectJPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJPointcutAdvisor.html</Path>
    <Anchor>isPerInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPerInstance()</Name>
      <Type>instm</Type>
      <Scope>DeclareParentsAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/DeclareParentsAdvisor.html</Path>
    <Anchor>isPerInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPerInstance()</Name>
      <Type>instm</Type>
      <Scope>AbstractPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractPointcutAdvisor.html</Path>
    <Anchor>isPerInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPerInstance()</Name>
      <Type>instm</Type>
      <Scope>DefaultIntroductionAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultIntroductionAdvisor.html</Path>
    <Anchor>isPerInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPerInstance()</Name>
      <Type>instm</Type>
      <Scope>StaticMethodMatcherPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.html</Path>
    <Anchor>isPerInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPersistenceManagerTransactional(PersistenceManager, PersistenceManagerFactory)</Name>
      <Type>clm</Type>
      <Scope>PersistenceManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html</Path>
    <Anchor>isPersistenceManagerTransactional(javax.jdo.PersistenceManager, javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPersistenceUnitOverrideAllowed()</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>isPersistenceUnitOverrideAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPerThisOrPerTarget()</Name>
      <Type>instm</Type>
      <Scope>AspectMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectMetadata.html</Path>
    <Anchor>isPerThisOrPerTarget()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPerTypeWithin()</Name>
      <Type>instm</Type>
      <Scope>AspectMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectMetadata.html</Path>
    <Anchor>isPerTypeWithin()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPopulateProtectedVariables()</Name>
      <Type>instm</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>isPopulateProtectedVariables()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPortletModeAllowed(PortletMode)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>isPortletModeAllowed(javax.portlet.PortletMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPreconditionFailed()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isPreconditionFailed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPreconditionRequired()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isPreconditionRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPreferFileSystemAccess()</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>isPreferFileSystemAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPreferFileSystemAccess()</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>isPreferFileSystemAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPreFiltered()</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>isPreFiltered()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPreFiltered()</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>isPreFiltered()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrepared()</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>isPrepared()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrepared()</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>isPrepared()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrepared()</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>isPrepared()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrepared()</Name>
      <Type>instm</Type>
      <Scope>MethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MethodInvoker.html</Path>
    <Anchor>isPrepared()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPresent(String)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isPresent(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPresent(String, ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isPresent(java.lang.String, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrimary()</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>isPrimary()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrimary()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isPrimary()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrimary(String, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>isPrimary(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrimitive()</Name>
      <Type>instm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>isPrimitive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrimitiveArray(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isPrimitiveArray(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrimitiveOrWrapper(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isPrimitiveOrWrapper(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrimitivesDefaultedForNullValue()</Name>
      <Type>instm</Type>
      <Scope>BeanPropertyRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/BeanPropertyRowMapper.html</Path>
    <Anchor>isPrimitivesDefaultedForNullValue()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrimitiveWrapper(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isPrimitiveWrapper(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrimitiveWrapperArray(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isPrimitiveWrapperArray(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isProcedureColumnMetaDataUsed()</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>isProcedureColumnMetaDataUsed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isProcedureColumnMetaDataUsed()</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>isProcedureColumnMetaDataUsed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isProcessing()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isProcessing()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isProfileActive(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>isProfileActive(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototype(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactory.html</Path>
    <Anchor>isPrototype(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototype()</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>isPrototype()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototype()</Name>
      <Type>instm</Type>
      <Scope>BeanReferenceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html</Path>
    <Anchor>isPrototype()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototype()</Name>
      <Type>intfm</Type>
      <Scope>SmartFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/SmartFactoryBean.html</Path>
    <Anchor>isPrototype()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototype()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isPrototype()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototype(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isPrototype(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototype(String)</Name>
      <Type>instm</Type>
      <Scope>StaticListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/StaticListableBeanFactory.html</Path>
    <Anchor>isPrototype(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototype(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>isPrototype(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototype(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJndiBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/support/SimpleJndiBeanFactory.html</Path>
    <Anchor>isPrototype(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototypeBased()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html</Path>
    <Anchor>isPrototypeBased()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototypeBased()</Name>
      <Type>instm</Type>
      <Scope>LazyInitTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/LazyInitTargetSourceCreator.html</Path>
    <Anchor>isPrototypeBased()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrototypeCurrentlyInCreation(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isPrototypeCurrentlyInCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isProxyAuthenticationRequired()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isProxyAuthenticationRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isProxyTargetClass()</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>isProxyTargetClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isProxyTargetClass()</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>isProxyTargetClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPublicScope()</Name>
      <Type>instm</Type>
      <Scope>MockCacheControl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockCacheControl.html</Path>
    <Anchor>isPublicScope()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPublicStaticFinal(Field)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>isPublicStaticFinal(java.lang.reflect.Field)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPubSubDomain()</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager102.html</Path>
    <Anchor>isPubSubDomain()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPubSubDomain()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory102.html</Path>
    <Anchor>isPubSubDomain()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPubSubDomain()</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>isPubSubDomain()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPubSubDomain()</Name>
      <Type>instm</Type>
      <Scope>JmsDestinationAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JmsDestinationAccessor.html</Path>
    <Anchor>isPubSubDomain()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPubSubNoLocal()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>isPubSubNoLocal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPubSubNoLocal()</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>isPubSubNoLocal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPubSubNoLocal()</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>isPubSubNoLocal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isQualifier(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>QualifierAnnotationAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html</Path>
    <Anchor>isQualifier(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadable()</Name>
      <Type>instm</Type>
      <Scope>AbstractFileResolvingResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractFileResolvingResource.html</Path>
    <Anchor>isReadable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadable()</Name>
      <Type>instm</Type>
      <Scope>AbstractResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractResource.html</Path>
    <Anchor>isReadable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadable()</Name>
      <Type>instm</Type>
      <Scope>DescriptiveResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/DescriptiveResource.html</Path>
    <Anchor>isReadable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadable()</Name>
      <Type>instm</Type>
      <Scope>FileSystemResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
    <Anchor>isReadable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadable()</Name>
      <Type>intfm</Type>
      <Scope>Resource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/Resource.html</Path>
    <Anchor>isReadable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadable()</Name>
      <Type>instm</Type>
      <Scope>VfsResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/VfsResource.html</Path>
    <Anchor>isReadable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadable()</Name>
      <Type>instm</Type>
      <Scope>ServletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResource.html</Path>
    <Anchor>isReadable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadable()</Name>
      <Type>instm</Type>
      <Scope>PortletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResource.html</Path>
    <Anchor>isReadable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadableProperty(String)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>isReadableProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadableProperty(String)</Name>
      <Type>instm</Type>
      <Scope>DirectFieldAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/DirectFieldAccessor.html</Path>
    <Anchor>isReadableProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadableProperty(String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>isReadableProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadOnly(ELContext, Object, Object)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanELResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/el/SpringBeanELResolver.html</Path>
    <Anchor>isReadOnly(javax.el.ELContext, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadOnly(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletPreferences</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletPreferences.html</Path>
    <Anchor>isReadOnly(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadOnly()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionDefinition.html</Path>
    <Anchor>isReadOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadOnly()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
    <Anchor>isReadOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadOnly()</Name>
      <Type>instm</Type>
      <Scope>DelegatingTransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DelegatingTransactionDefinition.html</Path>
    <Anchor>isReadOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadOnly()</Name>
      <Type>intfm</Type>
      <Scope>TransactionDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionDefinition.html</Path>
    <Anchor>isReadOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadOnly(ELContext, Object, Object)</Name>
      <Type>instm</Type>
      <Scope>WebApplicationContextFacesELResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.html</Path>
    <Anchor>isReadOnly(javax.el.ELContext, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReadonly()</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>isReadonly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReconnectOnException()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>isReconnectOnException()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRedirectAction()</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>isRedirectAction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRedirectContextRelative()</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>isRedirectContextRelative()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRedirectHttp10Compatible()</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>isRedirectHttp10Compatible()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRedirectView()</Name>
      <Type>intfm</Type>
      <Scope>SmartView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/SmartView.html</Path>
    <Anchor>isRedirectView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRedirectView()</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>isRedirectView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRedirectViewName(String)</Name>
      <Type>instm</Type>
      <Scope>ViewNameMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ViewNameMethodReturnValueHandler.html</Path>
    <Anchor>isRedirectViewName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRefCursorSupported()</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>isRefCursorSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRefCursorSupported()</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>isRefCursorSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRefCursorSupported()</Name>
      <Type>instm</Type>
      <Scope>OracleCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/OracleCallMetaDataProvider.html</Path>
    <Anchor>isRefCursorSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRefCursorSupported()</Name>
      <Type>instm</Type>
      <Scope>PostgresCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html</Path>
    <Anchor>isRefCursorSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReference()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>isReference()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReference()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>isReference()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRegisteredWithDestination()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>isRegisteredWithDestination()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRenderWhenMinimized()</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
    <Anchor>isRenderWhenMinimized()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestActive()</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributes.html</Path>
    <Anchor>isRequestActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestedRangeNotSatisfiable()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isRequestedRangeNotSatisfiable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestedSessionIdFromCookie()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>isRequestedSessionIdFromCookie()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestedSessionIdFromURL()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>isRequestedSessionIdFromURL()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestedSessionIdFromUrl()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>isRequestedSessionIdFromUrl()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestedSessionIdValid()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>isRequestedSessionIdValid()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestedSessionIdValid()</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>isRequestedSessionIdValid()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestEntityTooLarge()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isRequestEntityTooLarge()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestHandled()</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>isRequestHandled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestHeaderFieldsTooLarge()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isRequestHeaderFieldsTooLarge()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestTimeout()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isRequestTimeout()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestUriTooLong()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isRequestUriTooLong()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequired()</Name>
      <Type>instm</Type>
      <Scope>DependencyDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/DependencyDescriptor.html</Path>
    <Anchor>isRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequiredProperty(PropertyDescriptor)</Name>
      <Type>instm</Type>
      <Scope>RequiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>isRequiredProperty(java.beans.PropertyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequireSession()</Name>
      <Type>instm</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>isRequireSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequireSession()</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>isRequireSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResetContent()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isResetContent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResourceRef()</Name>
      <Type>instm</Type>
      <Scope>JndiLocatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiLocatorSupport.html</Path>
    <Anchor>isResourceRef()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResultSetSupported()</Name>
      <Type>instm</Type>
      <Scope>ResultSetSupportingSqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html</Path>
    <Anchor>isResultSetSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResultsMapCaseInsensitive()</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>isResultsMapCaseInsensitive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResultsParameter()</Name>
      <Type>instm</Type>
      <Scope>SqlParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlParameter.html</Path>
    <Anchor>isResultsParameter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResultsParameter()</Name>
      <Type>instm</Type>
      <Scope>SqlReturnResultSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnResultSet.html</Path>
    <Anchor>isResultsParameter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResultsParameter()</Name>
      <Type>instm</Type>
      <Scope>SqlReturnUpdateCount</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlReturnUpdateCount.html</Path>
    <Anchor>isResultsParameter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResumeIncomplete()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isResumeIncomplete()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReturnGeneratedKeys()</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>isReturnGeneratedKeys()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReturnResultSetSupported()</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>isReturnResultSetSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReturnResultSetSupported()</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>isReturnResultSetSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReturnResultSetSupported()</Name>
      <Type>instm</Type>
      <Scope>OracleCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/OracleCallMetaDataProvider.html</Path>
    <Anchor>isReturnResultSetSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReturnResultSetSupported()</Name>
      <Type>instm</Type>
      <Scope>PostgresCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html</Path>
    <Anchor>isReturnResultSetSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReturnTypeSupported()</Name>
      <Type>instm</Type>
      <Scope>SqlOutParameter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlOutParameter.html</Path>
    <Anchor>isReturnTypeSupported()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReturnValueRequired()</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>isReturnValueRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReturnValueRequired()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>isReturnValueRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollback()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>isRollback()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollback()</Name>
      <Type>instm</Type>
      <Scope>AbstractAnnotationAwareTransactionalTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
    <Anchor>isRollback()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollback(TestContext)</Name>
      <Type>instm</Type>
      <Scope>TransactionalTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/TransactionalTestExecutionListener.html</Path>
    <Anchor>isRollback(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollbackOnCommitFailure()</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>isRollbackOnCommitFailure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollbackOnly(Object)</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>isRollbackOnly(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionObject</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionObject.html</Path>
    <Anchor>isRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>isRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollbackOnly()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>isRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollbackOnly()</Name>
      <Type>intfm</Type>
      <Scope>SmartTransactionObject</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/SmartTransactionObject.html</Path>
    <Anchor>isRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRollbackOnly()</Name>
      <Type>intfm</Type>
      <Scope>TransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionStatus.html</Path>
    <Anchor>isRollbackOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning()</Name>
      <Type>intfm</Type>
      <Scope>Lifecycle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/Lifecycle.html</Path>
    <Anchor>isRunning()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>isRunning()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning()</Name>
      <Type>instm</Type>
      <Scope>DefaultLifecycleProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/DefaultLifecycleProcessor.html</Path>
    <Anchor>isRunning()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning()</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>isRunning()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>isRunning()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning()</Name>
      <Type>instm</Type>
      <Scope>TimerManagerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerAccessor.html</Path>
    <Anchor>isRunning()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning()</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>isRunning()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning()</Name>
      <Type>instm</Type>
      <Scope>StopWatch</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StopWatch.html</Path>
    <Anchor>isRunning()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRuntime()</Name>
      <Type>instm</Type>
      <Scope>AspectJExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
    <Anchor>isRuntime()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRuntime()</Name>
      <Type>intfm</Type>
      <Scope>MethodMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/MethodMatcher.html</Path>
    <Anchor>isRuntime()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRuntime()</Name>
      <Type>instm</Type>
      <Scope>ControlFlowPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ControlFlowPointcut.html</Path>
    <Anchor>isRuntime()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRuntime()</Name>
      <Type>instm</Type>
      <Scope>DynamicMethodMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DynamicMethodMatcher.html</Path>
    <Anchor>isRuntime()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRuntime()</Name>
      <Type>instm</Type>
      <Scope>StaticMethodMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/StaticMethodMatcher.html</Path>
    <Anchor>isRuntime()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSameConnectionForEntireSession(Session)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>isSameConnectionForEntireSession(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSameConnectionForEntireSession(Session)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>isSameConnectionForEntireSession(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSavepointAllowed()</Name>
      <Type>instm</Type>
      <Scope>JdbcTransactionObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html</Path>
    <Anchor>isSavepointAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSecure()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>isSecure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSecure()</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>isSecure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSecure()</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>isSecure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSecure()</Name>
      <Type>instm</Type>
      <Scope>FacesWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesWebRequest.html</Path>
    <Anchor>isSecure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSecure()</Name>
      <Type>instm</Type>
      <Scope>ServletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletWebRequest.html</Path>
    <Anchor>isSecure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSecure()</Name>
      <Type>intfm</Type>
      <Scope>WebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/WebRequest.html</Path>
    <Anchor>isSecure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSecure()</Name>
      <Type>instm</Type>
      <Scope>PortletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletWebRequest.html</Path>
    <Anchor>isSecure()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSeeOther()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isSeeOther()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isServiceUnavailable()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isServiceUnavailable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSessionAttribute(String, Class)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodResolver.html</Path>
    <Anchor>isSessionAttribute(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSessionForm()</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>isSessionForm()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSessionForm()</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>isSessionForm()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSessionLocallyTransacted(Session)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>isSessionLocallyTransacted(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSessionLocallyTransacted(Session)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>isSessionLocallyTransacted(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSessionLocallyTransacted(Session)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>isSessionLocallyTransacted(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSessionTransacted()</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>isSessionTransacted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSessionTransactional(Session, ConnectionFactory)</Name>
      <Type>clm</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>isSessionTransactional(javax.jms.Session, javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSessionTransactional(Session, SessionFactory)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>isSessionTransactional(org.hibernate.Session, org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSetOrExpired()</Name>
      <Type>instm</Type>
      <Scope>DeferredResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResult.html</Path>
    <Anchor>isSetOrExpired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSharedEditor(PropertyEditor)</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>isSharedEditor(java.beans.PropertyEditor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isShowPassword()</Name>
      <Type>instm</Type>
      <Scope>PasswordInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/PasswordInputTag.html</Path>
    <Anchor>isShowPassword()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isShowSql()</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html</Path>
    <Anchor>isShowSql()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isShutdown()</Name>
      <Type>instm</Type>
      <Scope>ExecutorServiceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ExecutorServiceAdapter.html</Path>
    <Anchor>isShutdown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSigned(int)</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSetMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html</Path>
    <Anchor>isSigned(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSigned(int)</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSetMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html</Path>
    <Anchor>isSigned(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSimpleProperty(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>isSimpleProperty(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSimpleValueType(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>isSimpleValueType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleSession()</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html</Path>
    <Anchor>isSingleSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleSession()</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>isSingleSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>MethodLocatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/MethodLocatingFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ScopedProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactory.html</Path>
    <Anchor>isSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>AbstractFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanDefinition.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>BeanReferenceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>CommonsLogFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>FieldRetrievingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/MethodInvokingFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>PropertiesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertiesFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>PropertyPathFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyPathFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ServiceLocatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>intfm</Type>
      <Scope>FactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/FactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton(String)</Name>
      <Type>instm</Type>
      <Scope>StaticListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/StaticListableBeanFactory.html</Path>
    <Anchor>isSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>EhCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>JCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheManagerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>isSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ConversionServiceFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>LocalStatelessSessionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>SimpleRemoteStatelessSessionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteStatelessSessionProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/ProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>LocalConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/LocalConnectionFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ResourceAdapterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>MBeanProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>MBeanServerConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>MBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>WebSphereMBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJndiBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/support/SimpleJndiBeanFactory.html</Path>
    <Anchor>isSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>FilterDefinitionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>LocalPersistenceManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>SpringPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>StandardPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/StandardPersistenceManagerProxyBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>TransactionAwarePersistenceManagerFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>SharedEntityManagerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/SharedEntityManagerBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>HibernateJpaSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaSessionFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>XmlOptionsFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlOptionsFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>BurlapProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>HessianProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>LocalJaxWsServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/LocalJaxWsServiceFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>JndiRmiProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>RmiProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiProxyFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>RmiRegistryFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>TimerManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ForkJoinPoolFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/TaskExecutorFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingTimerTaskFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/MethodInvokingTimerTaskFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>TimerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ServletContextAttributeFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextAttributeFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ServletContextFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingleton()</Name>
      <Type>instm</Type>
      <Scope>ServletContextParameterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextParameterFactoryBean.html</Path>
    <Anchor>isSingleton()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSingletonCurrentlyInCreation(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>isSingletonCurrentlyInCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSkipResultsProcessing()</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>isSkipResultsProcessing()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSkipUndeclaredResults()</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>isSkipUndeclaredResults()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSourceModified(Resource)</Name>
      <Type>instm</Type>
      <Scope>SpringResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/SpringResourceLoader.html</Path>
    <Anchor>isSourceModified(org.apache.velocity.runtime.resource.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSpringJspExpressionSupportActive(PageContext)</Name>
      <Type>clm</Type>
      <Scope>ExpressionEvaluationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/ExpressionEvaluationUtils.html</Path>
    <Anchor>isSpringJspExpressionSupportActive(javax.servlet.jsp.PageContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSqlReadyForUse()</Name>
      <Type>instm</Type>
      <Scope>SqlCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlCall.html</Path>
    <Anchor>isSqlReadyForUse()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>instm</Type>
      <Scope>AbstractLazyCreationTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractLazyCreationTargetSource.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>instm</Type>
      <Scope>EmptyTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/EmptyTargetSource.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>instm</Type>
      <Scope>HotSwappableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/HotSwappableTargetSource.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>instm</Type>
      <Scope>SingletonTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/SingletonTargetSource.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>intfm</Type>
      <Scope>TargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/TargetSource.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>intfm</Type>
      <Scope>MethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/MethodMetadata.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>instm</Type>
      <Scope>StandardMethodMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/StandardMethodMetadata.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStatic()</Name>
      <Type>instm</Type>
      <Scope>JndiObjectTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectTargetSource.html</Path>
    <Anchor>isStatic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStaxResult(Result)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>isStaxResult(javax.xml.transform.Result)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStaxSource(Source)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>isStaxSource(javax.xml.transform.Source)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStereotypeWithNameValue(String, Set&amp;lt;String&amp;gt;, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AnnotationBeanNameGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationBeanNameGenerator.html</Path>
    <Anchor>isStereotypeWithNameValue(java.lang.String, java.util.Set, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStoresLowerCaseIdentifiers()</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>isStoresLowerCaseIdentifiers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStoresLowerCaseIdentifiers()</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>isStoresLowerCaseIdentifiers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStoresUpperCaseIdentifiers()</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>isStoresUpperCaseIdentifiers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStoresUpperCaseIdentifiers()</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>isStoresUpperCaseIdentifiers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSubscriptionDurable()</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>isSubscriptionDurable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSubscriptionDurable()</Name>
      <Type>instm</Type>
      <Scope>JmsActivationSpecConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html</Path>
    <Anchor>isSubscriptionDurable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupportsCatalogsInProcedureCalls()</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>isSupportsCatalogsInProcedureCalls()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupportsCatalogsInProcedureCalls()</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>isSupportsCatalogsInProcedureCalls()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupportsSchemasInProcedureCalls()</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>isSupportsSchemasInProcedureCalls()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupportsSchemasInProcedureCalls()</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>isSupportsSchemasInProcedureCalls()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSuppressClose()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/SingleConnectionDataSource.html</Path>
    <Anchor>isSuppressClose()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSuppressNamespaces()</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>isSuppressNamespaces()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSuppressXsiType()</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>isSuppressXsiType()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSwitchingProtocols()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isSwitchingProtocols()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSynchedLocalTransactionAllowed()</Name>
      <Type>intfm</Type>
      <Scope>ConnectionFactoryUtils.ResourceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html</Path>
    <Anchor>isSynchedLocalTransactionAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSynchedLocalTransactionAllowed()</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareConnectionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html</Path>
    <Anchor>isSynchedLocalTransactionAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSynchronizationActive()</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>isSynchronizationActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSynchronizedWithTransaction()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>isSynchronizedWithTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSynchronizeOnSession()</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
    <Anchor>isSynchronizeOnSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSynchronizeOnSession()</Name>
      <Type>instm</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractController.html</Path>
    <Anchor>isSynchronizeOnSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSynthetic()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>isSynthetic()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTableColumnMetaDataUsed()</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>isTableColumnMetaDataUsed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTableColumnMetaDataUsed()</Name>
      <Type>intfm</Type>
      <Scope>TableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProvider.html</Path>
    <Anchor>isTableColumnMetaDataUsed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTargetFilterLifecycle()</Name>
      <Type>instm</Type>
      <Scope>DelegatingFilterProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/DelegatingFilterProxy.html</Path>
    <Anchor>isTargetFilterLifecycle()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTemplate()</Name>
      <Type>instm</Type>
      <Scope>TemplateParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/TemplateParserContext.html</Path>
    <Anchor>isTemplate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTemplate()</Name>
      <Type>intfm</Type>
      <Scope>ParserContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ParserContext.html</Path>
    <Anchor>isTemplate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTemporaryRedirect()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isTemporaryRedirect()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTerminated()</Name>
      <Type>instm</Type>
      <Scope>ExecutorServiceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ExecutorServiceAdapter.html</Path>
    <Anchor>isTerminated()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTestEnabledInThisEnvironment(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ProfileValueUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/ProfileValueUtils.html</Path>
    <Anchor>isTestEnabledInThisEnvironment(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTestEnabledInThisEnvironment(Method, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ProfileValueUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/ProfileValueUtils.html</Path>
    <Anchor>isTestEnabledInThisEnvironment(java.lang.reflect.Method, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTestEnabledInThisEnvironment(ProfileValueSource, Method, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ProfileValueUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/ProfileValueUtils.html</Path>
    <Anchor>isTestEnabledInThisEnvironment(org.springframework.test.annotation.ProfileValueSource, java.lang.reflect.Method, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTestMethodIgnored(FrameworkMethod)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>isTestMethodIgnored(org.junit.runners.model.FrameworkMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isThrottleActive()</Name>
      <Type>instm</Type>
      <Scope>SimpleAsyncTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/SimpleAsyncTaskExecutor.html</Path>
    <Anchor>isThrottleActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isThrottleActive()</Name>
      <Type>instm</Type>
      <Scope>ConcurrencyThrottleSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrencyThrottleSupport.html</Path>
    <Anchor>isThrottleActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isToggleAscendingOnProperty()</Name>
      <Type>instm</Type>
      <Scope>MutableSortDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/MutableSortDefinition.html</Path>
    <Anchor>isToggleAscendingOnProperty()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTooManyRequests()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isTooManyRequests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isToParent()</Name>
      <Type>instm</Type>
      <Scope>RuntimeBeanReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/RuntimeBeanReference.html</Path>
    <Anchor>isToParent()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isToStringMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>isToStringMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isToStringMethod(Method)</Name>
      <Type>clm</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>isToStringMethod(java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransactionActive()</Name>
      <Type>instm</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>isTransactionActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransactionActive()</Name>
      <Type>instm</Type>
      <Scope>PersistenceManagerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerHolder.html</Path>
    <Anchor>isTransactionActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransactionActive()</Name>
      <Type>instm</Type>
      <Scope>EntityManagerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerHolder.html</Path>
    <Anchor>isTransactionActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransactionAware()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionSupportingCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/AbstractTransactionSupportingCacheManager.html</Path>
    <Anchor>isTransactionAware()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransactionInProgress(JDBCContext, TransactionFactory.Context, Transaction)</Name>
      <Type>instm</Type>
      <Scope>SpringTransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringTransactionFactory.html</Path>
    <Anchor>isTransactionInProgress(org.hibernate.jdbc.JDBCContext, org.hibernate.transaction.TransactionFactory.Context, org.hibernate.Transaction)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransactionManagerRequired()</Name>
      <Type>instm</Type>
      <Scope>SpringTransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringTransactionFactory.html</Path>
    <Anchor>isTransactionManagerRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransactionSavepointManager()</Name>
      <Type>instm</Type>
      <Scope>DefaultTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/DefaultTransactionStatus.html</Path>
    <Anchor>isTransactionSavepointManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTrue(boolean, String)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>isTrue(boolean, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTrue(boolean)</Name>
      <Type>clm</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>isTrue(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTypeMatch(String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>BeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactory.html</Path>
    <Anchor>isTypeMatch(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTypeMatch(String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>isTypeMatch(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTypeMatch(String, Class)</Name>
      <Type>instm</Type>
      <Scope>StaticListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/StaticListableBeanFactory.html</Path>
    <Anchor>isTypeMatch(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTypeMatch(String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>isTypeMatch(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTypeMatch(String, Class)</Name>
      <Type>instm</Type>
      <Scope>SimpleJndiBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/support/SimpleJndiBeanFactory.html</Path>
    <Anchor>isTypeMatch(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUnauthorized()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isUnauthorized()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUnprocessableEntity()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isUnprocessableEntity()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUnsupportedMediaType()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isUnsupportedMediaType()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUpdatableResults()</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>isUpdatableResults()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUpgradeRequired()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isUpgradeRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUploadTempDirSpecified()</Name>
      <Type>instm</Type>
      <Scope>CommonsFileUploadSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
    <Anchor>isUploadTempDirSpecified()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUrl(String)</Name>
      <Type>clm</Type>
      <Scope>ResourcePatternUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePatternUtils.html</Path>
    <Anchor>isUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUrl(String)</Name>
      <Type>clm</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>isUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUrlRequired()</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlBasedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractUrlBasedView.html</Path>
    <Anchor>isUrlRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUrlRequired()</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>isUrlRequired()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUseCacheControlHeader()</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>isUseCacheControlHeader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUseCacheControlNoStore()</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>isUseCacheControlNoStore()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUseCodeAsDefaultMessage()</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractMessageSource.html</Path>
    <Anchor>isUseCodeAsDefaultMessage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUseExpiresHeader()</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>isUseExpiresHeader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsePrefix()</Name>
      <Type>instm</Type>
      <Scope>DefaultAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html</Path>
    <Anchor>isUsePrefix()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUseProxy()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isUseProxy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUserInRole(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>isUserInRole(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUserInRole(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>isUserInRole(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUserInRole(String)</Name>
      <Type>instm</Type>
      <Scope>FacesWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesWebRequest.html</Path>
    <Anchor>isUserInRole(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUserInRole(String)</Name>
      <Type>instm</Type>
      <Scope>ServletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletWebRequest.html</Path>
    <Anchor>isUserInRole(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUserInRole(String)</Name>
      <Type>intfm</Type>
      <Scope>WebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/WebRequest.html</Path>
    <Anchor>isUserInRole(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUserInRole(String)</Name>
      <Type>instm</Type>
      <Scope>PortletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletWebRequest.html</Path>
    <Anchor>isUserInRole(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUseSoapAction()</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>isUseSoapAction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUseSqlStateForTranslation()</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodes.html</Path>
    <Anchor>isUseSqlStateForTranslation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUseStrictCasing()</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>isUseStrictCasing()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUseTransactionAwareDataSource()</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>isUseTransactionAwareDataSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidateAddresses()</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>isValidateAddresses()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidateExistingTransaction()</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>isValidateExistingTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidateOnBinding()</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>isValidateOnBinding()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidateOnBinding()</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>isValidateOnBinding()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidating()</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>isValidating()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidDynamicAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html</Path>
    <Anchor>isValidDynamicAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidDynamicAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>isValidDynamicAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidDynamicAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HiddenInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/HiddenInputTag.html</Path>
    <Anchor>isValidDynamicAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidDynamicAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>isValidDynamicAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidDynamicAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>PasswordInputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/PasswordInputTag.html</Path>
    <Anchor>isValidDynamicAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVariantAlsoNegotiates()</Name>
      <Type>instm</Type>
      <Scope>StatusResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/StatusResultMatchers.html</Path>
    <Anchor>isVariantAlsoNegotiates()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isViewReference()</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>isViewReference()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisibilityBridgeMethodPair(Method, Method)</Name>
      <Type>clm</Type>
      <Scope>BridgeMethodResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/BridgeMethodResolver.html</Path>
    <Anchor>isVisibilityBridgeMethodPair(java.lang.reflect.Method, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible(Class&amp;lt;?&amp;gt;, ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>isVisible(java.lang.Class, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVoid()</Name>
      <Type>intfm</Type>
      <Scope>ResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolder.html</Path>
    <Anchor>isVoid()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVoid()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>isVoid()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVoid()</Name>
      <Type>instm</Type>
      <Scope>HandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethod.html</Path>
    <Anchor>isVoid()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWildcardSubtype()</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>isWildcardSubtype()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWildcardType()</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>isWildcardType()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWindowStateAllowed(WindowState)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>isWindowStateAllowed(javax.portlet.WindowState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWrapperFor(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDataSource.html</Path>
    <Anchor>isWrapperFor(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWrapperFor(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DelegatingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DelegatingDataSource.html</Path>
    <Anchor>isWrapperFor(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWrapperFor(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>isWrapperFor(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable()</Name>
      <Type>instm</Type>
      <Scope>FileSystemResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
    <Anchor>isWritable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable()</Name>
      <Type>intfm</Type>
      <Scope>WritableResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/WritableResource.html</Path>
    <Anchor>isWritable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(EvaluationContext)</Name>
      <Type>instm</Type>
      <Scope>CompositeStringExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/CompositeStringExpression.html</Path>
    <Anchor>isWritable(org.springframework.expression.EvaluationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(EvaluationContext, Object)</Name>
      <Type>instm</Type>
      <Scope>CompositeStringExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/CompositeStringExpression.html</Path>
    <Anchor>isWritable(org.springframework.expression.EvaluationContext, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(Object)</Name>
      <Type>instm</Type>
      <Scope>CompositeStringExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/CompositeStringExpression.html</Path>
    <Anchor>isWritable(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(EvaluationContext)</Name>
      <Type>instm</Type>
      <Scope>LiteralExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/LiteralExpression.html</Path>
    <Anchor>isWritable(org.springframework.expression.EvaluationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(EvaluationContext, Object)</Name>
      <Type>instm</Type>
      <Scope>LiteralExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/LiteralExpression.html</Path>
    <Anchor>isWritable(org.springframework.expression.EvaluationContext, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(Object)</Name>
      <Type>instm</Type>
      <Scope>LiteralExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/LiteralExpression.html</Path>
    <Anchor>isWritable(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(EvaluationContext)</Name>
      <Type>intfm</Type>
      <Scope>Expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/Expression.html</Path>
    <Anchor>isWritable(org.springframework.expression.EvaluationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(EvaluationContext, Object)</Name>
      <Type>intfm</Type>
      <Scope>Expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/Expression.html</Path>
    <Anchor>isWritable(org.springframework.expression.EvaluationContext, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(Object)</Name>
      <Type>intfm</Type>
      <Scope>Expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/Expression.html</Path>
    <Anchor>isWritable(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(ExpressionState)</Name>
      <Type>instm</Type>
      <Scope>CompoundExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/CompoundExpression.html</Path>
    <Anchor>isWritable(org.springframework.expression.spel.ExpressionState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(ExpressionState)</Name>
      <Type>instm</Type>
      <Scope>Indexer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Indexer.html</Path>
    <Anchor>isWritable(org.springframework.expression.spel.ExpressionState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(ExpressionState)</Name>
      <Type>instm</Type>
      <Scope>PropertyOrFieldReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/PropertyOrFieldReference.html</Path>
    <Anchor>isWritable(org.springframework.expression.spel.ExpressionState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(ExpressionState)</Name>
      <Type>instm</Type>
      <Scope>SpelNodeImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/SpelNodeImpl.html</Path>
    <Anchor>isWritable(org.springframework.expression.spel.ExpressionState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable()</Name>
      <Type>intfm</Type>
      <Scope>ValueRef</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/ValueRef.html</Path>
    <Anchor>isWritable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable()</Name>
      <Type>instm</Type>
      <Scope>ValueRef.NullValueRef</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/ValueRef.NullValueRef.html</Path>
    <Anchor>isWritable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable()</Name>
      <Type>instm</Type>
      <Scope>ValueRef.TypedValueHolderValueRef</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/ValueRef.TypedValueHolderValueRef.html</Path>
    <Anchor>isWritable()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(ExpressionState)</Name>
      <Type>instm</Type>
      <Scope>VariableReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/VariableReference.html</Path>
    <Anchor>isWritable(org.springframework.expression.spel.ExpressionState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(ExpressionState)</Name>
      <Type>intfm</Type>
      <Scope>SpelNode</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/SpelNode.html</Path>
    <Anchor>isWritable(org.springframework.expression.spel.ExpressionState)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(EvaluationContext)</Name>
      <Type>instm</Type>
      <Scope>SpelExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpression.html</Path>
    <Anchor>isWritable(org.springframework.expression.EvaluationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(Object)</Name>
      <Type>instm</Type>
      <Scope>SpelExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpression.html</Path>
    <Anchor>isWritable(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritable(EvaluationContext, Object)</Name>
      <Type>instm</Type>
      <Scope>SpelExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/standard/SpelExpression.html</Path>
    <Anchor>isWritable(org.springframework.expression.EvaluationContext, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritableProperty(String)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>isWritableProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritableProperty(String)</Name>
      <Type>instm</Type>
      <Scope>DirectFieldAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/DirectFieldAccessor.html</Path>
    <Anchor>isWritableProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritableProperty(String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessor.html</Path>
    <Anchor>isWritableProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWritableProperty(String, TypedValue, EvaluationContext)</Name>
      <Type>instm</Type>
      <Scope>PropertyOrFieldReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/PropertyOrFieldReference.html</Path>
    <Anchor>isWritableProperty(java.lang.String, org.springframework.expression.TypedValue, org.springframework.expression.EvaluationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWriterAccessAllowed()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>isWriterAccessAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isXopPackage()</Name>
      <Type>intfm</Type>
      <Scope>MimeContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/mime/MimeContainer.html</Path>
    <Anchor>isXopPackage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterate(String)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>iterate(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterate(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>iterate(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterate(String, Object...)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>iterate(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterate(String)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>iterate(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterate(String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>iterate(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterate(String, Object...)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>iterate(java.lang.String, java.lang.Object...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator()</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>iterator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator()</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>iterator()</Anchor>
  </Token>
</Tokens>
