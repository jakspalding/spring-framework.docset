<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>absolute(int)</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>absolute(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absolute(int)</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>absolute(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ABSTRACT_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>ABSTRACT_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ABSTRACT_KEY</Name>
      <Type>Field</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>ABSTRACT_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAdvisingBeanPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractAdvisingBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAdvisingBeanPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAdvisingBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractAdvisingBeanPostProcessor.html</Path>
    <Anchor>AbstractAdvisingBeanPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAdvisorAutoProxyCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.autoproxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAdvisorAutoProxyCreator()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>AbstractAdvisorAutoProxyCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAnnotationAwareTransactionalTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAnnotationAwareTransactionalTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAnnotationAwareTransactionalTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
    <Anchor>AbstractAnnotationAwareTransactionalTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAnnotationAwareTransactionalTests(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAnnotationAwareTransactionalTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html</Path>
    <Anchor>AbstractAnnotationAwareTransactionalTests(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAnnotationConfigDispatcherServletInitializer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractAnnotationConfigDispatcherServletInitializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAnnotationConfigDispatcherServletInitializer()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAnnotationConfigDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractAnnotationConfigDispatcherServletInitializer.html</Path>
    <Anchor>AbstractAnnotationConfigDispatcherServletInitializer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>AbstractApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractApplicationContext(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>AbstractApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractApplicationEventMulticaster</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/AbstractApplicationEventMulticaster.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractApplicationEventMulticaster()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/AbstractApplicationEventMulticaster.html</Path>
    <Anchor>AbstractApplicationEventMulticaster()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAspectJAdvice</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAspectJAdvice(Method, AspectJExpressionPointcut, AspectInstanceFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>AbstractAspectJAdvice(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.AspectInstanceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAspectJAdvisorFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAspectJAdvisorFactory()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAspectJAdvisorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html</Path>
    <Anchor>AbstractAspectJAdvisorFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAspectJAdvisorFactory.AspectJAnnotation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.AspectJAnnotation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAspectJAdvisorFactory.AspectJAnnotation(A)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAspectJAdvisorFactory.AspectJAnnotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.AspectJAnnotation.html</Path>
    <Anchor>AbstractAspectJAdvisorFactory.AspectJAnnotation(A)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAspectJAdvisorFactory.AspectJAnnotationType</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.AspectJAnnotationType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAspectjJpaTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractAspectjJpaTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAspectjJpaTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAspectjJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractAspectjJpaTests.html</Path>
    <Anchor>AbstractAspectjJpaTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAsyncConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAsyncConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAsyncConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.html</Path>
    <Anchor>AbstractAsyncConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAtomFeedView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.feed</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAtomFeedView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAtomFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html</Path>
    <Anchor>AbstractAtomFeedView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAutoProxyCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.autoproxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAutoProxyCreator()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>AbstractAutoProxyCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAutowireCapableBeanFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAutowireCapableBeanFactory()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>AbstractAutowireCapableBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractAutowireCapableBeanFactory(BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>AbstractAutowireCapableBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanDefinition()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>AbstractBeanDefinition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanDefinition(ConstructorArgumentValues, MutablePropertyValues)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>AbstractBeanDefinition(org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanDefinition(AbstractBeanDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>AbstractBeanDefinition(org.springframework.beans.factory.support.AbstractBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanDefinition(BeanDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>AbstractBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html</Path>
    <Anchor>AbstractBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanDefinitionReader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinitionReader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanDefinitionReader(BeanDefinitionRegistry)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinitionReader.html</Path>
    <Anchor>AbstractBeanDefinitionReader(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanFactory()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>AbstractBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanFactory(BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>AbstractBeanFactory(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanFactoryBasedTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanFactoryBasedTargetSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanFactoryBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
    <Anchor>AbstractBeanFactoryBasedTargetSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanFactoryBasedTargetSourceCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.autoproxy.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanFactoryBasedTargetSourceCreator()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanFactoryBasedTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html</Path>
    <Anchor>AbstractBeanFactoryBasedTargetSourceCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanFactoryPointcutAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBeanFactoryPointcutAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBeanFactoryPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.html</Path>
    <Anchor>AbstractBeanFactoryPointcutAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBindingResult</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractBindingResult(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>AbstractBindingResult(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCacheManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/AbstractCacheManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCacheManager()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/AbstractCacheManager.html</Path>
    <Anchor>AbstractCacheManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCachingConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AbstractCachingConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCachingConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AbstractCachingConfiguration.html</Path>
    <Anchor>AbstractCachingConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCachingLabeledEnumResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.enums</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractCachingLabeledEnumResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCachingLabeledEnumResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCachingLabeledEnumResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractCachingLabeledEnumResolver.html</Path>
    <Anchor>AbstractCachingLabeledEnumResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCachingViewResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCachingViewResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>AbstractCachingViewResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCheckedElementTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCheckedElementTag()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html</Path>
    <Anchor>AbstractCheckedElementTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractClassTestingTypeFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AbstractClassTestingTypeFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractClassTestingTypeFilter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractClassTestingTypeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AbstractClassTestingTypeFilter.html</Path>
    <Anchor>AbstractClassTestingTypeFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractClientHttpRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractClientHttpRequest()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractClientHttpRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpRequest.html</Path>
    <Anchor>AbstractClientHttpRequest()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractClientHttpRequestFactoryWrapper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpRequestFactoryWrapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractClientHttpRequestFactoryWrapper(ClientHttpRequestFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractClientHttpRequestFactoryWrapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpRequestFactoryWrapper.html</Path>
    <Anchor>AbstractClientHttpRequestFactoryWrapper(org.springframework.http.client.ClientHttpRequestFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractClientHttpResponse</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpResponse.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractClientHttpResponse()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractClientHttpResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpResponse.html</Path>
    <Anchor>AbstractClientHttpResponse()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractColumnMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractColumnMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractColumnMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractColumnMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractColumnMaxValueIncrementer.html</Path>
    <Anchor>AbstractColumnMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractColumnMaxValueIncrementer(DataSource, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractColumnMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractColumnMaxValueIncrementer.html</Path>
    <Anchor>AbstractColumnMaxValueIncrementer(javax.sql.DataSource, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCommandController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCommandController()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
    <Anchor>AbstractCommandController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCommandController(Class)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
    <Anchor>AbstractCommandController(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCommandController(Class, String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractCommandController.html</Path>
    <Anchor>AbstractCommandController(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCommandController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractCommandController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCommandController()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractCommandController.html</Path>
    <Anchor>AbstractCommandController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCommandController(Class)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractCommandController.html</Path>
    <Anchor>AbstractCommandController(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCommandController(Class, String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractCommandController.html</Path>
    <Anchor>AbstractCommandController(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractComponentDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/AbstractComponentDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractComponentDefinition()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/AbstractComponentDefinition.html</Path>
    <Anchor>AbstractComponentDefinition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractConfigurableMBeanInfoAssembler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export.assembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractConfigurableMBeanInfoAssembler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractConfigurableMBeanInfoAssembler()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractConfigurableMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractConfigurableMBeanInfoAssembler.html</Path>
    <Anchor>AbstractConfigurableMBeanInfoAssembler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractContextLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractContextLoader()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractContextLoader.html</Path>
    <Anchor>AbstractContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractContextLoaderInitializer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/AbstractContextLoaderInitializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractContextLoaderInitializer()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractContextLoaderInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/AbstractContextLoaderInitializer.html</Path>
    <Anchor>AbstractContextLoaderInitializer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractController()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractController.html</Path>
    <Anchor>AbstractController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractController()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractController.html</Path>
    <Anchor>AbstractController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractControllerUrlHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractControllerUrlHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractControllerUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html</Path>
    <Anchor>AbstractControllerUrlHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCookieValueMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractCookieValueMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractCookieValueMethodArgumentResolver(ConfigurableBeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractCookieValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractCookieValueMethodArgumentResolver.html</Path>
    <Anchor>AbstractCookieValueMethodArgumentResolver(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDataBoundFormElementTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDataBoundFormElementTag()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>AbstractDataBoundFormElementTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDataFieldMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDataFieldMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDataFieldMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.html</Path>
    <Anchor>AbstractDataFieldMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDataFieldMaxValueIncrementer(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDataFieldMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.html</Path>
    <Anchor>AbstractDataFieldMaxValueIncrementer(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDataSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDataSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDataSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDataSource.html</Path>
    <Anchor>AbstractDataSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDelegatingSmartContextLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDelegatingSmartContextLoader()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDelegatingSmartContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.html</Path>
    <Anchor>AbstractDelegatingSmartContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDependencyInjectionSpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDependencyInjectionSpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>AbstractDependencyInjectionSpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDependencyInjectionSpringContextTests(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>AbstractDependencyInjectionSpringContextTests(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDetectingUrlHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDetectingUrlHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDetectingUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.html</Path>
    <Anchor>AbstractDetectingUrlHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDispatcherServletInitializer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDispatcherServletInitializer()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.html</Path>
    <Anchor>AbstractDispatcherServletInitializer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDriverBasedDataSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDriverBasedDataSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractDriverBasedDataSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractDriverBasedDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/AbstractDriverBasedDataSource.html</Path>
    <Anchor>AbstractDriverBasedDataSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractEnterpriseBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractEnterpriseBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractEnterpriseBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractEnterpriseBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractEnterpriseBean.html</Path>
    <Anchor>AbstractEnterpriseBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractEntityManagerFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractEntityManagerFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>AbstractEntityManagerFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractEnvironment</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractEnvironment()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>AbstractEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractErrors</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractErrors()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>AbstractErrors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractExcelView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.document</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractExcelView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractExcelView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractExcelView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractExcelView.html</Path>
    <Anchor>AbstractExcelView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractExpressionPointcut</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractExpressionPointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractExpressionPointcut()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractExpressionPointcut.html</Path>
    <Anchor>AbstractExpressionPointcut()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
    <Anchor>AbstractFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFallbackCacheOperationSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFallbackCacheOperationSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFallbackCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.html</Path>
    <Anchor>AbstractFallbackCacheOperationSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFallbackSQLExceptionTranslator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/AbstractFallbackSQLExceptionTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFallbackSQLExceptionTranslator()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFallbackSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/AbstractFallbackSQLExceptionTranslator.html</Path>
    <Anchor>AbstractFallbackSQLExceptionTranslator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFallbackTransactionAttributeSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFallbackTransactionAttributeSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFallbackTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.html</Path>
    <Anchor>AbstractFallbackTransactionAttributeSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFeedView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.feed</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractFeedView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFeedView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractFeedView.html</Path>
    <Anchor>AbstractFeedView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFileResolvingResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractFileResolvingResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFileResolvingResource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFileResolvingResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractFileResolvingResource.html</Path>
    <Anchor>AbstractFileResolvingResource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFlashMapManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractFlashMapManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFlashMapManager()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFlashMapManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractFlashMapManager.html</Path>
    <Anchor>AbstractFlashMapManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFormController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFormController()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractFormController.html</Path>
    <Anchor>AbstractFormController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFormController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFormController()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>AbstractFormController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFormTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractFormTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFormTag()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractFormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractFormTag.html</Path>
    <Anchor>AbstractFormTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractGenericContextLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractGenericContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractGenericContextLoader()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractGenericContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractGenericContextLoader.html</Path>
    <Anchor>AbstractGenericContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractGenericLabeledEnum</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.enums</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractGenericLabeledEnum.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractGenericLabeledEnum(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractGenericLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractGenericLabeledEnum.html</Path>
    <Anchor>AbstractGenericLabeledEnum(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractGenericPointcutAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractGenericPointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractGenericPointcutAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractGenericPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractGenericPointcutAdvisor.html</Path>
    <Anchor>AbstractGenericPointcutAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractGenericWebContextLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/AbstractGenericWebContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractGenericWebContextLoader()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractGenericWebContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/AbstractGenericWebContextLoader.html</Path>
    <Anchor>AbstractGenericWebContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>AbstractHandlerExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html</Path>
    <Anchor>AbstractHandlerExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>AbstractHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>AbstractHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMethodAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMethodAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHandlerMethodAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.html</Path>
    <Anchor>AbstractHandlerMethodAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMethodExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMethodExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHandlerMethodExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodExceptionResolver.html</Path>
    <Anchor>AbstractHandlerMethodExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMethodMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHandlerMethodMapping()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>AbstractHandlerMethodMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHtmlElementBodyTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHtmlElementBodyTag()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHtmlElementBodyTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html</Path>
    <Anchor>AbstractHtmlElementBodyTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHtmlElementTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHtmlElementTag()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>AbstractHtmlElementTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHtmlInputElementTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHtmlInputElementTag()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>AbstractHtmlInputElementTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHttpInvokerRequestExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHttpInvokerRequestExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>AbstractHttpInvokerRequestExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>AbstractHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHttpMessageConverter(MediaType)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>AbstractHttpMessageConverter(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractHttpMessageConverter(MediaType...)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>AbstractHttpMessageConverter(org.springframework.http.MediaType...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractInterceptorDrivenBeanDefinitionDecorator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AbstractInterceptorDrivenBeanDefinitionDecorator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractInterceptorDrivenBeanDefinitionDecorator()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractInterceptorDrivenBeanDefinitionDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AbstractInterceptorDrivenBeanDefinitionDecorator.html</Path>
    <Anchor>AbstractInterceptorDrivenBeanDefinitionDecorator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractInterruptibleBatchPreparedStatementSetter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractInterruptibleBatchPreparedStatementSetter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractInterruptibleBatchPreparedStatementSetter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractInterruptibleBatchPreparedStatementSetter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractInterruptibleBatchPreparedStatementSetter.html</Path>
    <Anchor>AbstractInterruptibleBatchPreparedStatementSetter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJasperReportsSingleFormatView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.jasperreports</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJasperReportsSingleFormatView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJasperReportsSingleFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html</Path>
    <Anchor>AbstractJasperReportsSingleFormatView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJasperReportsView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.jasperreports</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJasperReportsView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>AbstractJasperReportsView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJaxb2HttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJaxb2HttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJaxb2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter.html</Path>
    <Anchor>AbstractJaxb2HttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJaxWsServiceExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.jaxws</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJaxWsServiceExporter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>AbstractJaxWsServiceExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJdbcCall</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJdbcCall(DataSource)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>AbstractJdbcCall(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJdbcCall(JdbcTemplate)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>AbstractJdbcCall(org.springframework.jdbc.core.JdbcTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJdbcInsert</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.simple</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJdbcInsert(DataSource)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>AbstractJdbcInsert(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJdbcInsert(JdbcTemplate)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>AbstractJdbcInsert(org.springframework.jdbc.core.JdbcTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJExcelView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.document</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractJExcelView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJExcelView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJExcelView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractJExcelView.html</Path>
    <Anchor>AbstractJExcelView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJmsListeningContainer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJmsListeningContainer()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>AbstractJmsListeningContainer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJmsListeningContainer.SharedConnectionNotInitializedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.SharedConnectionNotInitializedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJmsListeningContainer.SharedConnectionNotInitializedException(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJmsListeningContainer.SharedConnectionNotInitializedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.SharedConnectionNotInitializedException.html</Path>
    <Anchor>AbstractJmsListeningContainer.SharedConnectionNotInitializedException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJmsMessageDrivenBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractJmsMessageDrivenBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJmsMessageDrivenBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJmsMessageDrivenBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractJmsMessageDrivenBean.html</Path>
    <Anchor>AbstractJmsMessageDrivenBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJmxAttribute</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/AbstractJmxAttribute.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJmxAttribute()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJmxAttribute</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/AbstractJmxAttribute.html</Path>
    <Anchor>AbstractJmxAttribute()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJpaTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.jpa</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJpaTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>AbstractJpaTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJpaVendorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.jpa.vendor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJpaVendorAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJpaVendorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html</Path>
    <Anchor>AbstractJpaVendorAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJUnit38SpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit38</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJUnit38SpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html</Path>
    <Anchor>AbstractJUnit38SpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJUnit38SpringContextTests(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html</Path>
    <Anchor>AbstractJUnit38SpringContextTests(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJUnit4SpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractJUnit4SpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests.html</Path>
    <Anchor>AbstractJUnit4SpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLabeledEnum</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.enums</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractLabeledEnum.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLabeledEnum()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractLabeledEnum.html</Path>
    <Anchor>AbstractLabeledEnum()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLazyCreationTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractLazyCreationTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLazyCreationTargetSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLazyCreationTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractLazyCreationTargetSource.html</Path>
    <Anchor>AbstractLazyCreationTargetSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobCreatingPreparedStatementCallback</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobCreatingPreparedStatementCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobCreatingPreparedStatementCallback(LobHandler)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLobCreatingPreparedStatementCallback</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobCreatingPreparedStatementCallback.html</Path>
    <Anchor>AbstractLobCreatingPreparedStatementCallback(org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.lob</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/AbstractLobHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobHandler()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLobHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/AbstractLobHandler.html</Path>
    <Anchor>AbstractLobHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobStreamingResultSetExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobStreamingResultSetExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobStreamingResultSetExtractor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLobStreamingResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractLobStreamingResultSetExtractor.html</Path>
    <Anchor>AbstractLobStreamingResultSetExtractor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobType</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobType()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLobType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
    <Anchor>AbstractLobType()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobType(LobHandler, TransactionManager)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLobType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
    <Anchor>AbstractLobType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobTypeHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.ibatis.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/AbstractLobTypeHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobTypeHandler()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLobTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/AbstractLobTypeHandler.html</Path>
    <Anchor>AbstractLobTypeHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLobTypeHandler(LobHandler)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLobTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/AbstractLobTypeHandler.html</Path>
    <Anchor>AbstractLobTypeHandler(org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLocaleResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.i18n</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/AbstractLocaleResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractLocaleResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/AbstractLocaleResolver.html</Path>
    <Anchor>AbstractLocaleResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMapBasedHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMapBasedHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMapBasedHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html</Path>
    <Anchor>AbstractMapBasedHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMapBasedHandlerMapping.PortletRequestMappingPredicate</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.PortletRequestMappingPredicate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMappingContentNegotiationStrategy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.accept</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMappingContentNegotiationStrategy(Map&amp;lt;String, MediaType&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMappingContentNegotiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.html</Path>
    <Anchor>AbstractMappingContentNegotiationStrategy(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMarshaller</Name>
      <Type>cl</Type>
      <Scope>org.springframework.oxm.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMarshaller()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>AbstractMarshaller()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMBeanInfoAssembler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export.assembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractMBeanInfoAssembler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMBeanInfoAssembler()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractMBeanInfoAssembler.html</Path>
    <Anchor>AbstractMBeanInfoAssembler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageConverterMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageConverterMethodArgumentResolver(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMessageConverterMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.html</Path>
    <Anchor>AbstractMessageConverterMethodArgumentResolver(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageConverterMethodProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageConverterMethodProcessor(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMessageConverterMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.html</Path>
    <Anchor>AbstractMessageConverterMethodProcessor(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageConverterMethodProcessor(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;, ContentNegotiationManager)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMessageConverterMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.html</Path>
    <Anchor>AbstractMessageConverterMethodProcessor(java.util.List, org.springframework.web.accept.ContentNegotiationManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageDrivenBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractMessageDrivenBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageDrivenBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMessageDrivenBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractMessageDrivenBean.html</Path>
    <Anchor>AbstractMessageDrivenBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageEndpointFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.endpoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageEndpointFactory()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
    <Anchor>AbstractMessageEndpointFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageEndpointFactory.AbstractMessageEndpoint</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.endpoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageEndpointFactory.AbstractMessageEndpoint()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMessageEndpointFactory.AbstractMessageEndpoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html</Path>
    <Anchor>AbstractMessageEndpointFactory.AbstractMessageEndpoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageListenerContainer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageListenerContainer()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>AbstractMessageListenerContainer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractMessageSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMessageSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractMessageSource.html</Path>
    <Anchor>AbstractMessageSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractModelAndViewTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/AbstractModelAndViewTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractModelAndViewTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractModelAndViewTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/AbstractModelAndViewTests.html</Path>
    <Anchor>AbstractModelAndViewTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMonitoringInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractMonitoringInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMonitoringInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMonitoringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractMonitoringInterceptor.html</Path>
    <Anchor>AbstractMonitoringInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMultiCheckedElementTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMultiCheckedElementTag()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMultiCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html</Path>
    <Anchor>AbstractMultiCheckedElementTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMultipartHttpServletRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractMultipartHttpServletRequest(HttpServletRequest)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractMultipartHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.html</Path>
    <Anchor>AbstractMultipartHttpServletRequest(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractNamedValueMethodArgumentResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractNamedValueMethodArgumentResolver(ConfigurableBeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractNamedValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.html</Path>
    <Anchor>AbstractNamedValueMethodArgumentResolver(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractNamedValueMethodArgumentResolver.NamedValueInfo</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.NamedValueInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractNamedValueMethodArgumentResolver.NamedValueInfo(String, boolean, String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractNamedValueMethodArgumentResolver.NamedValueInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.NamedValueInfo.html</Path>
    <Anchor>AbstractNamedValueMethodArgumentResolver.NamedValueInfo(java.lang.String, boolean, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractNumberFormatter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.number</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/AbstractNumberFormatter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractNumberFormatter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractNumberFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/AbstractNumberFormatter.html</Path>
    <Anchor>AbstractNumberFormatter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPdfStamperView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.document</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfStamperView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPdfStamperView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPdfStamperView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfStamperView.html</Path>
    <Anchor>AbstractPdfStamperView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPdfView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.document</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPdfView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPdfView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/document/AbstractPdfView.html</Path>
    <Anchor>AbstractPdfView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPlatformTransactionManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPlatformTransactionManager()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>AbstractPlatformTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPlatformTransactionManager.SuspendedResourcesHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.SuspendedResourcesHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPointcutAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractPointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPointcutAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractPointcutAdvisor.html</Path>
    <Anchor>AbstractPointcutAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPollingMessageListenerContainer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.listener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPollingMessageListenerContainer()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>AbstractPollingMessageListenerContainer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPoolingTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPoolingTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPoolingTargetSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPoolingTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPoolingTargetSource.html</Path>
    <Anchor>AbstractPoolingTargetSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPropertyAccessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPropertyAccessor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/AbstractPropertyAccessor.html</Path>
    <Anchor>AbstractPropertyAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPropertyBindingResult</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractPropertyBindingResult.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPropertyBindingResult(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPropertyBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractPropertyBindingResult.html</Path>
    <Anchor>AbstractPropertyBindingResult(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPropertyResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPropertyResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>AbstractPropertyResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPrototypeBasedTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractPrototypeBasedTargetSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractPrototypeBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.html</Path>
    <Anchor>AbstractPrototypeBasedTargetSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractReflectiveMBeanInfoAssembler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export.assembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractReflectiveMBeanInfoAssembler()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>AbstractReflectiveMBeanInfoAssembler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>AbstractRefreshableApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableApplicationContext(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>AbstractRefreshableApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableConfigApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableConfigApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRefreshableConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html</Path>
    <Anchor>AbstractRefreshableConfigApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableConfigApplicationContext(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRefreshableConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html</Path>
    <Anchor>AbstractRefreshableConfigApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshablePortletApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshablePortletApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRefreshablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html</Path>
    <Anchor>AbstractRefreshablePortletApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target.dynamic</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableTargetSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRefreshableTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html</Path>
    <Anchor>AbstractRefreshableTargetSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableWebApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRefreshableWebApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRefreshableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.html</Path>
    <Anchor>AbstractRefreshableWebApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRegexpMethodPointcut</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRegexpMethodPointcut()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRegexpMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AbstractRegexpMethodPointcut.html</Path>
    <Anchor>AbstractRegexpMethodPointcut()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRemoteSlsbInvokerInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRemoteSlsbInvokerInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRemoteSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html</Path>
    <Anchor>AbstractRemoteSlsbInvokerInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRequestAttributes</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRequestAttributes()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRequestAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributes.html</Path>
    <Anchor>AbstractRequestAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRequestAttributesScope</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributesScope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRequestAttributesScope()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRequestAttributesScope</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AbstractRequestAttributesScope.html</Path>
    <Anchor>AbstractRequestAttributesScope()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRequestCondition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/AbstractRequestCondition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRequestCondition()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/AbstractRequestCondition.html</Path>
    <Anchor>AbstractRequestCondition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRequestLoggingFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRequestLoggingFilter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>AbstractRequestLoggingFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractResource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractResource.html</Path>
    <Anchor>AbstractResource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRoutingDataSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.lookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRoutingDataSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>AbstractRoutingDataSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRssFeedView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.feed</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractRssFeedView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractRssFeedView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractRssFeedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/feed/AbstractRssFeedView.html</Path>
    <Anchor>AbstractRssFeedView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSequenceMaxValueIncrementer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.incrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractSequenceMaxValueIncrementer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSequenceMaxValueIncrementer()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractSequenceMaxValueIncrementer.html</Path>
    <Anchor>AbstractSequenceMaxValueIncrementer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSequenceMaxValueIncrementer(DataSource, String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSequenceMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractSequenceMaxValueIncrementer.html</Path>
    <Anchor>AbstractSequenceMaxValueIncrementer(javax.sql.DataSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractServiceLoaderBasedFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.serviceloader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/AbstractServiceLoaderBasedFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractServiceLoaderBasedFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractServiceLoaderBasedFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/AbstractServiceLoaderBasedFactoryBean.html</Path>
    <Anchor>AbstractServiceLoaderBasedFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSessionBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractSessionBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSessionBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSessionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractSessionBean.html</Path>
    <Anchor>AbstractSessionBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSessionFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSessionFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>AbstractSessionFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSimpleBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSimpleBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSimpleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html</Path>
    <Anchor>AbstractSimpleBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSingleBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSingleBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSingleBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSingleBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/AbstractSingleBeanDefinitionParser.html</Path>
    <Anchor>AbstractSingleBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSingleCheckedElementTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractSingleCheckedElementTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSingleCheckedElementTag()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSingleCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractSingleCheckedElementTag.html</Path>
    <Anchor>AbstractSingleCheckedElementTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSingleSpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSingleSpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>AbstractSingleSpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSingleSpringContextTests(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>AbstractSingleSpringContextTests(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSingletonProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSingletonProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>AbstractSingletonProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSlsbInvokerInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSlsbInvokerInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>AbstractSlsbInvokerInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSpringContextTests.html</Path>
    <Anchor>AbstractSpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSpringContextTests(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSpringContextTests.html</Path>
    <Anchor>AbstractSpringContextTests(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSpringPreparerFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles2</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/AbstractSpringPreparerFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSpringPreparerFactory()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSpringPreparerFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/AbstractSpringPreparerFactory.html</Path>
    <Anchor>AbstractSpringPreparerFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSpringPreparerFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles3</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/AbstractSpringPreparerFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSpringPreparerFactory()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSpringPreparerFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/AbstractSpringPreparerFactory.html</Path>
    <Anchor>AbstractSpringPreparerFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSqlParameterSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.namedparam</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSqlParameterSource()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.html</Path>
    <Anchor>AbstractSqlParameterSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSqlTypeValue</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractSqlTypeValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSqlTypeValue()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractSqlTypeValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractSqlTypeValue.html</Path>
    <Anchor>AbstractSqlTypeValue()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractStatefulSessionBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractStatefulSessionBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractStatefulSessionBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractStatefulSessionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractStatefulSessionBean.html</Path>
    <Anchor>AbstractStatefulSessionBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractStatelessSessionBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ejb.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractStatelessSessionBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractStatelessSessionBean()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractStatelessSessionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/support/AbstractStatelessSessionBean.html</Path>
    <Anchor>AbstractStatelessSessionBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTemplateView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTemplateView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>AbstractTemplateView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTemplateViewResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateViewResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTemplateViewResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTemplateViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateViewResolver.html</Path>
    <Anchor>AbstractTemplateViewResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTestExecutionListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractTestExecutionListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTestExecutionListener()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractTestExecutionListener.html</Path>
    <Anchor>AbstractTestExecutionListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTestNGSpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.testng</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTestNGSpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
    <Anchor>AbstractTestNGSpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractThemeResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.theme</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/AbstractThemeResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractThemeResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/AbstractThemeResolver.html</Path>
    <Anchor>AbstractThemeResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTraceInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTraceInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractTraceInterceptor.html</Path>
    <Anchor>AbstractTraceInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalDataSourceSpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalDataSourceSpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionalDataSourceSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html</Path>
    <Anchor>AbstractTransactionalDataSourceSpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalDataSourceSpringContextTests(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionalDataSourceSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html</Path>
    <Anchor>AbstractTransactionalDataSourceSpringContextTests(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalJUnit38SpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit38</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalJUnit38SpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionalJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html</Path>
    <Anchor>AbstractTransactionalJUnit38SpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalJUnit38SpringContextTests(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionalJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html</Path>
    <Anchor>AbstractTransactionalJUnit38SpringContextTests(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalJUnit4SpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.junit4</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalJUnit4SpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionalJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
    <Anchor>AbstractTransactionalJUnit4SpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalSpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalSpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>AbstractTransactionalSpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalSpringContextTests(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionalSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalSpringContextTests.html</Path>
    <Anchor>AbstractTransactionalSpringContextTests(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalTestNGSpringContextTests</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.testng</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionalTestNGSpringContextTests()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionalTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
    <Anchor>AbstractTransactionalTestNGSpringContextTests()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionManagementConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionManagementConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionManagementConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration.html</Path>
    <Anchor>AbstractTransactionManagementConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionStatus</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionStatus()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>AbstractTransactionStatus()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionSupportingCacheManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/AbstractTransactionSupportingCacheManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTransactionSupportingCacheManager()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTransactionSupportingCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/AbstractTransactionSupportingCacheManager.html</Path>
    <Anchor>AbstractTransactionSupportingCacheManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTypeHierarchyTraversingFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractTypeHierarchyTraversingFilter(boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractTypeHierarchyTraversingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter.html</Path>
    <Anchor>AbstractTypeHierarchyTraversingFilter(boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractUrlBasedView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractUrlBasedView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractUrlBasedView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractUrlBasedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractUrlBasedView.html</Path>
    <Anchor>AbstractUrlBasedView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractUrlBasedView(String)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractUrlBasedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractUrlBasedView.html</Path>
    <Anchor>AbstractUrlBasedView(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractUrlHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractUrlHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractUrlHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html</Path>
    <Anchor>AbstractUrlHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractUrlMethodNameResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.multiaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/AbstractUrlMethodNameResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractUrlMethodNameResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractUrlMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/AbstractUrlMethodNameResolver.html</Path>
    <Anchor>AbstractUrlMethodNameResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractUrlViewController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractUrlViewController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractUrlViewController()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractUrlViewController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractUrlViewController.html</Path>
    <Anchor>AbstractUrlViewController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>AbstractView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractWebArgumentResolverAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractWebArgumentResolverAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractWebArgumentResolverAdapter(WebArgumentResolver)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractWebArgumentResolverAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractWebArgumentResolverAdapter.html</Path>
    <Anchor>AbstractWebArgumentResolverAdapter(org.springframework.web.bind.support.WebArgumentResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractWireFeedHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter.feed</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/AbstractWireFeedHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractWireFeedHttpMessageConverter(MediaType)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractWireFeedHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/AbstractWireFeedHttpMessageConverter.html</Path>
    <Anchor>AbstractWireFeedHttpMessageConverter(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractWizardFormController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractWizardFormController()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>AbstractWizardFormController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractWizardFormController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractWizardFormController()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractWizardFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractWizardFormController.html</Path>
    <Anchor>AbstractWizardFormController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractXmlApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractXmlApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractXmlApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractXmlApplicationContext.html</Path>
    <Anchor>AbstractXmlApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractXmlApplicationContext(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>AbstractXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractXmlApplicationContext.html</Path>
    <Anchor>AbstractXmlApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractXmlHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter.xml</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractXmlHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractXmlHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html</Path>
    <Anchor>AbstractXmlHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractXsltView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.xslt</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractXsltView()</Name>
      <Type>Constructor</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>AbstractXsltView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept(MediaType...)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>accept(org.springframework.http.MediaType...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceptClassLoader(ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>CachedIntrospectionResults</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/CachedIntrospectionResults.html</Path>
    <Anchor>acceptClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AcceptHeaderLocaleResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.i18n</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AcceptHeaderLocaleResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AcceptHeaderLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.html</Path>
    <Anchor>AcceptHeaderLocaleResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceptsProfiles(String...)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>acceptsProfiles(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceptsProfiles(String...)</Name>
      <Type>intfm</Type>
      <Scope>Environment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/Environment.html</Path>
    <Anchor>acceptsProfiles(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>access()</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>access()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>access()</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>access()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/AccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AccessException(String, Exception)</Name>
      <Type>Constructor</Type>
      <Scope>AccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/AccessException.html</Path>
    <Anchor>AccessException(java.lang.String, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AccessException(String)</Name>
      <Type>Constructor</Type>
      <Scope>AccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/AccessException.html</Path>
    <Anchor>AccessException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ACCESSKEY_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AbstractHtmlInputElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html</Path>
    <Anchor>ACCESSKEY_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ACTION_EXCEPTION_RENDER_PARAMETER</Name>
      <Type>Field</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>ACTION_EXCEPTION_RENDER_PARAMETER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ACTION_EXCEPTION_SESSION_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>ACTION_EXCEPTION_SESSION_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ActionMapping</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.portlet.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/annotation/ActionMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ActionSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ActionSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ActionSupport()</Name>
      <Type>Constructor</Type>
      <Scope>ActionSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ActionSupport.html</Path>
    <Anchor>ActionSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activate()</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContextBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContextBuilder.html</Path>
    <Anchor>activate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activated(AdvisedSupport)</Name>
      <Type>intfm</Type>
      <Scope>AdvisedSupportListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupportListener.html</Path>
    <Anchor>activated(org.springframework.aop.framework.AdvisedSupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateObject(Object)</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>activateObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ACTIVE_PROFILES_PROPERTY_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>ACTIVE_PROFILES_PROPERTY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ActiveProfiles</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ActiveProfiles.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdaptableJobFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/AdaptableJobFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdaptableJobFactory()</Name>
      <Type>Constructor</Type>
      <Scope>AdaptableJobFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/AdaptableJobFactory.html</Path>
    <Anchor>AdaptableJobFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adaptInterceptor(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>adaptInterceptor(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adaptInterceptor(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMapping.html</Path>
    <Anchor>adaptInterceptor(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adaptJob(Object)</Name>
      <Type>instm</Type>
      <Scope>AdaptableJobFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/AdaptableJobFactory.html</Path>
    <Anchor>adaptJob(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adaptMBeanIfPossible(Object)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>adaptMBeanIfPossible(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>add(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add(String, String)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>add(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add(int, E)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>add(int, E)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add(E)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>add(E)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add(Iterator&amp;lt;E&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CompositeIterator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CompositeIterator.html</Path>
    <Anchor>add(java.util.Iterator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add(K, V)</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>add(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add(K, V)</Name>
      <Type>intfm</Type>
      <Scope>MultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/MultiValueMap.html</Path>
    <Anchor>add(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addActiveProfile(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>addActiveProfile(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addActiveProfile(String)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurableEnvironment.html</Path>
    <Anchor>addActiveProfile(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvice(Advice)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>addAdvice(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvice(int, Advice)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>addAdvice(int, org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvice(Advice)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>addAdvice(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvice(int, Advice)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>addAdvice(int, org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvisor(Advisor)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>addAdvisor(org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvisor(int, Advisor)</Name>
      <Type>intfm</Type>
      <Scope>Advised</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
    <Anchor>addAdvisor(int, org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvisor(Advisor)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>addAdvisor(org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvisor(int, Advisor)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>addAdvisor(int, org.springframework.aop.Advisor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvisors(Advisor...)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>addAdvisors(org.springframework.aop.Advisor...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAdvisors(Collection&amp;lt;Advisor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>addAdvisors(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAfter(String, PropertySource&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>addAfter(java.lang.String, org.springframework.core.env.PropertySource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAll(Collection&amp;lt;? extends E&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>addAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAll(int, Collection&amp;lt;? extends E&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>addAll(int, java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAdvisors(Advisor[])</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>addAllAdvisors(org.springframework.aop.Advisor[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Collection&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ExtendedModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ExtendedModelMap.html</Path>
    <Anchor>addAllAttributes(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ExtendedModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ExtendedModelMap.html</Path>
    <Anchor>addAllAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Collection&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>Model</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/Model.html</Path>
    <Anchor>addAllAttributes(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>Model</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/Model.html</Path>
    <Anchor>addAllAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Collection&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ModelMap.html</Path>
    <Anchor>addAllAttributes(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ModelMap.html</Path>
    <Anchor>addAllAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>addAllAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Collection&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>RedirectAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributes.html</Path>
    <Anchor>addAllAttributes(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Collection&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>addAllAttributes(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllAttributes(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>addAllAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllErrors(Errors)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>addAllErrors(org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllErrors(Errors)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>addAllErrors(org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllErrors(Errors)</Name>
      <Type>intfm</Type>
      <Scope>Errors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/Errors.html</Path>
    <Anchor>addAllErrors(org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllErrors(Errors)</Name>
      <Type>instm</Type>
      <Scope>EscapedErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/EscapedErrors.html</Path>
    <Anchor>addAllErrors(org.springframework.validation.Errors)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllObjects(Collection)</Name>
      <Type>instm</Type>
      <Scope>ModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ModelMap.html</Path>
    <Anchor>addAllObjects(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllObjects(Map)</Name>
      <Type>instm</Type>
      <Scope>ModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ModelMap.html</Path>
    <Anchor>addAllObjects(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllObjects(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>addAllObjects(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAllObjects(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>addAllObjects(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAnnotatedClasses(Class&amp;lt;?&amp;gt;...)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.html</Path>
    <Anchor>addAnnotatedClasses(java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addApplicationListener(ApplicationListener&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>addApplicationListener(org.springframework.context.ApplicationListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addApplicationListener(ApplicationListener)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/AbstractApplicationEventMulticaster.html</Path>
    <Anchor>addApplicationListener(org.springframework.context.ApplicationListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addApplicationListener(ApplicationListener)</Name>
      <Type>intfm</Type>
      <Scope>ApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ApplicationEventMulticaster.html</Path>
    <Anchor>addApplicationListener(org.springframework.context.ApplicationListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addApplicationListener(ApplicationListener&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>addApplicationListener(org.springframework.context.ApplicationListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addApplicationListenerBean(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/AbstractApplicationEventMulticaster.html</Path>
    <Anchor>addApplicationListenerBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addApplicationListenerBean(String)</Name>
      <Type>intfm</Type>
      <Scope>ApplicationEventMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ApplicationEventMulticaster.html</Path>
    <Anchor>addApplicationListenerBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addArgumentResolvers(List&amp;lt;HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>addArgumentResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addArgumentResolvers(List&amp;lt;HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>addArgumentResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addArgumentResolvers(List&amp;lt;HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>addArgumentResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addArgumentResolvers(List&amp;lt;HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>addArgumentResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addArgumentValues(ConstructorArgumentValues)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAspect(Object)</Name>
      <Type>instm</Type>
      <Scope>AspectJProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.html</Path>
    <Anchor>addAspect(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAspect(Class)</Name>
      <Type>instm</Type>
      <Scope>AspectJProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.html</Path>
    <Anchor>addAspect(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttachment(String, DataSource)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addAttachment(java.lang.String, javax.activation.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttachment(String, File)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addAttachment(java.lang.String, java.io.File)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttachment(String, InputStreamSource)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addAttachment(java.lang.String, org.springframework.core.io.InputStreamSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttachment(String, InputStreamSource, String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addAttachment(java.lang.String, org.springframework.core.io.InputStreamSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttachment(String, DataHandler)</Name>
      <Type>intfm</Type>
      <Scope>MimeContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/mime/MimeContainer.html</Path>
    <Anchor>addAttachment(java.lang.String, javax.activation.DataHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(String, Serializable)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocation.html</Path>
    <Anchor>addAttribute(java.lang.String, java.io.Serializable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ExtendedModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ExtendedModelMap.html</Path>
    <Anchor>addAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(Object)</Name>
      <Type>instm</Type>
      <Scope>ExtendedModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ExtendedModelMap.html</Path>
    <Anchor>addAttribute(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>Model</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/Model.html</Path>
    <Anchor>addAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(Object)</Name>
      <Type>intfm</Type>
      <Scope>Model</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/Model.html</Path>
    <Anchor>addAttribute(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ModelMap.html</Path>
    <Anchor>addAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(Object)</Name>
      <Type>instm</Type>
      <Scope>ModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ModelMap.html</Path>
    <Anchor>addAttribute(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>addAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(Object)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>addAttribute(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>RedirectAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributes.html</Path>
    <Anchor>addAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(Object)</Name>
      <Type>intfm</Type>
      <Scope>RedirectAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributes.html</Path>
    <Anchor>addAttribute(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>addAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute(Object)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>addAttribute(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBcc(InternetAddress)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addBcc(javax.mail.internet.InternetAddress)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBcc(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addBcc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBcc(String, String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addBcc(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBean(String, Object)</Name>
      <Type>instm</Type>
      <Scope>StaticListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/StaticListableBeanFactory.html</Path>
    <Anchor>addBean(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBeanFactoryPostProcessor(BeanFactoryPostProcessor)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>addBeanFactoryPostProcessor(org.springframework.beans.factory.config.BeanFactoryPostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBeanFactoryPostProcessor(BeanFactoryPostProcessor)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>addBeanFactoryPostProcessor(org.springframework.beans.factory.config.BeanFactoryPostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBeanPostProcessor(BeanPostProcessor)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBeanPostProcessor(BeanPostProcessor)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBefore(String, PropertySource&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>addBefore(java.lang.String, org.springframework.core.env.PropertySource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBindValues(MutablePropertyValues, ServletRequest)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestDataBinder.html</Path>
    <Anchor>addBindValues(org.springframework.beans.MutablePropertyValues, javax.servlet.ServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBindValues(MutablePropertyValues, ServletRequest)</Name>
      <Type>instm</Type>
      <Scope>ExtendedServletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExtendedServletRequestDataBinder.html</Path>
    <Anchor>addBindValues(org.springframework.beans.MutablePropertyValues, javax.servlet.ServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCache(Cache)</Name>
      <Type>instm</Type>
      <Scope>AbstractCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/AbstractCacheManager.html</Path>
    <Anchor>addCache(org.springframework.cache.Cache)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCacheMethod(String, Collection&amp;lt;CacheOperation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>NameMatchCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/NameMatchCacheOperationSource.html</Path>
    <Anchor>addCacheMethod(java.lang.String, java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCc(InternetAddress)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addCc(javax.mail.internet.InternetAddress)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCc(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addCc(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCc(String, String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addCc(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addComparator(Comparator&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>addComparator(java.util.Comparator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addComparator(Comparator&amp;lt;T&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>addComparator(java.util.Comparator, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCompletionHandler(Runnable)</Name>
      <Type>intfm</Type>
      <Scope>AsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/AsyncWebRequest.html</Path>
    <Anchor>addCompletionHandler(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCompletionHandler(Runnable)</Name>
      <Type>instm</Type>
      <Scope>NoSupportAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/NoSupportAsyncWebRequest.html</Path>
    <Anchor>addCompletionHandler(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCompletionHandler(Runnable)</Name>
      <Type>instm</Type>
      <Scope>StandardServletAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.html</Path>
    <Anchor>addCompletionHandler(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>JmsResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsResourceHolder.html</Path>
    <Anchor>addConnection(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConstructorArg(Object)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>addConstructorArg(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConstructorArgReference(String)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>addConstructorArgReference(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConstructorArgValue(Object)</Name>
      <Type>Constructor</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>addConstructorArgValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConstructorResolver(ConstructorResolver)</Name>
      <Type>Constructor</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>addConstructorResolver(org.springframework.expression.ConstructorResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContainerRuntimeOption(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletConfig.html</Path>
    <Anchor>addContainerRuntimeOption(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContainerRuntimeOption(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockPortletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletConfig.html</Path>
    <Anchor>addContainerRuntimeOption(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContainerRuntimeOption(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletContext.html</Path>
    <Anchor>addContainerRuntimeOption(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContext(Object, ConfigurableApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSpringContextTests.html</Path>
    <Anchor>addContext(java.lang.Object, org.springframework.context.ConfigurableApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConverter(Converter&amp;lt;?, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConverterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConverterRegistry.html</Path>
    <Anchor>addConverter(org.springframework.core.convert.converter.Converter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConverter(Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;, Converter&amp;lt;?, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConverterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConverterRegistry.html</Path>
    <Anchor>addConverter(java.lang.Class, java.lang.Class, org.springframework.core.convert.converter.Converter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConverter(GenericConverter)</Name>
      <Type>intfm</Type>
      <Scope>ConverterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConverterRegistry.html</Path>
    <Anchor>addConverter(org.springframework.core.convert.converter.GenericConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConverter(Converter&amp;lt;?, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>addConverter(org.springframework.core.convert.converter.Converter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConverter(Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;, Converter&amp;lt;?, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>addConverter(java.lang.Class, java.lang.Class, org.springframework.core.convert.converter.Converter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConverter(GenericConverter)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>addConverter(org.springframework.core.convert.converter.GenericConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConverterFactory(ConverterFactory&amp;lt;?, ?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConverterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConverterRegistry.html</Path>
    <Anchor>addConverterFactory(org.springframework.core.convert.converter.ConverterFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConverterFactory(ConverterFactory&amp;lt;?, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>addConverterFactory(org.springframework.core.convert.converter.ConverterFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCookie(Cookie)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>addCookie(javax.servlet.http.Cookie)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCookie(HttpServletResponse, String)</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>addCookie(javax.servlet.http.HttpServletResponse, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCronTask(Runnable, String)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>addCronTask(java.lang.Runnable, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCronTask(CronTask)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>addCronTask(org.springframework.scheduling.config.CronTask)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCustomProperty(String, Object)</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>addCustomProperty(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCustomProperty(String, Object)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>addCustomProperty(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDataSource(String, DataSource)</Name>
      <Type>instm</Type>
      <Scope>MapDataSourceLookup</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/MapDataSourceLookup.html</Path>
    <Anchor>addDataSource(java.lang.String, javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDateConverters(ConverterRegistry)</Name>
      <Type>clm</Type>
      <Scope>DateFormatterRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/DateFormatterRegistrar.html</Path>
    <Anchor>addDateConverters(org.springframework.core.convert.converter.ConverterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDateHeader(String, long)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>addDateHeader(java.lang.String, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDeclaredParameter(SqlParameter)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>addDeclaredParameter(org.springframework.jdbc.core.SqlParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDeclaredRowMapper(String, RowMapper)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>addDeclaredRowMapper(java.lang.String, org.springframework.jdbc.core.RowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDeclaredRowMapper(String, ParameterizedRowMapper)</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>addDeclaredRowMapper(java.lang.String, org.springframework.jdbc.core.simple.ParameterizedRowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDefaultConverters(GenericConversionService)</Name>
      <Type>clm</Type>
      <Scope>ConversionServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/ConversionServiceFactory.html</Path>
    <Anchor>addDefaultConverters(org.springframework.core.convert.support.GenericConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDefaultConverters(ConverterRegistry)</Name>
      <Type>clm</Type>
      <Scope>DefaultConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/DefaultConversionService.html</Path>
    <Anchor>addDefaultConverters(org.springframework.core.convert.converter.ConverterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDefaultFormatters(FormatterRegistry)</Name>
      <Type>clm</Type>
      <Scope>DefaultFormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/DefaultFormattingConversionService.html</Path>
    <Anchor>addDefaultFormatters(org.springframework.format.FormatterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDefaultHandlerExceptionResolvers(List&amp;lt;HandlerExceptionResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>addDefaultHandlerExceptionResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDefaultHttpMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>addDefaultHttpMessageConverters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDefaultScripts()</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html</Path>
    <Anchor>addDefaultScripts()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDelegate(PersistenceExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>ChainedPersistenceExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/ChainedPersistenceExceptionTranslator.html</Path>
    <Anchor>addDelegate(org.springframework.dao.support.PersistenceExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDelegate(ExceptionListener)</Name>
      <Type>instm</Type>
      <Scope>ChainedExceptionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ChainedExceptionListener.html</Path>
    <Anchor>addDelegate(javax.jms.ExceptionListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDependsOn(String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>addDependsOn(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDiscoverer(ParameterNameDiscoverer)</Name>
      <Type>instm</Type>
      <Scope>PrioritizedParameterNameDiscoverer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/PrioritizedParameterNameDiscoverer.html</Path>
    <Anchor>addDiscoverer(org.springframework.core.ParameterNameDiscoverer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>addEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addEmbeddedValueResolver(StringValueResolver)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>addEmbeddedValueResolver(org.springframework.util.StringValueResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addError(ObjectError)</Name>
      <Type>instm</Type>
      <Scope>AbstractBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractBindingResult.html</Path>
    <Anchor>addError(org.springframework.validation.ObjectError)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addError(ObjectError)</Name>
      <Type>clm</Type>
      <Scope>BindException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindException.html</Path>
    <Anchor>addError(org.springframework.validation.ObjectError)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addError(ObjectError)</Name>
      <Type>intfm</Type>
      <Scope>BindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BindingResult.html</Path>
    <Anchor>addError(org.springframework.validation.ObjectError)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addExcludeFilter(TypeFilter)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>addExcludeFilter(org.springframework.core.type.filter.TypeFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFile(MultipartFile)</Name>
      <Type>instm</Type>
      <Scope>MockMultipartHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockMultipartHttpServletRequest.html</Path>
    <Anchor>addFile(org.springframework.web.multipart.MultipartFile)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFile(MultipartFile)</Name>
      <Type>instm</Type>
      <Scope>MockMultipartActionRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMultipartActionRequest.html</Path>
    <Anchor>addFile(org.springframework.web.multipart.MultipartFile)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFileExtensionResolvers(MediaTypeFileExtensionResolver...)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManager.html</Path>
    <Anchor>addFileExtensionResolvers(org.springframework.web.accept.MediaTypeFileExtensionResolver...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFilter(Filter, String...)</Name>
      <Type>instm</Type>
      <Scope>DefaultMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
    <Anchor>addFilter(javax.servlet.Filter, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFilters(Filter...)</Name>
      <Type>instm</Type>
      <Scope>DefaultMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
    <Anchor>addFilters(javax.servlet.Filter...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFirst(PropertySource&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>addFirst(org.springframework.core.env.PropertySource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFixedDelayTask(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>addFixedDelayTask(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFixedDelayTask(IntervalTask)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>addFixedDelayTask(org.springframework.scheduling.config.IntervalTask)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFixedRateTask(Runnable, long)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>addFixedRateTask(java.lang.Runnable, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFixedRateTask(IntervalTask)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>addFixedRateTask(org.springframework.scheduling.config.IntervalTask)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFlashAttribute(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>RedirectAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributes.html</Path>
    <Anchor>addFlashAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFlashAttribute(Object)</Name>
      <Type>intfm</Type>
      <Scope>RedirectAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributes.html</Path>
    <Anchor>addFlashAttribute(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFlashAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>addFlashAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFlashAttribute(Object)</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>addFlashAttribute(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatter(Formatter&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>FormatterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/FormatterRegistry.html</Path>
    <Anchor>addFormatter(org.springframework.format.Formatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatter(Formatter&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionService.html</Path>
    <Anchor>addFormatter(org.springframework.format.Formatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatterForFieldAnnotation(AnnotationFormatterFactory&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>FormatterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/FormatterRegistry.html</Path>
    <Anchor>addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatterForFieldAnnotation(AnnotationFormatterFactory)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionService.html</Path>
    <Anchor>addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatterForFieldType(Class&amp;lt;?&amp;gt;, Formatter&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>FormatterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/FormatterRegistry.html</Path>
    <Anchor>addFormatterForFieldType(java.lang.Class, org.springframework.format.Formatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatterForFieldType(Class&amp;lt;?&amp;gt;, Printer&amp;lt;?&amp;gt;, Parser&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>FormatterRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/FormatterRegistry.html</Path>
    <Anchor>addFormatterForFieldType(java.lang.Class, org.springframework.format.Printer, org.springframework.format.Parser)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatterForFieldType(Class&amp;lt;?&amp;gt;, Formatter&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionService.html</Path>
    <Anchor>addFormatterForFieldType(java.lang.Class, org.springframework.format.Formatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatterForFieldType(Class&amp;lt;?&amp;gt;, Printer&amp;lt;?&amp;gt;, Parser&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionService.html</Path>
    <Anchor>addFormatterForFieldType(java.lang.Class, org.springframework.format.Printer, org.springframework.format.Parser)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatters(FormatterRegistry)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>addFormatters(org.springframework.format.FormatterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatters(FormatterRegistry)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>addFormatters(org.springframework.format.FormatterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatters(FormatterRegistry)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>addFormatters(org.springframework.format.FormatterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFormatters(FormatterRegistry)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>addFormatters(org.springframework.format.FormatterRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addGenericArgumentValue(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>addGenericArgumentValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addGenericArgumentValue(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>addGenericArgumentValue(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addGenericArgumentValue(ConstructorArgumentValues.ValueHolder)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>addGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues.ValueHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHandler(HandlerMethodReturnValueHandler)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodReturnValueHandlerComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.html</Path>
    <Anchor>addHandler(org.springframework.web.method.support.HandlerMethodReturnValueHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHandlers(List&amp;lt;? extends HandlerMethodReturnValueHandler&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodReturnValueHandlerComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.html</Path>
    <Anchor>addHandlers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHeader(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>addHeader(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHeader(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>addHeader(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIncludedUrl(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>addIncludedUrl(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIncludeFilter(TypeFilter)</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>addIncludeFilter(org.springframework.core.type.filter.TypeFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIndexedArgumentValue(int, Object)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>addIndexedArgumentValue(int, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIndexedArgumentValue(int, Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>addIndexedArgumentValue(int, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIndexedArgumentValue(int, ConstructorArgumentValues.ValueHolder)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>addIndexedArgumentValue(int, org.springframework.beans.factory.config.ConstructorArgumentValues.ValueHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInitParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockFilterConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockFilterConfig.html</Path>
    <Anchor>addInitParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInitParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockServletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletConfig.html</Path>
    <Anchor>addInitParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInitParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockServletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockServletContext.html</Path>
    <Anchor>addInitParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInitParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletConfig.html</Path>
    <Anchor>addInitParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInitParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletContext.html</Path>
    <Anchor>addInitParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInline(String, DataSource)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addInline(java.lang.String, javax.activation.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInline(String, File)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addInline(java.lang.String, java.io.File)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInline(String, Resource)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addInline(java.lang.String, org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInline(String, InputStreamSource, String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addInline(java.lang.String, org.springframework.core.io.InputStreamSource, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptor(HandlerInterceptor)</Name>
      <Type>instm</Type>
      <Scope>HandlerExecutionChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerExecutionChain.html</Path>
    <Anchor>addInterceptor(org.springframework.web.portlet.HandlerInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptor(HandlerInterceptor)</Name>
      <Type>instm</Type>
      <Scope>InterceptorRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/InterceptorRegistry.html</Path>
    <Anchor>addInterceptor(org.springframework.web.servlet.HandlerInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptor(HandlerInterceptor)</Name>
      <Type>instm</Type>
      <Scope>HandlerExecutionChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerExecutionChain.html</Path>
    <Anchor>addInterceptor(org.springframework.web.servlet.HandlerInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptors(HandlerInterceptor...)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>addInterceptors(org.springframework.web.servlet.HandlerInterceptor...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptors(HandlerInterceptor[])</Name>
      <Type>instm</Type>
      <Scope>HandlerExecutionChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerExecutionChain.html</Path>
    <Anchor>addInterceptors(org.springframework.web.portlet.HandlerInterceptor[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptors(InterceptorRegistry)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptors(InterceptorRegistry)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptors(InterceptorRegistry)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptors(InterceptorRegistry)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterceptors(HandlerInterceptor[])</Name>
      <Type>instm</Type>
      <Scope>HandlerExecutionChain</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerExecutionChain.html</Path>
    <Anchor>addInterceptors(org.springframework.web.servlet.HandlerInterceptor[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>addInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInterface(Class)</Name>
      <Type>instm</Type>
      <Scope>DefaultIntroductionAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/DefaultIntroductionAdvisor.html</Path>
    <Anchor>addInterface(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIntHeader(String, int)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>addIntHeader(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addJarFileUrl(URL)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>addJarFileUrl(java.net.URL)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLast(PropertySource&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>addLast(org.springframework.core.env.PropertySource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener(AdvisedSupportListener)</Name>
      <Type>instm</Type>
      <Scope>ProxyCreatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyCreatorSupport.html</Path>
    <Anchor>addListener(org.springframework.aop.framework.AdvisedSupportListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener(ApplicationListener&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>addListener(org.springframework.context.ApplicationListener)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLocale(Locale)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>addLocale(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addManagedClassName(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>addManagedClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMappedInterceptors(String[], HandlerInterceptor...)</Name>
      <Type>instm</Type>
      <Scope>StandaloneMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.html</Path>
    <Anchor>addMappedInterceptors(java.lang.String[], org.springframework.web.servlet.HandlerInterceptor...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMapping(String, MediaType)</Name>
      <Type>instm</Type>
      <Scope>MappingMediaTypeFileExtensionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.html</Path>
    <Anchor>addMapping(java.lang.String, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMappingFileName(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>addMappingFileName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMediaType(String, MediaType)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>addMediaType(java.lang.String, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMediaTypes(Map&amp;lt;String, MediaType&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>addMediaTypes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMessage(String, Locale, String)</Name>
      <Type>instm</Type>
      <Scope>StaticApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticApplicationContext.html</Path>
    <Anchor>addMessage(java.lang.String, java.util.Locale, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMessage(String, Locale, String)</Name>
      <Type>instm</Type>
      <Scope>StaticMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticMessageSource.html</Path>
    <Anchor>addMessage(java.lang.String, java.util.Locale, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMessages(Map&amp;lt;String, String&amp;gt;, Locale)</Name>
      <Type>instm</Type>
      <Scope>StaticMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/StaticMessageSource.html</Path>
    <Anchor>addMessages(java.util.Map, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMetadataAttribute(BeanMetadataAttribute)</Name>
      <Type>instm</Type>
      <Scope>BeanMetadataAttributeAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanMetadataAttributeAccessor.html</Path>
    <Anchor>addMetadataAttribute(org.springframework.beans.BeanMetadataAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcut.html</Path>
    <Anchor>addMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMethodName(String)</Name>
      <Type>instm</Type>
      <Scope>NameMatchMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/NameMatchMethodPointcutAdvisor.html</Path>
    <Anchor>addMethodName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMethodResolver(MethodResolver)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>addMethodResolver(org.springframework.expression.MethodResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNestedComponent(ComponentDefinition)</Name>
      <Type>instm</Type>
      <Scope>CompositeComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/CompositeComponentDefinition.html</Path>
    <Anchor>addNestedComponent(org.springframework.beans.factory.parsing.ComponentDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ExpectedLookupTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/ExpectedLookupTemplate.html</Path>
    <Anchor>addObject(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ModelMap.html</Path>
    <Anchor>addObject(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject(Object)</Name>
      <Type>instm</Type>
      <Scope>ModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ModelMap.html</Path>
    <Anchor>addObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>addObject(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject(Object)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>addObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>addObject(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject(Object)</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>addObject(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObjectToArray(A[], O)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>addObjectToArray(A[], O)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOverride(MethodOverride)</Name>
      <Type>instm</Type>
      <Scope>MethodOverrides</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverrides.html</Path>
    <Anchor>addOverride(org.springframework.beans.factory.support.MethodOverride)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOverrides(MethodOverrides)</Name>
      <Type>instm</Type>
      <Scope>MethodOverrides</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/MethodOverrides.html</Path>
    <Anchor>addOverrides(org.springframework.beans.factory.support.MethodOverrides)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPackages(String...)</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.html</Path>
    <Anchor>addPackages(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParam(Param)</Name>
      <Type>intfm</Type>
      <Scope>ParamAware</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/ParamAware.html</Path>
    <Anchor>addParam(org.springframework.web.servlet.tags.Param)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParam(Param)</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>addParam(org.springframework.web.servlet.tags.Param)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParameter(SqlParameter)</Name>
      <Type>instm</Type>
      <Scope>CallableStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCreatorFactory.html</Path>
    <Anchor>addParameter(org.springframework.jdbc.core.SqlParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParameter(SqlParameter)</Name>
      <Type>instm</Type>
      <Scope>PreparedStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreatorFactory.html</Path>
    <Anchor>addParameter(org.springframework.jdbc.core.SqlParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>addParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParameter(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>addParameter(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>addParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParameter(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>addParameter(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParameters(Map)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>addParameters(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartConverter(HttpMessageConverter&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
    <Anchor>addPartConverter(org.springframework.http.converter.HttpMessageConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPathPatterns(String...)</Name>
      <Type>instm</Type>
      <Scope>InterceptorRegistration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/InterceptorRegistration.html</Path>
    <Anchor>addPathPatterns(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPopulators(DatabasePopulator...)</Name>
      <Type>instm</Type>
      <Scope>CompositeDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/CompositeDatabasePopulator.html</Path>
    <Anchor>addPopulators(org.springframework.jdbc.datasource.init.DatabasePopulator...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPreferredLocale(Locale)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>addPreferredLocale(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPreferredLocale(Locale)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>addPreferredLocale(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPreferredResponseContentType(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>addPreferredResponseContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPrivateRenderParameter(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockResourceRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockResourceRequest.html</Path>
    <Anchor>addPrivateRenderParameter(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPrivateRenderParameter(String, String[])</Name>
      <Type>instm</Type>
      <Scope>MockResourceRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockResourceRequest.html</Path>
    <Anchor>addPrivateRenderParameter(java.lang.String, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addProcessingEventQName(QName)</Name>
      <Type>instm</Type>
      <Scope>MockPortletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletConfig.html</Path>
    <Anchor>addProcessingEventQName(javax.xml.namespace.QName)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockBaseURL</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockBaseURL.html</Path>
    <Anchor>addProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>addProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletResponse.html</Path>
    <Anchor>addProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addProperty(Cookie)</Name>
      <Type>instm</Type>
      <Scope>MockPortletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletResponse.html</Path>
    <Anchor>addProperty(javax.servlet.http.Cookie)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addProperty(String, Element)</Name>
      <Type>instm</Type>
      <Scope>MockPortletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletResponse.html</Path>
    <Anchor>addProperty(java.lang.String, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>addProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertyAccessor(PropertyAccessor)</Name>
      <Type>instm</Type>
      <Scope>StandardEvaluationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardEvaluationContext.html</Path>
    <Anchor>addPropertyAccessor(org.springframework.expression.PropertyAccessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertyEditorRegistrar(PropertyEditorRegistrar)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>addPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertyEditorRegistrar(PropertyEditorRegistrar)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>addPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertyReference(String, String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>addPropertyReference(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertySource(PropertySource&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CompositePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CompositePropertySource.html</Path>
    <Anchor>addPropertySource(org.springframework.core.env.PropertySource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertyValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>addPropertyValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertyValue(PropertyValue)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>addPropertyValue(org.springframework.beans.PropertyValue)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertyValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>addPropertyValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertyValues(PropertyValues)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>addPropertyValues(org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPropertyValues(Map&amp;lt;?, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>addPropertyValues(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPublicRenderParameterName(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletConfig.html</Path>
    <Anchor>addPublicRenderParameterName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPublishingEventQName(QName)</Name>
      <Type>instm</Type>
      <Scope>MockPortletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletConfig.html</Path>
    <Anchor>addPublishingEventQName(javax.xml.namespace.QName)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addQualifier(AutowireCandidateQualifier)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>addQualifier(org.springframework.beans.factory.support.AutowireCandidateQualifier)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addQualifierType(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>QualifierAnnotationAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html</Path>
    <Anchor>addQualifierType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addRelatedCause(Throwable)</Name>
      <Type>clm</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>addRelatedCause(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addRequiredProperty(String)</Name>
      <Type>instm</Type>
      <Scope>GenericFilterBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/GenericFilterBean.html</Path>
    <Anchor>addRequiredProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addRequiredProperty(String)</Name>
      <Type>instm</Type>
      <Scope>GenericPortletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/GenericPortletBean.html</Path>
    <Anchor>addRequiredProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addRequiredProperty(String)</Name>
      <Type>instm</Type>
      <Scope>HttpServletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HttpServletBean.html</Path>
    <Anchor>addRequiredProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResolver(HandlerMethodArgumentResolver)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodArgumentResolverComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.html</Path>
    <Anchor>addResolver(org.springframework.web.method.support.HandlerMethodArgumentResolver)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResolvers(List&amp;lt;? extends HandlerMethodArgumentResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodArgumentResolverComposite</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.html</Path>
    <Anchor>addResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResourceHandler(String...)</Name>
      <Type>instm</Type>
      <Scope>ResourceHandlerRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.html</Path>
    <Anchor>addResourceHandler(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResourceHandlers(ResourceHandlerRegistry)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResourceHandlers(ResourceHandlerRegistry)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResourceHandlers(ResourceHandlerRegistry)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResourceHandlers(ResourceHandlerRegistry)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResourceLocations(String...)</Name>
      <Type>instm</Type>
      <Scope>ResourceHandlerRegistration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.html</Path>
    <Anchor>addResourceLocations(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResourcePathToPackagePath(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>addResourcePathToPackagePath(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResponseContentType(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>addResponseContentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReturnValueAsModelAttribute(Method, Class, Object, ExtendedModelMap)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>addReturnValueAsModelAttribute(java.lang.reflect.Method, java.lang.Class, java.lang.Object, org.springframework.ui.ExtendedModelMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReturnValueHandlers(List&amp;lt;HandlerMethodReturnValueHandler&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>addReturnValueHandlers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReturnValueHandlers(List&amp;lt;HandlerMethodReturnValueHandler&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>addReturnValueHandlers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReturnValueHandlers(List&amp;lt;HandlerMethodReturnValueHandler&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>addReturnValueHandlers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReturnValueHandlers(List&amp;lt;HandlerMethodReturnValueHandler&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>addReturnValueHandlers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addScript(String)</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html</Path>
    <Anchor>addScript(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addScript(Resource)</Name>
      <Type>instm</Type>
      <Scope>ResourceDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html</Path>
    <Anchor>addScript(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSession(Session)</Name>
      <Type>instm</Type>
      <Scope>JmsResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsResourceHolder.html</Path>
    <Anchor>addSession(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSession(Session, Connection)</Name>
      <Type>instm</Type>
      <Scope>JmsResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsResourceHolder.html</Path>
    <Anchor>addSession(javax.jms.Session, javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSession(Session)</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>addSession(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSession(Object, Session)</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>addSession(java.lang.Object, org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addShareableResource(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJndiBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/support/SimpleJndiBeanFactory.html</Path>
    <Anchor>addShareableResource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSingleton(String, Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>addSingleton(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSingletonFactory(String, ObjectFactory)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>addSingletonFactory(java.lang.String, org.springframework.beans.factory.ObjectFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addStaticAttribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>addStaticAttribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addStatusCode(String, int)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>addStatusCode(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addStringToArray(String[], String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>addStringToArray(java.lang.String[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSupportedLocale(Locale)</Name>
      <Type>instm</Type>
      <Scope>MockPortletConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletConfig.html</Path>
    <Anchor>addSupportedLocale(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTargetRequestParam(String, String)</Name>
      <Type>instm</Type>
      <Scope>FlashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMap.html</Path>
    <Anchor>addTargetRequestParam(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTargetRequestParams(MultiValueMap&amp;lt;String, String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FlashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMap.html</Path>
    <Anchor>addTargetRequestParams(org.springframework.util.MultiValueMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTimeoutHandler(Runnable)</Name>
      <Type>intfm</Type>
      <Scope>AsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/AsyncWebRequest.html</Path>
    <Anchor>addTimeoutHandler(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTimeoutHandler(Runnable)</Name>
      <Type>instm</Type>
      <Scope>NoSupportAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/NoSupportAsyncWebRequest.html</Path>
    <Anchor>addTimeoutHandler(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTimeoutHandler(Runnable)</Name>
      <Type>instm</Type>
      <Scope>StandardServletAsyncWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.html</Path>
    <Anchor>addTimeoutHandler(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTo(InternetAddress)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addTo(javax.mail.internet.InternetAddress)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTo(String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addTo(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTo(String, String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>addTo(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToEnvironment(String, Object)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>addToEnvironment(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransactionalMethod(String, TransactionAttribute)</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>addTransactionalMethod(java.lang.String, org.springframework.transaction.interceptor.TransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransactionalMethod(Class&amp;lt;?&amp;gt;, String, TransactionAttribute)</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>addTransactionalMethod(java.lang.Class, java.lang.String, org.springframework.transaction.interceptor.TransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransactionalMethod(Method, TransactionAttribute)</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>addTransactionalMethod(java.lang.reflect.Method, org.springframework.transaction.interceptor.TransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransactionalMethod(String, TransactionAttribute)</Name>
      <Type>instm</Type>
      <Scope>NameMatchTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.html</Path>
    <Anchor>addTransactionalMethod(java.lang.String, org.springframework.transaction.interceptor.TransactionAttribute)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>DefaultContextLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>GlassFishLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>InstrumentationLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>JBossLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/jboss/JBossLoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>intfm</Type>
      <Scope>LoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/LoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>OC4JLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/oc4j/OC4JLoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>ReflectiveLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>ShadowingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ShadowingClassLoader.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>SimpleInstrumentableClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/SimpleInstrumentableClassLoader.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>SimpleLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/SimpleLoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>TomcatInstrumentableClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/tomcat/TomcatInstrumentableClassLoader.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>WeavingTransformer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/WeavingTransformer.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>WebLogicLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/weblogic/WebLogicLoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassFileTransformer)</Name>
      <Type>instm</Type>
      <Scope>WebSphereLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/websphere/WebSphereLoadTimeWeaver.html</Path>
    <Anchor>addTransformer(java.lang.instrument.ClassFileTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTransformer(ClassTransformer)</Name>
      <Type>instm</Type>
      <Scope>MutablePersistenceUnitInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo.html</Path>
    <Anchor>addTransformer(javax.persistence.spi.ClassTransformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTriggerTask(Runnable, Trigger)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>addTriggerTask(java.lang.Runnable, org.springframework.scheduling.Trigger)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTriggerTask(TriggerTask)</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>addTriggerTask(org.springframework.scheduling.config.TriggerTask)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTypeIdentifier(String)</Name>
      <Type>instm</Type>
      <Scope>ReplaceOverride</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ReplaceOverride.html</Path>
    <Anchor>addTypeIdentifier(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addUrlsForPath(Set&amp;lt;String&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultAnnotationHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html</Path>
    <Anchor>addUrlsForPath(java.util.Set, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addUserRole(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>addUserRole(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addUserRole(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>addUserRole(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addValidators(Validator...)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>addValidators(org.springframework.validation.Validator...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>MapSqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/MapSqlParameterSource.html</Path>
    <Anchor>addValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addValue(String, Object, int)</Name>
      <Type>instm</Type>
      <Scope>MapSqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/MapSqlParameterSource.html</Path>
    <Anchor>addValue(java.lang.String, java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addValue(String, Object, int, String)</Name>
      <Type>instm</Type>
      <Scope>MapSqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/MapSqlParameterSource.html</Path>
    <Anchor>addValue(java.lang.String, java.lang.Object, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addValues(Map&amp;lt;String, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MapSqlParameterSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/MapSqlParameterSource.html</Path>
    <Anchor>addValues(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addViewController(String)</Name>
      <Type>instm</Type>
      <Scope>ViewControllerRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ViewControllerRegistry.html</Path>
    <Anchor>addViewController(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addViewControllers(ViewControllerRegistry)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addViewControllers(ViewControllerRegistry)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addViewControllers(ViewControllerRegistry)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addViewControllers(ViewControllerRegistry)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addWebRequestInterceptor(WebRequestInterceptor)</Name>
      <Type>instm</Type>
      <Scope>InterceptorRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/InterceptorRegistry.html</Path>
    <Anchor>addWebRequestInterceptor(org.springframework.web.context.request.WebRequestInterceptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adviceChanged()</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>adviceChanged()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adviceChanged(AdvisedSupport)</Name>
      <Type>intfm</Type>
      <Scope>AdvisedSupportListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupportListener.html</Path>
    <Anchor>adviceChanged(org.springframework.aop.framework.AdvisedSupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adviceChanged()</Name>
      <Type>instm</Type>
      <Scope>ProxyCreatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyCreatorSupport.html</Path>
    <Anchor>adviceChanged()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adviceChanged()</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>adviceChanged()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdviceEntry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AdviceEntry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdviceEntry(String)</Name>
      <Type>Constructor</Type>
      <Scope>AdviceEntry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AdviceEntry.html</Path>
    <Anchor>AdviceEntry(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adviceIncluded(Advice)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>adviceIncluded(org.aopalliance.aop.Advice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdviceMode</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AdviceMode.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdviceModeImportSelector</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AdviceModeImportSelector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdviceModeImportSelector()</Name>
      <Type>Constructor</Type>
      <Scope>AdviceModeImportSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AdviceModeImportSelector.html</Path>
    <Anchor>AdviceModeImportSelector()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Advised</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/Advised.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisedSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisedSupport()</Name>
      <Type>Constructor</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>AdvisedSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisedSupport(Class[])</Name>
      <Type>Constructor</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>AdvisedSupport(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisedSupportListener</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupportListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Advisor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/Advisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>advisor</Name>
      <Type>Field</Type>
      <Scope>AbstractAdvisingBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractAdvisingBeanPostProcessor.html</Path>
    <Anchor>advisor</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADVISOR</Name>
      <Type>Field</Type>
      <Scope>ExposeInvocationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ExposeInvocationInterceptor.html</Path>
    <Anchor>ADVISOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorAdapter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.framework.adapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorAdapterRegistrationManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.adapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapterRegistrationManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorAdapterRegistrationManager()</Name>
      <Type>Constructor</Type>
      <Scope>AdvisorAdapterRegistrationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapterRegistrationManager.html</Path>
    <Anchor>AdvisorAdapterRegistrationManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorAdapterRegistry</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.framework.adapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AdvisorAdapterRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorChainFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisorChainFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorComponentDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AdvisorComponentDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorComponentDefinition(String, BeanDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>AdvisorComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AdvisorComponentDefinition.html</Path>
    <Anchor>AdvisorComponentDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorComponentDefinition(String, BeanDefinition, BeanDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>AdvisorComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AdvisorComponentDefinition.html</Path>
    <Anchor>AdvisorComponentDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorEntry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AdvisorEntry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdvisorEntry(String)</Name>
      <Type>Constructor</Type>
      <Scope>AdvisorEntry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AdvisorEntry.html</Path>
    <Anchor>AdvisorEntry(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>advisorsPreFiltered()</Name>
      <Type>instm</Type>
      <Scope>AbstractAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html</Path>
    <Anchor>advisorsPreFiltered()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>advisorsPreFiltered()</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>advisorsPreFiltered()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterAccess()</Name>
      <Type>instm</Type>
      <Scope>ConcurrencyThrottleSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrencyThrottleSupport.html</Path>
    <Anchor>afterAccess()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterActionCompletion(ActionRequest, ActionResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterActionCompletion(ActionRequest, ActionResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterActionCompletion(ActionRequest, ActionResponse, Object, Exception)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AfterAdvice</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/AfterAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCommit()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>afterCommit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCommit()</Name>
      <Type>intfm</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>afterCommit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCommit()</Name>
      <Type>instm</Type>
      <Scope>TransactionSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationAdapter.html</Path>
    <Anchor>afterCommit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(int)</Name>
      <Type>instm</Type>
      <Scope>JtaLobCreatorSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/JtaLobCreatorSynchronization.html</Path>
    <Anchor>afterCompletion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(int)</Name>
      <Type>instm</Type>
      <Scope>SpringLobCreatorSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/SpringLobCreatorSynchronization.html</Path>
    <Anchor>afterCompletion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(WebRequest, Exception)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.WebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(WebRequest, Exception)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.WebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(WebRequest, Exception)</Name>
      <Type>instm</Type>
      <Scope>OpenPersistenceManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/OpenPersistenceManagerInViewInterceptor.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.WebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(WebRequest, Exception)</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.WebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(int)</Name>
      <Type>instm</Type>
      <Scope>JtaAfterCompletionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaAfterCompletionSynchronization.html</Path>
    <Anchor>afterCompletion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(int)</Name>
      <Type>instm</Type>
      <Scope>SpringJtaSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.html</Path>
    <Anchor>afterCompletion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(int)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>afterCompletion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(int)</Name>
      <Type>intfm</Type>
      <Scope>TransactionSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronization.html</Path>
    <Anchor>afterCompletion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(int)</Name>
      <Type>instm</Type>
      <Scope>TransactionSynchronizationAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationAdapter.html</Path>
    <Anchor>afterCompletion(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(NativeWebRequest, Callable&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>CallableProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptor.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(NativeWebRequest, Callable&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CallableProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>DeferredResultProcessingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptor.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(NativeWebRequest, DeferredResult&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DeferredResultProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/DeferredResultProcessingInterceptorAdapter.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(WebRequest, Exception)</Name>
      <Type>instm</Type>
      <Scope>Log4jNestedDiagnosticContextInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.WebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(WebRequest, Exception)</Name>
      <Type>intfm</Type>
      <Scope>WebRequestInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/WebRequestInterceptor.html</Path>
    <Anchor>afterCompletion(org.springframework.web.context.request.WebRequest, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(PortletRequest, PortletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>afterCompletion(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>afterCompletion(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>afterCompletion(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HandlerInterceptor.html</Path>
    <Anchor>afterCompletion(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>WebContentInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/WebContentInterceptor.html</Path>
    <Anchor>afterCompletion(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterConcurrentHandlingStarted(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>afterConcurrentHandlingStarted(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterConcurrentHandlingStarted(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor.html</Path>
    <Anchor>afterConcurrentHandlingStarted(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterConcurrentHandlingStarted(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.html</Path>
    <Anchor>afterConcurrentHandlingStarted(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterConcurrentHandlingStarted(WebRequest)</Name>
      <Type>intfm</Type>
      <Scope>AsyncWebRequestInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AsyncWebRequestInterceptor.html</Path>
    <Anchor>afterConcurrentHandlingStarted(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterConcurrentHandlingStarted(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>Log4jNestedDiagnosticContextInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor.html</Path>
    <Anchor>afterConcurrentHandlingStarted(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterConcurrentHandlingStarted(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>intfm</Type>
      <Scope>AsyncHandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/AsyncHandlerInterceptor.html</Path>
    <Anchor>afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterConcurrentHandlingStarted(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterConcurrentHandlingStarted(HttpServletRequest, HttpServletResponse, Object)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterDelivery()</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory.AbstractMessageEndpoint</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html</Path>
    <Anchor>afterDelivery()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterEventCompletion(EventRequest, EventResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>afterEventCompletion(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterEventCompletion(EventRequest, EventResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>afterEventCompletion(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterEventCompletion(EventRequest, EventResponse, Object, Exception)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>afterEventCompletion(javax.portlet.EventRequest, javax.portlet.EventResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterLast()</Name>
      <Type>instm</Type>
      <Scope>ResultSetWrappingSqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html</Path>
    <Anchor>afterLast()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterLast()</Name>
      <Type>intfm</Type>
      <Scope>SqlRowSet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/rowset/SqlRowSet.html</Path>
    <Anchor>afterLast()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPhase(PhaseEvent)</Name>
      <Type>instm</Type>
      <Scope>DelegatingPhaseListenerMulticaster</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DelegatingPhaseListenerMulticaster.html</Path>
    <Anchor>afterPhase(javax.faces.event.PhaseEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CommonsLogFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>FieldRetrievingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/MethodInvokingFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ObjectFactoryCreatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ObjectFactoryCreatingFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>PreferencesPlaceholderConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>PropertiesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertiesFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ProviderCreatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ProviderCreatingFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ServiceLocatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>intfm</Type>
      <Scope>InitializingBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/InitializingBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>BeanConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanConfigurerSupport.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>EhCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CacheAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JCacheManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheManagerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/AbstractCacheManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CompositeCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/CompositeCacheManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareCacheManagerProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/TransactionAwareCacheManagerProxy.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>EventPublicationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/EventPublicationInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ConversionServiceFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>DaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DaoSupport.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>PersistenceExceptionTranslationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>LocalStatelessSessionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SimpleRemoteStatelessSessionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/SimpleRemoteStatelessSessionProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>FormattingConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/ProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>Jackson2ObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JacksonObjectMapperFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/JacksonObjectMapperFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>EisOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/EisOperation.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>LocalConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/LocalConnectionFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ResourceAdapterFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/ResourceAdapterFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/work/WorkManagerTaskExecutor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>DataSourceTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>DelegatingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DelegatingDataSource.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>EmbeddedDatabaseFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>DataSourceInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/DataSourceInitializer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>LazyConnectionDataSourceProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractRoutingDataSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>WebSphereDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/WebSphereDataSourceAdapter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>GenericSqlQuery</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/GenericSqlQuery.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CustomSQLExceptionTranslatorRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistrar.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>DatabaseStartupValidator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/DatabaseStartupValidator.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractColumnMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractColumnMaxValueIncrementer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractDataFieldMaxValueIncrementer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JdbcAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcAccessor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager102.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory102.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate102.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JmsGatewaySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/support/JmsGatewaySupport.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JmsMessageEndpointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerServiceExporter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MarshallingMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MarshallingMessageConverter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MBeanProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/NotificationListenerRegistrar.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>InterfaceBasedMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>KeyNamingStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/KeyNamingStrategy.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MetadataNamingStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/naming/MetadataNamingStrategy.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>NotificationListenerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/NotificationListenerBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MBeanServerConnectionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>WebSphereMBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JndiObjectLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectLocator.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JndiObjectTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectTargetSource.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ConfigurableMimeFileTypeMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>FilterDefinitionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TypeDefinitionBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/TypeDefinitionBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/LocalSessionFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientTemplate.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JdoAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoAccessor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>LocalPersistenceManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SpringPersistenceManagerProxyBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JpaAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaAccessor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>DefaultPersistenceUnitManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SharedEntityManagerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/SharedEntityManagerBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>BurlapExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapExporter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>BurlapProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>HessianExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>HessianProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>LocalJaxWsServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/LocalJaxWsServiceFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JndiRmiProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JndiRmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiServiceExporter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>RmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>RmiProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiProxyFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>RmiRegistryFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiRegistryFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>RmiServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiServiceExporter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/SimpleHttpServerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>UrlBasedRemoteAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/UrlBasedRemoteAccessor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TimerManagerAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerAccessor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TimerManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/TimerManagerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>WorkManagerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/commonj/WorkManagerTaskExecutor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ExecutorConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ForkJoinPoolFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ContextLifecycleScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ContextLifecycleScheduledTaskRegistrar.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ScheduledTaskRegistrar.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TaskExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/TaskExecutorFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CronTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JobDetailBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingJobDetailFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SchedulerAccessorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerAccessorBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SimpleThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleThreadPoolTaskExecutor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>SimpleTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingRunnable</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/MethodInvokingRunnable.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MethodInvokingTimerTaskFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/MethodInvokingTimerTaskFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TimerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MethodMapTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>OC4JJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>WebLogicJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebLogicJtaTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>WebSphereUowTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebSphereUowTransactionManager.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TransactionTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionTemplate.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>BeanValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>CustomValidatorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/CustomValidatorBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>LocalValidatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>MethodValidationPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>GenericFilterBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/GenericFilterBean.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>PortletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/PortletWrappingController.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ExceptionHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>PropertiesMethodNameResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/PropertiesMethodNameResolver.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ServletWrappingController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/ServletWrappingController.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ResourceHttpRequestHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlBasedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractUrlBasedView.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerConfigurer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ResourceBundleViewResolver.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesConfigurer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesConfigurer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesView.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>VelocityConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityConfigurer.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPropertiesSet()</Name>
      <Type>instm</Type>
      <Scope>XmlViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/XmlViewResolver.html</Path>
    <Anchor>afterPropertiesSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterPrototypeCreation(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>afterPrototypeCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterRenderCompletion(RenderRequest, RenderResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>afterRenderCompletion(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterRenderCompletion(RenderRequest, RenderResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>afterRenderCompletion(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterRenderCompletion(RenderRequest, RenderResponse, Object, Exception)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>afterRenderCompletion(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterRequest(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>afterRequest(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterRequest(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>CommonsRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CommonsRequestLoggingFilter.html</Path>
    <Anchor>afterRequest(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterRequest(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>Log4jNestedDiagnosticContextFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/Log4jNestedDiagnosticContextFilter.html</Path>
    <Anchor>afterRequest(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterRequest(HttpServletRequest, String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/ServletContextRequestLoggingFilter.html</Path>
    <Anchor>afterRequest(javax.servlet.http.HttpServletRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterResourceCompletion(ResourceRequest, ResourceResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>HandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/HandlerInterceptorAdapter.html</Path>
    <Anchor>afterResourceCompletion(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterResourceCompletion(ResourceRequest, ResourceResponse, Object, Exception)</Name>
      <Type>instm</Type>
      <Scope>WebRequestHandlerInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.html</Path>
    <Anchor>afterResourceCompletion(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterResourceCompletion(ResourceRequest, ResourceResponse, Object, Exception)</Name>
      <Type>intfm</Type>
      <Scope>HandlerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/HandlerInterceptor.html</Path>
    <Anchor>afterResourceCompletion(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterReturning(Object, Method, Object[], Object)</Name>
      <Type>intfm</Type>
      <Scope>AfterReturningAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/AfterReturningAdvice.html</Path>
    <Anchor>afterReturning(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterReturning(Object, Method, Object[], Object)</Name>
      <Type>instm</Type>
      <Scope>AspectJAfterReturningAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html</Path>
    <Anchor>afterReturning(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AfterReturningAdvice</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/AfterReturningAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AfterReturningAdviceInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.adapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AfterReturningAdviceInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AfterReturningAdviceInterceptor(AfterReturningAdvice)</Name>
      <Type>Constructor</Type>
      <Scope>AfterReturningAdviceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/adapter/AfterReturningAdviceInterceptor.html</Path>
    <Anchor>AfterReturningAdviceInterceptor(org.springframework.aop.AfterReturningAdvice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterSessionFactoryCreation()</Name>
      <Type>instm</Type>
      <Scope>AbstractSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html</Path>
    <Anchor>afterSessionFactoryCreation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterSessionFactoryCreation()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>afterSessionFactoryCreation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterSingletonCreation(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>afterSingletonCreation(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestClass(TestContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractTestExecutionListener.html</Path>
    <Anchor>afterTestClass(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestClass(TestContext)</Name>
      <Type>instm</Type>
      <Scope>DirtiesContextTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DirtiesContextTestExecutionListener.html</Path>
    <Anchor>afterTestClass(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestClass()</Name>
      <Type>instm</Type>
      <Scope>TestContextManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestContextManager.html</Path>
    <Anchor>afterTestClass()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestClass(TestContext)</Name>
      <Type>intfm</Type>
      <Scope>TestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestExecutionListener.html</Path>
    <Anchor>afterTestClass(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestMethod(TestContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractTestExecutionListener.html</Path>
    <Anchor>afterTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestMethod(TestContext)</Name>
      <Type>instm</Type>
      <Scope>DirtiesContextTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/DirtiesContextTestExecutionListener.html</Path>
    <Anchor>afterTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestMethod(Object, Method, Throwable)</Name>
      <Type>instm</Type>
      <Scope>TestContextManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestContextManager.html</Path>
    <Anchor>afterTestMethod(java.lang.Object, java.lang.reflect.Method, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestMethod(TestContext)</Name>
      <Type>intfm</Type>
      <Scope>TestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/TestExecutionListener.html</Path>
    <Anchor>afterTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestMethod(TestContext)</Name>
      <Type>instm</Type>
      <Scope>TransactionalTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/TransactionalTestExecutionListener.html</Path>
    <Anchor>afterTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>afterTestMethod(TestContext)</Name>
      <Type>instm</Type>
      <Scope>ServletTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/ServletTestExecutionListener.html</Path>
    <Anchor>afterTestMethod(org.springframework.test.context.TestContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AfterTransaction</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.context.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/AfterTransaction.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALIAS_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>ALIAS_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALIAS_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>ALIAS_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AliasDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/AliasDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AliasDefinition(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>AliasDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/AliasDefinition.html</Path>
    <Anchor>AliasDefinition(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AliasDefinition(String, String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>AliasDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/AliasDefinition.html</Path>
    <Anchor>AliasDefinition(java.lang.String, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aliasRegistered(AliasDefinition)</Name>
      <Type>instm</Type>
      <Scope>EmptyReaderEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/EmptyReaderEventListener.html</Path>
    <Anchor>aliasRegistered(org.springframework.beans.factory.parsing.AliasDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aliasRegistered(AliasDefinition)</Name>
      <Type>intfm</Type>
      <Scope>ReaderEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderEventListener.html</Path>
    <Anchor>aliasRegistered(org.springframework.beans.factory.parsing.AliasDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AliasRegistry</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AliasRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALL</Name>
      <Type>Field</Type>
      <Scope>Selection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Selection.html</Path>
    <Anchor>ALL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALL</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>ALL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALL_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>ALL_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AllEncompassingFormHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/support/AllEncompassingFormHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AllEncompassingFormHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>AllEncompassingFormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/support/AllEncompassingFormHttpMessageConverter.html</Path>
    <Anchor>AllEncompassingFormHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowAliasOverriding()</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>allowAliasOverriding()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowAliasOverriding()</Name>
      <Type>instm</Type>
      <Scope>SimpleAliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SimpleAliasRegistry.html</Path>
    <Anchor>allowAliasOverriding()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowPublicMethodsOnly()</Name>
      <Type>instm</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>allowPublicMethodsOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowPublicMethodsOnly()</Name>
      <Type>instm</Type>
      <Scope>AbstractFallbackCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.html</Path>
    <Anchor>allowPublicMethodsOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowPublicMethodsOnly()</Name>
      <Type>instm</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>allowPublicMethodsOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowPublicMethodsOnly()</Name>
      <Type>instm</Type>
      <Scope>AbstractFallbackTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.html</Path>
    <Anchor>allowPublicMethodsOnly()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowsUnusedParameters()</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>allowsUnusedParameters()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowsUnusedParameters()</Name>
      <Type>instm</Type>
      <Scope>StoredProcedure</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/StoredProcedure.html</Path>
    <Anchor>allowsUnusedParameters()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allSupportedMediaTypes</Name>
      <Type>Field</Type>
      <Scope>AbstractMessageConverterMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.html</Path>
    <Anchor>allSupportedMediaTypes</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALREADY_FILTERED_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>OncePerRequestFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/OncePerRequestFilter.html</Path>
    <Anchor>ALREADY_FILTERED_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALT_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>ALT_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alwaysCreateNewCollection()</Name>
      <Type>instm</Type>
      <Scope>CustomCollectionEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomCollectionEditor.html</Path>
    <Anchor>alwaysCreateNewCollection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alwaysCreateNewMap()</Name>
      <Type>instm</Type>
      <Scope>CustomMapEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomMapEditor.html</Path>
    <Anchor>alwaysCreateNewMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alwaysDo(ResultHandler)</Name>
      <Type>instm</Type>
      <Scope>DefaultMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
    <Anchor>alwaysDo(org.springframework.test.web.servlet.ResultHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alwaysExpect(ResultMatcher)</Name>
      <Type>instm</Type>
      <Scope>DefaultMockMvcBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.html</Path>
    <Anchor>alwaysExpect(org.springframework.test.web.servlet.ResultMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alwaysUseJaxRpcCall()</Name>
      <Type>instm</Type>
      <Scope>JaxRpcPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html</Path>
    <Anchor>alwaysUseJaxRpcCall()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>andDo(ResultHandler)</Name>
      <Type>intfm</Type>
      <Scope>ResultActions</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/ResultActions.html</Path>
    <Anchor>andDo(org.springframework.test.web.servlet.ResultHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>andExpect(RequestMatcher)</Name>
      <Type>intfm</Type>
      <Scope>ResponseActions</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/ResponseActions.html</Path>
    <Anchor>andExpect(org.springframework.test.web.client.RequestMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>andExpect(ResultMatcher)</Name>
      <Type>intfm</Type>
      <Scope>ResultActions</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/ResultActions.html</Path>
    <Anchor>andExpect(org.springframework.test.web.servlet.ResultMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>andRespond(ResponseCreator)</Name>
      <Type>intfm</Type>
      <Scope>ResponseActions</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/ResponseActions.html</Path>
    <Anchor>andRespond(org.springframework.test.web.client.ResponseCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>andReturn()</Name>
      <Type>intfm</Type>
      <Scope>ResultActions</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/ResultActions.html</Path>
    <Anchor>andReturn()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotatedBeanDefinition</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AnnotatedBeanDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotatedBeanDefinitionReader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotatedBeanDefinitionReader(BeanDefinitionRegistry)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotatedBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
    <Anchor>AnnotatedBeanDefinitionReader(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotatedBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html</Path>
    <Anchor>AnnotatedBeanDefinitionReader(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotatedGenericBeanDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AnnotatedGenericBeanDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotatedGenericBeanDefinition(Class&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotatedGenericBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AnnotatedGenericBeanDefinition.html</Path>
    <Anchor>AnnotatedGenericBeanDefinition(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotatedGenericBeanDefinition(AnnotationMetadata)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotatedGenericBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AnnotatedGenericBeanDefinition.html</Path>
    <Anchor>AnnotatedGenericBeanDefinition(org.springframework.core.type.AnnotationMetadata)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAsyncExecutionInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AnnotationAsyncExecutionInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAsyncExecutionInterceptor(Executor)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationAsyncExecutionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AnnotationAsyncExecutionInterceptor.html</Path>
    <Anchor>AnnotationAsyncExecutionInterceptor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAttributes</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAttributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAttributes()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAttributes.html</Path>
    <Anchor>AnnotationAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAttributes(int)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAttributes.html</Path>
    <Anchor>AnnotationAttributes(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAttributes(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAttributes.html</Path>
    <Anchor>AnnotationAttributes(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAwareAspectJAutoProxyCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAwareAspectJAutoProxyCreator()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationAwareAspectJAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html</Path>
    <Anchor>AnnotationAwareAspectJAutoProxyCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAwareOrderComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAwareOrderComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationAwareOrderComparator()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationAwareOrderComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationAwareOrderComparator.html</Path>
    <Anchor>AnnotationAwareOrderComparator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationBeanNameGenerator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationBeanNameGenerator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationBeanNameGenerator()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationBeanNameGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationBeanNameGenerator.html</Path>
    <Anchor>AnnotationBeanNameGenerator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationBeanUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/annotation/AnnotationBeanUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationBeanUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationBeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/annotation/AnnotationBeanUtils.html</Path>
    <Anchor>AnnotationBeanUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationBeanWiringInfoResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AnnotationBeanWiringInfoResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationBeanWiringInfoResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationBeanWiringInfoResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AnnotationBeanWiringInfoResolver.html</Path>
    <Anchor>AnnotationBeanWiringInfoResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationCacheOperationSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationCacheOperationSource()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>AnnotationCacheOperationSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationCacheOperationSource(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>AnnotationCacheOperationSource(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationCacheOperationSource(CacheAnnotationParser)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>AnnotationCacheOperationSource(org.springframework.cache.annotation.CacheAnnotationParser)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationCacheOperationSource(CacheAnnotationParser...)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>AnnotationCacheOperationSource(org.springframework.cache.annotation.CacheAnnotationParser...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationCacheOperationSource(Set&amp;lt;CacheAnnotationParser&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AnnotationCacheOperationSource.html</Path>
    <Anchor>AnnotationCacheOperationSource(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationClassFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationClassFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationClassFilter(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationClassFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationClassFilter.html</Path>
    <Anchor>AnnotationClassFilter(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationClassFilter(Class&amp;lt;? extends Annotation&amp;gt;, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationClassFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationClassFilter.html</Path>
    <Anchor>AnnotationClassFilter(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
    <Anchor>AnnotationConfigApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigApplicationContext(Class&amp;lt;?&amp;gt;...)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
    <Anchor>AnnotationConfigApplicationContext(java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigApplicationContext(String...)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationConfigApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigApplicationContext.html</Path>
    <Anchor>AnnotationConfigApplicationContext(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationConfigBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigBeanDefinitionParser.html</Path>
    <Anchor>AnnotationConfigBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigContextLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AnnotationConfigContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigContextLoader()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationConfigContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AnnotationConfigContextLoader.html</Path>
    <Anchor>AnnotationConfigContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigContextLoaderUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AnnotationConfigContextLoaderUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>AnnotationConfigUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigWebApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigWebApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationConfigWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.html</Path>
    <Anchor>AnnotationConfigWebApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigWebContextLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context.web</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/AnnotationConfigWebContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationConfigWebContextLoader()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationConfigWebContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/AnnotationConfigWebContextLoader.html</Path>
    <Anchor>AnnotationConfigWebContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationDrivenBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/AnnotationDrivenBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationDrivenBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationDrivenBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/AnnotationDrivenBeanDefinitionParser.html</Path>
    <Anchor>AnnotationDrivenBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>annotationDrivenTransactionManager()</Name>
      <Type>intfm</Type>
      <Scope>TransactionManagementConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/TransactionManagementConfigurer.html</Path>
    <Anchor>annotationDrivenTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationFormatterFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.format</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/AnnotationFormatterFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationJmxAttributeSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationJmxAttributeSource()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationJmxAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.html</Path>
    <Anchor>AnnotationJmxAttributeSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMatchingPointcut</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMatchingPointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMatchingPointcut(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationMatchingPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMatchingPointcut.html</Path>
    <Anchor>AnnotationMatchingPointcut(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMatchingPointcut(Class&amp;lt;? extends Annotation&amp;gt;, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationMatchingPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMatchingPointcut.html</Path>
    <Anchor>AnnotationMatchingPointcut(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMatchingPointcut(Class&amp;lt;? extends Annotation&amp;gt;, Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationMatchingPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMatchingPointcut.html</Path>
    <Anchor>AnnotationMatchingPointcut(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMBeanExporter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.export.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/annotation/AnnotationMBeanExporter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMBeanExporter()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationMBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/annotation/AnnotationMBeanExporter.html</Path>
    <Anchor>AnnotationMBeanExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMetadata</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.type</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/AnnotationMetadata.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodHandlerAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodHandlerAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>AnnotationMethodHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodHandlerAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodHandlerAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>AnnotationMethodHandlerAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodHandlerExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.mvc.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodHandlerExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>AnnotationMethodHandlerExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodHandlerExceptionResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodHandlerExceptionResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationMethodHandlerExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html</Path>
    <Anchor>AnnotationMethodHandlerExceptionResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodMatcher</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMethodMatcher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationMethodMatcher(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationMethodMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/annotation/AnnotationMethodMatcher.html</Path>
    <Anchor>AnnotationMethodMatcher(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationScopeMetadataResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationScopeMetadataResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationScopeMetadataResolver()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationScopeMetadataResolver.html</Path>
    <Anchor>AnnotationScopeMetadataResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationScopeMetadataResolver(ScopedProxyMode)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationScopeMetadataResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationScopeMetadataResolver.html</Path>
    <Anchor>AnnotationScopeMetadataResolver(org.springframework.context.annotation.ScopedProxyMode)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationSessionFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationSessionFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html</Path>
    <Anchor>AnnotationSessionFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTransactionAttributeSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTransactionAttributeSource()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>AnnotationTransactionAttributeSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTransactionAttributeSource(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>AnnotationTransactionAttributeSource(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTransactionAttributeSource(TransactionAnnotationParser)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>AnnotationTransactionAttributeSource(org.springframework.transaction.annotation.TransactionAnnotationParser)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTransactionAttributeSource(TransactionAnnotationParser...)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>AnnotationTransactionAttributeSource(org.springframework.transaction.annotation.TransactionAnnotationParser...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTransactionAttributeSource(Set&amp;lt;TransactionAnnotationParser&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.html</Path>
    <Anchor>AnnotationTransactionAttributeSource(java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTypeFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AnnotationTypeFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTypeFilter(Class&amp;lt;? extends Annotation&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationTypeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AnnotationTypeFilter.html</Path>
    <Anchor>AnnotationTypeFilter(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTypeFilter(Class&amp;lt;? extends Annotation&amp;gt;, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationTypeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AnnotationTypeFilter.html</Path>
    <Anchor>AnnotationTypeFilter(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationTypeFilter(Class&amp;lt;? extends Annotation&amp;gt;, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationTypeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AnnotationTypeFilter.html</Path>
    <Anchor>AnnotationTypeFilter(java.lang.Class, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AnnotationUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AnnotationUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/annotation/AnnotationUtils.html</Path>
    <Anchor>AnnotationUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AntPathMatcher</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AntPathMatcher()</Name>
      <Type>Constructor</Type>
      <Scope>AntPathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
    <Anchor>AntPathMatcher()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>anything()</Name>
      <Type>clm</Type>
      <Scope>MockRestRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/MockRestRequestMatchers.html</Path>
    <Anchor>anything()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopConfigException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopConfigException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopConfigException(String)</Name>
      <Type>Constructor</Type>
      <Scope>AopConfigException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopConfigException.html</Path>
    <Anchor>AopConfigException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopConfigException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>AopConfigException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopConfigException.html</Path>
    <Anchor>AopConfigException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopConfigUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopConfigUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AopConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
    <Anchor>AopConfigUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopContext()</Name>
      <Type>Constructor</Type>
      <Scope>AopContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopContext.html</Path>
    <Anchor>AopContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopInfrastructureBean</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopInfrastructureBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopInvocationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/AopInvocationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopInvocationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>AopInvocationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/AopInvocationException.html</Path>
    <Anchor>AopInvocationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopInvocationException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>AopInvocationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/AopInvocationException.html</Path>
    <Anchor>AopInvocationException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopNamespaceHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopNamespaceHandler()</Name>
      <Type>Constructor</Type>
      <Scope>AopNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceHandler.html</Path>
    <Anchor>AopNamespaceHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopNamespaceUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopNamespaceUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AopNamespaceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopNamespaceUtils.html</Path>
    <Anchor>AopNamespaceUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopProxy</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopProxyFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopProxyUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopProxyUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AopProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyUtils.html</Path>
    <Anchor>AopProxyUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AopUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>AopUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append(String, byte)</Name>
      <Type>instm</Type>
      <Scope>ToStringCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringCreator.html</Path>
    <Anchor>append(java.lang.String, byte)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append(String, short)</Name>
      <Type>instm</Type>
      <Scope>ToStringCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringCreator.html</Path>
    <Anchor>append(java.lang.String, short)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append(String, int)</Name>
      <Type>instm</Type>
      <Scope>ToStringCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringCreator.html</Path>
    <Anchor>append(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append(String, long)</Name>
      <Type>instm</Type>
      <Scope>ToStringCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringCreator.html</Path>
    <Anchor>append(java.lang.String, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append(String, float)</Name>
      <Type>instm</Type>
      <Scope>ToStringCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringCreator.html</Path>
    <Anchor>append(java.lang.String, float)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append(String, double)</Name>
      <Type>instm</Type>
      <Scope>ToStringCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringCreator.html</Path>
    <Anchor>append(java.lang.String, double)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>ToStringCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringCreator.html</Path>
    <Anchor>append(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ToStringCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringCreator.html</Path>
    <Anchor>append(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append(Object)</Name>
      <Type>instm</Type>
      <Scope>ToStringCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/style/ToStringCreator.html</Path>
    <Anchor>append(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendIdentityToObjectName(ObjectName, Object)</Name>
      <Type>clm</Type>
      <Scope>JmxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/JmxUtils.html</Path>
    <Anchor>appendIdentityToObjectName(javax.management.ObjectName, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendMd5DigestAsHex(byte[], StringBuilder)</Name>
      <Type>clm</Type>
      <Scope>DigestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/DigestUtils.html</Path>
    <Anchor>appendMd5DigestAsHex(byte[], java.lang.StringBuilder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendQueryProperties(StringBuilder, Map&amp;lt;String, Object&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>appendQueryProperties(java.lang.StringBuilder, java.util.Map, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendValue(String)</Name>
      <Type>instm</Type>
      <Scope>TagWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TagWriter.html</Path>
    <Anchor>appendValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_ATOM_XML</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_ATOM_XML</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_ATOM_XML_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_ATOM_XML_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_CONTEXT_ID_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ConfigurableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebApplicationContext.html</Path>
    <Anchor>APPLICATION_CONTEXT_ID_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_CONTEXT_ID_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ConfigurablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html</Path>
    <Anchor>APPLICATION_CONTEXT_ID_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_EVENT_MULTICASTER_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>APPLICATION_EVENT_MULTICASTER_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_FORM_URLENCODED</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_FORM_URLENCODED</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_FORM_URLENCODED_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_FORM_URLENCODED_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_JSON</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_JSON</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_JSON_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_JSON_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_OCTET_STREAM</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_OCTET_STREAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_OCTET_STREAM_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_OCTET_STREAM_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_XHTML_XML</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_XHTML_XML</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_XHTML_XML_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_XHTML_XML_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_XML</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_XML</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APPLICATION_XML_VALUE</Name>
      <Type>Field</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>APPLICATION_XML_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationContext</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationContext</Name>
      <Type>Field</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>applicationContext</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationContext</Name>
      <Type>Field</Type>
      <Scope>AbstractJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html</Path>
    <Anchor>applicationContext</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationContext</Name>
      <Type>Field</Type>
      <Scope>AbstractJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests.html</Path>
    <Anchor>applicationContext</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationContext</Name>
      <Type>Field</Type>
      <Scope>AbstractTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html</Path>
    <Anchor>applicationContext</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationContextAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationContextAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationContextEvent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ApplicationContextEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationContextEvent(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ApplicationContextEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ApplicationContextEvent.html</Path>
    <Anchor>ApplicationContextEvent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationContextException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationContextException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationContextException(String)</Name>
      <Type>Constructor</Type>
      <Scope>ApplicationContextException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationContextException.html</Path>
    <Anchor>ApplicationContextException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationContextException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ApplicationContextException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationContextException.html</Path>
    <Anchor>ApplicationContextException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationContextInitializer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationContextInitializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationEvent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationEvent(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ApplicationEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationEvent.html</Path>
    <Anchor>ApplicationEvent(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationEventMulticaster</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ApplicationEventMulticaster.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationEventPublisher</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationEventPublisher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationEventPublisherAware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationEventPublisherAware.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationListener</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ApplicationListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationObjectSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ApplicationObjectSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplicationObjectSupport()</Name>
      <Type>Constructor</Type>
      <Scope>ApplicationObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ApplicationObjectSupport.html</Path>
    <Anchor>ApplicationObjectSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyAcknowledgeMode(BeanWrapper, int)</Name>
      <Type>instm</Type>
      <Scope>DefaultJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.html</Path>
    <Anchor>applyAcknowledgeMode(org.springframework.beans.BeanWrapper, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyAcknowledgeMode(BeanWrapper, int)</Name>
      <Type>instm</Type>
      <Scope>StandardJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html</Path>
    <Anchor>applyAcknowledgeMode(org.springframework.beans.BeanWrapper, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBeanPostProcessorsAfterInitialization(Object, String)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>applyBeanPostProcessorsAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBeanPostProcessorsAfterInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>applyBeanPostProcessorsAfterInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBeanPostProcessorsBeforeInitialization(Object, String)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>applyBeanPostProcessorsBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBeanPostProcessorsBeforeInitialization(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>applyBeanPostProcessorsBeforeInitialization(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBeanPostProcessorsBeforeInstantiation(Class, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>applyBeanPostProcessorsBeforeInstantiation(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBeanPropertyValues(Object, String)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>applyBeanPropertyValues(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBeanPropertyValues(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>applyBeanPropertyValues(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyCacheSeconds(MimeResponse, int)</Name>
      <Type>instm</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>applyCacheSeconds(javax.portlet.MimeResponse, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyCacheSeconds(HttpServletResponse, int)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>applyCacheSeconds(javax.servlet.http.HttpServletResponse, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyCacheSeconds(HttpServletResponse, int, boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>applyCacheSeconds(javax.servlet.http.HttpServletResponse, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyContentType(HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractTemplateView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractTemplateView.html</Path>
    <Anchor>applyContentType(javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyCurrencyTimeLimit(Descriptor, int)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>applyCurrencyTimeLimit(javax.management.Descriptor, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyDefaultCurrencyTimeLimit(Descriptor)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>applyDefaultCurrencyTimeLimit(javax.management.Descriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyDefaults(BeanDefinitionDefaults)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>applyDefaults(org.springframework.beans.factory.support.BeanDefinitionDefaults)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyDefaultsFromAnnotation(WebService)</Name>
      <Type>instm</Type>
      <Scope>JaxWsPortClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html</Path>
    <Anchor>applyDefaultsFromAnnotation(javax.jws.WebService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyFlushMode(Session, boolean)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>applyFlushMode(org.hibernate.Session, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInitializers(ConfigurableApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>applyInitializers(org.springframework.context.ConfigurableApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyIsolationLevel(JtaTransactionObject, int)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>applyIsolationLevel(org.springframework.transaction.jta.JtaTransactionObject, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyMergedBeanDefinitionPostProcessors(RootBeanDefinition, Class, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyNamedParameterToQuery(Query, String, Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>applyNamedParameterToQuery(org.hibernate.Query, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyPropertyValue(ConfigurableListableBeanFactory, String, String, String)</Name>
      <Type>instm</Type>
      <Scope>PropertyOverrideConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html</Path>
    <Anchor>applyPropertyValue(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyPropertyValues(String, BeanDefinition, BeanWrapper, PropertyValues)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>applyPropertyValues(java.lang.String, org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.BeanWrapper, org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyPropertyValues(MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>applyPropertyValues(org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyQueryTimeout(Query, int)</Name>
      <Type>instm</Type>
      <Scope>DefaultJdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/DefaultJdoDialect.html</Path>
    <Anchor>applyQueryTimeout(javax.jdo.Query, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyQueryTimeout(Query, int)</Name>
      <Type>intfm</Type>
      <Scope>JdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoDialect.html</Path>
    <Anchor>applyQueryTimeout(javax.jdo.Query, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRelativePath(String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>applyRelativePath(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyStatementSettings(Statement)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>applyStatementSettings(java.sql.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyStatusCodeIfPossible(HttpServletRequest, HttpServletResponse, int)</Name>
      <Type>instm</Type>
      <Scope>SimpleMappingExceptionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html</Path>
    <Anchor>applyStatusCodeIfPossible(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTimeout(Statement, DataSource, int)</Name>
      <Type>clm</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>applyTimeout(java.sql.Statement, javax.sql.DataSource, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTimeout(JtaTransactionObject, int)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>applyTimeout(org.springframework.transaction.jta.JtaTransactionObject, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTransactionConfig(SqlMapClient, TransactionConfig)</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/SqlMapClientFactoryBean.html</Path>
    <Anchor>applyTransactionConfig(com.ibatis.sqlmap.client.SqlMapClient, com.ibatis.sqlmap.engine.transaction.TransactionConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTransactionTimeout(Statement, DataSource)</Name>
      <Type>clm</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>applyTransactionTimeout(java.sql.Statement, javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTransactionTimeout(Query, SessionFactory)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>applyTransactionTimeout(org.hibernate.Query, org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTransactionTimeout(Criteria, SessionFactory)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>applyTransactionTimeout(org.hibernate.Criteria, org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTransactionTimeout(Query, PersistenceManagerFactory, JdoDialect)</Name>
      <Type>clm</Type>
      <Scope>PersistenceManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html</Path>
    <Anchor>applyTransactionTimeout(javax.jdo.Query, javax.jdo.PersistenceManagerFactory, org.springframework.orm.jdo.JdoDialect)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTransactionTimeout(Query, EntityManagerFactory)</Name>
      <Type>clm</Type>
      <Scope>EntityManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryUtils.html</Path>
    <Anchor>applyTransactionTimeout(javax.persistence.Query, javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTransformerParameters(Map&amp;lt;String, Object&amp;gt;, Transformer)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>applyTransformerParameters(java.util.Map, javax.xml.transform.Transformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areCallbacksLocalToHibernateTransactions()</Name>
      <Type>instm</Type>
      <Scope>SpringTransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringTransactionFactory.html</Path>
    <Anchor>areCallbacksLocalToHibernateTransactions()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ARG_TYPE_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>ARG_TYPE_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ARG_TYPE_MATCH_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>ARG_TYPE_MATCH_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>argBinding(JoinPoint, JoinPointMatch, Object, Throwable)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>argBinding(org.aspectj.lang.JoinPoint, org.aspectj.weaver.tools.JoinPointMatch, java.lang.Object, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>argsRequiringConversion</Name>
      <Type>Field</Type>
      <Scope>ReflectionHelper.ArgumentsMatchInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html</Path>
    <Anchor>argsRequiringConversion</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ArgumentConvertingMethodInvoker</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ArgumentConvertingMethodInvoker.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ArgumentConvertingMethodInvoker()</Name>
      <Type>Constructor</Type>
      <Scope>ArgumentConvertingMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/ArgumentConvertingMethodInvoker.html</Path>
    <Anchor>ArgumentConvertingMethodInvoker()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arguments</Name>
      <Type>Field</Type>
      <Scope>ReflectiveMethodInvocation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ReflectiveMethodInvocation.html</Path>
    <Anchor>arguments</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>array(TypeDescriptor)</Name>
      <Type>clm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>array(org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ARRAY_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>ARRAY_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ARRAY_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>ARRAY_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arrayToCommaDelimitedString(Object[])</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>arrayToCommaDelimitedString(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arrayToDelimitedString(Object[], String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>arrayToDelimitedString(java.lang.Object[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arrayToList(Object)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>arrayToList(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASM_VERSION</Name>
      <Type>Field</Type>
      <Scope>SpringAsmInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/asm/SpringAsmInfo.html</Path>
    <Anchor>ASM_VERSION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asMap()</Name>
      <Type>instm</Type>
      <Scope>ExtendedModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ExtendedModelMap.html</Path>
    <Anchor>asMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asMap()</Name>
      <Type>intfm</Type>
      <Scope>Model</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/Model.html</Path>
    <Anchor>asMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asMap()</Name>
      <Type>instm</Type>
      <Scope>RedirectAttributesModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.html</Path>
    <Anchor>asMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asNumber(String)</Name>
      <Type>instm</Type>
      <Scope>Constants</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Constants.html</Path>
    <Anchor>asNumber(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asObject(String)</Name>
      <Type>instm</Type>
      <Scope>Constants</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Constants.html</Path>
    <Anchor>asObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectComponentDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AspectComponentDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectComponentDefinition(String, BeanDefinition[], BeanReference[], Object)</Name>
      <Type>Constructor</Type>
      <Scope>AspectComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AspectComponentDefinition.html</Path>
    <Anchor>AspectComponentDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition[], org.springframework.beans.factory.config.BeanReference[], java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectEntry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AspectEntry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectEntry(String, String)</Name>
      <Type>Constructor</Type>
      <Scope>AspectEntry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AspectEntry.html</Path>
    <Anchor>AspectEntry(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectInstanceFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectInstanceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASPECTJ_ANNOTATION_PARAMETER_NAME_DISCOVERER</Name>
      <Type>Field</Type>
      <Scope>AbstractAspectJAdvisorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html</Path>
    <Anchor>ASPECTJ_ANNOTATION_PARAMETER_NAME_DISCOVERER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASPECTJ_AOP_XML_RESOURCE</Name>
      <Type>Field</Type>
      <Scope>AspectJWeavingEnabler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/AspectJWeavingEnabler.html</Path>
    <Anchor>ASPECTJ_AOP_XML_RESOURCE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aspectJAdviceMethod</Name>
      <Type>Field</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>aspectJAdviceMethod</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAdviceParameterNameDiscoverer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAdviceParameterNameDiscoverer(String)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJAdviceParameterNameDiscoverer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.html</Path>
    <Anchor>AspectJAdviceParameterNameDiscoverer(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAdviceParameterNameDiscoverer.AmbiguousBindingException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.AmbiguousBindingException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAdviceParameterNameDiscoverer.AmbiguousBindingException(String)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJAdviceParameterNameDiscoverer.AmbiguousBindingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.AmbiguousBindingException.html</Path>
    <Anchor>AspectJAdviceParameterNameDiscoverer.AmbiguousBindingException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAdvisorFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectJAdvisorFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAfterAdvice</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAfterAdvice(Method, AspectJExpressionPointcut, AspectInstanceFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJAfterAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterAdvice.html</Path>
    <Anchor>AspectJAfterAdvice(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.AspectInstanceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAfterReturningAdvice</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAfterReturningAdvice(Method, AspectJExpressionPointcut, AspectInstanceFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJAfterReturningAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html</Path>
    <Anchor>AspectJAfterReturningAdvice(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.AspectInstanceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAfterThrowingAdvice</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAfterThrowingAdvice(Method, AspectJExpressionPointcut, AspectInstanceFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJAfterThrowingAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html</Path>
    <Anchor>AspectJAfterThrowingAdvice(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.AspectInstanceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAopUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAopUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAopUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJAopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAopUtils.html</Path>
    <Anchor>AspectJAopUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAroundAdvice</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAroundAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAroundAdvice(Method, AspectJExpressionPointcut, AspectInstanceFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJAroundAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJAroundAdvice.html</Path>
    <Anchor>AspectJAroundAdvice(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.AspectInstanceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAsyncConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/aspectj/AspectJAsyncConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAsyncConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJAsyncConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/aspectj/AspectJAsyncConfiguration.html</Path>
    <Anchor>AspectJAsyncConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAwareAdvisorAutoProxyCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.autoproxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/autoproxy/AspectJAwareAdvisorAutoProxyCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJAwareAdvisorAutoProxyCreator()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJAwareAdvisorAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/autoproxy/AspectJAwareAdvisorAutoProxyCreator.html</Path>
    <Anchor>AspectJAwareAdvisorAutoProxyCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJCachingConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/aspectj/AspectJCachingConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJCachingConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/aspectj/AspectJCachingConfiguration.html</Path>
    <Anchor>AspectJCachingConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJExpressionPointcut</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJExpressionPointcut()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
    <Anchor>AspectJExpressionPointcut()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJExpressionPointcut(Class, String[], Class[])</Name>
      <Type>Constructor</Type>
      <Scope>AspectJExpressionPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcut.html</Path>
    <Anchor>AspectJExpressionPointcut(java.lang.Class, java.lang.String[], java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJExpressionPointcutAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJExpressionPointcutAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJExpressionPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJExpressionPointcutAdvisor.html</Path>
    <Anchor>AspectJExpressionPointcutAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJMethodBeforeAdvice</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJMethodBeforeAdvice(Method, AspectJExpressionPointcut, AspectInstanceFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJMethodBeforeAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html</Path>
    <Anchor>AspectJMethodBeforeAdvice(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.AspectInstanceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJPointcutAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJPointcutAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJPointcutAdvisor(AbstractAspectJAdvice)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJPointcutAdvisor.html</Path>
    <Anchor>AspectJPointcutAdvisor(org.springframework.aop.aspectj.AbstractAspectJAdvice)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJPrecedenceInformation</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJPrecedenceInformation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJProxyFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJProxyFactory()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.html</Path>
    <Anchor>AspectJProxyFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJProxyFactory(Object)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.html</Path>
    <Anchor>AspectJProxyFactory(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJProxyFactory(Class[])</Name>
      <Type>Constructor</Type>
      <Scope>AspectJProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.html</Path>
    <Anchor>AspectJProxyFactory(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJProxyUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJProxyUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJProxyUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJProxyUtils.html</Path>
    <Anchor>AspectJProxyUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJTransactionManagementConfiguration</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/aspectj/AspectJTransactionManagementConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJTransactionManagementConfiguration()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJTransactionManagementConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/aspectj/AspectJTransactionManagementConfiguration.html</Path>
    <Anchor>AspectJTransactionManagementConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJTypeFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AspectJTypeFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJTypeFilter(String, ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>AspectJTypeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AspectJTypeFilter.html</Path>
    <Anchor>AspectJTypeFilter(java.lang.String, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJWeaverMessageHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJWeaverMessageHandler()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJWeaverMessageHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html</Path>
    <Anchor>AspectJWeaverMessageHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJWeavingEnabler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.weaving</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/AspectJWeavingEnabler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectJWeavingEnabler()</Name>
      <Type>Constructor</Type>
      <Scope>AspectJWeavingEnabler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/AspectJWeavingEnabler.html</Path>
    <Anchor>AspectJWeavingEnabler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectMetadata</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.aspectj.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectMetadata.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AspectMetadata(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>Constructor</Type>
      <Scope>AspectMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AspectMetadata.html</Path>
    <Anchor>AspectMetadata(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assemble(Serializable, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractLobType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/AbstractLobType.html</Path>
    <Anchor>assemble(java.io.Serializable, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Assert</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Assert()</Name>
      <Type>Constructor</Type>
      <Scope>Assert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Assert.html</Path>
    <Anchor>Assert()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertAndReturnModelAttributeOfType(ModelAndView, String, Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractModelAndViewTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/AbstractModelAndViewTests.html</Path>
    <Anchor>assertAndReturnModelAttributeOfType(org.springframework.web.servlet.ModelAndView, java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertAndReturnModelAttributeOfType(ModelAndView, String, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ModelAndViewAssert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/ModelAndViewAssert.html</Path>
    <Anchor>assertAndReturnModelAttributeOfType(org.springframework.web.servlet.ModelAndView, java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertBoolean(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>assertBoolean(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertCompareListModelAttribute(ModelAndView, String, List)</Name>
      <Type>instm</Type>
      <Scope>AbstractModelAndViewTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/AbstractModelAndViewTests.html</Path>
    <Anchor>assertCompareListModelAttribute(org.springframework.web.servlet.ModelAndView, java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertCompareListModelAttribute(ModelAndView, String, List)</Name>
      <Type>clm</Type>
      <Scope>ModelAndViewAssert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/ModelAndViewAssert.html</Path>
    <Anchor>assertCompareListModelAttribute(org.springframework.web.servlet.ModelAndView, java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertEquals(String, Object, Object)</Name>
      <Type>clm</Type>
      <Scope>AssertionErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/AssertionErrors.html</Path>
    <Anchor>assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertHasAncestorOfType(Tag, Class, String, String)</Name>
      <Type>clm</Type>
      <Scope>TagUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/TagUtils.html</Path>
    <Anchor>assertHasAncestorOfType(javax.servlet.jsp.tagext.Tag, java.lang.Class, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AssertionErrors</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/AssertionErrors.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertLegalRelativeAddition(String, PropertySource&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>assertLegalRelativeAddition(java.lang.String, org.springframework.core.env.PropertySource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertModelAttributeAvailable(ModelAndView, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractModelAndViewTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/AbstractModelAndViewTests.html</Path>
    <Anchor>assertModelAttributeAvailable(org.springframework.web.servlet.ModelAndView, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertModelAttributeAvailable(ModelAndView, String)</Name>
      <Type>clm</Type>
      <Scope>ModelAndViewAssert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/ModelAndViewAssert.html</Path>
    <Anchor>assertModelAttributeAvailable(org.springframework.web.servlet.ModelAndView, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertModelAttributeValue(ModelAndView, String, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractModelAndViewTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/AbstractModelAndViewTests.html</Path>
    <Anchor>assertModelAttributeValue(org.springframework.web.servlet.ModelAndView, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertModelAttributeValue(ModelAndView, String, Object)</Name>
      <Type>clm</Type>
      <Scope>ModelAndViewAssert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/ModelAndViewAssert.html</Path>
    <Anchor>assertModelAttributeValue(org.springframework.web.servlet.ModelAndView, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertModelAttributeValues(ModelAndView, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractModelAndViewTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/AbstractModelAndViewTests.html</Path>
    <Anchor>assertModelAttributeValues(org.springframework.web.servlet.ModelAndView, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertModelAttributeValues(ModelAndView, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ModelAndViewAssert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/ModelAndViewAssert.html</Path>
    <Anchor>assertModelAttributeValues(org.springframework.web.servlet.ModelAndView, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertNode(String, Matcher&amp;lt;? super Node&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XmlExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XmlExpectationsHelper.html</Path>
    <Anchor>assertNode(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertNode(String, Matcher&amp;lt;? super Node&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>assertNode(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertNodeCount(String, Matcher&amp;lt;Integer&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>assertNodeCount(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertNodeCount(String, int)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>assertNodeCount(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertNumber(String, Matcher&amp;lt;? super Double&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>assertNumber(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertNumber(String, Double)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>assertNumber(java.lang.String, java.lang.Double)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertSortAndCompareListModelAttribute(ModelAndView, String, List, Comparator)</Name>
      <Type>instm</Type>
      <Scope>AbstractModelAndViewTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/AbstractModelAndViewTests.html</Path>
    <Anchor>assertSortAndCompareListModelAttribute(org.springframework.web.servlet.ModelAndView, java.lang.String, java.util.List, java.util.Comparator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertSortAndCompareListModelAttribute(ModelAndView, String, List, Comparator)</Name>
      <Type>clm</Type>
      <Scope>ModelAndViewAssert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/ModelAndViewAssert.html</Path>
    <Anchor>assertSortAndCompareListModelAttribute(org.springframework.web.servlet.ModelAndView, java.lang.String, java.util.List, java.util.Comparator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertSource(String, Matcher&amp;lt;? super Source&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XmlExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XmlExpectationsHelper.html</Path>
    <Anchor>assertSource(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertString(String, Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>assertString(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertString(String, String)</Name>
      <Type>instm</Type>
      <Scope>XpathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XpathExpectationsHelper.html</Path>
    <Anchor>assertString(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertThat(T, Matcher&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>MatcherAssertionErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/MatcherAssertionErrors.html</Path>
    <Anchor>assertThat(T, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertThat(String, T, Matcher&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>MatcherAssertionErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/MatcherAssertionErrors.html</Path>
    <Anchor>assertThat(java.lang.String, T, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AssertThrows</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AssertThrows.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AssertThrows(Class)</Name>
      <Type>Constructor</Type>
      <Scope>AssertThrows</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AssertThrows.html</Path>
    <Anchor>AssertThrows(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AssertThrows(Class, String)</Name>
      <Type>Constructor</Type>
      <Scope>AssertThrows</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AssertThrows.html</Path>
    <Anchor>AssertThrows(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertTrue(String, boolean)</Name>
      <Type>clm</Type>
      <Scope>AssertionErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/AssertionErrors.html</Path>
    <Anchor>assertTrue(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertValue(String, Matcher&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JsonPathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/JsonPathExpectationsHelper.html</Path>
    <Anchor>assertValue(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertValue(String, Object)</Name>
      <Type>instm</Type>
      <Scope>JsonPathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/JsonPathExpectationsHelper.html</Path>
    <Anchor>assertValue(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertValueIsArray(String)</Name>
      <Type>instm</Type>
      <Scope>JsonPathExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/JsonPathExpectationsHelper.html</Path>
    <Anchor>assertValueIsArray(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertViewName(ModelAndView, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractModelAndViewTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/AbstractModelAndViewTests.html</Path>
    <Anchor>assertViewName(org.springframework.web.servlet.ModelAndView, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertViewName(ModelAndView, String)</Name>
      <Type>clm</Type>
      <Scope>ModelAndViewAssert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/ModelAndViewAssert.html</Path>
    <Anchor>assertViewName(org.springframework.web.servlet.ModelAndView, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertXmlEqual(String, String)</Name>
      <Type>instm</Type>
      <Scope>XmlExpectationsHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/util/XmlExpectationsHelper.html</Path>
    <Anchor>assertXmlEqual(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Assign</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Assign.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Assign(int, SpelNodeImpl...)</Name>
      <Type>Constructor</Type>
      <Scope>Assign</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/Assign.html</Path>
    <Anchor>Assign(int, org.springframework.expression.spel.ast.SpelNodeImpl...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AssignableTypeFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AssignableTypeFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AssignableTypeFilter(Class)</Name>
      <Type>Constructor</Type>
      <Scope>AssignableTypeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/filter/AssignableTypeFilter.html</Path>
    <Anchor>AssignableTypeFilter(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asString(String)</Name>
      <Type>instm</Type>
      <Scope>Constants</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Constants.html</Path>
    <Anchor>asString(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AstUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/AstUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AstUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AstUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/AstUtils.html</Path>
    <Anchor>AstUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Async</Name>
      <Type>clm</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/Async.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASYNC_ANNOTATION_PROCESSOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>ASYNC_ANNOTATION_PROCESSOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASYNC_ANNOTATION_PROCESSOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationDrivenBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/AnnotationDrivenBeanDefinitionParser.html</Path>
    <Anchor>ASYNC_ANNOTATION_PROCESSOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASYNC_EXECUTION_ASPECT_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>ASYNC_EXECUTION_ASPECT_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASYNC_EXECUTION_ASPECT_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationDrivenBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/AnnotationDrivenBeanDefinitionParser.html</Path>
    <Anchor>ASYNC_EXECUTION_ASPECT_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASYNC_EXECUTION_ASPECT_CLASS_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>ASYNC_EXECUTION_ASPECT_CLASS_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncAdvisor()</Name>
      <Type>instm</Type>
      <Scope>AbstractAsyncConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.html</Path>
    <Anchor>asyncAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncAdvisor()</Name>
      <Type>instm</Type>
      <Scope>ProxyAsyncConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/ProxyAsyncConfiguration.html</Path>
    <Anchor>asyncAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncAdvisor()</Name>
      <Type>instm</Type>
      <Scope>AspectJAsyncConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/aspectj/AspectJAsyncConfiguration.html</Path>
    <Anchor>asyncAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncAnnotationAdvisor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncAnnotationAdvisor()</Name>
      <Type>Constructor</Type>
      <Scope>AsyncAnnotationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html</Path>
    <Anchor>AsyncAnnotationAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncAnnotationAdvisor(Executor)</Name>
      <Type>Constructor</Type>
      <Scope>AsyncAnnotationAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html</Path>
    <Anchor>AsyncAnnotationAdvisor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncAnnotationBeanPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncAnnotationBeanPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>AsyncAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncAnnotationBeanPostProcessor.html</Path>
    <Anchor>AsyncAnnotationBeanPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncConfigurationSelector</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncConfigurationSelector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncConfigurationSelector()</Name>
      <Type>Constructor</Type>
      <Scope>AsyncConfigurationSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncConfigurationSelector.html</Path>
    <Anchor>AsyncConfigurationSelector()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncConfigurer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncDispatch(MvcResult)</Name>
      <Type>clm</Type>
      <Scope>MockMvcRequestBuilders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.html</Path>
    <Anchor>asyncDispatch(org.springframework.test.web.servlet.MvcResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncExecutionAspectSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncExecutionAspectSupport(Executor)</Name>
      <Type>Constructor</Type>
      <Scope>AsyncExecutionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.html</Path>
    <Anchor>AsyncExecutionAspectSupport(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncExecutionInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AsyncExecutionInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncExecutionInterceptor(Executor)</Name>
      <Type>Constructor</Type>
      <Scope>AsyncExecutionInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AsyncExecutionInterceptor.html</Path>
    <Anchor>AsyncExecutionInterceptor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncHandlerInterceptor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/AsyncHandlerInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncNotStarted()</Name>
      <Type>instm</Type>
      <Scope>RequestResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
    <Anchor>asyncNotStarted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncResult</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncResult.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncResult(V)</Name>
      <Type>Constructor</Type>
      <Scope>AsyncResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncResult.html</Path>
    <Anchor>AsyncResult(V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncResult(Matcher&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
    <Anchor>asyncResult(org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncResult(Object)</Name>
      <Type>instm</Type>
      <Scope>RequestResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
    <Anchor>asyncResult(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncStarted()</Name>
      <Type>instm</Type>
      <Scope>RequestResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
    <Anchor>asyncStarted()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncSupportConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/AsyncSupportConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncSupportConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>AsyncSupportConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/AsyncSupportConfigurer.html</Path>
    <Anchor>AsyncSupportConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncTaskExecutor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.task</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/AsyncTaskExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncTaskMethodReturnValueHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AsyncTaskMethodReturnValueHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncTaskMethodReturnValueHandler(BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>AsyncTaskMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AsyncTaskMethodReturnValueHandler.html</Path>
    <Anchor>AsyncTaskMethodReturnValueHandler(org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncWebRequest</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/AsyncWebRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncWebRequestInterceptor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context.request</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/AsyncWebRequestInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AtomFeedHttpMessageConverter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.converter.feed</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/AtomFeedHttpMessageConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AtomFeedHttpMessageConverter()</Name>
      <Type>Constructor</Type>
      <Scope>AtomFeedHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/feed/AtomFeedHttpMessageConverter.html</Path>
    <Anchor>AtomFeedHttpMessageConverter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attribute(String, Matcher&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>FlashAttributeResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/FlashAttributeResultMatchers.html</Path>
    <Anchor>attribute(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>FlashAttributeResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/FlashAttributeResultMatchers.html</Path>
    <Anchor>attribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attribute(String, Matcher&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>attribute(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>attribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attribute(String, Matcher&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
    <Anchor>attribute(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attribute(String, Object)</Name>
      <Type>instm</Type>
      <Scope>RequestResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/RequestResultMatchers.html</Path>
    <Anchor>attribute(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ATTRIBUTE_OPERATION_VISIBILITY</Name>
      <Type>Field</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>ATTRIBUTE_OPERATION_VISIBILITY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AttributeAccessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AttributeAccessorSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessorSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AttributeAccessorSupport()</Name>
      <Type>Constructor</Type>
      <Scope>AttributeAccessorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessorSupport.html</Path>
    <Anchor>AttributeAccessorSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeCount(int)</Name>
      <Type>instm</Type>
      <Scope>FlashAttributeResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/FlashAttributeResultMatchers.html</Path>
    <Anchor>attributeCount(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeErrorCount(String, int)</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>attributeErrorCount(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeExists(String...)</Name>
      <Type>instm</Type>
      <Scope>FlashAttributeResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/FlashAttributeResultMatchers.html</Path>
    <Anchor>attributeExists(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeExists(String...)</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>attributeExists(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeHasErrors(String...)</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>attributeHasErrors(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeHasFieldErrors(String, String...)</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>attributeHasFieldErrors(java.lang.String, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeHasNoErrors(String...)</Name>
      <Type>instm</Type>
      <Scope>ModelResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ModelResultMatchers.html</Path>
    <Anchor>attributeHasNoErrors(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames()</Name>
      <Type>intfm</Type>
      <Scope>AttributeAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessor.html</Path>
    <Anchor>attributeNames()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames()</Name>
      <Type>instm</Type>
      <Scope>AttributeAccessorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessorSupport.html</Path>
    <Anchor>attributeNames()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNameToPropertyName(String)</Name>
      <Type>clm</Type>
      <Scope>Conventions</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Conventions.html</Path>
    <Anchor>attributeNameToPropertyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeSource</Name>
      <Type>Field</Type>
      <Scope>TransactionalTestExecutionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/transaction/TransactionalTestExecutionListener.html</Path>
    <Anchor>attributeSource</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>authenticate(HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>authenticate(javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTO_PROXY_CREATOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AopConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AopConfigUtils.html</Path>
    <Anchor>AUTO_PROXY_CREATOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOCOMPLETE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>InputTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/InputTag.html</Path>
    <Anchor>AUTOCOMPLETE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTODETECT_ALL</Name>
      <Type>Field</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>AUTODETECT_ALL</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTODETECT_ASSEMBLER</Name>
      <Type>Field</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>AUTODETECT_ASSEMBLER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTODETECT_MBEAN</Name>
      <Type>Field</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>AUTODETECT_MBEAN</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTODETECT_NONE</Name>
      <Type>Field</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>AUTODETECT_NONE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutodetectCapableMBeanInfoAssembler</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jmx.export.assembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AutodetectCapableMBeanInfoAssembler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autodetectConfiguration()</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>autodetectConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autodetectVelocityEngine()</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>autodetectVelocityEngine()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autogenerateFor()</Name>
      <Type>instm</Type>
      <Scope>LabelTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/LabelTag.html</Path>
    <Anchor>autogenerateFor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autogenerateId()</Name>
      <Type>instm</Type>
      <Scope>AbstractCheckedElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html</Path>
    <Anchor>autogenerateId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autogenerateId()</Name>
      <Type>instm</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>autogenerateId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autogenerateId()</Name>
      <Type>instm</Type>
      <Scope>ErrorsTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/ErrorsTag.html</Path>
    <Anchor>autogenerateId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autogenerateId()</Name>
      <Type>instm</Type>
      <Scope>FormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/FormTag.html</Path>
    <Anchor>autogenerateId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autogenerateId()</Name>
      <Type>instm</Type>
      <Scope>OptionTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/OptionTag.html</Path>
    <Anchor>autogenerateId()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoPopulatingList</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoPopulatingList(Class&amp;lt;? extends E&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>AutoPopulatingList(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoPopulatingList(List&amp;lt;E&amp;gt;, Class&amp;lt;? extends E&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>AutoPopulatingList(java.util.List, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoPopulatingList(AutoPopulatingList.ElementFactory&amp;lt;E&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>AutoPopulatingList(org.springframework.util.AutoPopulatingList.ElementFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoPopulatingList(List&amp;lt;E&amp;gt;, AutoPopulatingList.ElementFactory&amp;lt;E&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>AutoPopulatingList(java.util.List, org.springframework.util.AutoPopulatingList.ElementFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoPopulatingList.ElementFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.ElementFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoPopulatingList.ElementInstantiationException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.ElementInstantiationException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoPopulatingList.ElementInstantiationException(String)</Name>
      <Type>Constructor</Type>
      <Scope>AutoPopulatingList.ElementInstantiationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.ElementInstantiationException.html</Path>
    <Anchor>AutoPopulatingList.ElementInstantiationException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoProxyRegistrar</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AutoProxyRegistrar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoProxyRegistrar()</Name>
      <Type>Constructor</Type>
      <Scope>AutoProxyRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AutoProxyRegistrar.html</Path>
    <Anchor>AutoProxyRegistrar()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoProxyUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.framework.autoproxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AutoProxyUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutoProxyUtils()</Name>
      <Type>Constructor</Type>
      <Scope>AutoProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AutoProxyUtils.html</Path>
    <Anchor>AutoProxyUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Autowire</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/Autowire.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowire(Class, int, boolean)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>autowire(java.lang.Class, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowire(Class, int, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>autowire(java.lang.Class, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>AUTOWIRE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_AUTODETECT</Name>
      <Type>Field</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>AUTOWIRE_AUTODETECT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_AUTODETECT</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>AUTOWIRE_AUTODETECT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_AUTODETECT_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>AUTOWIRE_AUTODETECT_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_NAME</Name>
      <Type>Field</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>AUTOWIRE_BY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>AUTOWIRE_BY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_NAME</Name>
      <Type>Field</Type>
      <Scope>BeanWiringInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfo.html</Path>
    <Anchor>AUTOWIRE_BY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>AUTOWIRE_BY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_NAME</Name>
      <Type>Field</Type>
      <Scope>DelegatingActionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionUtils.html</Path>
    <Anchor>AUTOWIRE_BY_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_NAME_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>AUTOWIRE_BY_NAME_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_TYPE</Name>
      <Type>Field</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>AUTOWIRE_BY_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_TYPE</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>AUTOWIRE_BY_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_TYPE</Name>
      <Type>Field</Type>
      <Scope>BeanWiringInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanWiringInfo.html</Path>
    <Anchor>AUTOWIRE_BY_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_TYPE</Name>
      <Type>Field</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>AUTOWIRE_BY_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_TYPE</Name>
      <Type>Field</Type>
      <Scope>DelegatingActionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/DelegatingActionUtils.html</Path>
    <Anchor>AUTOWIRE_BY_TYPE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_BY_TYPE_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>AUTOWIRE_BY_TYPE_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_CANDIDATE_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>AUTOWIRE_CANDIDATE_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_CONSTRUCTOR</Name>
      <Type>Field</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>AUTOWIRE_CONSTRUCTOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_CONSTRUCTOR</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>AUTOWIRE_CONSTRUCTOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_CONSTRUCTOR_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>AUTOWIRE_CONSTRUCTOR_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_NO</Name>
      <Type>Field</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>AUTOWIRE_NO</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_NO</Name>
      <Type>Field</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>AUTOWIRE_NO</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_NO</Name>
      <Type>Field</Type>
      <Scope>AbstractDependencyInjectionSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractDependencyInjectionSpringContextTests.html</Path>
    <Anchor>AUTOWIRE_NO</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRE_NO_VALUE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>AUTOWIRE_NO_VALUE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowireBean(Object)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>autowireBean(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowireBean(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>autowireBean(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowireBean(InvocationContext)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanAutowiringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html</Path>
    <Anchor>autowireBean(javax.interceptor.InvocationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowireBeanProperties(Object, int, boolean)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>autowireBeanProperties(java.lang.Object, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowireBeanProperties(Object, int, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>autowireBeanProperties(java.lang.Object, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowireByName(String, AbstractBeanDefinition, BeanWrapper, MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>autowireByName(java.lang.String, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.BeanWrapper, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowireByType(String, AbstractBeanDefinition, BeanWrapper, MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>autowireByType(java.lang.String, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.BeanWrapper, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowireCandidateQualifier</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AutowireCandidateQualifier.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowireCandidateQualifier(Class)</Name>
      <Type>Constructor</Type>
      <Scope>AutowireCandidateQualifier</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AutowireCandidateQualifier.html</Path>
    <Anchor>AutowireCandidateQualifier(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowireCandidateQualifier(String)</Name>
      <Type>Constructor</Type>
      <Scope>AutowireCandidateQualifier</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AutowireCandidateQualifier.html</Path>
    <Anchor>AutowireCandidateQualifier(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowireCandidateQualifier(Class, Object)</Name>
      <Type>Constructor</Type>
      <Scope>AutowireCandidateQualifier</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AutowireCandidateQualifier.html</Path>
    <Anchor>AutowireCandidateQualifier(java.lang.Class, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowireCandidateQualifier(String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>AutowireCandidateQualifier</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AutowireCandidateQualifier.html</Path>
    <Anchor>AutowireCandidateQualifier(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowireCandidateResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AutowireCandidateResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowireCapableBeanFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowireConstructor(String, RootBeanDefinition, Constructor[], Object[])</Name>
      <Type>Constructor</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>autowireConstructor(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.reflect.Constructor[], java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Autowired</Name>
      <Type>clm</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/Autowired.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowiredAnnotationBeanPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowiredAnnotationBeanPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>AutowiredAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html</Path>
    <Anchor>AutowiredAnnotationBeanPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autowireResource(BeanFactory, CommonAnnotationBeanPostProcessor.LookupElement, String)</Name>
      <Type>instm</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>autowireResource(org.springframework.beans.factory.BeanFactory, org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.LookupElement, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowiringRequestProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringRequestProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowiringRequestProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>AutowiringRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringRequestProcessor.html</Path>
    <Anchor>AutowiringRequestProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowiringTilesRequestProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringTilesRequestProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutowiringTilesRequestProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>AutowiringTilesRequestProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/AutowiringTilesRequestProcessor.html</Path>
    <Anchor>AutowiringTilesRequestProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>awaitTermination(long, TimeUnit)</Name>
      <Type>instm</Type>
      <Scope>ExecutorServiceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ExecutorServiceAdapter.html</Path>
    <Anchor>awaitTermination(long, java.util.concurrent.TimeUnit)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Aware</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/Aware.html</Path>
  </Token>
</Tokens>
