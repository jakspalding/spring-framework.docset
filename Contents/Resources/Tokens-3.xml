<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>C3P0NativeJdbcExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.nativejdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>C3P0NativeJdbcExtractor()</Name>
      <Type>Constructor</Type>
      <Scope>C3P0NativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html</Path>
    <Anchor>C3P0NativeJdbcExtractor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cache</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.cache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/Cache.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cache.ValueWrapper</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.cache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/Cache.ValueWrapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CACHE_ADVISOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>CACHE_ADVISOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CACHE_ASPECT_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>CACHE_ASPECT_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CACHE_ASPECT_CLASS_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>CACHE_ASPECT_CLASS_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CACHE_ASPECT_CONFIGURATION_CLASS_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>CACHE_ASPECT_CONFIGURATION_CLASS_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CACHE_AUTO</Name>
      <Type>Field</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>CACHE_AUTO</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CACHE_CONNECTION</Name>
      <Type>Field</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>CACHE_CONNECTION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CACHE_CONSUMER</Name>
      <Type>Field</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>CACHE_CONSUMER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CACHE_NONE</Name>
      <Type>Field</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>CACHE_NONE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CACHE_SESSION</Name>
      <Type>Field</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>CACHE_SESSION</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cacheable</Name>
      <Type>clm</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/Cacheable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheableOperation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheableOperation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheableOperation()</Name>
      <Type>Constructor</Type>
      <Scope>CacheableOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheableOperation.html</Path>
    <Anchor>CacheableOperation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheAdvisor()</Name>
      <Type>instm</Type>
      <Scope>ProxyCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/ProxyCachingConfiguration.html</Path>
    <Anchor>cacheAdvisor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheAnnotationParser</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/CacheAnnotationParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheAspect()</Name>
      <Type>instm</Type>
      <Scope>AspectJCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/aspectj/AspectJCachingConfiguration.html</Path>
    <Anchor>cacheAspect()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheAspectSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheAspectSupport()</Name>
      <Type>Constructor</Type>
      <Scope>CacheAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.html</Path>
    <Anchor>CacheAspectSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheAspectSupport.CacheOperationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.CacheOperationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheAspectSupport.CacheOperationContext(CacheOperation, Method, Object[], Object, Class&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>CacheAspectSupport.CacheOperationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.CacheOperationContext.html</Path>
    <Anchor>CacheAspectSupport.CacheOperationContext(org.springframework.cache.interceptor.CacheOperation, java.lang.reflect.Method, java.lang.Object[], java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheAspectSupport.Invoker</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheAspectSupport.Invoker.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachedIntrospectionResults</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/CachedIntrospectionResults.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheEvict</Name>
      <Type>clm</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/CacheEvict.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheEvictOperation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheEvictOperation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheEvictOperation()</Name>
      <Type>Constructor</Type>
      <Scope>CacheEvictOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheEvictOperation.html</Path>
    <Anchor>CacheEvictOperation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheForSeconds(MimeResponse, int)</Name>
      <Type>instm</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>cacheForSeconds(javax.portlet.MimeResponse, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheForSeconds(HttpServletResponse, int)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>cacheForSeconds(javax.servlet.http.HttpServletResponse, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheForSeconds(HttpServletResponse, int, boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>cacheForSeconds(javax.servlet.http.HttpServletResponse, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheInterceptor()</Name>
      <Type>instm</Type>
      <Scope>ProxyCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/ProxyCachingConfiguration.html</Path>
    <Anchor>cacheInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>CacheInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheInterceptor.html</Path>
    <Anchor>CacheInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheKeys()</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>cacheKeys()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheManager</Name>
      <Type>Field</Type>
      <Scope>AbstractCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/AbstractCachingConfiguration.html</Path>
    <Anchor>cacheManager</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheManager()</Name>
      <Type>intfm</Type>
      <Scope>CachingConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/CachingConfigurer.html</Path>
    <Anchor>cacheManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheManager</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.cache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/CacheManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheNamespaceHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/config/CacheNamespaceHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheNamespaceHandler()</Name>
      <Type>Constructor</Type>
      <Scope>CacheNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/config/CacheNamespaceHandler.html</Path>
    <Anchor>CacheNamespaceHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheOperation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheOperation()</Name>
      <Type>Constructor</Type>
      <Scope>CacheOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperation.html</Path>
    <Anchor>CacheOperation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheOperationSource()</Name>
      <Type>instm</Type>
      <Scope>ProxyCachingConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/ProxyCachingConfiguration.html</Path>
    <Anchor>cacheOperationSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheOperationSource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheOperationSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheProxyFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheProxyFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CacheProxyFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>CacheProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheProxyFactoryBean.html</Path>
    <Anchor>CacheProxyFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachePut</Name>
      <Type>clm</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/CachePut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachePutOperation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CachePutOperation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachePutOperation()</Name>
      <Type>Constructor</Type>
      <Scope>CachePutOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CachePutOperation.html</Path>
    <Anchor>CachePutOperation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Caching</Name>
      <Type>clm</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/Caching.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingConfigurationSelector</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/CachingConfigurationSelector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingConfigurationSelector()</Name>
      <Type>Constructor</Type>
      <Scope>CachingConfigurationSelector</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/CachingConfigurationSelector.html</Path>
    <Anchor>CachingConfigurationSelector()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingConfigurer</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.cache.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/annotation/CachingConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingConnectionFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/CachingConnectionFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingConnectionFactory()</Name>
      <Type>Constructor</Type>
      <Scope>CachingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/CachingConnectionFactory.html</Path>
    <Anchor>CachingConnectionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingConnectionFactory(ConnectionFactory)</Name>
      <Type>Constructor</Type>
      <Scope>CachingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/CachingConnectionFactory.html</Path>
    <Anchor>CachingConnectionFactory(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingDestinationResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.support.destination</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/CachingDestinationResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMapDecorator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMapDecorator()</Name>
      <Type>Constructor</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>CachingMapDecorator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMapDecorator(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>CachingMapDecorator(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMapDecorator(boolean, int)</Name>
      <Type>Constructor</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>CachingMapDecorator(boolean, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMapDecorator(Map&amp;lt;K, V&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>CachingMapDecorator(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMapDecorator(Map&amp;lt;K, V&amp;gt;, boolean, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>CachingMapDecorator(java.util.Map, boolean, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMetadataReaderFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.type.classreading</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/CachingMetadataReaderFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMetadataReaderFactory()</Name>
      <Type>Constructor</Type>
      <Scope>CachingMetadataReaderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/CachingMetadataReaderFactory.html</Path>
    <Anchor>CachingMetadataReaderFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMetadataReaderFactory(ResourceLoader)</Name>
      <Type>Constructor</Type>
      <Scope>CachingMetadataReaderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/CachingMetadataReaderFactory.html</Path>
    <Anchor>CachingMetadataReaderFactory(org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachingMetadataReaderFactory(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>CachingMetadataReaderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/CachingMetadataReaderFactory.html</Path>
    <Anchor>CachingMetadataReaderFactory(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateAllFilenames(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>calculateAllFilenames(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateArgumentBindings()</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>calculateArgumentBindings()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateEndpointAddress(Endpoint, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter.html</Path>
    <Anchor>calculateEndpointAddress(javax.xml.ws.Endpoint, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateEndpointPath(Endpoint, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleHttpServerJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html</Path>
    <Anchor>calculateEndpointPath(javax.xml.ws.Endpoint, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateFilenamesForLocale(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>calculateFilenamesForLocale(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateShift(int, int)</Name>
      <Type>clm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>calculateShift(int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call(CallableStatementCreator, List&amp;lt;SqlParameter&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>JdbcOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcOperations.html</Path>
    <Anchor>call(org.springframework.jdbc.core.CallableStatementCreator, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call(CallableStatementCreator, List&amp;lt;SqlParameter&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>call(org.springframework.jdbc.core.CallableStatementCreator, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableMethodReturnValueHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.method.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/CallableMethodReturnValueHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableMethodReturnValueHandler()</Name>
      <Type>Constructor</Type>
      <Scope>CallableMethodReturnValueHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/CallableMethodReturnValueHandler.html</Path>
    <Anchor>CallableMethodReturnValueHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableProcessingInterceptor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableProcessingInterceptorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.request.async</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableProcessingInterceptorAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>CallableProcessingInterceptorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter.html</Path>
    <Anchor>CallableProcessingInterceptorAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableStatementCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableStatementCreator</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableStatementCreatorFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCreatorFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableStatementCreatorFactory(String)</Name>
      <Type>Constructor</Type>
      <Scope>CallableStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCreatorFactory.html</Path>
    <Anchor>CallableStatementCreatorFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallableStatementCreatorFactory(String, List&amp;lt;SqlParameter&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>CallableStatementCreatorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCreatorFactory.html</Path>
    <Anchor>CallableStatementCreatorFactory(java.lang.String, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallbackPreferringPlatformTransactionManager</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.transaction.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallMetaDataContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallMetaDataContext()</Name>
      <Type>Constructor</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>CallMetaDataContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallMetaDataProvider</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallMetaDataProviderFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallMetaDataProviderFactory()</Name>
      <Type>Constructor</Type>
      <Scope>CallMetaDataProviderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html</Path>
    <Anchor>CallMetaDataProviderFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callNextHandlerInChain(FacesContext, String, String, NavigationHandler)</Name>
      <Type>instm</Type>
      <Scope>DecoratingNavigationHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/jsf/DecoratingNavigationHandler.html</Path>
    <Anchor>callNextHandlerInChain(javax.faces.context.FacesContext, java.lang.String, java.lang.String, javax.faces.application.NavigationHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallParameterMetaData</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core.metadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallParameterMetaData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallParameterMetaData(String, int, int, String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CallParameterMetaData</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallParameterMetaData.html</Path>
    <Anchor>CallParameterMetaData(java.lang.String, int, int, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canApply(Pointcut, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>canApply(org.springframework.aop.Pointcut, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canApply(Pointcut, Class&amp;lt;?&amp;gt;, boolean)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>canApply(org.springframework.aop.Pointcut, java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canApply(Advisor, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>canApply(org.springframework.aop.Advisor, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canApply(Advisor, Class&amp;lt;?&amp;gt;, boolean)</Name>
      <Type>clm</Type>
      <Scope>AopUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/AopUtils.html</Path>
    <Anchor>canApply(org.springframework.aop.Advisor, java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBypassConvert(TypeDescriptor, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>canBypassConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel(boolean)</Name>
      <Type>instm</Type>
      <Scope>AsyncResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/AsyncResult.html</Path>
    <Anchor>cancel(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CancellableFormController</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/CancellableFormController.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CancellableFormController()</Name>
      <Type>Constructor</Type>
      <Scope>CancellableFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/CancellableFormController.html</Path>
    <Anchor>CancellableFormController()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelRefresh(BeansException)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>cancelRefresh(org.springframework.beans.BeansException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelRefresh(BeansException)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>cancelRefresh(org.springframework.beans.BeansException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelRefresh(BeansException)</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>cancelRefresh(org.springframework.beans.BeansException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canCompare(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>StandardTypeComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeComparator.html</Path>
    <Anchor>canCompare(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canCompare(Object, Object)</Name>
      <Type>intfm</Type>
      <Scope>TypeComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/TypeComparator.html</Path>
    <Anchor>canCompare(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canConvert(Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionService.html</Path>
    <Anchor>canConvert(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canConvert(TypeDescriptor, TypeDescriptor)</Name>
      <Type>intfm</Type>
      <Scope>ConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionService.html</Path>
    <Anchor>canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canConvert(Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>canConvert(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canConvert(TypeDescriptor, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canConvert(TypeDescriptor, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>StandardTypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeConverter.html</Path>
    <Anchor>canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canConvert(TypeDescriptor, TypeDescriptor)</Name>
      <Type>intfm</Type>
      <Scope>TypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/TypeConverter.html</Path>
    <Anchor>canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canHandle(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>canHandle(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotAcquireLockException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/CannotAcquireLockException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotAcquireLockException(String)</Name>
      <Type>Constructor</Type>
      <Scope>CannotAcquireLockException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/CannotAcquireLockException.html</Path>
    <Anchor>CannotAcquireLockException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotAcquireLockException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>CannotAcquireLockException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/CannotAcquireLockException.html</Path>
    <Anchor>CannotAcquireLockException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotCreateRecordException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jca.cci</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/CannotCreateRecordException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotCreateRecordException(String, ResourceException)</Name>
      <Type>Constructor</Type>
      <Scope>CannotCreateRecordException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/CannotCreateRecordException.html</Path>
    <Anchor>CannotCreateRecordException(java.lang.String, javax.resource.ResourceException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotCreateTransactionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.transaction</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/CannotCreateTransactionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotCreateTransactionException(String)</Name>
      <Type>Constructor</Type>
      <Scope>CannotCreateTransactionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/CannotCreateTransactionException.html</Path>
    <Anchor>CannotCreateTransactionException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotCreateTransactionException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>CannotCreateTransactionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/CannotCreateTransactionException.html</Path>
    <Anchor>CannotCreateTransactionException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotGetCciConnectionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jca.cci</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/CannotGetCciConnectionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotGetCciConnectionException(String, ResourceException)</Name>
      <Type>Constructor</Type>
      <Scope>CannotGetCciConnectionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/CannotGetCciConnectionException.html</Path>
    <Anchor>CannotGetCciConnectionException(java.lang.String, javax.resource.ResourceException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotGetJdbcConnectionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/CannotGetJdbcConnectionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotGetJdbcConnectionException(String, SQLException)</Name>
      <Type>Constructor</Type>
      <Scope>CannotGetJdbcConnectionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/CannotGetJdbcConnectionException.html</Path>
    <Anchor>CannotGetJdbcConnectionException(java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotGetJdbcConnectionException(String, ClassNotFoundException)</Name>
      <Type>Constructor</Type>
      <Scope>CannotGetJdbcConnectionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/CannotGetJdbcConnectionException.html</Path>
    <Anchor>CannotGetJdbcConnectionException(java.lang.String, java.lang.ClassNotFoundException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotLoadBeanClassException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans.factory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/CannotLoadBeanClassException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotLoadBeanClassException(String, String, String, ClassNotFoundException)</Name>
      <Type>Constructor</Type>
      <Scope>CannotLoadBeanClassException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/CannotLoadBeanClassException.html</Path>
    <Anchor>CannotLoadBeanClassException(java.lang.String, java.lang.String, java.lang.String, java.lang.ClassNotFoundException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotLoadBeanClassException(String, String, String, LinkageError)</Name>
      <Type>Constructor</Type>
      <Scope>CannotLoadBeanClassException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/CannotLoadBeanClassException.html</Path>
    <Anchor>CannotLoadBeanClassException(java.lang.String, java.lang.String, java.lang.String, java.lang.LinkageError)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotReadScriptException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jdbc.datasource.init</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/CannotReadScriptException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotReadScriptException(EncodedResource, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>CannotReadScriptException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/CannotReadScriptException.html</Path>
    <Anchor>CannotReadScriptException(org.springframework.core.io.support.EncodedResource, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotSerializeTransactionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/CannotSerializeTransactionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotSerializeTransactionException(String)</Name>
      <Type>Constructor</Type>
      <Scope>CannotSerializeTransactionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/CannotSerializeTransactionException.html</Path>
    <Anchor>CannotSerializeTransactionException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannotSerializeTransactionException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>CannotSerializeTransactionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/CannotSerializeTransactionException.html</Path>
    <Anchor>CannotSerializeTransactionException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canonicalFieldName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractErrors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractErrors.html</Path>
    <Anchor>canonicalFieldName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canonicalFieldName(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractPropertyBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/AbstractPropertyBindingResult.html</Path>
    <Anchor>canonicalFieldName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canonicalName(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleAliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SimpleAliasRegistry.html</Path>
    <Anchor>canonicalName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canonicalPropertyName(String)</Name>
      <Type>clm</Type>
      <Scope>PropertyAccessorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessorUtils.html</Path>
    <Anchor>canonicalPropertyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canonicalPropertyNames(String[])</Name>
      <Type>clm</Type>
      <Scope>PropertyAccessorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyAccessorUtils.html</Path>
    <Anchor>canonicalPropertyNames(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>BeanExpressionContextAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanExpressionContextAccessor.html</Path>
    <Anchor>canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanFactoryAccessor.html</Path>
    <Anchor>canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>EnvironmentAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/EnvironmentAccessor.html</Path>
    <Anchor>canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>MapAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/MapAccessor.html</Path>
    <Anchor>canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(EvaluationContext, Object, String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/PropertyAccessor.html</Path>
    <Anchor>canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>ReflectivePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
    <Anchor>canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(MediaType)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>canRead(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>BufferedImageHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>FormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Type, Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>intfm</Type>
      <Scope>GenericHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/GenericHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.reflect.Type, java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>intfm</Type>
      <Scope>HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Type, Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.reflect.Type, java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Type, Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.reflect.Type, java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>ObjectToStringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ObjectToStringHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2CollectionHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Type, Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2CollectionHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.reflect.Type, java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRead(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2RootElementHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html</Path>
    <Anchor>canRead(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>BeanExpressionContextAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanExpressionContextAccessor.html</Path>
    <Anchor>canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>BeanFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/BeanFactoryAccessor.html</Path>
    <Anchor>canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>EnvironmentAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/EnvironmentAccessor.html</Path>
    <Anchor>canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>MapAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/MapAccessor.html</Path>
    <Anchor>canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(EvaluationContext, Object, String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/PropertyAccessor.html</Path>
    <Anchor>canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>ReflectivePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
    <Anchor>canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>canWrite(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(MediaType)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/AbstractHttpMessageConverter.html</Path>
    <Anchor>canWrite(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>BufferedImageHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/BufferedImageHttpMessageConverter.html</Path>
    <Anchor>canWrite(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>FormHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/FormHttpMessageConverter.html</Path>
    <Anchor>canWrite(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>intfm</Type>
      <Scope>HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/HttpMessageConverter.html</Path>
    <Anchor>canWrite(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html</Path>
    <Anchor>canWrite(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html</Path>
    <Anchor>canWrite(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>ObjectToStringHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/ObjectToStringHttpMessageConverter.html</Path>
    <Anchor>canWrite(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2CollectionHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.html</Path>
    <Anchor>canWrite(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canWrite(Class&amp;lt;?&amp;gt;, MediaType)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2RootElementHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html</Path>
    <Anchor>canWrite(java.lang.Class, org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capitalize(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>capitalize(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>caseInsensitiveValueOf(E[], String)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>caseInsensitiveValueOf(E[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CastorMappingException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.oxm.castor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMappingException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CastorMappingException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>CastorMappingException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMappingException.html</Path>
    <Anchor>CastorMappingException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CastorMarshaller</Name>
      <Type>cl</Type>
      <Scope>org.springframework.oxm.castor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CastorMarshaller()</Name>
      <Type>Constructor</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>CastorMarshaller()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CastorMarshallerBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.oxm.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/config/CastorMarshallerBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CastorMarshallerBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>CastorMarshallerBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/config/CastorMarshallerBeanDefinitionParser.html</Path>
    <Anchor>CastorMarshallerBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catalogNameToUse(String)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>catalogNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catalogNameToUse(String)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>catalogNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catalogNameToUse(String)</Name>
      <Type>instm</Type>
      <Scope>GenericTableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html</Path>
    <Anchor>catalogNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catalogNameToUse(String)</Name>
      <Type>intfm</Type>
      <Scope>TableMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProvider.html</Path>
    <Anchor>catalogNameToUse(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciDaoSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.core.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CciDaoSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciDaoSupport()</Name>
      <Type>Constructor</Type>
      <Scope>CciDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CciDaoSupport.html</Path>
    <Anchor>CciDaoSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciLocalTransactionManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciLocalTransactionManager()</Name>
      <Type>Constructor</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>CciLocalTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciLocalTransactionManager(ConnectionFactory)</Name>
      <Type>Constructor</Type>
      <Scope>CciLocalTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/CciLocalTransactionManager.html</Path>
    <Anchor>CciLocalTransactionManager(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciOperationNotSupportedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.jca.cci</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/CciOperationNotSupportedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciOperationNotSupportedException(String, ResourceException)</Name>
      <Type>Constructor</Type>
      <Scope>CciOperationNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/CciOperationNotSupportedException.html</Path>
    <Anchor>CciOperationNotSupportedException(java.lang.String, javax.resource.ResourceException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciOperations</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jca.cci.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciOperations.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciTemplate</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciTemplate()</Name>
      <Type>Constructor</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>CciTemplate()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciTemplate(ConnectionFactory)</Name>
      <Type>Constructor</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>CciTemplate(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CciTemplate(ConnectionFactory, ConnectionSpec)</Name>
      <Type>Constructor</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>CciTemplate(javax.resource.cci.ConnectionFactory, javax.resource.cci.ConnectionSpec)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CGLIB_CLASS_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>CGLIB_CLASS_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CglibSubclassingInstantiationStrategy</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CglibSubclassingInstantiationStrategy()</Name>
      <Type>Constructor</Type>
      <Scope>CglibSubclassingInstantiationStrategy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html</Path>
    <Anchor>CglibSubclassingInstantiationStrategy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChainedExceptionListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ChainedExceptionListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChainedExceptionListener()</Name>
      <Type>Constructor</Type>
      <Scope>ChainedExceptionListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ChainedExceptionListener.html</Path>
    <Anchor>ChainedExceptionListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChainedPersistenceExceptionTranslator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.dao.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/ChainedPersistenceExceptionTranslator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChainedPersistenceExceptionTranslator()</Name>
      <Type>Constructor</Type>
      <Scope>ChainedPersistenceExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/ChainedPersistenceExceptionTranslator.html</Path>
    <Anchor>ChainedPersistenceExceptionTranslator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changesSince(PropertyValues)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>changesSince(org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changesSince(PropertyValues)</Name>
      <Type>intfm</Type>
      <Scope>PropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValues.html</Path>
    <Anchor>changesSince(org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CharacterEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CharacterEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CharacterEditor(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CharacterEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CharacterEditor.html</Path>
    <Anchor>CharacterEditor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>characterEncoding(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>characterEncoding(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CharacterEncodingFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CharacterEncodingFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CharacterEncodingFilter()</Name>
      <Type>Constructor</Type>
      <Scope>CharacterEncodingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CharacterEncodingFilter.html</Path>
    <Anchor>CharacterEncodingFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CharArrayPropertyEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CharArrayPropertyEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CharArrayPropertyEditor()</Name>
      <Type>Constructor</Type>
      <Scope>CharArrayPropertyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CharArrayPropertyEditor.html</Path>
    <Anchor>CharArrayPropertyEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CharsetEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CharsetEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CharsetEditor()</Name>
      <Type>Constructor</Type>
      <Scope>CharsetEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CharsetEditor.html</Path>
    <Anchor>CharsetEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check(PortletRequest, PortletResponse)</Name>
      <Type>instm</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>check(javax.portlet.PortletRequest, javax.portlet.PortletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkActive()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>checkActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkActive()</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>checkActive()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkAllowedFields(MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>checkAllowedFields(org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkAndPrepare(PortletRequest, MimeResponse)</Name>
      <Type>instm</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>checkAndPrepare(javax.portlet.PortletRequest, javax.portlet.MimeResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkAndPrepare(PortletRequest, MimeResponse, int)</Name>
      <Type>instm</Type>
      <Scope>PortletContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/handler/PortletContentGenerator.html</Path>
    <Anchor>checkAndPrepare(javax.portlet.PortletRequest, javax.portlet.MimeResponse, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkAndPrepare(HttpServletRequest, HttpServletResponse, boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>checkAndPrepare(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkAndPrepare(HttpServletRequest, HttpServletResponse, int, boolean)</Name>
      <Type>instm</Type>
      <Scope>WebContentGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/WebContentGenerator.html</Path>
    <Anchor>checkAndPrepare(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CheckboxesTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/CheckboxesTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CheckboxesTag()</Name>
      <Type>Constructor</Type>
      <Scope>CheckboxesTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/CheckboxesTag.html</Path>
    <Anchor>CheckboxesTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CheckboxTag</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.tags.form</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/CheckboxTag.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CheckboxTag()</Name>
      <Type>Constructor</Type>
      <Scope>CheckboxTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/CheckboxTag.html</Path>
    <Anchor>CheckboxTag()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkCandidate(String, BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>checkCandidate(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkCommand(Object)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>checkCommand(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkCommand(Object)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>checkCommand(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkCompiled()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>checkCompiled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkCompiled()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>checkCompiled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkCompiled()</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>checkCompiled()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkConfigMembers(RootBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>InjectionMetadata</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.html</Path>
    <Anchor>checkConfigMembers(org.springframework.beans.factory.support.RootBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDaoConfig()</Name>
      <Type>instm</Type>
      <Scope>DaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/support/DaoSupport.html</Path>
    <Anchor>checkDaoConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDaoConfig()</Name>
      <Type>instm</Type>
      <Scope>CciDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CciDaoSupport.html</Path>
    <Anchor>checkDaoConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDaoConfig()</Name>
      <Type>instm</Type>
      <Scope>JdbcDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/JdbcDaoSupport.html</Path>
    <Anchor>checkDaoConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDaoConfig()</Name>
      <Type>instm</Type>
      <Scope>HibernateDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/HibernateDaoSupport.html</Path>
    <Anchor>checkDaoConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDaoConfig()</Name>
      <Type>instm</Type>
      <Scope>SqlMapClientDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/SqlMapClientDaoSupport.html</Path>
    <Anchor>checkDaoConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDaoConfig()</Name>
      <Type>instm</Type>
      <Scope>JdoDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/JdoDaoSupport.html</Path>
    <Anchor>checkDaoConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDaoConfig()</Name>
      <Type>instm</Type>
      <Scope>JpaDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/JpaDaoSupport.html</Path>
    <Anchor>checkDaoConfig()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDefaultConnectionProperties(Connection)</Name>
      <Type>instm</Type>
      <Scope>LazyConnectionDataSourceProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.html</Path>
    <Anchor>checkDefaultConnectionProperties(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDependencies(String, AbstractBeanDefinition, PropertyDescriptor[], PropertyValues)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>checkDependencies(java.lang.String, org.springframework.beans.factory.support.AbstractBeanDefinition, java.beans.PropertyDescriptor[], org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkExceptionExpectations(Exception)</Name>
      <Type>instm</Type>
      <Scope>AssertThrows</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AssertThrows.html</Path>
    <Anchor>checkExceptionExpectations(java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFieldDefaults(MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>checkFieldDefaults(org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFieldMarkers(MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>WebDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/WebDataBinder.html</Path>
    <Anchor>checkFieldMarkers(org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkForAliasCircle(String, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleAliasRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/SimpleAliasRegistry.html</Path>
    <Anchor>checkForAliasCircle(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkIfConfigurationModificationIsAllowed()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>checkIfConfigurationModificationIsAllowed()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkManagedBean(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractMBeanInfoAssembler.html</Path>
    <Anchor>checkManagedBean(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkManagedBean(Object)</Name>
      <Type>instm</Type>
      <Scope>MetadataMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html</Path>
    <Anchor>checkManagedBean(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkMergedBeanDefinition(RootBeanDefinition, String, Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>checkMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkMessageListener(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>checkMessageListener(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkMultipart(ActionRequest)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>checkMultipart(javax.portlet.ActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkMultipart(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>checkMultipart(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkNameUniqueness(String, List&amp;lt;String&amp;gt;, Element)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>checkNameUniqueness(java.lang.String, java.util.List, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkNotModified(long)</Name>
      <Type>instm</Type>
      <Scope>FacesWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesWebRequest.html</Path>
    <Anchor>checkNotModified(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkNotModified(String)</Name>
      <Type>instm</Type>
      <Scope>FacesWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/FacesWebRequest.html</Path>
    <Anchor>checkNotModified(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkNotModified(long)</Name>
      <Type>instm</Type>
      <Scope>ServletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletWebRequest.html</Path>
    <Anchor>checkNotModified(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkNotModified(String)</Name>
      <Type>instm</Type>
      <Scope>ServletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/ServletWebRequest.html</Path>
    <Anchor>checkNotModified(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkNotModified(long)</Name>
      <Type>intfm</Type>
      <Scope>WebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/WebRequest.html</Path>
    <Anchor>checkNotModified(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkNotModified(String)</Name>
      <Type>intfm</Type>
      <Scope>WebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/WebRequest.html</Path>
    <Anchor>checkNotModified(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkNotModified(long)</Name>
      <Type>instm</Type>
      <Scope>PortletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletWebRequest.html</Path>
    <Anchor>checkNotModified(long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkNotModified(String)</Name>
      <Type>instm</Type>
      <Scope>PortletWebRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletWebRequest.html</Path>
    <Anchor>checkNotModified(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkPropertySkipping(PropertyValues)</Name>
      <Type>instm</Type>
      <Scope>InjectionMetadata.InjectedElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
    <Anchor>checkPropertySkipping(org.springframework.beans.PropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkQualifier(BeanDefinitionHolder, Annotation, TypeConverter)</Name>
      <Type>instm</Type>
      <Scope>QualifierAnnotationAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html</Path>
    <Anchor>checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder, java.lang.annotation.Annotation, org.springframework.beans.TypeConverter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkQualifiers(BeanDefinitionHolder, Annotation[])</Name>
      <Type>instm</Type>
      <Scope>QualifierAnnotationAutowireCandidateResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html</Path>
    <Anchor>checkQualifiers(org.springframework.beans.factory.config.BeanDefinitionHolder, java.lang.annotation.Annotation[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkRequiredFields(MutablePropertyValues)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>checkRequiredFields(org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkResource(Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractUrlBasedView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractUrlBasedView.html</Path>
    <Anchor>checkResource(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkResource(Locale)</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/freemarker/FreeMarkerView.html</Path>
    <Anchor>checkResource(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkResource(Locale)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesView.html</Path>
    <Anchor>checkResource(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkResource(Locale)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesView.html</Path>
    <Anchor>checkResource(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkResource(Locale)</Name>
      <Type>instm</Type>
      <Scope>VelocityLayoutView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityLayoutView.html</Path>
    <Anchor>checkResource(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkResource(Locale)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>checkResource(java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkResourceType(Class)</Name>
      <Type>instm</Type>
      <Scope>InjectionMetadata.InjectedElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html</Path>
    <Anchor>checkResourceType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkRowsAffected(int)</Name>
      <Type>instm</Type>
      <Scope>SqlUpdate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlUpdate.html</Path>
    <Anchor>checkRowsAffected(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkService()</Name>
      <Type>instm</Type>
      <Scope>RemoteExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteExporter.html</Path>
    <Anchor>checkService()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkServiceInterface()</Name>
      <Type>instm</Type>
      <Scope>RemoteExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteExporter.html</Path>
    <Anchor>checkServiceInterface()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkUserTransactionAndTransactionManager()</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>checkUserTransactionAndTransactionManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkWriteOperationAllowed(Session)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>checkWriteOperationAllowed(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>childBeanDefinition(String)</Name>
      <Type>clm</Type>
      <Scope>BeanDefinitionBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionBuilder.html</Path>
    <Anchor>childBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChildBeanDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChildBeanDefinition(String)</Name>
      <Type>Constructor</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>ChildBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChildBeanDefinition(String, MutablePropertyValues)</Name>
      <Type>Constructor</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>ChildBeanDefinition(java.lang.String, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChildBeanDefinition(String, ConstructorArgumentValues, MutablePropertyValues)</Name>
      <Type>Constructor</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>ChildBeanDefinition(java.lang.String, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChildBeanDefinition(String, Class, ConstructorArgumentValues, MutablePropertyValues)</Name>
      <Type>Constructor</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>ChildBeanDefinition(java.lang.String, java.lang.Class, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChildBeanDefinition(String, String, ConstructorArgumentValues, MutablePropertyValues)</Name>
      <Type>Constructor</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>ChildBeanDefinition(java.lang.String, java.lang.String, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChildBeanDefinition(ChildBeanDefinition)</Name>
      <Type>Constructor</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>ChildBeanDefinition(org.springframework.beans.factory.support.ChildBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <Type>Field</Type>
      <Scope>SpelNodeImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/SpelNodeImpl.html</Path>
    <Anchor>children</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLASS_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>CLASS_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLASS_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>AbstractHtmlElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html</Path>
    <Anchor>CLASS_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLASS_FILE_SUFFIX</Name>
      <Type>Field</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>CLASS_FILE_SUFFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLASS_KEY</Name>
      <Type>Field</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>CLASS_KEY</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassArrayEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ClassArrayEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassArrayEditor()</Name>
      <Type>Constructor</Type>
      <Scope>ClassArrayEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ClassArrayEditor.html</Path>
    <Anchor>ClassArrayEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassArrayEditor(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ClassArrayEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ClassArrayEditor.html</Path>
    <Anchor>ClassArrayEditor(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ClassEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassEditor()</Name>
      <Type>Constructor</Type>
      <Scope>ClassEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ClassEditor.html</Path>
    <Anchor>ClassEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassEditor(ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ClassEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/ClassEditor.html</Path>
    <Anchor>ClassEditor(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassFilter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.aop</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/ClassFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassFilters</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ClassFilters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassFilters()</Name>
      <Type>Constructor</Type>
      <Scope>ClassFilters</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ClassFilters.html</Path>
    <Anchor>ClassFilters()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassMetadata</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.type</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/ClassMetadata.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassNameBeanWiringInfoResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.wiring</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/ClassNameBeanWiringInfoResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassNameBeanWiringInfoResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ClassNameBeanWiringInfoResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/ClassNameBeanWiringInfoResolver.html</Path>
    <Anchor>ClassNameBeanWiringInfoResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>classNamesToString(Class...)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>classNamesToString(java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>classNamesToString(Collection&amp;lt;Class&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>classNamesToString(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>classPackageAsResourcePath(Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>classPackageAsResourcePath(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLASSPATH_ALL_URL_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/ResourcePatternResolver.html</Path>
    <Anchor>CLASSPATH_ALL_URL_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLASSPATH_URL_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ResourceLoader.html</Path>
    <Anchor>CLASSPATH_URL_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLASSPATH_URL_PREFIX</Name>
      <Type>Field</Type>
      <Scope>Log4jConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/Log4jConfigurer.html</Path>
    <Anchor>CLASSPATH_URL_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLASSPATH_URL_PREFIX</Name>
      <Type>Field</Type>
      <Scope>ResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ResourceUtils.html</Path>
    <Anchor>CLASSPATH_URL_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathBeanDefinitionScanner</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathBeanDefinitionScanner(BeanDefinitionRegistry)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>ClassPathBeanDefinitionScanner(org.springframework.beans.factory.support.BeanDefinitionRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathBeanDefinitionScanner(BeanDefinitionRegistry, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>ClassPathBeanDefinitionScanner(org.springframework.beans.factory.support.BeanDefinitionRegistry, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathBeanDefinitionScanner(BeanDefinitionRegistry, boolean, Environment)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathBeanDefinitionScanner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html</Path>
    <Anchor>ClassPathBeanDefinitionScanner(org.springframework.beans.factory.support.BeanDefinitionRegistry, boolean, org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathResource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassPathResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathResource(String)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassPathResource.html</Path>
    <Anchor>ClassPathResource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathResource(String, ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassPathResource.html</Path>
    <Anchor>ClassPathResource(java.lang.String, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathResource(String, Class&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassPathResource.html</Path>
    <Anchor>ClassPathResource(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathResource(String, ClassLoader, Class&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassPathResource.html</Path>
    <Anchor>ClassPathResource(java.lang.String, java.lang.ClassLoader, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathScanningCandidateComponentProvider</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathScanningCandidateComponentProvider(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>ClassPathScanningCandidateComponentProvider(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathScanningCandidateComponentProvider(boolean, Environment)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>ClassPathScanningCandidateComponentProvider(boolean, org.springframework.core.env.Environment)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext()</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext(String)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext(String...)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext(String[], ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext(java.lang.String[], org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext(String[], boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext(java.lang.String[], boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext(String[], boolean, ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext(java.lang.String[], boolean, org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext(String, Class)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext(java.lang.String, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext(String[], Class)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext(java.lang.String[], java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassPathXmlApplicationContext(String[], Class, ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ClassPathXmlApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ClassPathXmlApplicationContext.html</Path>
    <Anchor>ClassPathXmlApplicationContext(java.lang.String[], java.lang.Class, org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassRelativeResourceLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassRelativeResourceLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassRelativeResourceLoader(Class)</Name>
      <Type>Constructor</Type>
      <Scope>ClassRelativeResourceLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassRelativeResourceLoader.html</Path>
    <Anchor>ClassRelativeResourceLoader(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClassUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>ClassUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanPath(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>cleanPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanup()</Name>
      <Type>intfm</Type>
      <Scope>DisposableSqlTypeValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/DisposableSqlTypeValue.html</Path>
    <Anchor>cleanup()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanup()</Name>
      <Type>instm</Type>
      <Scope>SqlLobValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/SqlLobValue.html</Path>
    <Anchor>cleanup()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanup()</Name>
      <Type>intfm</Type>
      <Scope>SqlValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SqlValue.html</Path>
    <Anchor>cleanup()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupAttribute(WebRequest, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSessionAttributeStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultSessionAttributeStore.html</Path>
    <Anchor>cleanupAttribute(org.springframework.web.context.request.WebRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupAttribute(WebRequest, String)</Name>
      <Type>intfm</Type>
      <Scope>SessionAttributeStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/SessionAttributeStore.html</Path>
    <Anchor>cleanupAttribute(org.springframework.web.context.request.WebRequest, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupAttributes(WebRequest)</Name>
      <Type>instm</Type>
      <Scope>SessionAttributesHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/SessionAttributesHandler.html</Path>
    <Anchor>cleanupAttributes(org.springframework.web.context.request.WebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CleanupFailureDataAccessException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/CleanupFailureDataAccessException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CleanupFailureDataAccessException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>CleanupFailureDataAccessException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/CleanupFailureDataAccessException.html</Path>
    <Anchor>CleanupFailureDataAccessException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupFileItems(MultiValueMap&amp;lt;String, MultipartFile&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CommonsFileUploadSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
    <Anchor>cleanupFileItems(org.springframework.util.MultiValueMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupMultipart(MultipartHttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
    <Anchor>cleanupMultipart(org.springframework.web.multipart.MultipartHttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupMultipart(MultipartHttpServletRequest)</Name>
      <Type>intfm</Type>
      <Scope>MultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/MultipartResolver.html</Path>
    <Anchor>cleanupMultipart(org.springframework.web.multipart.MultipartHttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupMultipart(MultipartHttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>StandardServletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/support/StandardServletMultipartResolver.html</Path>
    <Anchor>cleanupMultipart(org.springframework.web.multipart.MultipartHttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupMultipart(MultipartActionRequest)</Name>
      <Type>instm</Type>
      <Scope>CommonsPortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
    <Anchor>cleanupMultipart(org.springframework.web.portlet.multipart.MultipartActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupMultipart(MultipartActionRequest)</Name>
      <Type>intfm</Type>
      <Scope>PortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/PortletMultipartResolver.html</Path>
    <Anchor>cleanupMultipart(org.springframework.web.portlet.multipart.MultipartActionRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupMultipart(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>cleanupMultipart(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupParameters()</Name>
      <Type>intfm</Type>
      <Scope>ParameterDisposer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ParameterDisposer.html</Path>
    <Anchor>cleanupParameters()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupParameters(Object[])</Name>
      <Type>clm</Type>
      <Scope>StatementCreatorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/StatementCreatorUtils.html</Path>
    <Anchor>cleanupParameters(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupParameters(Collection)</Name>
      <Type>clm</Type>
      <Scope>StatementCreatorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/StatementCreatorUtils.html</Path>
    <Anchor>cleanupParameters(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupResource(H, K, boolean)</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSynchronization</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSynchronization.html</Path>
    <Anchor>cleanupResource(H, K, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultJdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/DefaultJdoDialect.html</Path>
    <Anchor>cleanupTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupTransaction(Object)</Name>
      <Type>intfm</Type>
      <Scope>JdoDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoDialect.html</Path>
    <Anchor>cleanupTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>DefaultJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/DefaultJpaDialect.html</Path>
    <Anchor>cleanupTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupTransaction(Object)</Name>
      <Type>intfm</Type>
      <Scope>JpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaDialect.html</Path>
    <Anchor>cleanupTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupTransaction(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateJpaDialect</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/vendor/HibernateJpaDialect.html</Path>
    <Anchor>cleanupTransaction(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanupTransactionInfo(TransactionAspectSupport.TransactionInfo)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>cleanupTransactionInfo(org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>intfm</Type>
      <Scope>Cache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/Cache.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCache.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>EhCacheCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheCache.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>JCacheCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/jcache/JCacheCache.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareCacheDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/transaction/TransactionAwareCacheDecorator.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContextBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContextBuilder.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionHolder.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>PersistenceManagerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerHolder.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>EntityManagerHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerHolder.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>ResourceHolderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/ResourceHolderSupport.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap.Segment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Segment.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>LinkedCaseInsensitiveMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedCaseInsensitiveMap.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>SimpleNamespaceContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/SimpleNamespaceContext.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/ModelAndView.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear()</Name>
      <Type>instm</Type>
      <Scope>ModelAndView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/ModelAndView.html</Path>
    <Anchor>clear()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAllRenderParameters(ActionResponse)</Name>
      <Type>clm</Type>
      <Scope>PortletUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/util/PortletUtils.html</Path>
    <Anchor>clearAllRenderParameters(javax.portlet.ActionResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAttributes()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>clearAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAttributes()</Name>
      <Type>instm</Type>
      <Scope>MockHttpSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpSession.html</Path>
    <Anchor>clearAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAttributes()</Name>
      <Type>instm</Type>
      <Scope>MockPortletSession</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletSession.html</Path>
    <Anchor>clearAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer()</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>clearBuffer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer()</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>clearBuffer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearCache()</Name>
      <Type>instm</Type>
      <Scope>ClassPathScanningCandidateComponentProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html</Path>
    <Anchor>clearCache()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearCache()</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>clearCache()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearCache()</Name>
      <Type>instm</Type>
      <Scope>CachingMetadataReaderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/type/classreading/CachingMetadataReaderFactory.html</Path>
    <Anchor>clearCache()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearCache()</Name>
      <Type>intfm</Type>
      <Scope>CachingDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/CachingDestinationResolver.html</Path>
    <Anchor>clearCache()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearCache()</Name>
      <Type>instm</Type>
      <Scope>JndiDestinationResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/destination/JndiDestinationResolver.html</Path>
    <Anchor>clearCache()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearCache()</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>clearCache()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearCacheIncludingAncestors()</Name>
      <Type>instm</Type>
      <Scope>ReloadableResourceBundleMessageSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ReloadableResourceBundleMessageSource.html</Path>
    <Anchor>clearCacheIncludingAncestors()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearClassLoader(ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>CachedIntrospectionResults</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/CachedIntrospectionResults.html</Path>
    <Anchor>clearClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearConcurrentResult()</Name>
      <Type>instm</Type>
      <Scope>WebAsyncManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncManager.html</Path>
    <Anchor>clearConcurrentResult()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearErrorRequestAttributes(HttpServletRequest)</Name>
      <Type>clm</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>clearErrorRequestAttributes(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearMergedBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>clearMergedBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearSynchronization()</Name>
      <Type>clm</Type>
      <Scope>TransactionSynchronizationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/TransactionSynchronizationManager.html</Path>
    <Anchor>clearSynchronization()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientHttpRequest</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientHttpRequestExecution</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpRequestExecution.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientHttpRequestFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpRequestFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientHttpRequestInterceptor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpRequestInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientHttpResponse</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpResponse.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClobStringType</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.hibernate3.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/ClobStringType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClobStringType()</Name>
      <Type>Constructor</Type>
      <Scope>ClobStringType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/ClobStringType.html</Path>
    <Anchor>ClobStringType()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClobStringType(LobHandler, TransactionManager)</Name>
      <Type>Constructor</Type>
      <Scope>ClobStringType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/ClobStringType.html</Path>
    <Anchor>ClobStringType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClobStringTypeHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.orm.ibatis.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/ClobStringTypeHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClobStringTypeHandler()</Name>
      <Type>Constructor</Type>
      <Scope>ClobStringTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/ClobStringTypeHandler.html</Path>
    <Anchor>ClobStringTypeHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClobStringTypeHandler(LobHandler)</Name>
      <Type>Constructor</Type>
      <Scope>ClobStringTypeHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/ibatis/support/ClobStringTypeHandler.html</Path>
    <Anchor>ClobStringTypeHandler(org.springframework.jdbc.support.lob.LobHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>clone()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone()</Name>
      <Type>instm</Type>
      <Scope>CommAreaRecord</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CommAreaRecord.html</Path>
    <Anchor>clone()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cloneBeanDefinition()</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>cloneBeanDefinition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cloneBeanDefinition()</Name>
      <Type>instm</Type>
      <Scope>ChildBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/ChildBeanDefinition.html</Path>
    <Anchor>cloneBeanDefinition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cloneBeanDefinition()</Name>
      <Type>instm</Type>
      <Scope>GenericBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/GenericBeanDefinition.html</Path>
    <Anchor>cloneBeanDefinition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cloneBeanDefinition()</Name>
      <Type>instm</Type>
      <Scope>RootBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/RootBeanDefinition.html</Path>
    <Anchor>cloneBeanDefinition()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>intfm</Type>
      <Scope>ClientHttpResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpResponse.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>intfm</Type>
      <Scope>ServerHttpResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServerHttpResponse.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>ServletServerHttpResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/server/ServletServerHttpResponse.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>DefaultLobHandler.DefaultLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>intfm</Type>
      <Scope>LobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/LobCreator.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler.OracleLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>MockClientHttpResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/http/client/MockClientHttpResponse.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>DelegatingServletInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/DelegatingServletInputStream.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>DelegatingServletOutputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/DelegatingServletOutputStream.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>MockBodyContent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockBodyContent.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletRequest.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>MockJspWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockJspWriter.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>MockPortletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletRequest.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>LocalDataSourceConnectionProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>CommonsLogWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CommonsLogWriter.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close()</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>close()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeAll()</Name>
      <Type>instm</Type>
      <Scope>JmsResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsResourceHolder.html</Path>
    <Anchor>closeAll()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeBeanFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>closeBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeBeanFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>closeBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeBeanFactory()</Name>
      <Type>instm</Type>
      <Scope>GenericApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/GenericApplicationContext.html</Path>
    <Anchor>closeBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/SingleConnectionFactory.html</Path>
    <Anchor>closeConnection(javax.resource.cci.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeConnection(Connection)</Name>
      <Type>clm</Type>
      <Scope>JdbcUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcUtils.html</Path>
    <Anchor>closeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>closeConnection(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeConnection(Connection)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>closeConnection(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeConnection(Connection, boolean)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>closeConnection(javax.jms.Connection, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>LocalDataSourceConnectionProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html</Path>
    <Anchor>closeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeConnection(Connection)</Name>
      <Type>instm</Type>
      <Scope>LocalDataSourceJobStore</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/LocalDataSourceJobStore.html</Path>
    <Anchor>closeConnection(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeEntityManager(EntityManager)</Name>
      <Type>clm</Type>
      <Scope>EntityManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryUtils.html</Path>
    <Anchor>closeEntityManager(javax.persistence.EntityManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeEntityManagerAfterFailedBegin(JpaTransactionManager.JpaTransactionObject)</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>closeEntityManagerAfterFailedBegin(org.springframework.orm.jpa.JpaTransactionManager.JpaTransactionObject)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeIterator(Iterator)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>closeIterator(java.util.Iterator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeIterator(Iterator)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>closeIterator(java.util.Iterator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeMessageConsumer(MessageConsumer)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>closeMessageConsumer(javax.jms.MessageConsumer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeMessageProducer(MessageProducer)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>closeMessageProducer(javax.jms.MessageProducer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeNoCatch()</Name>
      <Type>instm</Type>
      <Scope>ServletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/ServletRequestDataBinder.html</Path>
    <Anchor>closeNoCatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeNoCatch()</Name>
      <Type>instm</Type>
      <Scope>WebRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebRequestDataBinder.html</Path>
    <Anchor>closeNoCatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeNoCatch()</Name>
      <Type>instm</Type>
      <Scope>PortletRequestDataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/bind/PortletRequestDataBinder.html</Path>
    <Anchor>closeNoCatch()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closePersistenceManagerAfterFailedBegin(JdoTransactionManager.JdoTransactionObject)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>closePersistenceManagerAfterFailedBegin(org.springframework.orm.jdo.JdoTransactionManager.JdoTransactionObject)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeQueueBrowser(QueueBrowser)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>closeQueueBrowser(javax.jms.QueueBrowser)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeQueueRequestor(QueueRequestor)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>closeQueueRequestor(javax.jms.QueueRequestor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeResultSet(ResultSet)</Name>
      <Type>clm</Type>
      <Scope>JdbcUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcUtils.html</Path>
    <Anchor>closeResultSet(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeSession(Session)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>closeSession(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeSession(Session)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>closeSession(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeSession(Session, SessionFactory)</Name>
      <Type>instm</Type>
      <Scope>OpenSessionInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html</Path>
    <Anchor>closeSession(org.hibernate.Session, org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeSession(Session)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionFactoryUtils.html</Path>
    <Anchor>closeSession(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeStatement(Statement)</Name>
      <Type>clm</Type>
      <Scope>JdbcUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcUtils.html</Path>
    <Anchor>closeStatement(java.sql.Statement)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeTemplateSource(Object)</Name>
      <Type>instm</Type>
      <Scope>SpringTemplateLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/SpringTemplateLoader.html</Path>
    <Anchor>closeTemplateSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeWebApplicationContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>closeWebApplicationContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CODE_ORDER</Name>
      <Type>Field</Type>
      <Scope>LabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/LabeledEnum.html</Path>
    <Anchor>CODE_ORDER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CODE_SEPARATOR</Name>
      <Type>Field</Type>
      <Scope>DefaultMessageCodesResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DefaultMessageCodesResolver.html</Path>
    <Anchor>CODE_SEPARATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CodebaseAwareObjectInputStream</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.rmi</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CodebaseAwareObjectInputStream(InputStream, String)</Name>
      <Type>Constructor</Type>
      <Scope>CodebaseAwareObjectInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html</Path>
    <Anchor>CodebaseAwareObjectInputStream(java.io.InputStream, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CodebaseAwareObjectInputStream(InputStream, ClassLoader, String)</Name>
      <Type>Constructor</Type>
      <Scope>CodebaseAwareObjectInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html</Path>
    <Anchor>CodebaseAwareObjectInputStream(java.io.InputStream, java.lang.ClassLoader, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CodebaseAwareObjectInputStream(InputStream, ClassLoader, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CodebaseAwareObjectInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html</Path>
    <Anchor>CodebaseAwareObjectInputStream(java.io.InputStream, java.lang.ClassLoader, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collection(Class&amp;lt;?&amp;gt;, TypeDescriptor)</Name>
      <Type>clm</Type>
      <Scope>TypeDescriptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/TypeDescriptor.html</Path>
    <Anchor>collection(java.lang.Class, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CollectionFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CollectionFactory()</Name>
      <Type>Constructor</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>CollectionFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionToCommaDelimitedString(Collection&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>collectionToCommaDelimitedString(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionToDelimitedString(Collection&amp;lt;?&amp;gt;, String, String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>collectionToDelimitedString(java.util.Collection, java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionToDelimitedString(Collection&amp;lt;?&amp;gt;, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>collectionToDelimitedString(java.util.Collection, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CollectionUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CollectionUtils()</Name>
      <Type>Constructor</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>CollectionUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COLS_ATTRIBUTE</Name>
      <Type>Field</Type>
      <Scope>TextareaTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/TextareaTag.html</Path>
    <Anchor>COLS_ATTRIBUTE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ColumnMapRowMapper</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ColumnMapRowMapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ColumnMapRowMapper()</Name>
      <Type>Constructor</Type>
      <Scope>ColumnMapRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ColumnMapRowMapper.html</Path>
    <Anchor>ColumnMapRowMapper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(String, String)</Name>
      <Type>instm</Type>
      <Scope>AntPathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AntPathMatcher.html</Path>
    <Anchor>combine(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(String, String)</Name>
      <Type>intfm</Type>
      <Scope>PathMatcher</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/PathMatcher.html</Path>
    <Anchor>combine(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(CompositeRequestCondition)</Name>
      <Type>instm</Type>
      <Scope>CompositeRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/CompositeRequestCondition.html</Path>
    <Anchor>combine(org.springframework.web.servlet.mvc.condition.CompositeRequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(ConsumesRequestCondition)</Name>
      <Type>instm</Type>
      <Scope>ConsumesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ConsumesRequestCondition.html</Path>
    <Anchor>combine(org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(HeadersRequestCondition)</Name>
      <Type>instm</Type>
      <Scope>HeadersRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/HeadersRequestCondition.html</Path>
    <Anchor>combine(org.springframework.web.servlet.mvc.condition.HeadersRequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(ParamsRequestCondition)</Name>
      <Type>instm</Type>
      <Scope>ParamsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ParamsRequestCondition.html</Path>
    <Anchor>combine(org.springframework.web.servlet.mvc.condition.ParamsRequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(PatternsRequestCondition)</Name>
      <Type>instm</Type>
      <Scope>PatternsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.html</Path>
    <Anchor>combine(org.springframework.web.servlet.mvc.condition.PatternsRequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(ProducesRequestCondition)</Name>
      <Type>instm</Type>
      <Scope>ProducesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.html</Path>
    <Anchor>combine(org.springframework.web.servlet.mvc.condition.ProducesRequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(T)</Name>
      <Type>intfm</Type>
      <Scope>RequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestCondition.html</Path>
    <Anchor>combine(T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(RequestConditionHolder)</Name>
      <Type>instm</Type>
      <Scope>RequestConditionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestConditionHolder.html</Path>
    <Anchor>combine(org.springframework.web.servlet.mvc.condition.RequestConditionHolder)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(RequestMethodsRequestCondition)</Name>
      <Type>instm</Type>
      <Scope>RequestMethodsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestMethodsRequestCondition.html</Path>
    <Anchor>combine(org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combine(RequestMappingInfo)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfo.html</Path>
    <Anchor>combine(org.springframework.web.servlet.mvc.method.RequestMappingInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commaDelimitedListToSet(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>commaDelimitedListToSet(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commaDelimitedListToStringArray(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>commaDelimitedListToStringArray(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COMMAND_LINE_PROPERTY_SOURCE_NAME</Name>
      <Type>Field</Type>
      <Scope>CommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CommandLinePropertySource.html</Path>
    <Anchor>COMMAND_LINE_PROPERTY_SOURCE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COMMAND_NAME_VARIABLE_NAME</Name>
      <Type>Field</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>COMMAND_NAME_VARIABLE_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLinePropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CommandLinePropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLinePropertySource(T)</Name>
      <Type>Constructor</Type>
      <Scope>CommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CommandLinePropertySource.html</Path>
    <Anchor>CommandLinePropertySource(T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLinePropertySource(String, T)</Name>
      <Type>Constructor</Type>
      <Scope>CommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CommandLinePropertySource.html</Path>
    <Anchor>CommandLinePropertySource(java.lang.String, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommAreaRecord</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.core.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CommAreaRecord.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommAreaRecord()</Name>
      <Type>Constructor</Type>
      <Scope>CommAreaRecord</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CommAreaRecord.html</Path>
    <Anchor>CommAreaRecord()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommAreaRecord(byte[])</Name>
      <Type>Constructor</Type>
      <Scope>CommAreaRecord</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CommAreaRecord.html</Path>
    <Anchor>CommAreaRecord(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>comment(String, Matcher&amp;lt;? super String&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>comment(java.lang.String, org.hamcrest.Matcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>comment(String, String)</Name>
      <Type>instm</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>comment(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit()</Name>
      <Type>instm</Type>
      <Scope>ManagedTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/ManagedTransactionAdapter.html</Path>
    <Anchor>commit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit()</Name>
      <Type>instm</Type>
      <Scope>UserTransactionAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/UserTransactionAdapter.html</Path>
    <Anchor>commit()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit(TransactionStatus)</Name>
      <Type>intfm</Type>
      <Scope>PlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/PlatformTransactionManager.html</Path>
    <Anchor>commit(org.springframework.transaction.TransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit(TransactionStatus)</Name>
      <Type>instm</Type>
      <Scope>AbstractPlatformTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractPlatformTransactionManager.html</Path>
    <Anchor>commit(org.springframework.transaction.TransactionStatus)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitAll()</Name>
      <Type>instm</Type>
      <Scope>JmsResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsResourceHolder.html</Path>
    <Anchor>commitAll()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitIfNecessary(Session, Message)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractMessageListenerContainer.html</Path>
    <Anchor>commitIfNecessary(javax.jms.Session, javax.jms.Message)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitIfNecessary(Session)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>commitIfNecessary(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitTransactionAfterReturning(TransactionAspectSupport.TransactionInfo)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>commitTransactionAfterReturning(org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COMMON_ANNOTATION_PROCESSOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>COMMON_ANNOTATION_PROCESSOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonAnnotationBeanPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonAnnotationBeanPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>CommonAnnotationBeanPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html</Path>
    <Anchor>CommonAnnotationBeanPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonAnnotationBeanPostProcessor.LookupElement</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonAnnotationBeanPostProcessor.LookupElement(Member, PropertyDescriptor)</Name>
      <Type>Constructor</Type>
      <Scope>CommonAnnotationBeanPostProcessor.LookupElement</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html</Path>
    <Anchor>CommonAnnotationBeanPostProcessor.LookupElement(java.lang.reflect.Member, java.beans.PropertyDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commonDatabaseName(String)</Name>
      <Type>clm</Type>
      <Scope>JdbcUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcUtils.html</Path>
    <Anchor>commonDatabaseName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsClientHttpRequestFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.http.client</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsClientHttpRequestFactory()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
    <Anchor>CommonsClientHttpRequestFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsClientHttpRequestFactory(HttpClient)</Name>
      <Type>Constructor</Type>
      <Scope>CommonsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
    <Anchor>CommonsClientHttpRequestFactory(org.apache.commons.httpclient.HttpClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsDbcpNativeJdbcExtractor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support.nativejdbc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/CommonsDbcpNativeJdbcExtractor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsDbcpNativeJdbcExtractor()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsDbcpNativeJdbcExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/nativejdbc/CommonsDbcpNativeJdbcExtractor.html</Path>
    <Anchor>CommonsDbcpNativeJdbcExtractor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsFileUploadSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.commons</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsFileUploadSupport()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsFileUploadSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.html</Path>
    <Anchor>CommonsFileUploadSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsFileUploadSupport.MultipartParsingResult</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.commons</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.MultipartParsingResult.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsFileUploadSupport.MultipartParsingResult(MultiValueMap&amp;lt;String, MultipartFile&amp;gt;, Map&amp;lt;String, String[]&amp;gt;, Map&amp;lt;String, String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>CommonsFileUploadSupport.MultipartParsingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsFileUploadSupport.MultipartParsingResult.html</Path>
    <Anchor>CommonsFileUploadSupport.MultipartParsingResult(org.springframework.util.MultiValueMap, java.util.Map, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsHttpInvokerRequestExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.remoting.httpinvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsHttpInvokerRequestExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>CommonsHttpInvokerRequestExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsHttpInvokerRequestExecutor(HttpClient)</Name>
      <Type>Constructor</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>CommonsHttpInvokerRequestExecutor(org.apache.commons.httpclient.HttpClient)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsLogFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsLogFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsLogFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html</Path>
    <Anchor>CommonsLogFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsLoggingLogSystem</Name>
      <Type>cl</Type>
      <Scope>org.springframework.ui.velocity</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/CommonsLoggingLogSystem.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsLoggingLogSystem()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsLoggingLogSystem</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/CommonsLoggingLogSystem.html</Path>
    <Anchor>CommonsLoggingLogSystem()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsLogWriter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CommonsLogWriter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsLogWriter(Log)</Name>
      <Type>Constructor</Type>
      <Scope>CommonsLogWriter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CommonsLogWriter.html</Path>
    <Anchor>CommonsLogWriter(org.apache.commons.logging.Log)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsMultipartFile</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.commons</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartFile.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsMultipartFile(FileItem)</Name>
      <Type>Constructor</Type>
      <Scope>CommonsMultipartFile</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartFile.html</Path>
    <Anchor>CommonsMultipartFile(org.apache.commons.fileupload.FileItem)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsMultipartResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.multipart.commons</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsMultipartResolver()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
    <Anchor>CommonsMultipartResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsMultipartResolver(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>CommonsMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/multipart/commons/CommonsMultipartResolver.html</Path>
    <Anchor>CommonsMultipartResolver(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsPoolTargetSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.target</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsPoolTargetSource()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>CommonsPoolTargetSource()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsPortletMultipartResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.portlet.multipart</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsPortletMultipartResolver()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsPortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
    <Anchor>CommonsPortletMultipartResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsPortletMultipartResolver(PortletContext)</Name>
      <Type>Constructor</Type>
      <Scope>CommonsPortletMultipartResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html</Path>
    <Anchor>CommonsPortletMultipartResolver(javax.portlet.PortletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsRequestLoggingFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CommonsRequestLoggingFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommonsRequestLoggingFilter()</Name>
      <Type>Constructor</Type>
      <Scope>CommonsRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CommonsRequestLoggingFilter.html</Path>
    <Anchor>CommonsRequestLoggingFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComparableComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.comparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/ComparableComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComparableComparator()</Name>
      <Type>Constructor</Type>
      <Scope>ComparableComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/ComparableComparator.html</Path>
    <Anchor>ComparableComparator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>PropertyComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PropertyComparator.html</Path>
    <Anchor>compare(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(S, S)</Name>
      <Type>instm</Type>
      <Scope>ConvertingComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConvertingComparator.html</Path>
    <Anchor>compare(S, S)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(Class&amp;lt;? extends Throwable&amp;gt;, Class&amp;lt;? extends Throwable&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ExceptionDepthComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ExceptionDepthComparator.html</Path>
    <Anchor>compare(java.lang.Class, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>OrderComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/OrderComparator.html</Path>
    <Anchor>compare(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(Object, Object)</Name>
      <Type>instm</Type>
      <Scope>StandardTypeComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeComparator.html</Path>
    <Anchor>compare(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(Object, Object)</Name>
      <Type>intfm</Type>
      <Scope>TypeComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/TypeComparator.html</Path>
    <Anchor>compare(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(Boolean, Boolean)</Name>
      <Type>instm</Type>
      <Scope>BooleanComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/BooleanComparator.html</Path>
    <Anchor>compare(java.lang.Boolean, java.lang.Boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(T, T)</Name>
      <Type>instm</Type>
      <Scope>ComparableComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/ComparableComparator.html</Path>
    <Anchor>compare(T, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(T, T)</Name>
      <Type>instm</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>compare(T, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(T, T)</Name>
      <Type>instm</Type>
      <Scope>InstanceComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InstanceComparator.html</Path>
    <Anchor>compare(T, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(T, T)</Name>
      <Type>instm</Type>
      <Scope>InvertibleComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/InvertibleComparator.html</Path>
    <Anchor>compare(T, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare(T, T)</Name>
      <Type>instm</Type>
      <Scope>NullSafeComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/NullSafeComparator.html</Path>
    <Anchor>compare(T, T)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractLabeledEnum</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/enums/AbstractLabeledEnum.html</Path>
    <Anchor>compareTo(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(MediaType)</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>compareTo(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(FlashMap)</Name>
      <Type>instm</Type>
      <Scope>FlashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FlashMap.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.FlashMap)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(CompositeRequestCondition, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>CompositeRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/CompositeRequestCondition.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.mvc.condition.CompositeRequestCondition, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(ConsumesRequestCondition, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>ConsumesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ConsumesRequestCondition.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(HeadersRequestCondition, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>HeadersRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/HeadersRequestCondition.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.mvc.condition.HeadersRequestCondition, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(ParamsRequestCondition, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>ParamsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ParamsRequestCondition.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.mvc.condition.ParamsRequestCondition, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(PatternsRequestCondition, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>PatternsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.mvc.condition.PatternsRequestCondition, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(ProducesRequestCondition, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>ProducesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.mvc.condition.ProducesRequestCondition, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(T, HttpServletRequest)</Name>
      <Type>intfm</Type>
      <Scope>RequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestCondition.html</Path>
    <Anchor>compareTo(T, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(RequestConditionHolder, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>RequestConditionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestConditionHolder.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.mvc.condition.RequestConditionHolder, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(RequestMethodsRequestCondition, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>RequestMethodsRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/RequestMethodsRequestCondition.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareTo(RequestMappingInfo, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingInfo</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/RequestMappingInfo.html</Path>
    <Anchor>compareTo(org.springframework.web.servlet.mvc.method.RequestMappingInfo, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compile()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>compile()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compile()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>compile()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compile()</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>compile()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compileInternal()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcCall.html</Path>
    <Anchor>compileInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compileInternal()</Name>
      <Type>instm</Type>
      <Scope>AbstractJdbcInsert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/simple/AbstractJdbcInsert.html</Path>
    <Anchor>compileInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compileInternal()</Name>
      <Type>instm</Type>
      <Scope>RdbmsOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/RdbmsOperation.html</Path>
    <Anchor>compileInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compileInternal()</Name>
      <Type>instm</Type>
      <Scope>SqlCall</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlCall.html</Path>
    <Anchor>compileInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compileInternal()</Name>
      <Type>instm</Type>
      <Scope>SqlOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/object/SqlOperation.html</Path>
    <Anchor>compileInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>completeProxiedInterfaces(AdvisedSupport)</Name>
      <Type>clm</Type>
      <Scope>AopProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyUtils.html</Path>
    <Anchor>completeProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>completeTransactionAfterThrowing(TransactionAspectSupport.TransactionInfo, Throwable)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>completeTransactionAfterThrowing(org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Component</Name>
      <Type>clm</Type>
      <Scope>org.springframework.stereotype</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/stereotype/Component.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComponentControllerSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.tiles</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComponentControllerSupport()</Name>
      <Type>Constructor</Type>
      <Scope>ComponentControllerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html</Path>
    <Anchor>ComponentControllerSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComponentDefinition</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ComponentDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>componentRegistered(ComponentDefinition)</Name>
      <Type>instm</Type>
      <Scope>EmptyReaderEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/EmptyReaderEventListener.html</Path>
    <Anchor>componentRegistered(org.springframework.beans.factory.parsing.ComponentDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>componentRegistered(ComponentDefinition)</Name>
      <Type>intfm</Type>
      <Scope>ReaderEventListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ReaderEventListener.html</Path>
    <Anchor>componentRegistered(org.springframework.beans.factory.parsing.ComponentDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComponentScan</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScan.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComponentScan.Filter</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScan.Filter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComponentScanBeanDefinitionParser</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComponentScanBeanDefinitionParser()</Name>
      <Type>Constructor</Type>
      <Scope>ComponentScanBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
    <Anchor>ComponentScanBeanDefinitionParser()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComposablePointcut</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComposablePointcut()</Name>
      <Type>Constructor</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>ComposablePointcut()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComposablePointcut(Pointcut)</Name>
      <Type>Constructor</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>ComposablePointcut(org.springframework.aop.Pointcut)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComposablePointcut(ClassFilter)</Name>
      <Type>Constructor</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>ComposablePointcut(org.springframework.aop.ClassFilter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComposablePointcut(MethodMatcher)</Name>
      <Type>Constructor</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>ComposablePointcut(org.springframework.aop.MethodMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComposablePointcut(ClassFilter, MethodMatcher)</Name>
      <Type>Constructor</Type>
      <Scope>ComposablePointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ComposablePointcut.html</Path>
    <Anchor>ComposablePointcut(org.springframework.aop.ClassFilter, org.springframework.aop.MethodMatcher)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>composeName(String, String)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>composeName(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>composeName(Name, Name)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>composeName(javax.naming.Name, javax.naming.Name)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeCacheManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/CompositeCacheManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeCacheManager()</Name>
      <Type>Constructor</Type>
      <Scope>CompositeCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/support/CompositeCacheManager.html</Path>
    <Anchor>CompositeCacheManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeCacheOperationSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CompositeCacheOperationSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeCacheOperationSource(CacheOperationSource...)</Name>
      <Type>Constructor</Type>
      <Scope>CompositeCacheOperationSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CompositeCacheOperationSource.html</Path>
    <Anchor>CompositeCacheOperationSource(org.springframework.cache.interceptor.CacheOperationSource...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeComponentDefinition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/CompositeComponentDefinition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeComponentDefinition(String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>CompositeComponentDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/CompositeComponentDefinition.html</Path>
    <Anchor>CompositeComponentDefinition(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeDatabasePopulator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource.init</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/CompositeDatabasePopulator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeDatabasePopulator()</Name>
      <Type>Constructor</Type>
      <Scope>CompositeDatabasePopulator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/init/CompositeDatabasePopulator.html</Path>
    <Anchor>CompositeDatabasePopulator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeFilter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.filter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CompositeFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeFilter()</Name>
      <Type>Constructor</Type>
      <Scope>CompositeFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/CompositeFilter.html</Path>
    <Anchor>CompositeFilter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeIterator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CompositeIterator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeIterator()</Name>
      <Type>Constructor</Type>
      <Scope>CompositeIterator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CompositeIterator.html</Path>
    <Anchor>CompositeIterator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositePropertySource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CompositePropertySource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositePropertySource(String)</Name>
      <Type>Constructor</Type>
      <Scope>CompositePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CompositePropertySource.html</Path>
    <Anchor>CompositePropertySource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeRequestCondition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/CompositeRequestCondition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeRequestCondition(RequestCondition&amp;lt;?&amp;gt;...)</Name>
      <Type>Constructor</Type>
      <Scope>CompositeRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/CompositeRequestCondition.html</Path>
    <Anchor>CompositeRequestCondition(org.springframework.web.servlet.mvc.condition.RequestCondition...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeStringExpression</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.common</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/CompositeStringExpression.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeStringExpression(String, Expression[])</Name>
      <Type>Constructor</Type>
      <Scope>CompositeStringExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/CompositeStringExpression.html</Path>
    <Anchor>CompositeStringExpression(java.lang.String, org.springframework.expression.Expression[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeTransactionAttributeSource</Name>
      <Type>cl</Type>
      <Scope>org.springframework.transaction.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/CompositeTransactionAttributeSource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompositeTransactionAttributeSource(TransactionAttributeSource[])</Name>
      <Type>Constructor</Type>
      <Scope>CompositeTransactionAttributeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/CompositeTransactionAttributeSource.html</Path>
    <Anchor>CompositeTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util.comparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundComparator()</Name>
      <Type>Constructor</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>CompoundComparator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundComparator(Comparator...)</Name>
      <Type>Constructor</Type>
      <Scope>CompoundComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/comparator/CompoundComparator.html</Path>
    <Anchor>CompoundComparator(java.util.Comparator...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundExpression</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/CompoundExpression.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundExpression(int, SpelNodeImpl...)</Name>
      <Type>Constructor</Type>
      <Scope>CompoundExpression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/CompoundExpression.html</Path>
    <Anchor>CompoundExpression(int, org.springframework.expression.spel.ast.SpelNodeImpl...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>concatenateStringArrays(String[], String[])</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>concatenateStringArrays(java.lang.String[], java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrencyFailureException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.dao</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/ConcurrencyFailureException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrencyFailureException(String)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrencyFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/ConcurrencyFailureException.html</Path>
    <Anchor>ConcurrencyFailureException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrencyFailureException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrencyFailureException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/dao/ConcurrencyFailureException.html</Path>
    <Anchor>ConcurrencyFailureException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrencyThrottleInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ConcurrencyThrottleInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrencyThrottleInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrencyThrottleInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ConcurrencyThrottleInterceptor.html</Path>
    <Anchor>ConcurrencyThrottleInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrencyThrottleSupport</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrencyThrottleSupport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrencyThrottleSupport()</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrencyThrottleSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrencyThrottleSupport.html</Path>
    <Anchor>ConcurrencyThrottleSupport()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentExecutorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.task.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ConcurrentExecutorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentExecutorAdapter(TaskExecutor)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentExecutorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/task/support/ConcurrentExecutorAdapter.html</Path>
    <Anchor>ConcurrentExecutorAdapter(org.springframework.core.task.TaskExecutor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMap</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConcurrentMap.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMapCache</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCache.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMapCache(String)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentMapCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCache.html</Path>
    <Anchor>ConcurrentMapCache(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMapCache(String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentMapCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCache.html</Path>
    <Anchor>ConcurrentMapCache(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMapCache(String, ConcurrentMap&amp;lt;Object, Object&amp;gt;, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentMapCache</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCache.html</Path>
    <Anchor>ConcurrentMapCache(java.lang.String, java.util.concurrent.ConcurrentMap, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMapCacheFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMapCacheFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentMapCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheFactoryBean.html</Path>
    <Anchor>ConcurrentMapCacheFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMapCacheManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.cache.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMapCacheManager()</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentMapCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheManager.html</Path>
    <Anchor>ConcurrentMapCacheManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentMapCacheManager(String...)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentMapCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheManager.html</Path>
    <Anchor>ConcurrentMapCacheManager(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap()</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>ConcurrentReferenceHashMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap(int)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>ConcurrentReferenceHashMap(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap(int, float)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>ConcurrentReferenceHashMap(int, float)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap(int, int)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>ConcurrentReferenceHashMap(int, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap(int, float, int)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>ConcurrentReferenceHashMap(int, float, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap(int, float, int, ConcurrentReferenceHashMap.ReferenceType)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>ConcurrentReferenceHashMap(int, float, int, org.springframework.util.ConcurrentReferenceHashMap.ReferenceType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap.Entry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Entry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap.Entry(K, V)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentReferenceHashMap.Entry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Entry.html</Path>
    <Anchor>ConcurrentReferenceHashMap.Entry(K, V)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap.Reference</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Reference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap.ReferenceManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.ReferenceManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap.ReferenceManager()</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentReferenceHashMap.ReferenceManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.ReferenceManager.html</Path>
    <Anchor>ConcurrentReferenceHashMap.ReferenceManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap.ReferenceType</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.ReferenceType.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap.Restructure</Name>
      <Type>Enum</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Restructure.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap.Segment</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Segment.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentReferenceHashMap.Segment(int)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentReferenceHashMap.Segment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.Segment.html</Path>
    <Anchor>ConcurrentReferenceHashMap.Segment(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.backportconcurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>ConcurrentTaskExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskExecutor(Executor)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>ConcurrentTaskExecutor(edu.emory.mathcs.backport.java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskExecutor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskExecutor()</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>ConcurrentTaskExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskExecutor(Executor)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html</Path>
    <Anchor>ConcurrentTaskExecutor(java.util.concurrent.Executor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskScheduler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskScheduler()</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>ConcurrentTaskScheduler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskScheduler(ScheduledExecutorService)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>ConcurrentTaskScheduler(java.util.concurrent.ScheduledExecutorService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConcurrentTaskScheduler(Executor, ScheduledExecutorService)</Name>
      <Type>Constructor</Type>
      <Scope>ConcurrentTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html</Path>
    <Anchor>ConcurrentTaskScheduler(java.util.concurrent.Executor, java.util.concurrent.ScheduledExecutorService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConditionalConverter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.convert.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConditionalConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConditionalGenericConverter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.convert.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConditionalGenericConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConditionalTestCase</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/ConditionalTestCase.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConditionalTestCase()</Name>
      <Type>Constructor</Type>
      <Scope>ConditionalTestCase</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/ConditionalTestCase.html</Path>
    <Anchor>ConditionalTestCase()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConditionalTestCase(String)</Name>
      <Type>Constructor</Type>
      <Scope>ConditionalTestCase</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/ConditionalTestCase.html</Path>
    <Anchor>ConditionalTestCase(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_LOCATION_DELIMITERS</Name>
      <Type>Field</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>CONFIG_LOCATION_DELIMITERS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_LOCATION_DELIMITERS</Name>
      <Type>Field</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>CONFIG_LOCATION_DELIMITERS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_LOCATION_PARAM</Name>
      <Type>Field</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>CONFIG_LOCATION_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_LOCATION_PARAM</Name>
      <Type>Field</Type>
      <Scope>Log4jWebConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/Log4jWebConfigurer.html</Path>
    <Anchor>CONFIG_LOCATION_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configurable</Name>
      <Type>clm</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/Configurable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableApplicationContext</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableBeanFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableConversionService</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.convert.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/ConfigurableConversionService.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableEnvironment</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurableEnvironment.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableJasperReportsView</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view.jasperreports</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableJasperReportsView()</Name>
      <Type>Constructor</Type>
      <Scope>ConfigurableJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html</Path>
    <Anchor>ConfigurableJasperReportsView()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableListableBeanFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableMimeFileTypeMap</Name>
      <Type>cl</Type>
      <Scope>org.springframework.mail.javamail</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableMimeFileTypeMap()</Name>
      <Type>Constructor</Type>
      <Scope>ConfigurableMimeFileTypeMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html</Path>
    <Anchor>ConfigurableMimeFileTypeMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableObject</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans.factory.aspectj</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/aspectj/ConfigurableObject.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableObjectInputStream</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConfigurableObjectInputStream.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableObjectInputStream(InputStream, ClassLoader)</Name>
      <Type>Constructor</Type>
      <Scope>ConfigurableObjectInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConfigurableObjectInputStream.html</Path>
    <Anchor>ConfigurableObjectInputStream(java.io.InputStream, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableObjectInputStream(InputStream, ClassLoader, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ConfigurableObjectInputStream</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConfigurableObjectInputStream.html</Path>
    <Anchor>ConfigurableObjectInputStream(java.io.InputStream, java.lang.ClassLoader, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurablePortletApplicationContext</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurablePropertyAccessor</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/ConfigurablePropertyAccessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurablePropertyResolver</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.env</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/ConfigurablePropertyResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableWebApplicationContext</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebApplicationContext.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableWebBindingInitializer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.bind.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableWebBindingInitializer()</Name>
      <Type>Constructor</Type>
      <Scope>ConfigurableWebBindingInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html</Path>
    <Anchor>ConfigurableWebBindingInitializer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurableWebEnvironment</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ConfigurableWebEnvironment.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <Type>clm</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/Configuration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIGURATION_BEAN_NAME_GENERATOR</Name>
      <Type>Field</Type>
      <Scope>AnnotationConfigUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/AnnotationConfigUtils.html</Path>
    <Anchor>CONFIGURATION_BEAN_NAME_GENERATOR</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurationClassPostProcessor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurationClassPostProcessor()</Name>
      <Type>Constructor</Type>
      <Scope>ConfigurationClassPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ConfigurationClassPostProcessor.html</Path>
    <Anchor>ConfigurationClassPostProcessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configure(Properties)</Name>
      <Type>instm</Type>
      <Scope>LocalDataSourceConnectionProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html</Path>
    <Anchor>configure(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configure(Properties)</Name>
      <Type>instm</Type>
      <Scope>SpringTransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringTransactionFactory.html</Path>
    <Anchor>configure(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext, ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>configureAndRefreshWebApplicationContext(org.springframework.web.context.ConfigurableWebApplicationContext, javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>configureAndRefreshWebApplicationContext(org.springframework.web.context.ConfigurableWebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureAsyncSupport(AsyncSupportConfigurer)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureAsyncSupport(AsyncSupportConfigurer)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureAsyncSupport(AsyncSupportConfigurer)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureAsyncSupport(AsyncSupportConfigurer)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureBean(Object, String)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>configureBean(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureBean(Object, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>configureBean(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureBean(Object)</Name>
      <Type>instm</Type>
      <Scope>BeanConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanConfigurerSupport.html</Path>
    <Anchor>configureBean(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureBeanPostProcessor(AutowiredAnnotationBeanPostProcessor, Object)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanAutowiringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html</Path>
    <Anchor>configureBeanPostProcessor(org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureConnectionProperties(ConnectionProperties, String)</Name>
      <Type>intfm</Type>
      <Scope>EmbeddedDatabaseConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurer.html</Path>
    <Anchor>configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureContentNegotiation(ContentNegotiationConfigurer)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureContentNegotiation(ContentNegotiationConfigurer)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureContentNegotiation(ContentNegotiationConfigurer)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureContentNegotiation(ContentNegotiationConfigurer)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureDefaultServletHandling(DefaultServletHandlerConfigurer)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>configureDefaultServletHandling(org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureDefaultServletHandling(DefaultServletHandlerConfigurer)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>configureDefaultServletHandling(org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureDefaultServletHandling(DefaultServletHandlerConfigurer)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>configureDefaultServletHandling(org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureDefaultServletHandling(DefaultServletHandlerConfigurer)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>configureDefaultServletHandling(org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureHandlerExceptionResolvers(List&amp;lt;HandlerExceptionResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>configureHandlerExceptionResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureHandlerExceptionResolvers(List&amp;lt;HandlerExceptionResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>configureHandlerExceptionResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureHandlerExceptionResolvers(List&amp;lt;HandlerExceptionResolver&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>configureHandlerExceptionResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureHandlerExceptionResolvers(List&amp;lt;HandlerExceptionResolver&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>configureHandlerExceptionResolvers(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureIndentation(Transformer)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>configureIndentation(javax.xml.transform.Transformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DelegatingWebMvcConfiguration</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.html</Path>
    <Anchor>configureMessageConverters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurationSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.html</Path>
    <Anchor>configureMessageConverters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>WebMvcConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html</Path>
    <Anchor>configureMessageConverters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>WebMvcConfigurerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html</Path>
    <Anchor>configureMessageConverters(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureResponse(Map&amp;lt;String, Object&amp;gt;, HttpServletResponse, Transformer)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>configureResponse(java.util.Map, javax.servlet.http.HttpServletResponse, javax.xml.transform.Transformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureScanner(ParserContext, Element)</Name>
      <Type>instm</Type>
      <Scope>ComponentScanBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
    <Anchor>configureScanner(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureTasks(ScheduledTaskRegistrar)</Name>
      <Type>intfm</Type>
      <Scope>SchedulingConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/annotation/SchedulingConfigurer.html</Path>
    <Anchor>configureTasks(org.springframework.scheduling.config.ScheduledTaskRegistrar)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureTransformer(Map&amp;lt;String, Object&amp;gt;, HttpServletResponse, Transformer)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>configureTransformer(java.util.Map, javax.servlet.http.HttpServletResponse, javax.xml.transform.Transformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configureWebResources(GenericWebApplicationContext, WebMergedContextConfiguration)</Name>
      <Type>instm</Type>
      <Scope>AbstractGenericWebContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/AbstractGenericWebContextLoader.html</Path>
    <Anchor>configureWebResources(org.springframework.web.context.support.GenericWebApplicationContext, org.springframework.test.context.web.WebMergedContextConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTION_SYNCHRONIZATION_ORDER</Name>
      <Type>Field</Type>
      <Scope>DataSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/DataSourceUtils.html</Path>
    <Anchor>CONNECTION_SYNCHRONIZATION_ORDER</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jca.cci.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/ConnectionCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionCallback</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ConnectionCallback.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionFactoryUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionFactoryUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionFactoryUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>ConnectionFactoryUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionFactoryUtils</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionFactoryUtils()</Name>
      <Type>Constructor</Type>
      <Scope>ConnectionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.html</Path>
    <Anchor>ConnectionFactoryUtils()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionFactoryUtils.ResourceFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jms.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionHandle</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHandle.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionHolder(Connection)</Name>
      <Type>Constructor</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionHolder.html</Path>
    <Anchor>ConnectionHolder(javax.resource.cci.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionHolder(ConnectionHandle)</Name>
      <Type>Constructor</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>ConnectionHolder(org.springframework.jdbc.datasource.ConnectionHandle)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionHolder(Connection)</Name>
      <Type>Constructor</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>ConnectionHolder(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionHolder(Connection, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>ConnectionHolder(java.sql.Connection, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionProperties</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.datasource.embedded</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/embedded/ConnectionProperties.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionProxy</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.jdbc.datasource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionSpecConnectionFactoryAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jca.cci.connection</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionSpecConnectionFactoryAdapter()</Name>
      <Type>Constructor</Type>
      <Scope>ConnectionSpecConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html</Path>
    <Anchor>ConnectionSpecConnectionFactoryAdapter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectorServerFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jmx.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectorServerFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ConnectorServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/ConnectorServerFactoryBean.html</Path>
    <Anchor>ConnectorServerFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstantException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConstantException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstantException(String, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>ConstantException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConstantException.html</Path>
    <Anchor>ConstantException(java.lang.String, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstantException(String, String, Object)</Name>
      <Type>Constructor</Type>
      <Scope>ConstantException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ConstantException.html</Path>
    <Anchor>ConstantException(java.lang.String, java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Constants</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Constants.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Constants(Class&amp;lt;?&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>Constants</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Constants.html</Path>
    <Anchor>Constants(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONSTRUCTOR_ARG_ELEMENT</Name>
      <Type>Field</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>CONSTRUCTOR_ARG_ELEMENT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONSTRUCTOR_ARG_PREFIX</Name>
      <Type>Field</Type>
      <Scope>PropertiesBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html</Path>
    <Anchor>CONSTRUCTOR_ARG_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentEntry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.parsing</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentEntry()</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentEntry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html</Path>
    <Anchor>ConstructorArgumentEntry()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentEntry(int)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentEntry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html</Path>
    <Anchor>ConstructorArgumentEntry(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentValues</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentValues()</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>ConstructorArgumentValues()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentValues(ConstructorArgumentValues)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.html</Path>
    <Anchor>ConstructorArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentValues.ValueHolder</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentValues.ValueHolder(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>ConstructorArgumentValues.ValueHolder(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentValues.ValueHolder(Object, String)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>ConstructorArgumentValues.ValueHolder(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorArgumentValues.ValueHolder(Object, String, String)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>ConstructorArgumentValues.ValueHolder(java.lang.Object, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorExecutor</Name>
      <Type>Constructor</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ConstructorExecutor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorReference</Name>
      <Type>cl</Type>
      <Scope>org.springframework.expression.spel.ast</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/ConstructorReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorReference(int, SpelNodeImpl...)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/ConstructorReference.html</Path>
    <Anchor>ConstructorReference(int, org.springframework.expression.spel.ast.SpelNodeImpl...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorReference(int, SpelNodeImpl[], SpelNodeImpl...)</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ast/ConstructorReference.html</Path>
    <Anchor>ConstructorReference(int, org.springframework.expression.spel.ast.SpelNodeImpl[], org.springframework.expression.spel.ast.SpelNodeImpl...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstructorResolver</Name>
      <Type>Constructor</Type>
      <Scope>org.springframework.expression</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/ConstructorResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConsumesRequestCondition</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.condition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ConsumesRequestCondition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConsumesRequestCondition(String...)</Name>
      <Type>Constructor</Type>
      <Scope>ConsumesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ConsumesRequestCondition.html</Path>
    <Anchor>ConsumesRequestCondition(java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConsumesRequestCondition(String[], String[])</Name>
      <Type>Constructor</Type>
      <Scope>ConsumesRequestCondition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/condition/ConsumesRequestCondition.html</Path>
    <Anchor>ConsumesRequestCondition(java.lang.String[], java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTAINER_PREFIX</Name>
      <Type>Field</Type>
      <Scope>JndiLocatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiLocatorSupport.html</Path>
    <Anchor>CONTAINER_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Class)</Name>
      <Type>clm</Type>
      <Scope>BeanCreationException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanCreationException.html</Path>
    <Anchor>contains(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/MutablePropertyValues.html</Path>
    <Anchor>contains(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Class)</Name>
      <Type>clm</Type>
      <Scope>PropertyBatchUpdateException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyBatchUpdateException.html</Path>
    <Anchor>contains(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyValues</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyValues.html</Path>
    <Anchor>contains(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(String)</Name>
      <Type>instm</Type>
      <Scope>MutablePropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/MutablePropertySources.html</Path>
    <Anchor>contains(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(String)</Name>
      <Type>intfm</Type>
      <Scope>PropertySources</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySources.html</Path>
    <Anchor>contains(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Class)</Name>
      <Type>clm</Type>
      <Scope>NestedCheckedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/NestedCheckedException.html</Path>
    <Anchor>contains(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Class)</Name>
      <Type>clm</Type>
      <Scope>NestedRuntimeException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/NestedRuntimeException.html</Path>
    <Anchor>contains(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Object)</Name>
      <Type>intfm</Type>
      <Scope>HibernateOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateOperations.html</Path>
    <Anchor>contains(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Object)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>contains(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Object)</Name>
      <Type>intfm</Type>
      <Scope>JpaOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaOperations.html</Path>
    <Anchor>contains(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Object)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>contains(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Class)</Name>
      <Type>clm</Type>
      <Scope>TransactionSystemException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/TransactionSystemException.html</Path>
    <Anchor>contains(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Object)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>contains(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Iterator, Object)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>contains(java.util.Iterator, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains(Enumeration, Object)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>contains(java.util.Enumeration, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsAll(Collection)</Name>
      <Type>instm</Type>
      <Scope>AutoPopulatingList</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.html</Path>
    <Anchor>containsAll(java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsAny(Collection, Collection)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>containsAny(java.util.Collection, java.util.Collection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsAttribute(String)</Name>
      <Type>intfm</Type>
      <Scope>Model</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/Model.html</Path>
    <Anchor>containsAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>ModelMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/ModelMap.html</Path>
    <Anchor>containsAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsAttribute(String)</Name>
      <Type>instm</Type>
      <Scope>ModelAndViewContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/support/ModelAndViewContainer.html</Path>
    <Anchor>containsAttribute(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBean(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactory.html</Path>
    <Anchor>containsBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBean(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>containsBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBean(String)</Name>
      <Type>instm</Type>
      <Scope>StaticListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/StaticListableBeanFactory.html</Path>
    <Anchor>containsBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBean(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>containsBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBean(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleJndiBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/support/SimpleJndiBeanFactory.html</Path>
    <Anchor>containsBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBeanDefinition(String)</Name>
      <Type>intfm</Type>
      <Scope>ListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/ListableBeanFactory.html</Path>
    <Anchor>containsBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>containsBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBeanDefinition(String)</Name>
      <Type>intfm</Type>
      <Scope>BeanDefinitionRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionRegistry.html</Path>
    <Anchor>containsBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>containsBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleBeanDefinitionRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html</Path>
    <Anchor>containsBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>StaticListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/StaticListableBeanFactory.html</Path>
    <Anchor>containsBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsBeanDefinition(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>containsBeanDefinition(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsConstant(Enum&amp;lt;?&amp;gt;[], String)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>containsConstant(java.lang.Enum[], java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsConstant(Enum&amp;lt;?&amp;gt;[], String, boolean)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>containsConstant(java.lang.Enum[], java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsElement(Object[], Object)</Name>
      <Type>clm</Type>
      <Scope>ObjectUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ObjectUtils.html</Path>
    <Anchor>containsElement(java.lang.Object[], java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsHeader(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/MockHttpServletResponse.html</Path>
    <Anchor>containsHeader(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsInstance(Collection, Object)</Name>
      <Type>clm</Type>
      <Scope>CollectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CollectionUtils.html</Path>
    <Anchor>containsInstance(java.util.Collection, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey(String)</Name>
      <Type>instm</Type>
      <Scope>MessageSourceResourceBundle</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/MessageSourceResourceBundle.html</Path>
    <Anchor>containsKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey(Object)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>containsKey(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey(Object)</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>containsKey(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey(Object)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>containsKey(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey(Object)</Name>
      <Type>instm</Type>
      <Scope>LinkedCaseInsensitiveMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedCaseInsensitiveMap.html</Path>
    <Anchor>containsKey(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey(Object)</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>containsKey(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsLocalBean(String)</Name>
      <Type>intfm</Type>
      <Scope>HierarchicalBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/HierarchicalBeanFactory.html</Path>
    <Anchor>containsLocalBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsLocalBean(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>containsLocalBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsLocalBean(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>containsLocalBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsObject(String)</Name>
      <Type>instm</Type>
      <Scope>BeanExpressionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/BeanExpressionContext.html</Path>
    <Anchor>containsObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsOption(String)</Name>
      <Type>instm</Type>
      <Scope>CommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CommandLinePropertySource.html</Path>
    <Anchor>containsOption(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsOption(String)</Name>
      <Type>instm</Type>
      <Scope>JOptCommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/JOptCommandLinePropertySource.html</Path>
    <Anchor>containsOption(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsOption(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleCommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/SimpleCommandLinePropertySource.html</Path>
    <Anchor>containsOption(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsProperty(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>containsProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsProperty(String)</Name>
      <Type>instm</Type>
      <Scope>CommandLinePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/CommandLinePropertySource.html</Path>
    <Anchor>containsProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsProperty(String)</Name>
      <Type>instm</Type>
      <Scope>EnumerablePropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/EnumerablePropertySource.html</Path>
    <Anchor>containsProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsProperty(String)</Name>
      <Type>intfm</Type>
      <Scope>PropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertyResolver.html</Path>
    <Anchor>containsProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsProperty(String)</Name>
      <Type>instm</Type>
      <Scope>PropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySource.html</Path>
    <Anchor>containsProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsProperty(String)</Name>
      <Type>instm</Type>
      <Scope>PropertySourcesPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/PropertySourcesPropertyResolver.html</Path>
    <Anchor>containsProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsProperty(String)</Name>
      <Type>instm</Type>
      <Scope>SystemEnvironmentPropertySource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/SystemEnvironmentPropertySource.html</Path>
    <Anchor>containsProperty(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsSession(Session)</Name>
      <Type>instm</Type>
      <Scope>JmsResourceHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsResourceHolder.html</Path>
    <Anchor>containsSession(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsSession(Session)</Name>
      <Type>instm</Type>
      <Scope>SessionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionHolder.html</Path>
    <Anchor>containsSession(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsSingleton(String)</Name>
      <Type>intfm</Type>
      <Scope>SingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SingletonBeanRegistry.html</Path>
    <Anchor>containsSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsSingleton(String)</Name>
      <Type>instm</Type>
      <Scope>DefaultSingletonBeanRegistry</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html</Path>
    <Anchor>containsSingleton(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsSqlScriptDelimiters(String, char)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>containsSqlScriptDelimiters(java.lang.String, char)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsValue(Object)</Name>
      <Type>instm</Type>
      <Scope>HttpHeaders</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/HttpHeaders.html</Path>
    <Anchor>containsValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsValue(Object)</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>containsValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsValue(Object)</Name>
      <Type>instm</Type>
      <Scope>LinkedMultiValueMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedMultiValueMap.html</Path>
    <Anchor>containsValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsWhitespace(CharSequence)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>containsWhitespace(java.lang.CharSequence)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsWhitespace(String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>containsWhitespace(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>content()</Name>
      <Type>clm</Type>
      <Scope>MockRestRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/MockRestRequestMatchers.html</Path>
    <Anchor>content()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>content(byte[])</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>content(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>content(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>content(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>content()</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html</Path>
    <Anchor>content()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTENT_DISPOSITION_INLINE</Name>
      <Type>Field</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>CONTENT_DISPOSITION_INLINE</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTENT_TYPE_CHARSET_PREFIX</Name>
      <Type>Field</Type>
      <Scope>WebUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebUtils.html</Path>
    <Anchor>CONTENT_TYPE_CHARSET_PREFIX</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTENT_TYPE_HESSIAN</Name>
      <Type>Field</Type>
      <Scope>HessianExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianExporter.html</Path>
    <Anchor>CONTENT_TYPE_HESSIAN</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTENT_TYPE_SERIALIZED_OBJECT</Name>
      <Type>Field</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>CONTENT_TYPE_SERIALIZED_OBJECT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTENT_TYPE_SERIALIZED_OBJECT</Name>
      <Type>Field</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>CONTENT_TYPE_SERIALIZED_OBJECT</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentLength()</Name>
      <Type>instm</Type>
      <Scope>AbstractFileResolvingResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractFileResolvingResource.html</Path>
    <Anchor>contentLength()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentLength()</Name>
      <Type>instm</Type>
      <Scope>AbstractResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractResource.html</Path>
    <Anchor>contentLength()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentLength()</Name>
      <Type>instm</Type>
      <Scope>ByteArrayResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ByteArrayResource.html</Path>
    <Anchor>contentLength()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentLength()</Name>
      <Type>instm</Type>
      <Scope>FileSystemResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
    <Anchor>contentLength()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentLength()</Name>
      <Type>intfm</Type>
      <Scope>Resource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/Resource.html</Path>
    <Anchor>contentLength()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentLength()</Name>
      <Type>instm</Type>
      <Scope>VfsResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/VfsResource.html</Path>
    <Anchor>contentLength()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiatingViewResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.view</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiatingViewResolver()</Name>
      <Type>Constructor</Type>
      <Scope>ContentNegotiatingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html</Path>
    <Anchor>ContentNegotiatingViewResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiationConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.config.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiationConfigurer(ServletContext)</Name>
      <Type>Constructor</Type>
      <Scope>ContentNegotiationConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.html</Path>
    <Anchor>ContentNegotiationConfigurer(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiationManager</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.accept</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiationManager(ContentNegotiationStrategy...)</Name>
      <Type>Constructor</Type>
      <Scope>ContentNegotiationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManager.html</Path>
    <Anchor>ContentNegotiationManager(org.springframework.web.accept.ContentNegotiationStrategy...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiationManager()</Name>
      <Type>Constructor</Type>
      <Scope>ContentNegotiationManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManager.html</Path>
    <Anchor>ContentNegotiationManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiationManagerFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.accept</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiationManagerFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ContentNegotiationManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.html</Path>
    <Anchor>ContentNegotiationManagerFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentNegotiationStrategy</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.accept</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/accept/ContentNegotiationStrategy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentRequestMatchers</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.client.match</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentRequestMatchers()</Name>
      <Type>Constructor</Type>
      <Scope>ContentRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
    <Anchor>ContentRequestMatchers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentResultMatchers</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.result</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentResultMatchers()</Name>
      <Type>Constructor</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>ContentResultMatchers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentType(String)</Name>
      <Type>instm</Type>
      <Scope>ContentRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
    <Anchor>contentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentType(MediaType)</Name>
      <Type>instm</Type>
      <Scope>ContentRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
    <Anchor>contentType(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentType(MediaType)</Name>
      <Type>instm</Type>
      <Scope>DefaultResponseCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/DefaultResponseCreator.html</Path>
    <Anchor>contentType(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentType(MediaType)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>contentType(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentType(String)</Name>
      <Type>instm</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>contentType(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentType(MediaType)</Name>
      <Type>instm</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>contentType(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentTypeCompatibleWith(String)</Name>
      <Type>instm</Type>
      <Scope>ContentRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
    <Anchor>contentTypeCompatibleWith(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentTypeCompatibleWith(MediaType)</Name>
      <Type>instm</Type>
      <Scope>ContentRequestMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/match/ContentRequestMatchers.html</Path>
    <Anchor>contentTypeCompatibleWith(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentTypeCompatibleWith(String)</Name>
      <Type>instm</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>contentTypeCompatibleWith(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentTypeCompatibleWith(MediaType)</Name>
      <Type>instm</Type>
      <Scope>ContentResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/ContentResultMatchers.html</Path>
    <Anchor>contentTypeCompatibleWith(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTEXT_ATTRIBUTES_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/WebApplicationContext.html</Path>
    <Anchor>CONTEXT_ATTRIBUTES_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTEXT_CLASS_PARAM</Name>
      <Type>Field</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>CONTEXT_CLASS_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTEXT_ID_PARAM</Name>
      <Type>Field</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>CONTEXT_ID_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTEXT_INITIALIZER_CLASSES_PARAM</Name>
      <Type>Field</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>CONTEXT_INITIALIZER_CLASSES_PARAM</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONTEXT_PARAMETERS_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>WebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/WebApplicationContext.html</Path>
    <Anchor>CONTEXT_PARAMETERS_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextBeanFactoryReference</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextBeanFactoryReference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextBeanFactoryReference(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ContextBeanFactoryReference</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextBeanFactoryReference.html</Path>
    <Anchor>ContextBeanFactoryReference(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextCleanupListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextCleanupListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextCleanupListener()</Name>
      <Type>Constructor</Type>
      <Scope>ContextCleanupListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextCleanupListener.html</Path>
    <Anchor>ContextCleanupListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextClosedEvent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ContextClosedEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextClosedEvent(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ContextClosedEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ContextClosedEvent.html</Path>
    <Anchor>ContextClosedEvent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextConfiguration</Name>
      <Type>clm</Type>
      <Scope>org.springframework.test.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfiguration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextConfigurationAttributes</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextConfigurationAttributes(Class&amp;lt;?&amp;gt;, ContextConfiguration)</Name>
      <Type>Constructor</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>ContextConfigurationAttributes(java.lang.Class, org.springframework.test.context.ContextConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextConfigurationAttributes(Class&amp;lt;?&amp;gt;, String[], Class&amp;lt;?&amp;gt;[], boolean, Class&amp;lt;? extends ContextLoader&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>ContextConfigurationAttributes(java.lang.Class, java.lang.String[], java.lang.Class[], boolean, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextConfigurationAttributes(Class&amp;lt;?&amp;gt;, String[], Class&amp;lt;?&amp;gt;[], boolean, Class&amp;lt;? extends ApplicationContextInitializer&amp;lt;? extends ConfigurableApplicationContext&amp;gt;&amp;gt;[], boolean, Class&amp;lt;? extends ContextLoader&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ContextConfigurationAttributes</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextConfigurationAttributes.html</Path>
    <Anchor>ContextConfigurationAttributes(java.lang.Class, java.lang.String[], java.lang.Class[], boolean, java.lang.Class[], boolean, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextDestroyed(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>ContextCleanupListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextCleanupListener.html</Path>
    <Anchor>contextDestroyed(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextDestroyed(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoaderListener.html</Path>
    <Anchor>contextDestroyed(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextDestroyed(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>IntrospectorCleanupListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/IntrospectorCleanupListener.html</Path>
    <Anchor>contextDestroyed(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextDestroyed(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>Log4jConfigListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/Log4jConfigListener.html</Path>
    <Anchor>contextDestroyed(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextDestroyed(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>WebAppRootListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebAppRootListener.html</Path>
    <Anchor>contextDestroyed(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextExposingHttpServletRequest</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ContextExposingHttpServletRequest.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextExposingHttpServletRequest(HttpServletRequest, WebApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ContextExposingHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ContextExposingHttpServletRequest.html</Path>
    <Anchor>ContextExposingHttpServletRequest(javax.servlet.http.HttpServletRequest, org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextExposingHttpServletRequest(HttpServletRequest, WebApplicationContext, Set&amp;lt;String&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ContextExposingHttpServletRequest</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ContextExposingHttpServletRequest.html</Path>
    <Anchor>ContextExposingHttpServletRequest(javax.servlet.http.HttpServletRequest, org.springframework.web.context.WebApplicationContext, java.util.Set)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextInitialized(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>ContextCleanupListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextCleanupListener.html</Path>
    <Anchor>contextInitialized(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextInitialized(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoaderListener.html</Path>
    <Anchor>contextInitialized(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextInitialized(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>IntrospectorCleanupListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/IntrospectorCleanupListener.html</Path>
    <Anchor>contextInitialized(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextInitialized(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>Log4jConfigListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/Log4jConfigListener.html</Path>
    <Anchor>contextInitialized(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextInitialized(ServletContextEvent)</Name>
      <Type>instm</Type>
      <Scope>WebAppRootListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/WebAppRootListener.html</Path>
    <Anchor>contextInitialized(javax.servlet.ServletContextEvent)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextJndiBeanFactoryLocator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextJndiBeanFactoryLocator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextJndiBeanFactoryLocator()</Name>
      <Type>Constructor</Type>
      <Scope>ContextJndiBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextJndiBeanFactoryLocator.html</Path>
    <Anchor>ContextJndiBeanFactoryLocator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextKey()</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>contextKey()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextKeyString(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSpringContextTests.html</Path>
    <Anchor>contextKeyString(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLifecycleScheduledTaskRegistrar</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ContextLifecycleScheduledTaskRegistrar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLifecycleScheduledTaskRegistrar()</Name>
      <Type>Constructor</Type>
      <Scope>ContextLifecycleScheduledTaskRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/ContextLifecycleScheduledTaskRegistrar.html</Path>
    <Anchor>ContextLifecycleScheduledTaskRegistrar()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLoader</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.test.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/ContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLoader</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLoader()</Name>
      <Type>Constructor</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>ContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLoader(WebApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>ContextLoader(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLoaderListener</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.context</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoaderListener.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLoaderListener()</Name>
      <Type>Constructor</Type>
      <Scope>ContextLoaderListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoaderListener.html</Path>
    <Anchor>ContextLoaderListener()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLoaderListener(WebApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ContextLoaderListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoaderListener.html</Path>
    <Anchor>ContextLoaderListener(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLoaderPlugIn</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.struts</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextLoaderPlugIn()</Name>
      <Type>Constructor</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>ContextLoaderPlugIn()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextNamespaceHandler</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/config/ContextNamespaceHandler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextNamespaceHandler()</Name>
      <Type>Constructor</Type>
      <Scope>ContextNamespaceHandler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/config/ContextNamespaceHandler.html</Path>
    <Anchor>ContextNamespaceHandler()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextPath(String)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>contextPath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextRefreshedEvent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ContextRefreshedEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextRefreshedEvent(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ContextRefreshedEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ContextRefreshedEvent.html</Path>
    <Anchor>ContextRefreshedEvent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextResource</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.io</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ContextResource.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextSingletonBeanFactoryLocator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.access</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextSingletonBeanFactoryLocator(String)</Name>
      <Type>Constructor</Type>
      <Scope>ContextSingletonBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html</Path>
    <Anchor>ContextSingletonBeanFactoryLocator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextStartedEvent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ContextStartedEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextStartedEvent(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ContextStartedEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ContextStartedEvent.html</Path>
    <Anchor>ContextStartedEvent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextStoppedEvent</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.event</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ContextStoppedEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextStoppedEvent(ApplicationContext)</Name>
      <Type>Constructor</Type>
      <Scope>ContextStoppedEvent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/event/ContextStoppedEvent.html</Path>
    <Anchor>ContextStoppedEvent(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlFlow</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ControlFlow.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlFlowFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ControlFlowFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlFlowFactory()</Name>
      <Type>Constructor</Type>
      <Scope>ControlFlowFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ControlFlowFactory.html</Path>
    <Anchor>ControlFlowFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlFlowPointcut</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ControlFlowPointcut.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlFlowPointcut(Class)</Name>
      <Type>Constructor</Type>
      <Scope>ControlFlowPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ControlFlowPointcut.html</Path>
    <Anchor>ControlFlowPointcut(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlFlowPointcut(Class, String)</Name>
      <Type>Constructor</Type>
      <Scope>ControlFlowPointcut</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/ControlFlowPointcut.html</Path>
    <Anchor>ControlFlowPointcut(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Controller</Name>
      <Type>clm</Type>
      <Scope>org.springframework.stereotype</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/stereotype/Controller.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Controller</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.portlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/Controller.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Controller</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.web.servlet.mvc</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/Controller.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControllerAdvice</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/ControllerAdvice.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControllerAdviceBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.method</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/ControllerAdviceBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControllerAdviceBean(String, BeanFactory)</Name>
      <Type>Constructor</Type>
      <Scope>ControllerAdviceBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/ControllerAdviceBean.html</Path>
    <Anchor>ControllerAdviceBean(java.lang.String, org.springframework.beans.factory.BeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControllerAdviceBean(Object)</Name>
      <Type>Constructor</Type>
      <Scope>ControllerAdviceBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/ControllerAdviceBean.html</Path>
    <Anchor>ControllerAdviceBean(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControllerBeanNameHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControllerBeanNameHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>ControllerBeanNameHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html</Path>
    <Anchor>ControllerBeanNameHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControllerClassNameHandlerMapping</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.mvc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControllerClassNameHandlerMapping()</Name>
      <Type>Constructor</Type>
      <Scope>ControllerClassNameHandlerMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html</Path>
    <Anchor>ControllerClassNameHandlerMapping()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Conventions</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Conventions.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Conventions()</Name>
      <Type>Constructor</Type>
      <Scope>Conventions</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/Conventions.html</Path>
    <Anchor>Conventions()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONVERSION_SERVICE_BEAN_NAME</Name>
      <Type>Field</Type>
      <Scope>ConfigurableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/ConfigurableApplicationContext.html</Path>
    <Anchor>CONVERSION_SERVICE_BEAN_NAME</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.core.convert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionException(String)</Name>
      <Type>Constructor</Type>
      <Scope>ConversionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionException.html</Path>
    <Anchor>ConversionException(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionException(String, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ConversionException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionException.html</Path>
    <Anchor>ConversionException(java.lang.String, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionFailedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.core.convert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionFailedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionFailedException(TypeDescriptor, TypeDescriptor, Object, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ConversionFailedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionFailedException.html</Path>
    <Anchor>ConversionFailedException(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor, java.lang.Object, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionNotSupportedException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.beans</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/ConversionNotSupportedException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionNotSupportedException(PropertyChangeEvent, Class, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ConversionNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/ConversionNotSupportedException.html</Path>
    <Anchor>ConversionNotSupportedException(java.beans.PropertyChangeEvent, java.lang.Class, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionNotSupportedException(Object, Class, Throwable)</Name>
      <Type>Constructor</Type>
      <Scope>ConversionNotSupportedException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/ConversionNotSupportedException.html</Path>
    <Anchor>ConversionNotSupportedException(java.lang.Object, java.lang.Class, java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionService</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.convert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionService.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>conversionService</Name>
      <Type>Field</Type>
      <Scope>AbstractPropertyResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractPropertyResolver.html</Path>
    <Anchor>conversionService</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionServiceExposingInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.handler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/ConversionServiceExposingInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionServiceExposingInterceptor(ConversionService)</Name>
      <Type>Constructor</Type>
      <Scope>ConversionServiceExposingInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/ConversionServiceExposingInterceptor.html</Path>
    <Anchor>ConversionServiceExposingInterceptor(org.springframework.core.convert.ConversionService)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionServiceFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.convert.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/ConversionServiceFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionServiceFactory()</Name>
      <Type>Constructor</Type>
      <Scope>ConversionServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/ConversionServiceFactory.html</Path>
    <Anchor>ConversionServiceFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionServiceFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.context.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ConversionServiceFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConversionServiceFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>ConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ConversionServiceFactoryBean.html</Path>
    <Anchor>ConversionServiceFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>ConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionService.html</Path>
    <Anchor>convert(java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(Object, TypeDescriptor, TypeDescriptor)</Name>
      <Type>intfm</Type>
      <Scope>ConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConversionService.html</Path>
    <Anchor>convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(S)</Name>
      <Type>intfm</Type>
      <Scope>Converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/Converter.html</Path>
    <Anchor>convert(S)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(Object, TypeDescriptor, TypeDescriptor)</Name>
      <Type>intfm</Type>
      <Scope>GenericConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/GenericConverter.html</Path>
    <Anchor>convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>convert(java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(Object, TypeDescriptor, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(Object, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(byte[])</Name>
      <Type>instm</Type>
      <Scope>DeserializingConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/DeserializingConverter.html</Path>
    <Anchor>convert(byte[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(Object)</Name>
      <Type>instm</Type>
      <Scope>SerializingConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/serializer/support/SerializingConverter.html</Path>
    <Anchor>convert(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert(EvaluationContext, Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ExpressionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/ExpressionUtils.html</Path>
    <Anchor>convert(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAllArguments(TypeConverter, Object[], Method)</Name>
      <Type>clm</Type>
      <Scope>ReflectionHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectionHelper.html</Path>
    <Anchor>convertAllArguments(org.springframework.expression.TypeConverter, java.lang.Object[], java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(Object)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>convertAndSend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(Destination, Object)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>convertAndSend(javax.jms.Destination, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(String, Object)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>convertAndSend(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(Object, MessagePostProcessor)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>convertAndSend(java.lang.Object, org.springframework.jms.core.MessagePostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(Destination, Object, MessagePostProcessor)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>convertAndSend(javax.jms.Destination, java.lang.Object, org.springframework.jms.core.MessagePostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(String, Object, MessagePostProcessor)</Name>
      <Type>intfm</Type>
      <Scope>JmsOperations</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsOperations.html</Path>
    <Anchor>convertAndSend(java.lang.String, java.lang.Object, org.springframework.jms.core.MessagePostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(Object)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>convertAndSend(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(Destination, Object)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>convertAndSend(javax.jms.Destination, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(String, Object)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>convertAndSend(java.lang.String, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(Object, MessagePostProcessor)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>convertAndSend(java.lang.Object, org.springframework.jms.core.MessagePostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(Destination, Object, MessagePostProcessor)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>convertAndSend(javax.jms.Destination, java.lang.Object, org.springframework.jms.core.MessagePostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertAndSend(String, Object, MessagePostProcessor)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>convertAndSend(java.lang.String, java.lang.Object, org.springframework.jms.core.MessagePostProcessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertBurlapAccessException(Throwable)</Name>
      <Type>instm</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>convertBurlapAccessException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertCastorException(XMLException, boolean)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>convertCastorException(org.exolab.castor.xml.XMLException, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertClassLoaderURL(URL)</Name>
      <Type>instm</Type>
      <Scope>PathMatchingResourcePatternResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/support/PathMatchingResourcePatternResolver.html</Path>
    <Anchor>convertClassLoaderURL(java.net.URL)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertClassNameToResourcePath(String)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>convertClassNameToResourcePath(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertElement(Object)</Name>
      <Type>instm</Type>
      <Scope>CustomCollectionEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomCollectionEditor.html</Path>
    <Anchor>convertElement(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Converter</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.convert.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/Converter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConverterFactory</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.convert.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConverterFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConverterNotFoundException</Name>
      <Type>Exception</Type>
      <Scope>org.springframework.core.convert</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConverterNotFoundException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConverterNotFoundException(TypeDescriptor, TypeDescriptor)</Name>
      <Type>Constructor</Type>
      <Scope>ConverterNotFoundException</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/ConverterNotFoundException.html</Path>
    <Anchor>ConverterNotFoundException(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConverterRegistry</Name>
      <Type>Interface</Type>
      <Scope>org.springframework.core.convert.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConverterRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertExporterParameters()</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>convertExporterParameters()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertForProperty(Object, String)</Name>
      <Type>instm</Type>
      <Scope>BeanWrapperImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanWrapperImpl.html</Path>
    <Anchor>convertForProperty(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertFromBytesMessage(BytesMessage, JavaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>convertFromBytesMessage(javax.jms.BytesMessage, com.fasterxml.jackson.databind.JavaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertFromBytesMessage(BytesMessage, JavaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>convertFromBytesMessage(javax.jms.BytesMessage, org.codehaus.jackson.type.JavaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertFromMessage(Message, JavaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>convertFromMessage(javax.jms.Message, com.fasterxml.jackson.databind.JavaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertFromMessage(Message, JavaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>convertFromMessage(javax.jms.Message, org.codehaus.jackson.type.JavaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertFromTextMessage(TextMessage, JavaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJackson2MessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJackson2MessageConverter.html</Path>
    <Anchor>convertFromTextMessage(javax.jms.TextMessage, com.fasterxml.jackson.databind.JavaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertFromTextMessage(TextMessage, JavaType)</Name>
      <Type>instm</Type>
      <Scope>MappingJacksonMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/MappingJacksonMessageConverter.html</Path>
    <Anchor>convertFromTextMessage(javax.jms.TextMessage, org.codehaus.jackson.type.JavaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHessianAccessException(Throwable)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>convertHessianAccessException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHibernateAccessException(HibernateException)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>convertHibernateAccessException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHibernateAccessException(HibernateException)</Name>
      <Type>instm</Type>
      <Scope>HibernateExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateExceptionTranslator.html</Path>
    <Anchor>convertHibernateAccessException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHibernateAccessException(HibernateException)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>convertHibernateAccessException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHibernateAccessException(HibernateException)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SessionFactoryUtils.html</Path>
    <Anchor>convertHibernateAccessException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHibernateAccessException(HibernateException)</Name>
      <Type>instm</Type>
      <Scope>HibernateDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/HibernateDaoSupport.html</Path>
    <Anchor>convertHibernateAccessException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHibernateAccessException(HibernateException)</Name>
      <Type>instm</Type>
      <Scope>HibernateExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateExceptionTranslator.html</Path>
    <Anchor>convertHibernateAccessException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHibernateAccessException(HibernateException)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/HibernateTransactionManager.html</Path>
    <Anchor>convertHibernateAccessException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHibernateAccessException(HibernateException)</Name>
      <Type>clm</Type>
      <Scope>SessionFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SessionFactoryUtils.html</Path>
    <Anchor>convertHibernateAccessException(org.hibernate.HibernateException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertHttpInvokerAccessException(Throwable)</Name>
      <Type>instm</Type>
      <Scope>HttpInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html</Path>
    <Anchor>convertHttpInvokerAccessException(java.lang.Throwable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertIfNecessary(Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>TypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/TypeConverter.html</Path>
    <Anchor>convertIfNecessary(java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertIfNecessary(Object, Class&amp;lt;T&amp;gt;, MethodParameter)</Name>
      <Type>intfm</Type>
      <Scope>TypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/TypeConverter.html</Path>
    <Anchor>convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertIfNecessary(Object, Class&amp;lt;T&amp;gt;, Field)</Name>
      <Type>intfm</Type>
      <Scope>TypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/TypeConverter.html</Path>
    <Anchor>convertIfNecessary(java.lang.Object, java.lang.Class, java.lang.reflect.Field)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertIfNecessary(Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>TypeConverterSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/TypeConverterSupport.html</Path>
    <Anchor>convertIfNecessary(java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertIfNecessary(Object, Class&amp;lt;T&amp;gt;, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>TypeConverterSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/TypeConverterSupport.html</Path>
    <Anchor>convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertIfNecessary(Object, Class&amp;lt;T&amp;gt;, Field)</Name>
      <Type>instm</Type>
      <Scope>TypeConverterSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/TypeConverterSupport.html</Path>
    <Anchor>convertIfNecessary(java.lang.Object, java.lang.Class, java.lang.reflect.Field)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertIfNecessary(Object, Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>convertIfNecessary(java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertIfNecessary(Object, Class&amp;lt;T&amp;gt;, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertIfNecessary(Object, Class&amp;lt;T&amp;gt;, Field)</Name>
      <Type>instm</Type>
      <Scope>DataBinder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DataBinder.html</Path>
    <Anchor>convertIfNecessary(java.lang.Object, java.lang.Class, java.lang.reflect.Field)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConvertingComparator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.convert.converter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConvertingComparator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConvertingComparator(Converter&amp;lt;S, T&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ConvertingComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConvertingComparator.html</Path>
    <Anchor>ConvertingComparator(org.springframework.core.convert.converter.Converter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConvertingComparator(Comparator&amp;lt;T&amp;gt;, Converter&amp;lt;S, T&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ConvertingComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConvertingComparator.html</Path>
    <Anchor>ConvertingComparator(java.util.Comparator, org.springframework.core.convert.converter.Converter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConvertingComparator(Comparator&amp;lt;T&amp;gt;, ConversionService, Class&amp;lt;? extends T&amp;gt;)</Name>
      <Type>Constructor</Type>
      <Scope>ConvertingComparator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/converter/ConvertingComparator.html</Path>
    <Anchor>ConvertingComparator(java.util.Comparator, org.springframework.core.convert.ConversionService, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConvertingPropertyEditorAdapter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.core.convert.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/ConvertingPropertyEditorAdapter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConvertingPropertyEditorAdapter(ConversionService, TypeDescriptor)</Name>
      <Type>Constructor</Type>
      <Scope>ConvertingPropertyEditorAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/ConvertingPropertyEditorAdapter.html</Path>
    <Anchor>ConvertingPropertyEditorAdapter(org.springframework.core.convert.ConversionService, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJaxbException(JAXBException)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>convertJaxbException(javax.xml.bind.JAXBException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJdbcAccessException(JDBCException, SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>convertJdbcAccessException(org.hibernate.JDBCException, org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJdbcAccessException(SQLException)</Name>
      <Type>instm</Type>
      <Scope>HibernateAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateAccessor.html</Path>
    <Anchor>convertJdbcAccessException(java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJdbcAccessException(JDBCException, SQLExceptionTranslator)</Name>
      <Type>instm</Type>
      <Scope>HibernateTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTransactionManager.html</Path>
    <Anchor>convertJdbcAccessException(org.hibernate.JDBCException, org.springframework.jdbc.support.SQLExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJdoAccessException(JDOException)</Name>
      <Type>instm</Type>
      <Scope>JdoAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoAccessor.html</Path>
    <Anchor>convertJdoAccessException(javax.jdo.JDOException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJdoAccessException(JDOException)</Name>
      <Type>instm</Type>
      <Scope>JdoTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTransactionManager.html</Path>
    <Anchor>convertJdoAccessException(javax.jdo.JDOException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJdoAccessException(JDOException)</Name>
      <Type>clm</Type>
      <Scope>PersistenceManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html</Path>
    <Anchor>convertJdoAccessException(javax.jdo.JDOException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJdoAccessException(JDOException)</Name>
      <Type>instm</Type>
      <Scope>JdoDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/JdoDaoSupport.html</Path>
    <Anchor>convertJdoAccessException(javax.jdo.JDOException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJibxException(JiBXException, boolean)</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>convertJibxException(org.jibx.runtime.JiBXException, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJmsAccessException(JMSException)</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>convertJmsAccessException(javax.jms.JMSException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJmsAccessException(JMSException)</Name>
      <Type>clm</Type>
      <Scope>JmsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsUtils.html</Path>
    <Anchor>convertJmsAccessException(javax.jms.JMSException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJmsInvokerAccessException(JMSException)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>convertJmsInvokerAccessException(javax.jms.JMSException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJndiName(String)</Name>
      <Type>instm</Type>
      <Scope>JndiLocatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiLocatorSupport.html</Path>
    <Anchor>convertJndiName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertJpaAccessExceptionIfPossible(RuntimeException)</Name>
      <Type>clm</Type>
      <Scope>EntityManagerFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryUtils.html</Path>
    <Anchor>convertJpaAccessExceptionIfPossible(java.lang.RuntimeException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertKey(Object)</Name>
      <Type>instm</Type>
      <Scope>CustomMapEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomMapEditor.html</Path>
    <Anchor>convertKey(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertKey(String)</Name>
      <Type>instm</Type>
      <Scope>LinkedCaseInsensitiveMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/LinkedCaseInsensitiveMap.html</Path>
    <Anchor>convertKey(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertNullSource(TypeDescriptor, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>GenericConversionService</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/GenericConversionService.html</Path>
    <Anchor>convertNullSource(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertNumberToTargetClass(Number, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>NumberUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/NumberUtils.html</Path>
    <Anchor>convertNumberToTargetClass(java.lang.Number, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertParameterValue(JRExporterParameter, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>convertParameterValue(net.sf.jasperreports.engine.JRExporterParameter, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertProperties(Properties)</Name>
      <Type>instm</Type>
      <Scope>PropertyResourceConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyResourceConfigurer.html</Path>
    <Anchor>convertProperties(java.util.Properties)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertProperty(String, String)</Name>
      <Type>instm</Type>
      <Scope>PropertyResourceConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyResourceConfigurer.html</Path>
    <Anchor>convertProperty(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertPropertyValue(String)</Name>
      <Type>instm</Type>
      <Scope>PropertyResourceConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertyResourceConfigurer.html</Path>
    <Anchor>convertPropertyValue(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertReportData(Object)</Name>
      <Type>clm</Type>
      <Scope>JasperReportsUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/jasperreports/JasperReportsUtils.html</Path>
    <Anchor>convertReportData(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertReportData(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>convertReportData(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertResourcePathToClassName(String)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>convertResourcePathToClassName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertResultValueIfNecessary(Object, MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>MBeanClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/access/MBeanClientInterceptor.html</Path>
    <Anchor>convertResultValueIfNecessary(java.lang.Object, org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertRmiAccessException(Method, Throwable, String)</Name>
      <Type>clm</Type>
      <Scope>RmiClientInterceptorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptorUtils.html</Path>
    <Anchor>convertRmiAccessException(java.lang.reflect.Method, java.lang.Throwable, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertRmiAccessException(Method, RemoteException, String)</Name>
      <Type>clm</Type>
      <Scope>RmiClientInterceptorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptorUtils.html</Path>
    <Anchor>convertRmiAccessException(java.lang.reflect.Method, java.rmi.RemoteException, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertRmiAccessException(Method, RemoteException, boolean, String)</Name>
      <Type>clm</Type>
      <Scope>RmiClientInterceptorUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RmiClientInterceptorUtils.html</Path>
    <Anchor>convertRmiAccessException(java.lang.reflect.Method, java.rmi.RemoteException, boolean, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertSource(Object)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>convertSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertToDisplayString(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractDataBoundFormElementTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html</Path>
    <Anchor>convertToDisplayString(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertToExporterParameter(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>convertToExporterParameter(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertToModelMBeanNotificationInfo(ManagedNotification)</Name>
      <Type>clm</Type>
      <Scope>JmxMetadataUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/metadata/JmxMetadataUtils.html</Path>
    <Anchor>convertToModelMBeanNotificationInfo(org.springframework.jmx.export.metadata.ManagedNotification)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertToScriptSource(String, String, ResourceLoader)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>convertToScriptSource(java.lang.String, java.lang.String, org.springframework.core.io.ResourceLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertToXopPackage()</Name>
      <Type>intfm</Type>
      <Scope>MimeContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/mime/MimeContainer.html</Path>
    <Anchor>convertToXopPackage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertTypedValue(EvaluationContext, TypedValue, Class&amp;lt;T&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>ExpressionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/common/ExpressionUtils.html</Path>
    <Anchor>convertTypedValue(org.springframework.expression.EvaluationContext, org.springframework.expression.TypedValue, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertUnderscoreNameToPropertyName(String)</Name>
      <Type>clm</Type>
      <Scope>JdbcUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/JdbcUtils.html</Path>
    <Anchor>convertUnderscoreNameToPropertyName(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertValue(Object)</Name>
      <Type>instm</Type>
      <Scope>CustomMapEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomMapEditor.html</Path>
    <Anchor>convertValue(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertValue(Object, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>convertValue(java.lang.Object, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertValue(TypedValue, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>ExpressionState</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/ExpressionState.html</Path>
    <Anchor>convertValue(org.springframework.expression.TypedValue, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertValue(Object, TypeDescriptor, TypeDescriptor)</Name>
      <Type>instm</Type>
      <Scope>StandardTypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/StandardTypeConverter.html</Path>
    <Anchor>convertValue(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertValue(Object, TypeDescriptor, TypeDescriptor)</Name>
      <Type>intfm</Type>
      <Scope>TypeConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/TypeConverter.html</Path>
    <Anchor>convertValue(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertValueToRequiredType(Object, Class)</Name>
      <Type>instm</Type>
      <Scope>SingleColumnRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SingleColumnRowMapper.html</Path>
    <Anchor>convertValueToRequiredType(java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertXmlBeansException(Exception, boolean)</Name>
      <Type>instm</Type>
      <Scope>XmlBeansMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html</Path>
    <Anchor>convertXmlBeansException(java.lang.Exception, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertXStreamException(Exception, boolean)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>convertXStreamException(java.lang.Exception, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cookie(Cookie...)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>cookie(javax.servlet.http.Cookie...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cookie()</Name>
      <Type>clm</Type>
      <Scope>MockMvcResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html</Path>
    <Anchor>cookie()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CookieGenerator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CookieGenerator()</Name>
      <Type>Constructor</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>CookieGenerator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CookieLocaleResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.i18n</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/CookieLocaleResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CookieLocaleResolver()</Name>
      <Type>Constructor</Type>
      <Scope>CookieLocaleResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/i18n/CookieLocaleResolver.html</Path>
    <Anchor>CookieLocaleResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CookieResultMatchers</Name>
      <Type>cl</Type>
      <Scope>org.springframework.test.web.servlet.result</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CookieResultMatchers()</Name>
      <Type>Constructor</Type>
      <Scope>CookieResultMatchers</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/result/CookieResultMatchers.html</Path>
    <Anchor>CookieResultMatchers()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CookieThemeResolver</Name>
      <Type>cl</Type>
      <Scope>org.springframework.web.servlet.theme</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/CookieThemeResolver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CookieThemeResolver()</Name>
      <Type>Constructor</Type>
      <Scope>CookieThemeResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/theme/CookieThemeResolver.html</Path>
    <Anchor>CookieThemeResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CookieValue</Name>
      <Type>clm</Type>
      <Scope>org.springframework.web.bind.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/CookieValue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy()</Name>
      <Type>Constructor</Type>
      <Scope>ConstructorArgumentValues.ValueHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html</Path>
    <Anchor>copy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy(File, File)</Name>
      <Type>clm</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>copy(java.io.File, java.io.File)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy(byte[], File)</Name>
      <Type>clm</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>copy(byte[], java.io.File)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy(InputStream, OutputStream)</Name>
      <Type>clm</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>copy(java.io.InputStream, java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy(byte[], OutputStream)</Name>
      <Type>clm</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>copy(byte[], java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy(Reader, Writer)</Name>
      <Type>clm</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>copy(java.io.Reader, java.io.Writer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy(String, Writer)</Name>
      <Type>clm</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>copy(java.lang.String, java.io.Writer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COPYABLE_FIELDS</Name>
      <Type>Field</Type>
      <Scope>ReflectionUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ReflectionUtils.html</Path>
    <Anchor>COPYABLE_FIELDS</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyAttributesFrom(AttributeAccessor)</Name>
      <Type>instm</Type>
      <Scope>AttributeAccessorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/AttributeAccessorSupport.html</Path>
    <Anchor>copyAttributesFrom(org.springframework.core.AttributeAccessor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyConfigurationFrom(AdvisedSupport)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyConfigurationFrom(AdvisedSupport, TargetSource, List&amp;lt;Advisor&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.TargetSource, java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyConfigurationFrom(ConfigurableBeanFactory)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyConfigurationFrom(ConfigurableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyConfigurationFrom(ConfigurableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyConfigurationFrom(ConfigurableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>DefaultListableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/DefaultListableBeanFactory.html</Path>
    <Anchor>copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyCustomEditorsTo(PropertyEditorRegistry, String)</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyDefaultEditorsTo(PropertyEditorRegistrySupport)</Name>
      <Type>instm</Type>
      <Scope>PropertyEditorRegistrySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/PropertyEditorRegistrySupport.html</Path>
    <Anchor>copyDefaultEditorsTo(org.springframework.beans.PropertyEditorRegistrySupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom(ProxyConfig)</Name>
      <Type>instm</Type>
      <Scope>ProxyConfig</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyConfig.html</Path>
    <Anchor>copyFrom(org.springframework.aop.framework.ProxyConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom(AbstractBeanFactoryBasedTargetSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html</Path>
    <Anchor>copyFrom(org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyModelParameters(Map&amp;lt;String, Object&amp;gt;, Transformer)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>copyModelParameters(java.util.Map, javax.xml.transform.Transformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyOutputProperties(Transformer)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>copyOutputProperties(javax.xml.transform.Transformer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyOverrides(ResourceOverridingShadowingClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ResourceOverridingShadowingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ResourceOverridingShadowingClassLoader.html</Path>
    <Anchor>copyOverrides(org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyProperties(Object, Object)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>copyProperties(java.lang.Object, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyProperties(Object, Object, Class&amp;lt;?&amp;gt;)</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>copyProperties(java.lang.Object, java.lang.Object, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyProperties(Object, Object, String[])</Name>
      <Type>clm</Type>
      <Scope>BeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/BeanUtils.html</Path>
    <Anchor>copyProperties(java.lang.Object, java.lang.Object, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPropertiesToBean(Annotation, Object, String...)</Name>
      <Type>clm</Type>
      <Scope>AnnotationBeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/annotation/AnnotationBeanUtils.html</Path>
    <Anchor>copyPropertiesToBean(java.lang.annotation.Annotation, java.lang.Object, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPropertiesToBean(Annotation, Object, StringValueResolver, String...)</Name>
      <Type>clm</Type>
      <Scope>AnnotationBeanUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/annotation/AnnotationBeanUtils.html</Path>
    <Anchor>copyPropertiesToBean(java.lang.annotation.Annotation, java.lang.Object, org.springframework.util.StringValueResolver, java.lang.String...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyQualifiersFrom(AbstractBeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanDefinition</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanDefinition.html</Path>
    <Anchor>copyQualifiersFrom(org.springframework.beans.factory.support.AbstractBeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyQualityValue(MediaType)</Name>
      <Type>instm</Type>
      <Scope>MediaType</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/MediaType.html</Path>
    <Anchor>copyQualityValue(org.springframework.http.MediaType)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyRecursively(File, File)</Name>
      <Type>clm</Type>
      <Scope>FileSystemUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileSystemUtils.html</Path>
    <Anchor>copyRecursively(java.io.File, java.io.File)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyRegisteredEditorsTo(PropertyEditorRegistry)</Name>
      <Type>intfm</Type>
      <Scope>ConfigurableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html</Path>
    <Anchor>copyRegisteredEditorsTo(org.springframework.beans.PropertyEditorRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyRegisteredEditorsTo(PropertyEditorRegistry)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>copyRegisteredEditorsTo(org.springframework.beans.PropertyEditorRegistry)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copySortDefinition(SortDefinition)</Name>
      <Type>instm</Type>
      <Scope>PagedListHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/support/PagedListHolder.html</Path>
    <Anchor>copySortDefinition(org.springframework.beans.support.SortDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo(MailMessage)</Name>
      <Type>instm</Type>
      <Scope>SimpleMailMessage</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/SimpleMailMessage.html</Path>
    <Anchor>copyTo(org.springframework.mail.MailMessage)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToByteArray(File)</Name>
      <Type>clm</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>copyToByteArray(java.io.File)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToByteArray(InputStream)</Name>
      <Type>clm</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>copyToByteArray(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToString(Reader)</Name>
      <Type>clm</Type>
      <Scope>FileCopyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/FileCopyUtils.html</Path>
    <Anchor>copyToString(java.io.Reader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTransformers(ShadowingClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ShadowingClassLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/instrument/classloading/ShadowingClassLoader.html</Path>
    <Anchor>copyTransformers(org.springframework.instrument.classloading.ShadowingClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countAdvicesOfType(Class)</Name>
      <Type>instm</Type>
      <Scope>AdvisedSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AdvisedSupport.html</Path>
    <Anchor>countAdvicesOfType(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countBeansIncludingAncestors(ListableBeanFactory)</Name>
      <Type>clm</Type>
      <Scope>BeanFactoryUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/BeanFactoryUtils.html</Path>
    <Anchor>countBeansIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countOccurrencesOf(String, String)</Name>
      <Type>clm</Type>
      <Scope>StringUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/StringUtils.html</Path>
    <Anchor>countOccurrencesOf(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countRowsInTable(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalDataSourceSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html</Path>
    <Anchor>countRowsInTable(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countRowsInTable(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit38SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html</Path>
    <Anchor>countRowsInTable(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countRowsInTable(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
    <Anchor>countRowsInTable(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countRowsInTable(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
    <Anchor>countRowsInTable(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countRowsInTable(JdbcTemplate, String)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>countRowsInTable(org.springframework.jdbc.core.JdbcTemplate, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countRowsInTable(SimpleJdbcTemplate, String)</Name>
      <Type>clm</Type>
      <Scope>SimpleJdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html</Path>
    <Anchor>countRowsInTable(org.springframework.jdbc.core.simple.SimpleJdbcTemplate, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countRowsInTableWhere(String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalJUnit4SpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html</Path>
    <Anchor>countRowsInTableWhere(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countRowsInTableWhere(String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionalTestNGSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html</Path>
    <Anchor>countRowsInTableWhere(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countRowsInTableWhere(JdbcTemplate, String, String)</Name>
      <Type>clm</Type>
      <Scope>JdbcTestUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jdbc/JdbcTestUtils.html</Path>
    <Anchor>countRowsInTableWhere(org.springframework.jdbc.core.JdbcTemplate, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create()</Name>
      <Type>instm</Type>
      <Scope>AbstractSlsbInvokerInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html</Path>
    <Anchor>create()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create(K)</Name>
      <Type>instm</Type>
      <Scope>CachingMapDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CachingMapDecorator.html</Path>
    <Anchor>create(K)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createActionURL()</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>createActionURL()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createActivationSpec(ResourceAdapter, JmsActivationSpecConfig)</Name>
      <Type>intfm</Type>
      <Scope>JmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsActivationSpecFactory.html</Path>
    <Anchor>createActivationSpec(javax.resource.spi.ResourceAdapter, org.springframework.jms.listener.endpoint.JmsActivationSpecConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createActivationSpec(ResourceAdapter, JmsActivationSpecConfig)</Name>
      <Type>instm</Type>
      <Scope>StandardJmsActivationSpecFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html</Path>
    <Anchor>createActivationSpec(javax.resource.spi.ResourceAdapter, org.springframework.jms.listener.endpoint.JmsActivationSpecConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAdvisorIntroducingNamedBean(String)</Name>
      <Type>clm</Type>
      <Scope>ExposeBeanNameAdvisors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ExposeBeanNameAdvisors.html</Path>
    <Anchor>createAdvisorIntroducingNamedBean(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAdvisorWithoutIntroduction(String)</Name>
      <Type>clm</Type>
      <Scope>ExposeBeanNameAdvisors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ExposeBeanNameAdvisors.html</Path>
    <Anchor>createAdvisorWithoutIntroduction(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAndConfigureMBean(Object, String)</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>createAndConfigureMBean(java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAndHoldSavepoint()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>createAndHoldSavepoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAopProxy(AdvisedSupport)</Name>
      <Type>intfm</Type>
      <Scope>AopProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopProxyFactory.html</Path>
    <Anchor>createAopProxy(org.springframework.aop.framework.AdvisedSupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAopProxy(AdvisedSupport)</Name>
      <Type>instm</Type>
      <Scope>DefaultAopProxyFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/DefaultAopProxyFactory.html</Path>
    <Anchor>createAopProxy(org.springframework.aop.framework.AdvisedSupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAopProxy()</Name>
      <Type>instm</Type>
      <Scope>ProxyCreatorSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyCreatorSupport.html</Path>
    <Anchor>createAopProxy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createApplicationContext(String[])</Name>
      <Type>instm</Type>
      <Scope>ContextJndiBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextJndiBeanFactoryLocator.html</Path>
    <Anchor>createApplicationContext(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createApplicationContext(BootstrapContext)</Name>
      <Type>instm</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>createApplicationContext(javax.resource.spi.BootstrapContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createApplicationContext(String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>createApplicationContext(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createApplicationContext(Object)</Name>
      <Type>instm</Type>
      <Scope>SpringTilesApplicationContextFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/SpringTilesApplicationContextFactory.html</Path>
    <Anchor>createApplicationContext(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createApplicationManagedEntityManager(EntityManager, EntityManagerPlusOperations)</Name>
      <Type>clm</Type>
      <Scope>ExtendedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
    <Anchor>createApplicationManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerPlusOperations)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createApplicationManagedEntityManager(EntityManager, EntityManagerPlusOperations, PersistenceExceptionTranslator)</Name>
      <Type>clm</Type>
      <Scope>ExtendedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
    <Anchor>createApplicationManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerPlusOperations, org.springframework.dao.support.PersistenceExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createApplicationManagedEntityManager(EntityManager, EntityManagerFactoryInfo)</Name>
      <Type>clm</Type>
      <Scope>ExtendedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
    <Anchor>createApplicationManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerFactoryInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createApproximateCollection(Object, int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createApproximateCollection(java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createApproximateMap(Object, int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createApproximateMap(java.lang.Object, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAsyncWebRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>clm</Type>
      <Scope>WebAsyncUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/async/WebAsyncUtils.html</Path>
    <Anchor>createAsyncWebRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAttribute(String, MethodParameter, WebDataBinderFactory, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.html</Path>
    <Anchor>createAttribute(java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.bind.support.WebDataBinderFactory, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAttribute(String, MethodParameter, WebDataBinderFactory, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ServletModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletModelAttributeMethodProcessor.html</Path>
    <Anchor>createAttribute(java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.bind.support.WebDataBinderFactory, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAttributeFromRequestValue(String, String, MethodParameter, WebDataBinderFactory, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ServletModelAttributeMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletModelAttributeMethodProcessor.html</Path>
    <Anchor>createAttributeFromRequestValue(java.lang.String, java.lang.String, org.springframework.core.MethodParameter, org.springframework.web.bind.support.WebDataBinderFactory, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBatch(Map[])</Name>
      <Type>clm</Type>
      <Scope>SqlParameterSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.html</Path>
    <Anchor>createBatch(java.util.Map[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBatch(Object[])</Name>
      <Type>clm</Type>
      <Scope>SqlParameterSourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.html</Path>
    <Anchor>createBatch(java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBean(Class&amp;lt;T&amp;gt;)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>createBean(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBean(Class, int, boolean)</Name>
      <Type>intfm</Type>
      <Scope>AutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html</Path>
    <Anchor>createBean(java.lang.Class, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBean(Class&amp;lt;T&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>createBean(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBean(Class, int, boolean)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>createBean(java.lang.Class, int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBean(String, RootBeanDefinition, Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>createBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBean(String, RootBeanDefinition, Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractBeanFactory.html</Path>
    <Anchor>createBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanDefinition(String, String, ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>BeanDefinitionReaderUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html</Path>
    <Anchor>createBeanDefinition(java.lang.String, java.lang.String, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanDefinition(String, String)</Name>
      <Type>instm</Type>
      <Scope>BeanDefinitionParserDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html</Path>
    <Anchor>createBeanDefinition(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanDefinitionDocumentReader()</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>createBeanDefinitionDocumentReader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanDefinitionReader(GenericApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanDefinitionReader(GenericApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractGenericContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractGenericContextLoader.html</Path>
    <Anchor>createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanDefinitionReader(GenericApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AnnotationConfigContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AnnotationConfigContextLoader.html</Path>
    <Anchor>createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanDefinitionReader(GenericApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>GenericPropertiesContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/GenericPropertiesContextLoader.html</Path>
    <Anchor>createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanDefinitionReader(GenericApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>GenericXmlContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/GenericXmlContextLoader.html</Path>
    <Anchor>createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanFactory(String[])</Name>
      <Type>instm</Type>
      <Scope>ContextJndiBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextJndiBeanFactoryLocator.html</Path>
    <Anchor>createBeanFactory(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>createBeanFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanFactoryBasedTargetSource(Class&amp;lt;?&amp;gt;, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractBeanFactoryBasedTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html</Path>
    <Anchor>createBeanFactoryBasedTargetSource(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanFactoryBasedTargetSource(Class, String)</Name>
      <Type>instm</Type>
      <Scope>LazyInitTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/LazyInitTargetSourceCreator.html</Path>
    <Anchor>createBeanFactoryBasedTargetSource(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanFactoryBasedTargetSource(Class, String)</Name>
      <Type>instm</Type>
      <Scope>QuickTargetSourceCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/target/QuickTargetSourceCreator.html</Path>
    <Anchor>createBeanFactoryBasedTargetSource(java.lang.Class, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanInstance(String, RootBeanDefinition, Object[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAutowireCapableBeanFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html</Path>
    <Anchor>createBeanInstance(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBeanWrapper()</Name>
      <Type>instm</Type>
      <Scope>BeanPropertyBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/BeanPropertyBindingResult.html</Path>
    <Anchor>createBeanWrapper()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinder(NativeWebRequest, Object, String)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>createBinder(org.springframework.web.context.request.NativeWebRequest, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinder(NativeWebRequest, Object, String)</Name>
      <Type>instm</Type>
      <Scope>DefaultDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultDataBinderFactory.html</Path>
    <Anchor>createBinder(org.springframework.web.context.request.NativeWebRequest, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinder(NativeWebRequest, Object, String)</Name>
      <Type>intfm</Type>
      <Scope>WebDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/WebDataBinderFactory.html</Path>
    <Anchor>createBinder(org.springframework.web.context.request.NativeWebRequest, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinder(PortletRequest, Object, String)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>createBinder(javax.portlet.PortletRequest, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinder(PortletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>createBinder(javax.portlet.PortletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinder(HttpServletRequest, Object, String)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinder(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinder(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>MultiActionController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html</Path>
    <Anchor>createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinderInstance(Object, String, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>DefaultDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/support/DefaultDataBinderFactory.html</Path>
    <Anchor>createBinderInstance(java.lang.Object, java.lang.String, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBinderInstance(Object, String, NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>ServletRequestDataBinderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/ServletRequestDataBinderFactory.html</Path>
    <Anchor>createBinderInstance(java.lang.Object, java.lang.String, org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBrowser(Session, Queue, String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>createBrowser(javax.jms.Session, javax.jms.Queue, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBrowser(Session, Queue, String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate102.html</Path>
    <Anchor>createBrowser(javax.jms.Session, javax.jms.Queue, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBshObject(String)</Name>
      <Type>clm</Type>
      <Scope>BshScriptUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptUtils.html</Path>
    <Anchor>createBshObject(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBshObject(String, Class[])</Name>
      <Type>clm</Type>
      <Scope>BshScriptUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptUtils.html</Path>
    <Anchor>createBshObject(java.lang.String, java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBshObject(String, Class[], ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>BshScriptUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/bsh/BshScriptUtils.html</Path>
    <Anchor>createBshObject(java.lang.String, java.lang.Class[], java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBurlapProxy(BurlapProxyFactory)</Name>
      <Type>instm</Type>
      <Scope>BurlapClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/BurlapClientInterceptor.html</Path>
    <Anchor>createBurlapProxy(com.caucho.burlap.client.BurlapProxyFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCache()</Name>
      <Type>instm</Type>
      <Scope>EhCacheFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/ehcache/EhCacheFactoryBean.html</Path>
    <Anchor>createCache()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCallableStatement(Connection)</Name>
      <Type>intfm</Type>
      <Scope>CallableStatementCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/CallableStatementCreator.html</Path>
    <Anchor>createCallableStatement(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCallString()</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>createCallString()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCciTemplate(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>CciDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/support/CciDaoSupport.html</Path>
    <Anchor>createCciTemplate(javax.resource.cci.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCollection(Class, int)</Name>
      <Type>instm</Type>
      <Scope>CustomCollectionEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomCollectionEditor.html</Path>
    <Anchor>createCollection(java.lang.Class, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCollection(Class&amp;lt;?&amp;gt;, int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createCollection(java.lang.Class, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCollection(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>Jaxb2CollectionHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.html</Path>
    <Anchor>createCollection(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createColumnMap(int)</Name>
      <Type>instm</Type>
      <Scope>ColumnMapRowMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ColumnMapRowMapper.html</Path>
    <Anchor>createColumnMap(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCommand()</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/mvc/BaseCommandController.html</Path>
    <Anchor>createCommand()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCommand()</Name>
      <Type>instm</Type>
      <Scope>BaseCommandController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/BaseCommandController.html</Path>
    <Anchor>createCommand()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCommonsHttpMethod(HttpMethod, String)</Name>
      <Type>instm</Type>
      <Scope>CommonsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
    <Anchor>createCommonsHttpMethod(org.springframework.http.HttpMethod, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCompositeInterface(Class[])</Name>
      <Type>instm</Type>
      <Scope>ProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/ProxyFactoryBean.html</Path>
    <Anchor>createCompositeInterface(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCompositeInterface(Class[])</Name>
      <Type>instm</Type>
      <Scope>JndiObjectFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiObjectFactoryBean.html</Path>
    <Anchor>createCompositeInterface(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCompositeInterface(Class[])</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>createCompositeInterface(java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCompositeInterface(Class&amp;lt;?&amp;gt;[], ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>ClassUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ClassUtils.html</Path>
    <Anchor>createCompositeInterface(java.lang.Class[], java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConcurrentMap(int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createConcurrentMap(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConcurrentMapCache(String)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentMapCacheManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/concurrent/ConcurrentMapCacheManager.html</Path>
    <Anchor>createConcurrentMapCache(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConcurrentMapIfPossible(int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createConcurrentMapIfPossible(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConfigInterface(BeanDefinition, Class[])</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>createConfigInterface(org.springframework.beans.factory.config.BeanDefinition, java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConfiguration()</Name>
      <Type>instm</Type>
      <Scope>FreeMarkerConfigurationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html</Path>
    <Anchor>createConfiguration()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>intfm</Type>
      <Scope>ConnectionFactoryUtils.ResourceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>createConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager102.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>createConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareConnectionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareConnectionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html</Path>
    <Anchor>createConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>createConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate102.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer102.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer102.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnection()</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>createConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnectionProxy(Connection)</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>createConnectionProxy(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConnectionSpec(Integer, Boolean, String, String)</Name>
      <Type>instm</Type>
      <Scope>WebSphereDataSourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/WebSphereDataSourceAdapter.html</Path>
    <Anchor>createConnectionSpec(java.lang.Integer, java.lang.Boolean, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConsumer(Session, Destination, String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>createConsumer(javax.jms.Session, javax.jms.Destination, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConsumer(Session, Destination, String)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate102.html</Path>
    <Anchor>createConsumer(javax.jms.Session, javax.jms.Destination, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConsumer(Session, Destination)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>createConsumer(javax.jms.Session, javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConsumer(Session, Destination)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer102.html</Path>
    <Anchor>createConsumer(javax.jms.Session, javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConsumer(Session, Destination)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>createConsumer(javax.jms.Session, javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConsumer(Session, Destination)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer102.html</Path>
    <Anchor>createConsumer(javax.jms.Session, javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContainerManagedEntityManager(EntityManager, EntityManagerPlusOperations)</Name>
      <Type>clm</Type>
      <Scope>ExtendedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
    <Anchor>createContainerManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerPlusOperations)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContainerManagedEntityManager(EntityManager, EntityManagerPlusOperations, PersistenceExceptionTranslator)</Name>
      <Type>clm</Type>
      <Scope>ExtendedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
    <Anchor>createContainerManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerPlusOperations, org.springframework.dao.support.PersistenceExceptionTranslator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContainerManagedEntityManager(EntityManager, EntityManagerFactoryInfo)</Name>
      <Type>clm</Type>
      <Scope>ExtendedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
    <Anchor>createContainerManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerFactoryInfo)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContainerManagedEntityManager(EntityManagerFactory)</Name>
      <Type>clm</Type>
      <Scope>ExtendedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
    <Anchor>createContainerManagedEntityManager(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContainerManagedEntityManager(EntityManagerFactory, Map)</Name>
      <Type>clm</Type>
      <Scope>ExtendedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/ExtendedEntityManagerCreator.html</Path>
    <Anchor>createContainerManagedEntityManager(javax.persistence.EntityManagerFactory, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContainerManagedEntityManager()</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>createContainerManagedEntityManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContentHandler(Node)</Name>
      <Type>clm</Type>
      <Scope>DomUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/DomUtils.html</Path>
    <Anchor>createContentHandler(org.w3c.dom.Node)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContentHandler(XMLStreamWriter)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createContentHandler(javax.xml.stream.XMLStreamWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContentHandler(XMLEventWriter)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createContentHandler(javax.xml.stream.XMLEventWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContextLoader()</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderListener</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoaderListener.html</Path>
    <Anchor>createContextLoader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createControlFlow()</Name>
      <Type>clm</Type>
      <Scope>ControlFlowFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/ControlFlowFactory.html</Path>
    <Anchor>createControlFlow()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConversionService()</Name>
      <Type>instm</Type>
      <Scope>ConversionServiceFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/ConversionServiceFactoryBean.html</Path>
    <Anchor>createConversionService()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCookie(String)</Name>
      <Type>instm</Type>
      <Scope>CookieGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/util/CookieGenerator.html</Path>
    <Anchor>createCookie(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCopyOnWriteSet()</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createCopyOnWriteSet()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCustomException(String, String, SQLException, Class)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>createCustomException(java.lang.String, java.lang.String, java.sql.SQLException, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCustomStaxResult(XMLStreamWriter)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createCustomStaxResult(javax.xml.stream.XMLStreamWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCustomStaxResult(XMLEventWriter)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createCustomStaxResult(javax.xml.stream.XMLEventWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCustomStaxSource(XMLStreamReader)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createCustomStaxSource(javax.xml.stream.XMLStreamReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCustomStaxSource(XMLEventReader)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createCustomStaxSource(javax.xml.stream.XMLEventReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDatabaseSchema()</Name>
      <Type>instm</Type>
      <Scope>LocalSessionFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/LocalSessionFactoryBean.html</Path>
    <Anchor>createDatabaseSchema()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDataBinderFactory(List&amp;lt;InvocableHandlerMethod&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>RequestMappingHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html</Path>
    <Anchor>createDataBinderFactory(java.util.List)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDataSource(InputStreamSource, String, String)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>createDataSource(org.springframework.core.io.InputStreamSource, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDateTimeFormatter()</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactory.html</Path>
    <Anchor>createDateTimeFormatter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDateTimeFormatter(DateTimeFormatter)</Name>
      <Type>instm</Type>
      <Scope>DateTimeFormatterFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/datetime/joda/DateTimeFormatterFactory.html</Path>
    <Anchor>createDateTimeFormatter(org.joda.time.format.DateTimeFormatter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultBeanWiringInfoResolver()</Name>
      <Type>instm</Type>
      <Scope>BeanConfigurerSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/wiring/BeanConfigurerSupport.html</Path>
    <Anchor>createDefaultBeanWiringInfoResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultConversionService()</Name>
      <Type>clm</Type>
      <Scope>ConversionServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/convert/support/ConversionServiceFactory.html</Path>
    <Anchor>createDefaultConversionService()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultInOutParameter(String, CallParameterMetaData)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>createDefaultInOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultInOutParameter(String, CallParameterMetaData)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>createDefaultInOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultInParameter(String, CallParameterMetaData)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>createDefaultInParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultInParameter(String, CallParameterMetaData)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>createDefaultInParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultNamespaceHandlerResolver()</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>createDefaultNamespaceHandlerResolver()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultOutParameter(String, CallParameterMetaData)</Name>
      <Type>intfm</Type>
      <Scope>CallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProvider.html</Path>
    <Anchor>createDefaultOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultOutParameter(String, CallParameterMetaData)</Name>
      <Type>instm</Type>
      <Scope>GenericCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html</Path>
    <Anchor>createDefaultOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultOutParameter(String, CallParameterMetaData)</Name>
      <Type>instm</Type>
      <Scope>OracleCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/OracleCallMetaDataProvider.html</Path>
    <Anchor>createDefaultOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultOutParameter(String, CallParameterMetaData)</Name>
      <Type>instm</Type>
      <Scope>PostgresCallMetaDataProvider</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html</Path>
    <Anchor>createDefaultOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultResourceRefLocator()</Name>
      <Type>clm</Type>
      <Scope>JndiLocatorDelegate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiLocatorDelegate.html</Path>
    <Anchor>createDefaultResourceRefLocator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultStrategy(ApplicationContext, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DispatcherPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/DispatcherPortlet.html</Path>
    <Anchor>createDefaultStrategy(org.springframework.context.ApplicationContext, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultStrategy(ApplicationContext, Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>DispatcherServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/DispatcherServlet.html</Path>
    <Anchor>createDefaultStrategy(org.springframework.context.ApplicationContext, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefaultTaskExecutor()</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer.html</Path>
    <Anchor>createDefaultTaskExecutor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefinition(String, String)</Name>
      <Type>instm</Type>
      <Scope>SingletonBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html</Path>
    <Anchor>createDefinition(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefinition(String, String)</Name>
      <Type>instm</Type>
      <Scope>ContextSingletonBeanFactoryLocator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html</Path>
    <Anchor>createDefinition(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDefinitionsFactory(DefinitionsFactoryConfig)</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles/TilesConfigurer.html</Path>
    <Anchor>createDefinitionsFactory(org.apache.struts.tiles.DefinitionsFactoryConfig)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDirectFieldAccessor()</Name>
      <Type>instm</Type>
      <Scope>DirectFieldBindingResult</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/DirectFieldBindingResult.html</Path>
    <Anchor>createDirectFieldAccessor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDocumentBuilder(DocumentBuilderFactory, EntityResolver, ErrorHandler)</Name>
      <Type>instm</Type>
      <Scope>DefaultDocumentLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultDocumentLoader.html</Path>
    <Anchor>createDocumentBuilder(javax.xml.parsers.DocumentBuilderFactory, org.xml.sax.EntityResolver, org.xml.sax.ErrorHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDocumentBuilder(DocumentBuilderFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>createDocumentBuilder(javax.xml.parsers.DocumentBuilderFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDocumentBuilderFactory(int, boolean)</Name>
      <Type>instm</Type>
      <Scope>DefaultDocumentLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultDocumentLoader.html</Path>
    <Anchor>createDocumentBuilderFactory(int, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createDocumentBuilderFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>createDocumentBuilderFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createElement(String)</Name>
      <Type>instm</Type>
      <Scope>MockPortletResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockPortletResponse.html</Path>
    <Anchor>createElement(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createElement(int)</Name>
      <Type>intfm</Type>
      <Scope>AutoPopulatingList.ElementFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/AutoPopulatingList.ElementFactory.html</Path>
    <Anchor>createElement(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEndpoint(XAResource)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
    <Anchor>createEndpoint(javax.transaction.xa.XAResource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEndpoint(XAResource, long)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
    <Anchor>createEndpoint(javax.transaction.xa.XAResource, long)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEndpoint(XAResource)</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointFactory.html</Path>
    <Anchor>createEndpoint(javax.transaction.xa.XAResource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEndpoint(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxWsServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html</Path>
    <Anchor>createEndpoint(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEndpointInternal()</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html</Path>
    <Anchor>createEndpointInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEndpointInternal()</Name>
      <Type>instm</Type>
      <Scope>GenericMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/endpoint/GenericMessageEndpointFactory.html</Path>
    <Anchor>createEndpointInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEndpointInternal()</Name>
      <Type>instm</Type>
      <Scope>JmsMessageEndpointFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/endpoint/JmsMessageEndpointFactory.html</Path>
    <Anchor>createEndpointInternal()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEntityManager()</Name>
      <Type>instm</Type>
      <Scope>EntityManagerFactoryAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/EntityManagerFactoryAccessor.html</Path>
    <Anchor>createEntityManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEntityManager(EntityManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>OpenEntityManagerInViewFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.html</Path>
    <Anchor>createEntityManager(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEntityManagerFactoryProxy(EntityManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEntityManagerForTransaction()</Name>
      <Type>instm</Type>
      <Scope>JpaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTransactionManager.html</Path>
    <Anchor>createEntityManagerForTransaction()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEntityManagerProxy(EntityManager)</Name>
      <Type>instm</Type>
      <Scope>JpaTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/JpaTemplate.html</Path>
    <Anchor>createEntityManagerProxy(javax.persistence.EntityManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEnvironment()</Name>
      <Type>instm</Type>
      <Scope>AbstractApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractApplicationContext.html</Path>
    <Anchor>createEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEnvironment()</Name>
      <Type>instm</Type>
      <Scope>SpringContextResourceAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/context/SpringContextResourceAdapter.html</Path>
    <Anchor>createEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEnvironment()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.html</Path>
    <Anchor>createEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEnvironment()</Name>
      <Type>instm</Type>
      <Scope>GenericWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/GenericWebApplicationContext.html</Path>
    <Anchor>createEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEnvironment()</Name>
      <Type>instm</Type>
      <Scope>StaticWebApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StaticWebApplicationContext.html</Path>
    <Anchor>createEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEnvironment()</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html</Path>
    <Anchor>createEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEnvironment()</Name>
      <Type>instm</Type>
      <Scope>StaticPortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StaticPortletApplicationContext.html</Path>
    <Anchor>createEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEnvironment()</Name>
      <Type>instm</Type>
      <Scope>GenericPortletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/GenericPortletBean.html</Path>
    <Anchor>createEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEnvironment()</Name>
      <Type>instm</Type>
      <Scope>HttpServletBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/HttpServletBean.html</Path>
    <Anchor>createEnvironment()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEventStreamReader(XMLEventReader)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createEventStreamReader(javax.xml.stream.XMLEventReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEventStreamWriter(XMLEventWriter)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createEventStreamWriter(javax.xml.stream.XMLEventWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEventStreamWriter(XMLEventWriter, XMLEventFactory)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createEventStreamWriter(javax.xml.stream.XMLEventWriter, javax.xml.stream.XMLEventFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createExecutor(int, ThreadFactory, RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ScheduledExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html</Path>
    <Anchor>createExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createExecutor(int, int, int, BlockingQueue&amp;lt;Runnable&amp;gt;, ThreadFactory, RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>createExecutor(int, int, int, java.util.concurrent.BlockingQueue, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createExecutor(int, ThreadFactory, RejectedExecutionHandler)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskScheduler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html</Path>
    <Anchor>createExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createExporter()</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsSingleFormatView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html</Path>
    <Anchor>createExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createExporter()</Name>
      <Type>instm</Type>
      <Scope>ConfigurableJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html</Path>
    <Anchor>createExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createExporter()</Name>
      <Type>instm</Type>
      <Scope>JasperReportsCsvView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsCsvView.html</Path>
    <Anchor>createExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createExporter()</Name>
      <Type>instm</Type>
      <Scope>JasperReportsHtmlView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsHtmlView.html</Path>
    <Anchor>createExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createExporter()</Name>
      <Type>instm</Type>
      <Scope>JasperReportsPdfView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsPdfView.html</Path>
    <Anchor>createExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createExporter()</Name>
      <Type>instm</Type>
      <Scope>JasperReportsXlsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/JasperReportsXlsView.html</Path>
    <Anchor>createExporter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFileTypeMap(Resource, String[])</Name>
      <Type>instm</Type>
      <Scope>ConfigurableMimeFileTypeMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html</Path>
    <Anchor>createFileTypeMap(org.springframework.core.io.Resource, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHandlerMethod(Object, Method)</Name>
      <Type>instm</Type>
      <Scope>AbstractHandlerMethodMapping</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.html</Path>
    <Anchor>createHandlerMethod(java.lang.Object, java.lang.reflect.Method)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHelper(XmlReaderContext, Element, BeanDefinitionParserDelegate)</Name>
      <Type>instm</Type>
      <Scope>DefaultBeanDefinitionDocumentReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html</Path>
    <Anchor>createHelper(org.springframework.beans.factory.xml.XmlReaderContext, org.w3c.dom.Element, org.springframework.beans.factory.xml.BeanDefinitionParserDelegate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHessianProxy(HessianProxyFactory)</Name>
      <Type>instm</Type>
      <Scope>HessianClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/caucho/HessianClientInterceptor.html</Path>
    <Anchor>createHessianProxy(com.caucho.hessian.client.HessianProxyFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHibernateTemplate(SessionFactory)</Name>
      <Type>instm</Type>
      <Scope>HibernateDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/support/HibernateDaoSupport.html</Path>
    <Anchor>createHibernateTemplate(org.hibernate.SessionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHttpContext(HttpMethod, URI)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>createHttpContext(org.springframework.http.HttpMethod, java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHttpInputMessage(NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>createHttpInputMessage(org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHttpInputMessage(HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>createHttpInputMessage(javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHttpOutputMessage(NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>HandlerMethodInvoker</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html</Path>
    <Anchor>createHttpOutputMessage(org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHttpOutputMessage(HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AnnotationMethodHandlerAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html</Path>
    <Anchor>createHttpOutputMessage(javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHttpPost(HttpInvokerClientConfiguration)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.html</Path>
    <Anchor>createHttpPost(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHttpUriRequest(HttpMethod, URI)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>createHttpUriRequest(org.springframework.http.HttpMethod, java.net.URI)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIdentityMapIfPossible(int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createIdentityMapIfPossible(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIndexedRecord(String)</Name>
      <Type>instm</Type>
      <Scope>NotSupportedRecordFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/NotSupportedRecordFactory.html</Path>
    <Anchor>createIndexedRecord(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIndexedRecord(String)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>createIndexedRecord(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInitialContext()</Name>
      <Type>instm</Type>
      <Scope>JndiTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jndi/JndiTemplate.html</Path>
    <Anchor>createInitialContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInitialContextFactory(Hashtable&amp;lt;?, ?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContextBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContextBuilder.html</Path>
    <Anchor>createInitialContextFactory(java.util.Hashtable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInputMessage(NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageConverterMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.html</Path>
    <Anchor>createInputMessage(org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInputRecord(RecordFactory, Object)</Name>
      <Type>instm</Type>
      <Scope>MappingCommAreaOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/MappingCommAreaOperation.html</Path>
    <Anchor>createInputRecord(javax.resource.cci.RecordFactory, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInputRecord(RecordFactory, Object)</Name>
      <Type>instm</Type>
      <Scope>MappingRecordOperation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/MappingRecordOperation.html</Path>
    <Anchor>createInputRecord(javax.resource.cci.RecordFactory, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInputSource(Resource)</Name>
      <Type>clm</Type>
      <Scope>SaxResourceUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/SaxResourceUtils.html</Path>
    <Anchor>createInputSource(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInsertString(String[])</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>createInsertString(java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInsertTypes()</Name>
      <Type>instm</Type>
      <Scope>TableMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataContext.html</Path>
    <Anchor>createInsertTypes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInstance()</Name>
      <Type>instm</Type>
      <Scope>AbstractFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/AbstractFactoryBean.html</Path>
    <Anchor>createInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInstance()</Name>
      <Type>instm</Type>
      <Scope>ListFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ListFactoryBean.html</Path>
    <Anchor>createInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInstance()</Name>
      <Type>instm</Type>
      <Scope>MapFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/MapFactoryBean.html</Path>
    <Anchor>createInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInstance()</Name>
      <Type>instm</Type>
      <Scope>ObjectFactoryCreatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ObjectFactoryCreatingFactoryBean.html</Path>
    <Anchor>createInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInstance()</Name>
      <Type>instm</Type>
      <Scope>PropertiesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertiesFactoryBean.html</Path>
    <Anchor>createInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInstance()</Name>
      <Type>instm</Type>
      <Scope>ProviderCreatingFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ProviderCreatingFactoryBean.html</Path>
    <Anchor>createInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInstance()</Name>
      <Type>instm</Type>
      <Scope>SetFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/SetFactoryBean.html</Path>
    <Anchor>createInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInstance()</Name>
      <Type>instm</Type>
      <Scope>AbstractServiceLoaderBasedFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/serviceloader/AbstractServiceLoaderBasedFactoryBean.html</Path>
    <Anchor>createInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInstance()</Name>
      <Type>instm</Type>
      <Scope>SortedResourcesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/config/SortedResourcesFactoryBean.html</Path>
    <Anchor>createInstance()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInterceptorDefinition(Node)</Name>
      <Type>instm</Type>
      <Scope>AbstractInterceptorDrivenBeanDefinitionDecorator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/config/AbstractInterceptorDrivenBeanDefinitionDecorator.html</Path>
    <Anchor>createInterceptorDefinition(org.w3c.dom.Node)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInvocationTraceName(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>AbstractMonitoringInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/AbstractMonitoringInterceptor.html</Path>
    <Anchor>createInvocationTraceName(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJaxRpcService()</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>createJaxRpcService()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJaxWsService()</Name>
      <Type>instm</Type>
      <Scope>LocalJaxWsServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.html</Path>
    <Anchor>createJaxWsService()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJdbcTemplate(DataSource)</Name>
      <Type>instm</Type>
      <Scope>JdbcDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/JdbcDaoSupport.html</Path>
    <Anchor>createJdbcTemplate(javax.sql.DataSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJdoTemplate(PersistenceManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>JdoDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/support/JdoDaoSupport.html</Path>
    <Anchor>createJdoTemplate(javax.jdo.PersistenceManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJmsTemplate(ConnectionFactory)</Name>
      <Type>instm</Type>
      <Scope>JmsGatewaySupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/support/JmsGatewaySupport.html</Path>
    <Anchor>createJmsTemplate(javax.jms.ConnectionFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJobInstance(TriggerFiredBundle)</Name>
      <Type>instm</Type>
      <Scope>AdaptableJobFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/AdaptableJobFactory.html</Path>
    <Anchor>createJobInstance(org.quartz.spi.TriggerFiredBundle)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJobInstance(TriggerFiredBundle)</Name>
      <Type>instm</Type>
      <Scope>SpringBeanJobFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SpringBeanJobFactory.html</Path>
    <Anchor>createJobInstance(org.quartz.spi.TriggerFiredBundle)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJpaTemplate(EntityManagerFactory)</Name>
      <Type>instm</Type>
      <Scope>JpaDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/JpaDaoSupport.html</Path>
    <Anchor>createJpaTemplate(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJpaTemplate(EntityManager)</Name>
      <Type>instm</Type>
      <Scope>JpaDaoSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/support/JpaDaoSupport.html</Path>
    <Anchor>createJpaTemplate(javax.persistence.EntityManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJRubyObject(String, Class[])</Name>
      <Type>clm</Type>
      <Scope>JRubyScriptUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/jruby/JRubyScriptUtils.html</Path>
    <Anchor>createJRubyObject(java.lang.String, java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createJRubyObject(String, Class[], ClassLoader)</Name>
      <Type>clm</Type>
      <Scope>JRubyScriptUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/jruby/JRubyScriptUtils.html</Path>
    <Anchor>createJRubyObject(java.lang.String, java.lang.Class[], java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createLinkedCaseInsensitiveMapIfPossible(int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createLinkedCaseInsensitiveMapIfPossible(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createLinkedMapIfPossible(int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createLinkedMapIfPossible(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createLinkedSetIfPossible(int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createLinkedSetIfPossible(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createListenerConsumer(Session)</Name>
      <Type>instm</Type>
      <Scope>AbstractPollingMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html</Path>
    <Anchor>createListenerConsumer(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createListenerConsumer(Session)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer.html</Path>
    <Anchor>createListenerConsumer(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createLob(PreparedStatement, boolean, OracleLobHandler.LobCallback)</Name>
      <Type>instm</Type>
      <Scope>OracleLobHandler.OracleLobCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html</Path>
    <Anchor>createLob(java.sql.PreparedStatement, boolean, org.springframework.jdbc.support.lob.OracleLobHandler.LobCallback)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMainInterceptor()</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>createMainInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMainInterceptor()</Name>
      <Type>instm</Type>
      <Scope>CacheProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/cache/interceptor/CacheProxyFactoryBean.html</Path>
    <Anchor>createMainInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMainInterceptor()</Name>
      <Type>instm</Type>
      <Scope>TransactionProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.html</Path>
    <Anchor>createMainInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMap(Class, int)</Name>
      <Type>instm</Type>
      <Scope>CustomMapEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomMapEditor.html</Path>
    <Anchor>createMap(java.lang.Class, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMap(Class&amp;lt;?&amp;gt;, int)</Name>
      <Type>clm</Type>
      <Scope>CollectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/CollectionFactory.html</Path>
    <Anchor>createMap(java.lang.Class, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMap(Connection)</Name>
      <Type>intfm</Type>
      <Scope>ParameterMapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/ParameterMapper.html</Path>
    <Anchor>createMap(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMappedRecord(String)</Name>
      <Type>instm</Type>
      <Scope>NotSupportedRecordFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/connection/NotSupportedRecordFactory.html</Path>
    <Anchor>createMappedRecord(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMappedRecord(String)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>createMappedRecord(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMarshaller(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxb2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter.html</Path>
    <Anchor>createMarshaller(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMarshaller()</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>createMarshaller()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMarshallingContext()</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>createMarshallingContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMBeanServer(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>MBeanServerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/support/MBeanServerFactoryBean.html</Path>
    <Anchor>createMBeanServer(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMergedOutputModel(Map&amp;lt;String, ?&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>createMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessage(Session)</Name>
      <Type>intfm</Type>
      <Scope>MessageCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/MessageCreator.html</Path>
    <Anchor>createMessage(javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessage(HttpServletRequest, String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractRequestLoggingFilter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/filter/AbstractRequestLoggingFilter.html</Path>
    <Anchor>createMessage(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessageForByteArray(byte[], Session)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>createMessageForByteArray(byte[], javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessageForMap(Map&amp;lt;?, ?&amp;gt;, Session)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>createMessageForMap(java.util.Map, javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessageFormat(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>MessageSourceSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/MessageSourceSupport.html</Path>
    <Anchor>createMessageFormat(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessageForNoExceptionThrown()</Name>
      <Type>instm</Type>
      <Scope>AssertThrows</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AssertThrows.html</Path>
    <Anchor>createMessageForNoExceptionThrown()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessageForSerializable(Serializable, Session)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>createMessageForSerializable(java.io.Serializable, javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessageForString(String, Session)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/converter/SimpleMessageConverter.html</Path>
    <Anchor>createMessageForString(java.lang.String, javax.jms.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessageForWrongThrownExceptionType(Exception)</Name>
      <Type>instm</Type>
      <Scope>AssertThrows</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AssertThrows.html</Path>
    <Anchor>createMessageForWrongThrownExceptionType(java.lang.Exception)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessageSource(String)</Name>
      <Type>instm</Type>
      <Scope>ResourceBundleThemeSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/context/support/ResourceBundleThemeSource.html</Path>
    <Anchor>createMessageSource(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMetaDataProvider(DataSource, CallMetaDataContext)</Name>
      <Type>clm</Type>
      <Scope>CallMetaDataProviderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html</Path>
    <Anchor>createMetaDataProvider(javax.sql.DataSource, org.springframework.jdbc.core.metadata.CallMetaDataContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMetaDataProvider(DataSource, TableMetaDataContext)</Name>
      <Type>clm</Type>
      <Scope>TableMetaDataProviderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.html</Path>
    <Anchor>createMetaDataProvider(javax.sql.DataSource, org.springframework.jdbc.core.metadata.TableMetaDataContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMetaDataProvider(DataSource, TableMetaDataContext, NativeJdbcExtractor)</Name>
      <Type>clm</Type>
      <Scope>TableMetaDataProviderFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.html</Path>
    <Anchor>createMetaDataProvider(javax.sql.DataSource, org.springframework.jdbc.core.metadata.TableMetaDataContext, org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMimeMessage()</Name>
      <Type>intfm</Type>
      <Scope>JavaMailSender</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSender.html</Path>
    <Anchor>createMimeMessage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMimeMessage(InputStream)</Name>
      <Type>intfm</Type>
      <Scope>JavaMailSender</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSender.html</Path>
    <Anchor>createMimeMessage(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMimeMessage()</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>createMimeMessage()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMimeMessage(InputStream)</Name>
      <Type>instm</Type>
      <Scope>JavaMailSenderImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/JavaMailSenderImpl.html</Path>
    <Anchor>createMimeMessage(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMimeMultiparts(MimeMessage, int)</Name>
      <Type>instm</Type>
      <Scope>MimeMessageHelper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mail/javamail/MimeMessageHelper.html</Path>
    <Anchor>createMimeMultiparts(javax.mail.internet.MimeMessage, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMockMvc(Filter[], MockServletConfig, WebApplicationContext, RequestBuilder, List&amp;lt;ResultMatcher&amp;gt;, List&amp;lt;ResultHandler&amp;gt;, Boolean)</Name>
      <Type>instm</Type>
      <Scope>MockMvcBuilderSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/MockMvcBuilderSupport.html</Path>
    <Anchor>createMockMvc(javax.servlet.Filter[], org.springframework.mock.web.MockServletConfig, org.springframework.web.context.WebApplicationContext, org.springframework.test.web.servlet.RequestBuilder, java.util.List, java.util.List, java.lang.Boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createModelMBean()</Name>
      <Type>instm</Type>
      <Scope>MBeanExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/MBeanExporter.html</Path>
    <Anchor>createModelMBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createModelMBeanOperationInfo(Method, String, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractReflectiveMBeanInfoAssembler</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html</Path>
    <Anchor>createModelMBeanOperationInfo(java.lang.reflect.Method, java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNamedValueInfo(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>AbstractCookieValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractCookieValueMethodArgumentResolver.html</Path>
    <Anchor>createNamedValueInfo(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNamedValueInfo(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>AbstractNamedValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.html</Path>
    <Anchor>createNamedValueInfo(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNamedValueInfo(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>ExpressionValueMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/ExpressionValueMethodArgumentResolver.html</Path>
    <Anchor>createNamedValueInfo(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNamedValueInfo(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestHeaderMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver.html</Path>
    <Anchor>createNamedValueInfo(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNamedValueInfo(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>RequestParamMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.html</Path>
    <Anchor>createNamedValueInfo(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNamedValueInfo(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>MatrixVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMethodArgumentResolver.html</Path>
    <Anchor>createNamedValueInfo(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNamedValueInfo(MethodParameter)</Name>
      <Type>instm</Type>
      <Scope>PathVariableMethodArgumentResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/PathVariableMethodArgumentResolver.html</Path>
    <Anchor>createNamedValueInfo(org.springframework.core.MethodParameter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNativeEntityManagerFactory()</Name>
      <Type>instm</Type>
      <Scope>AbstractEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html</Path>
    <Anchor>createNativeEntityManagerFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNativeEntityManagerFactory()</Name>
      <Type>instm</Type>
      <Scope>LocalContainerEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html</Path>
    <Anchor>createNativeEntityManagerFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNativeEntityManagerFactory()</Name>
      <Type>instm</Type>
      <Scope>LocalEntityManagerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/LocalEntityManagerFactoryBean.html</Path>
    <Anchor>createNativeEntityManagerFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObject()</Name>
      <Type>instm</Type>
      <Scope>AbstractLazyCreationTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractLazyCreationTargetSource.html</Path>
    <Anchor>createObject()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObjectInputStream(InputStream, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html</Path>
    <Anchor>createObjectInputStream(java.io.InputStream, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObjectInputStream(InputStream)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>createObjectInputStream(java.io.InputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObjectOutputStream(OutputStream)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationSerializingExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html</Path>
    <Anchor>createObjectOutputStream(java.io.OutputStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObjectPool()</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>createObjectPool()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createOptimalAccessor(EvaluationContext, Object, String)</Name>
      <Type>instm</Type>
      <Scope>ReflectivePropertyAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/expression/spel/support/ReflectivePropertyAccessor.html</Path>
    <Anchor>createOptimalAccessor(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createOutputMessage(NativeWebRequest)</Name>
      <Type>instm</Type>
      <Scope>AbstractMessageConverterMethodProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.html</Path>
    <Anchor>createOutputMessage(org.springframework.web.context.request.NativeWebRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createParameterNameDiscoverer()</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>createParameterNameDiscoverer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPersistenceManagerProxy(PersistenceManager)</Name>
      <Type>instm</Type>
      <Scope>JdoTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jdo/JdoTemplate.html</Path>
    <Anchor>createPersistenceManagerProxy(javax.jdo.PersistenceManager)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPointcut()</Name>
      <Type>instm</Type>
      <Scope>RegexpMethodPointcutAdvisor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/support/RegexpMethodPointcutAdvisor.html</Path>
    <Anchor>createPointcut()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPointcutExpression(Method, Class, String[])</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectJAdvisorFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html</Path>
    <Anchor>createPointcutExpression(java.lang.reflect.Method, java.lang.Class, java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPool()</Name>
      <Type>instm</Type>
      <Scope>AbstractPoolingTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/AbstractPoolingTargetSource.html</Path>
    <Anchor>createPool()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPool()</Name>
      <Type>instm</Type>
      <Scope>CommonsPoolTargetSource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/target/CommonsPoolTargetSource.html</Path>
    <Anchor>createPool()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPortletApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>FrameworkPortlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/FrameworkPortlet.html</Path>
    <Anchor>createPortletApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPostMethod(HttpInvokerClientConfiguration)</Name>
      <Type>instm</Type>
      <Scope>CommonsHttpInvokerRequestExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html</Path>
    <Anchor>createPostMethod(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPreparedStatement(Connection)</Name>
      <Type>intfm</Type>
      <Scope>PreparedStatementCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/PreparedStatementCreator.html</Path>
    <Anchor>createPreparedStatement(java.sql.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createProducer(Session, Destination)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate.html</Path>
    <Anchor>createProducer(javax.jms.Session, javax.jms.Destination)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createProperties()</Name>
      <Type>instm</Type>
      <Scope>PropertiesFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/PropertiesFactoryBean.html</Path>
    <Anchor>createProperties()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createProxy(Class&amp;lt;?&amp;gt;, String, Object[], TargetSource)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>createProxy(java.lang.Class, java.lang.String, java.lang.Object[], org.springframework.aop.TargetSource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueryString(List&amp;lt;Param&amp;gt;, Set&amp;lt;String&amp;gt;, boolean)</Name>
      <Type>instm</Type>
      <Scope>UrlTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/UrlTag.html</Path>
    <Anchor>createQueryString(java.util.List, java.util.Set, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueue(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>createQueue(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueue(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolExecutorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html</Path>
    <Anchor>createQueue(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueue(int)</Name>
      <Type>instm</Type>
      <Scope>ThreadPoolTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html</Path>
    <Anchor>createQueue(int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueueConnection()</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>createQueueConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueueConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>createQueueConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueueConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>createQueueConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueueConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>createQueueConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueueConnection()</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareConnectionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html</Path>
    <Anchor>createQueueConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueueConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareConnectionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html</Path>
    <Anchor>createQueueConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueueConnection()</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>createQueueConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQueueConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>createQueueConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createReaderContext(Resource)</Name>
      <Type>instm</Type>
      <Scope>XmlBeanDefinitionReader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html</Path>
    <Anchor>createReaderContext(org.springframework.core.io.Resource)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRecord(RecordCreator)</Name>
      <Type>instm</Type>
      <Scope>CciTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/CciTemplate.html</Path>
    <Anchor>createRecord(org.springframework.jca.cci.core.RecordCreator)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRecord(RecordFactory)</Name>
      <Type>intfm</Type>
      <Scope>RecordCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/core/RecordCreator.html</Path>
    <Anchor>createRecord(javax.resource.cci.RecordFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRecord(RecordFactory)</Name>
      <Type>instm</Type>
      <Scope>MappingRecordOperation.RecordCreatorImpl</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/cci/object/MappingRecordOperation.RecordCreatorImpl.html</Path>
    <Anchor>createRecord(javax.resource.cci.RecordFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createReference(ConcurrentReferenceHashMap.Entry&amp;lt;K, V&amp;gt;, int, ConcurrentReferenceHashMap.Reference&amp;lt;K, V&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap.ReferenceManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.ReferenceManager.html</Path>
    <Anchor>createReference(org.springframework.util.ConcurrentReferenceHashMap.Entry, int, org.springframework.util.ConcurrentReferenceHashMap.Reference)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createReferenceManager()</Name>
      <Type>instm</Type>
      <Scope>ConcurrentReferenceHashMap</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/ConcurrentReferenceHashMap.html</Path>
    <Anchor>createReferenceManager()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRefreshableProxy(TargetSource, Class[], boolean)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>createRefreshableProxy(org.springframework.aop.TargetSource, java.lang.Class[], boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRelative(String)</Name>
      <Type>instm</Type>
      <Scope>AbstractResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/AbstractResource.html</Path>
    <Anchor>createRelative(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRelative(String)</Name>
      <Type>instm</Type>
      <Scope>ClassPathResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/ClassPathResource.html</Path>
    <Anchor>createRelative(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRelative(String)</Name>
      <Type>instm</Type>
      <Scope>FileSystemResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/FileSystemResource.html</Path>
    <Anchor>createRelative(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRelative(String)</Name>
      <Type>intfm</Type>
      <Scope>Resource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/Resource.html</Path>
    <Anchor>createRelative(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRelative(String)</Name>
      <Type>instm</Type>
      <Scope>UrlResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/UrlResource.html</Path>
    <Anchor>createRelative(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRelative(String)</Name>
      <Type>instm</Type>
      <Scope>VfsResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/io/VfsResource.html</Path>
    <Anchor>createRelative(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRelative(String)</Name>
      <Type>instm</Type>
      <Scope>ServletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/ServletContextResource.html</Path>
    <Anchor>createRelative(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRelative(String)</Name>
      <Type>instm</Type>
      <Scope>PortletContextResource</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/PortletContextResource.html</Path>
    <Anchor>createRelative(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRemoteInvocation(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRemoteInvocation(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>JndiRmiClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/rmi/JndiRmiClientInterceptor.html</Path>
    <Anchor>createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRemoteInvocation(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>DefaultRemoteInvocationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/DefaultRemoteInvocationFactory.html</Path>
    <Anchor>createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRemoteInvocation(MethodInvocation)</Name>
      <Type>instm</Type>
      <Scope>RemoteInvocationBasedAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationBasedAccessor.html</Path>
    <Anchor>createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRemoteInvocation(MethodInvocation)</Name>
      <Type>intfm</Type>
      <Scope>RemoteInvocationFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/support/RemoteInvocationFactory.html</Path>
    <Anchor>createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRenderURL()</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>createRenderURL()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createReport(JRDataSourceProvider)</Name>
      <Type>instm</Type>
      <Scope>AbstractJasperReportsView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html</Path>
    <Anchor>createReport(net.sf.jasperreports.engine.JRDataSourceProvider)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod)</Name>
      <Type>instm</Type>
      <Scope>AbstractClientHttpRequestFactoryWrapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpRequestFactoryWrapper.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod, ClientHttpRequestFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractClientHttpRequestFactoryWrapper</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/AbstractClientHttpRequestFactoryWrapper.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.client.ClientHttpRequestFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod, ClientHttpRequestFactory)</Name>
      <Type>instm</Type>
      <Scope>BufferingClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/BufferingClientHttpRequestFactory.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.client.ClientHttpRequestFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod)</Name>
      <Type>intfm</Type>
      <Scope>ClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/ClientHttpRequestFactory.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod)</Name>
      <Type>instm</Type>
      <Scope>CommonsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/CommonsClientHttpRequestFactory.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod)</Name>
      <Type>instm</Type>
      <Scope>HttpComponentsClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod, ClientHttpRequestFactory)</Name>
      <Type>instm</Type>
      <Scope>InterceptingClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/InterceptingClientHttpRequestFactory.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.client.ClientHttpRequestFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod)</Name>
      <Type>instm</Type>
      <Scope>SimpleClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/SimpleClientHttpRequestFactory.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod)</Name>
      <Type>instm</Type>
      <Scope>HttpAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/client/support/HttpAccessor.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequest(URI, HttpMethod)</Name>
      <Type>instm</Type>
      <Scope>MockMvcClientHttpRequestFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/MockMvcClientHttpRequestFactory.html</Path>
    <Anchor>createRequest(java.net.URI, org.springframework.http.HttpMethod)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequestContext(HttpServletRequest, HttpServletResponse, Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>createRequestContext(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRequestMessage(Session, RemoteInvocation)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>createRequestMessage(javax.jms.Session, org.springframework.remoting.support.RemoteInvocation)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createResourceURL()</Name>
      <Type>instm</Type>
      <Scope>MockMimeResponse</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/web/portlet/MockMimeResponse.html</Path>
    <Anchor>createResourceURL()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createResponse(ClientHttpRequest)</Name>
      <Type>instm</Type>
      <Scope>DefaultResponseCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/response/DefaultResponseCreator.html</Path>
    <Anchor>createResponse(org.springframework.http.client.ClientHttpRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createResponse(ClientHttpRequest)</Name>
      <Type>intfm</Type>
      <Scope>ResponseCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/ResponseCreator.html</Path>
    <Anchor>createResponse(org.springframework.http.client.ClientHttpRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createResponseMessage(Message, Session, RemoteInvocationResult)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerServiceExporter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerServiceExporter.html</Path>
    <Anchor>createResponseMessage(javax.jms.Message, javax.jms.Session, org.springframework.remoting.support.RemoteInvocationResult)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createResult(HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>createResult(javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createResultsMap()</Name>
      <Type>instm</Type>
      <Scope>JdbcTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/JdbcTemplate.html</Path>
    <Anchor>createResultsMap()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createReturnResultSetParameter(String, RowMapper)</Name>
      <Type>instm</Type>
      <Scope>CallMetaDataContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/metadata/CallMetaDataContext.html</Path>
    <Anchor>createReturnResultSetParameter(java.lang.String, org.springframework.jdbc.core.RowMapper)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRootApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>AbstractContextLoaderInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/AbstractContextLoaderInitializer.html</Path>
    <Anchor>createRootApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRootApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>AbstractAnnotationConfigDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractAnnotationConfigDispatcherServletInitializer.html</Path>
    <Anchor>createRootApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSavepoint()</Name>
      <Type>instm</Type>
      <Scope>ConnectionHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/ConnectionHolder.html</Path>
    <Anchor>createSavepoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSavepoint()</Name>
      <Type>instm</Type>
      <Scope>JdbcTransactionObjectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html</Path>
    <Anchor>createSavepoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSavepoint()</Name>
      <Type>intfm</Type>
      <Scope>SavepointManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/SavepointManager.html</Path>
    <Anchor>createSavepoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSavepoint()</Name>
      <Type>instm</Type>
      <Scope>AbstractTransactionStatus</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/support/AbstractTransactionStatus.html</Path>
    <Anchor>createSavepoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createScanner(XmlReaderContext, boolean)</Name>
      <Type>instm</Type>
      <Scope>ComponentScanBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
    <Anchor>createScanner(org.springframework.beans.factory.xml.XmlReaderContext, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createScheduler(SchedulerFactory, String)</Name>
      <Type>instm</Type>
      <Scope>SchedulerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html</Path>
    <Anchor>createScheduler(org.quartz.SchedulerFactory, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createScopedProxy(BeanDefinitionHolder, BeanDefinitionRegistry, boolean)</Name>
      <Type>clm</Type>
      <Scope>ScopedProxyUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/scope/ScopedProxyUtils.html</Path>
    <Anchor>createScopedProxy(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createScriptedObjectBeanDefinition(BeanDefinition, String, ScriptSource, Class[])</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>createScriptedObjectBeanDefinition(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, org.springframework.scripting.ScriptSource, java.lang.Class[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createScriptFactoryBeanDefinition(BeanDefinition)</Name>
      <Type>instm</Type>
      <Scope>ScriptFactoryPostProcessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/support/ScriptFactoryPostProcessor.html</Path>
    <Anchor>createScriptFactoryBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createServer(RestTemplate)</Name>
      <Type>clm</Type>
      <Scope>MockRestServiceServer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/MockRestServiceServer.html</Path>
    <Anchor>createServer(org.springframework.web.client.RestTemplate)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createServer(RestGatewaySupport)</Name>
      <Type>clm</Type>
      <Scope>MockRestServiceServer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/client/MockRestServiceServer.html</Path>
    <Anchor>createServer(org.springframework.web.client.support.RestGatewaySupport)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createServerSpecificLoadTimeWeaver(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>DefaultContextLoadTimeWeaver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.html</Path>
    <Anchor>createServerSpecificLoadTimeWeaver(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createService(ServiceFactory)</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>createService(javax.xml.rpc.ServiceFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createServiceFactory()</Name>
      <Type>instm</Type>
      <Scope>LocalJaxRpcServiceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html</Path>
    <Anchor>createServiceFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createServiceLocatorException(Constructor, BeansException)</Name>
      <Type>Constructor</Type>
      <Scope>ServiceLocatorFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html</Path>
    <Anchor>createServiceLocatorException(java.lang.reflect.Constructor, org.springframework.beans.BeansException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createServletApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>AbstractAnnotationConfigDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractAnnotationConfigDispatcherServletInitializer.html</Path>
    <Anchor>createServletApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createServletApplicationContext()</Name>
      <Type>instm</Type>
      <Scope>AbstractDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.html</Path>
    <Anchor>createServletApplicationContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createServletRequest(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>MockHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.html</Path>
    <Anchor>createServletRequest(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createServletRequest(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>MockMultipartHttpServletRequestBuilder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder.html</Path>
    <Anchor>createServletRequest(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSession(Connection)</Name>
      <Type>intfm</Type>
      <Scope>ConnectionFactoryUtils.ResourceFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html</Path>
    <Anchor>createSession(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSession(Connection)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager.html</Path>
    <Anchor>createSession(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSession(Connection)</Name>
      <Type>instm</Type>
      <Scope>JmsTransactionManager102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/JmsTransactionManager102.html</Path>
    <Anchor>createSession(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSession(Connection, Integer)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>createSession(javax.jms.Connection, java.lang.Integer)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSession(Connection)</Name>
      <Type>instm</Type>
      <Scope>JmsTemplate102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/core/JmsTemplate102.html</Path>
    <Anchor>createSession(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSession(Connection)</Name>
      <Type>instm</Type>
      <Scope>DefaultMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/DefaultMessageListenerContainer102.html</Path>
    <Anchor>createSession(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSession(Connection)</Name>
      <Type>instm</Type>
      <Scope>SimpleMessageListenerContainer102</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/SimpleMessageListenerContainer102.html</Path>
    <Anchor>createSession(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSession(Connection)</Name>
      <Type>instm</Type>
      <Scope>JmsInvokerClientInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/remoting/JmsInvokerClientInterceptor.html</Path>
    <Anchor>createSession(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSession(Connection)</Name>
      <Type>instm</Type>
      <Scope>JmsAccessor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/support/JmsAccessor.html</Path>
    <Anchor>createSession(javax.jms.Connection)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSessionProxy(Session)</Name>
      <Type>instm</Type>
      <Scope>HibernateTemplate</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/HibernateTemplate.html</Path>
    <Anchor>createSessionProxy(org.hibernate.Session)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createShadowingClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>createShadowingClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSharedConnection()</Name>
      <Type>instm</Type>
      <Scope>AbstractJmsListeningContainer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/listener/AbstractJmsListeningContainer.html</Path>
    <Anchor>createSharedConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSharedEntityManager(EntityManagerFactory)</Name>
      <Type>clm</Type>
      <Scope>SharedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/SharedEntityManagerCreator.html</Path>
    <Anchor>createSharedEntityManager(javax.persistence.EntityManagerFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSharedEntityManager(EntityManagerFactory, Map)</Name>
      <Type>clm</Type>
      <Scope>SharedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/SharedEntityManagerCreator.html</Path>
    <Anchor>createSharedEntityManager(javax.persistence.EntityManagerFactory, java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSharedEntityManager(EntityManagerFactory, Map, Class...)</Name>
      <Type>clm</Type>
      <Scope>SharedEntityManagerCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/jpa/SharedEntityManagerCreator.html</Path>
    <Anchor>createSharedEntityManager(javax.persistence.EntityManagerFactory, java.util.Map, java.lang.Class...)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSqlRowSet(ResultSet)</Name>
      <Type>instm</Type>
      <Scope>SqlRowSetResultSetExtractor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/SqlRowSetResultSetExtractor.html</Path>
    <Anchor>createSqlRowSet(java.sql.ResultSet)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createStaxResult(XMLStreamWriter)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createStaxResult(javax.xml.stream.XMLStreamWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createStaxResult(XMLEventWriter)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createStaxResult(javax.xml.stream.XMLEventWriter)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createStaxSource(XMLStreamReader)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createStaxSource(javax.xml.stream.XMLStreamReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createStaxSource(XMLEventReader)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createStaxSource(javax.xml.stream.XMLEventReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSubcontext(String)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>createSubcontext(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSubcontext(Name)</Name>
      <Type>instm</Type>
      <Scope>SimpleNamingContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/mock/jndi/SimpleNamingContext.html</Path>
    <Anchor>createSubcontext(javax.naming.Name)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTagWriter()</Name>
      <Type>instm</Type>
      <Scope>AbstractFormTag</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/tags/form/AbstractFormTag.html</Path>
    <Anchor>createTagWriter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTargetSource(Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingletonProxyFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html</Path>
    <Anchor>createTargetSource(java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTargetUrl(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest)</Name>
      <Type>instm</Type>
      <Scope>RedirectView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/RedirectView.html</Path>
    <Anchor>createTargetUrl(java.util.Map, javax.servlet.http.HttpServletRequest)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTemporaryOutputStream()</Name>
      <Type>instm</Type>
      <Scope>AbstractView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractView.html</Path>
    <Anchor>createTemporaryOutputStream()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTest()</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>createTest()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTestContextManager(Class&amp;lt;?&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>SpringJUnit4ClassRunner</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html</Path>
    <Anchor>createTestContextManager(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createThread(Runnable)</Name>
      <Type>instm</Type>
      <Scope>CustomizableThreadCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
    <Anchor>createThread(java.lang.Runnable)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTilesInitializer()</Name>
      <Type>instm</Type>
      <Scope>TilesConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html</Path>
    <Anchor>createTilesInitializer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTilesRequest(HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>TilesView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/tiles3/TilesView.html</Path>
    <Anchor>createTilesRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTimer()</Name>
      <Type>instm</Type>
      <Scope>SimpleBootstrapContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jca/support/SimpleBootstrapContext.html</Path>
    <Anchor>createTimer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTimer(String, boolean)</Name>
      <Type>instm</Type>
      <Scope>TimerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerFactoryBean.html</Path>
    <Anchor>createTimer(java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTimer()</Name>
      <Type>instm</Type>
      <Scope>TimerTaskExecutor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/timer/TimerTaskExecutor.html</Path>
    <Anchor>createTimer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTopicConnection()</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>createTopicConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTopicConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>DelegatingConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/DelegatingConnectionFactory.html</Path>
    <Anchor>createTopicConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTopicConnection()</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>createTopicConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTopicConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>SingleConnectionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/SingleConnectionFactory.html</Path>
    <Anchor>createTopicConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTopicConnection()</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareConnectionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html</Path>
    <Anchor>createTopicConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTopicConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>TransactionAwareConnectionFactoryProxy</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html</Path>
    <Anchor>createTopicConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTopicConnection()</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>createTopicConnection()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTopicConnection(String, String)</Name>
      <Type>instm</Type>
      <Scope>UserCredentialsConnectionFactoryAdapter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html</Path>
    <Anchor>createTopicConnection(java.lang.String, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTransaction(JDBCContext, TransactionFactory.Context)</Name>
      <Type>instm</Type>
      <Scope>SpringTransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringTransactionFactory.html</Path>
    <Anchor>createTransaction(org.hibernate.jdbc.JDBCContext, org.hibernate.transaction.TransactionFactory.Context)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTransaction(String, int)</Name>
      <Type>instm</Type>
      <Scope>JtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/JtaTransactionManager.html</Path>
    <Anchor>createTransaction(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTransaction(String, int)</Name>
      <Type>instm</Type>
      <Scope>OC4JJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html</Path>
    <Anchor>createTransaction(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTransaction(String, int)</Name>
      <Type>instm</Type>
      <Scope>SimpleTransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/SimpleTransactionFactory.html</Path>
    <Anchor>createTransaction(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTransaction(String, int)</Name>
      <Type>intfm</Type>
      <Scope>TransactionFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/TransactionFactory.html</Path>
    <Anchor>createTransaction(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTransaction(String, int)</Name>
      <Type>instm</Type>
      <Scope>WebLogicJtaTransactionManager</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/jta/WebLogicJtaTransactionManager.html</Path>
    <Anchor>createTransaction(java.lang.String, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTransactionIfNecessary(Method, Class)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>createTransactionIfNecessary(java.lang.reflect.Method, java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTransactionIfNecessary(PlatformTransactionManager, TransactionAttribute, String)</Name>
      <Type>instm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>createTransactionIfNecessary(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTransformer(Templates)</Name>
      <Type>instm</Type>
      <Scope>XsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/XsltView.html</Path>
    <Anchor>createTransformer(javax.xml.transform.Templates)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTypeFilter(Element, ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>ComponentScanBeanDefinitionParser</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html</Path>
    <Anchor>createTypeFilter(org.w3c.dom.Element, java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTypeValue(Connection, int, String)</Name>
      <Type>instm</Type>
      <Scope>AbstractSqlTypeValue</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/core/support/AbstractSqlTypeValue.html</Path>
    <Anchor>createTypeValue(java.sql.Connection, int, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createUnmarshaller(Class)</Name>
      <Type>instm</Type>
      <Scope>AbstractJaxb2HttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter.html</Path>
    <Anchor>createUnmarshaller(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createUnmarshaller()</Name>
      <Type>instm</Type>
      <Scope>Jaxb2Marshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jaxb/Jaxb2Marshaller.html</Path>
    <Anchor>createUnmarshaller()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createUnmarshallingContext()</Name>
      <Type>instm</Type>
      <Scope>JibxMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/jibx/JibxMarshaller.html</Path>
    <Anchor>createUnmarshallingContext()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createURI(String)</Name>
      <Type>instm</Type>
      <Scope>URIEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/URIEditor.html</Path>
    <Anchor>createURI(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createVelocityContext(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>VelocityToolboxView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityToolboxView.html</Path>
    <Anchor>createVelocityContext(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createVelocityContext(Map&amp;lt;String, Object&amp;gt;, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>createVelocityContext(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createVelocityContext(Map&amp;lt;String, Object&amp;gt;)</Name>
      <Type>instm</Type>
      <Scope>VelocityView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/velocity/VelocityView.html</Path>
    <Anchor>createVelocityContext(java.util.Map)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createVelocityEngine()</Name>
      <Type>instm</Type>
      <Scope>VelocityEngineFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/ui/velocity/VelocityEngineFactory.html</Path>
    <Anchor>createVelocityEngine()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createView(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>AbstractCachingViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/AbstractCachingViewResolver.html</Path>
    <Anchor>createView(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createView(String, Locale)</Name>
      <Type>instm</Type>
      <Scope>UrlBasedViewResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/UrlBasedViewResolver.html</Path>
    <Anchor>createView(java.lang.String, java.util.Locale)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWebApplicationContext(ServletContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>createWebApplicationContext(javax.servlet.ServletContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWebApplicationContext(ServletContext, ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>createWebApplicationContext(javax.servlet.ServletContext, org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWebApplicationContext(ApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>createWebApplicationContext(org.springframework.context.ApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWebApplicationContext(WebApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>FrameworkServlet</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/FrameworkServlet.html</Path>
    <Anchor>createWebApplicationContext(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWebApplicationContext(WebApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLoaderPlugIn</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/struts/ContextLoaderPlugIn.html</Path>
    <Anchor>createWebApplicationContext(org.springframework.web.context.WebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWithResolvedBean()</Name>
      <Type>instm</Type>
      <Scope>HandlerMethod</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/method/HandlerMethod.html</Path>
    <Anchor>createWithResolvedBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createXMLContext(Resource[], Class[], String[])</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>createXMLContext(org.springframework.core.io.Resource[], java.lang.Class[], java.lang.String[])</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createXmlInputFactory()</Name>
      <Type>instm</Type>
      <Scope>Jaxb2CollectionHttpMessageConverter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.html</Path>
    <Anchor>createXmlInputFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createXmlReader()</Name>
      <Type>instm</Type>
      <Scope>AbstractMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/support/AbstractMarshaller.html</Path>
    <Anchor>createXmlReader()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createXMLReader(XMLStreamReader)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createXMLReader(javax.xml.stream.XMLStreamReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createXMLReader(XMLEventReader)</Name>
      <Type>clm</Type>
      <Scope>StaxUtils</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/xml/StaxUtils.html</Path>
    <Anchor>createXMLReader(javax.xml.stream.XMLEventReader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createXsltSource(Map&amp;lt;String, Object&amp;gt;, String, HttpServletRequest, HttpServletResponse)</Name>
      <Type>instm</Type>
      <Scope>AbstractXsltView</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/view/xslt/AbstractXsltView.html</Path>
    <Anchor>createXsltSource(java.util.Map, java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronSequenceGenerator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/CronSequenceGenerator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronSequenceGenerator(String, TimeZone)</Name>
      <Type>Constructor</Type>
      <Scope>CronSequenceGenerator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/CronSequenceGenerator.html</Path>
    <Anchor>CronSequenceGenerator(java.lang.String, java.util.TimeZone)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTask</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/CronTask.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTask(Runnable, String)</Name>
      <Type>Constructor</Type>
      <Scope>CronTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/CronTask.html</Path>
    <Anchor>CronTask(java.lang.Runnable, java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTask(Runnable, CronTrigger)</Name>
      <Type>Constructor</Type>
      <Scope>CronTask</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/config/CronTask.html</Path>
    <Anchor>CronTask(java.lang.Runnable, org.springframework.scheduling.support.CronTrigger)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTrigger</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/CronTrigger.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTrigger(String)</Name>
      <Type>Constructor</Type>
      <Scope>CronTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/CronTrigger.html</Path>
    <Anchor>CronTrigger(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTrigger(String, TimeZone)</Name>
      <Type>Constructor</Type>
      <Scope>CronTrigger</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/support/CronTrigger.html</Path>
    <Anchor>CronTrigger(java.lang.String, java.util.TimeZone)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTriggerBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTriggerBean()</Name>
      <Type>Constructor</Type>
      <Scope>CronTriggerBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerBean.html</Path>
    <Anchor>CronTriggerBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTriggerFactoryBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.quartz</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CronTriggerFactoryBean()</Name>
      <Type>Constructor</Type>
      <Scope>CronTriggerFactoryBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/quartz/CronTriggerFactoryBean.html</Path>
    <Anchor>CronTriggerFactoryBean()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CurrencyEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CurrencyEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CurrencyEditor()</Name>
      <Type>Constructor</Type>
      <Scope>CurrencyEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CurrencyEditor.html</Path>
    <Anchor>CurrencyEditor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CurrencyFormatter</Name>
      <Type>cl</Type>
      <Scope>org.springframework.format.number</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/CurrencyFormatter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CurrencyFormatter()</Name>
      <Type>Constructor</Type>
      <Scope>CurrencyFormatter</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/format/number/CurrencyFormatter.html</Path>
    <Anchor>CurrencyFormatter()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentFormObject(HttpServletRequest, Object)</Name>
      <Type>instm</Type>
      <Scope>AbstractFormController</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/mvc/AbstractFormController.html</Path>
    <Anchor>currentFormObject(javax.servlet.http.HttpServletRequest, java.lang.Object)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentInvocation()</Name>
      <Type>clm</Type>
      <Scope>ExposeInvocationInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/ExposeInvocationInterceptor.html</Path>
    <Anchor>currentInvocation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentJoinPoint()</Name>
      <Type>clm</Type>
      <Scope>AbstractAspectJAdvice</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/aspectj/AbstractAspectJAdvice.html</Path>
    <Anchor>currentJoinPoint()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentProxy()</Name>
      <Type>clm</Type>
      <Scope>AopContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/AopContext.html</Path>
    <Anchor>currentProxy()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentRequestAttributes()</Name>
      <Type>clm</Type>
      <Scope>RequestContextHolder</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/request/RequestContextHolder.html</Path>
    <Anchor>currentRequestAttributes()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentSession()</Name>
      <Type>instm</Type>
      <Scope>SpringSessionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate3/SpringSessionContext.html</Path>
    <Anchor>currentSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentSession()</Name>
      <Type>instm</Type>
      <Scope>SpringSessionContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/orm/hibernate4/SpringSessionContext.html</Path>
    <Anchor>currentSession()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentTransactionInfo()</Name>
      <Type>clm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>currentTransactionInfo()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentTransactionStatus()</Name>
      <Type>clm</Type>
      <Scope>TransactionAspectSupport</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/transaction/interceptor/TransactionAspectSupport.html</Path>
    <Anchor>currentTransactionStatus()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomAutowireConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.annotation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomAutowireConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>CustomAutowireConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html</Path>
    <Anchor>CustomAutowireConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomBooleanEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomBooleanEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomBooleanEditor(boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CustomBooleanEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomBooleanEditor.html</Path>
    <Anchor>CustomBooleanEditor(boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomBooleanEditor(String, String, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CustomBooleanEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomBooleanEditor.html</Path>
    <Anchor>CustomBooleanEditor(java.lang.String, java.lang.String, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomCollectionEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomCollectionEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomCollectionEditor(Class)</Name>
      <Type>Constructor</Type>
      <Scope>CustomCollectionEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomCollectionEditor.html</Path>
    <Anchor>CustomCollectionEditor(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomCollectionEditor(Class, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CustomCollectionEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomCollectionEditor.html</Path>
    <Anchor>CustomCollectionEditor(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomDateEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomDateEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomDateEditor(DateFormat, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CustomDateEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomDateEditor.html</Path>
    <Anchor>CustomDateEditor(java.text.DateFormat, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomDateEditor(DateFormat, boolean, int)</Name>
      <Type>Constructor</Type>
      <Scope>CustomDateEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomDateEditor.html</Path>
    <Anchor>CustomDateEditor(java.text.DateFormat, boolean, int)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomEditorConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomEditorConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomEditorConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>CustomEditorConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomEditorConfigurer.html</Path>
    <Anchor>CustomEditorConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableThreadCreator</Name>
      <Type>cl</Type>
      <Scope>org.springframework.util</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableThreadCreator()</Name>
      <Type>Constructor</Type>
      <Scope>CustomizableThreadCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
    <Anchor>CustomizableThreadCreator()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableThreadCreator(String)</Name>
      <Type>Constructor</Type>
      <Scope>CustomizableThreadCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/util/CustomizableThreadCreator.html</Path>
    <Anchor>CustomizableThreadCreator(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableThreadFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.backportconcurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/CustomizableThreadFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableThreadFactory()</Name>
      <Type>Constructor</Type>
      <Scope>CustomizableThreadFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/CustomizableThreadFactory.html</Path>
    <Anchor>CustomizableThreadFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableThreadFactory(String)</Name>
      <Type>Constructor</Type>
      <Scope>CustomizableThreadFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/backportconcurrent/CustomizableThreadFactory.html</Path>
    <Anchor>CustomizableThreadFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableThreadFactory</Name>
      <Type>cl</Type>
      <Scope>org.springframework.scheduling.concurrent</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/CustomizableThreadFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableThreadFactory()</Name>
      <Type>Constructor</Type>
      <Scope>CustomizableThreadFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/CustomizableThreadFactory.html</Path>
    <Anchor>CustomizableThreadFactory()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableThreadFactory(String)</Name>
      <Type>Constructor</Type>
      <Scope>CustomizableThreadFactory</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scheduling/concurrent/CustomizableThreadFactory.html</Path>
    <Anchor>CustomizableThreadFactory(java.lang.String)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableTraceInterceptor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.aop.interceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomizableTraceInterceptor()</Name>
      <Type>Constructor</Type>
      <Scope>CustomizableTraceInterceptor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/interceptor/CustomizableTraceInterceptor.html</Path>
    <Anchor>CustomizableTraceInterceptor()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customize(GroovyObject)</Name>
      <Type>intfm</Type>
      <Scope>GroovyObjectCustomizer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/scripting/groovy/GroovyObjectCustomizer.html</Path>
    <Anchor>customize(groovy.lang.GroovyObject)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeBeanFactory(DefaultListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshableApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/support/AbstractRefreshableApplicationContext.html</Path>
    <Anchor>customizeBeanFactory(org.springframework.beans.factory.support.DefaultListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeBeanFactory(DefaultListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractSingleSpringContextTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/AbstractSingleSpringContextTests.html</Path>
    <Anchor>customizeBeanFactory(org.springframework.beans.factory.support.DefaultListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeBeanFactory(DefaultListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractGenericContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractGenericContextLoader.html</Path>
    <Anchor>customizeBeanFactory(org.springframework.beans.factory.support.DefaultListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeBeanFactory(DefaultListableBeanFactory, WebMergedContextConfiguration)</Name>
      <Type>instm</Type>
      <Scope>AbstractGenericWebContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/AbstractGenericWebContextLoader.html</Path>
    <Anchor>customizeBeanFactory(org.springframework.beans.factory.support.DefaultListableBeanFactory, org.springframework.test.context.web.WebMergedContextConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeBeanFactory(DefaultListableBeanFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractRefreshablePortletApplicationContext</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html</Path>
    <Anchor>customizeBeanFactory(org.springframework.beans.factory.support.DefaultListableBeanFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeContext(GenericApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>AbstractGenericContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/support/AbstractGenericContextLoader.html</Path>
    <Anchor>customizeContext(org.springframework.context.support.GenericApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeContext(GenericWebApplicationContext, WebMergedContextConfiguration)</Name>
      <Type>instm</Type>
      <Scope>AbstractGenericWebContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/context/web/AbstractGenericWebContextLoader.html</Path>
    <Anchor>customizeContext(org.springframework.web.context.support.GenericWebApplicationContext, org.springframework.test.context.web.WebMergedContextConfiguration)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeContext(ServletContext, ConfigurableWebApplicationContext)</Name>
      <Type>instm</Type>
      <Scope>ContextLoader</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/ContextLoader.html</Path>
    <Anchor>customizeContext(javax.servlet.ServletContext, org.springframework.web.context.ConfigurableWebApplicationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeEvaluationContext(StandardEvaluationContext)</Name>
      <Type>instm</Type>
      <Scope>StandardBeanExpressionResolver</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/context/expression/StandardBeanExpressionResolver.html</Path>
    <Anchor>customizeEvaluationContext(org.springframework.expression.spel.support.StandardEvaluationContext)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeMarshaller(Marshaller)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>customizeMarshaller(org.exolab.castor.xml.Marshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizePropertySources(MutablePropertySources)</Name>
      <Type>instm</Type>
      <Scope>AbstractEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/AbstractEnvironment.html</Path>
    <Anchor>customizePropertySources(org.springframework.core.env.MutablePropertySources)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizePropertySources(MutablePropertySources)</Name>
      <Type>instm</Type>
      <Scope>StandardEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/core/env/StandardEnvironment.html</Path>
    <Anchor>customizePropertySources(org.springframework.core.env.MutablePropertySources)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizePropertySources(MutablePropertySources)</Name>
      <Type>instm</Type>
      <Scope>StandardServletEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/context/support/StandardServletEnvironment.html</Path>
    <Anchor>customizePropertySources(org.springframework.core.env.MutablePropertySources)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizePropertySources(MutablePropertySources)</Name>
      <Type>instm</Type>
      <Scope>StandardPortletEnvironment</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/portlet/context/StandardPortletEnvironment.html</Path>
    <Anchor>customizePropertySources(org.springframework.core.env.MutablePropertySources)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeProxyFactory(ProxyFactory)</Name>
      <Type>instm</Type>
      <Scope>AbstractAutoProxyCreator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html</Path>
    <Anchor>customizeProxyFactory(org.springframework.aop.framework.ProxyFactory)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeRegistration(ServletRegistration.Dynamic)</Name>
      <Type>instm</Type>
      <Scope>AbstractDispatcherServletInitializer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.html</Path>
    <Anchor>customizeRegistration(javax.servlet.ServletRegistration.Dynamic)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeResourceOverridingShadowingClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractAspectjJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractAspectjJpaTests.html</Path>
    <Anchor>customizeResourceOverridingShadowingClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeResourceOverridingShadowingClassLoader(ClassLoader)</Name>
      <Type>instm</Type>
      <Scope>AbstractJpaTests</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/test/jpa/AbstractJpaTests.html</Path>
    <Anchor>customizeResourceOverridingShadowingClassLoader(java.lang.ClassLoader)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeUnmarshaller(Unmarshaller)</Name>
      <Type>instm</Type>
      <Scope>CastorMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/castor/CastorMarshaller.html</Path>
    <Anchor>customizeUnmarshaller(org.exolab.castor.xml.Unmarshaller)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customizeXStream(XStream)</Name>
      <Type>instm</Type>
      <Scope>XStreamMarshaller</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/oxm/xstream/XStreamMarshaller.html</Path>
    <Anchor>customizeXStream(com.thoughtworks.xstream.XStream)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomMapEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomMapEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomMapEditor(Class)</Name>
      <Type>Constructor</Type>
      <Scope>CustomMapEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomMapEditor.html</Path>
    <Anchor>CustomMapEditor(java.lang.Class)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomMapEditor(Class, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CustomMapEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomMapEditor.html</Path>
    <Anchor>CustomMapEditor(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomNumberEditor</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.propertyeditors</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomNumberEditor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomNumberEditor(Class&amp;lt;? extends Number&amp;gt;, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CustomNumberEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomNumberEditor.html</Path>
    <Anchor>CustomNumberEditor(java.lang.Class, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomNumberEditor(Class&amp;lt;? extends Number&amp;gt;, NumberFormat, boolean)</Name>
      <Type>Constructor</Type>
      <Scope>CustomNumberEditor</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/propertyeditors/CustomNumberEditor.html</Path>
    <Anchor>CustomNumberEditor(java.lang.Class, java.text.NumberFormat, boolean)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomScopeConfigurer</Name>
      <Type>cl</Type>
      <Scope>org.springframework.beans.factory.config</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomScopeConfigurer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomScopeConfigurer()</Name>
      <Type>Constructor</Type>
      <Scope>CustomScopeConfigurer</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/beans/factory/config/CustomScopeConfigurer.html</Path>
    <Anchor>CustomScopeConfigurer()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomSQLErrorCodesTranslation</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLErrorCodesTranslation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomSQLErrorCodesTranslation()</Name>
      <Type>Constructor</Type>
      <Scope>CustomSQLErrorCodesTranslation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLErrorCodesTranslation.html</Path>
    <Anchor>CustomSQLErrorCodesTranslation()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomSQLExceptionTranslatorRegistrar</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistrar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomSQLExceptionTranslatorRegistrar()</Name>
      <Type>Constructor</Type>
      <Scope>CustomSQLExceptionTranslatorRegistrar</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistrar.html</Path>
    <Anchor>CustomSQLExceptionTranslatorRegistrar()</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomSQLExceptionTranslatorRegistry</Name>
      <Type>cl</Type>
      <Scope>org.springframework.jdbc.support</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>customTranslate(String, String, SQLException)</Name>
      <Type>instm</Type>
      <Scope>SQLErrorCodeSQLExceptionTranslator</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html</Path>
    <Anchor>customTranslate(java.lang.String, java.lang.String, java.sql.SQLException)</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomValidatorBean</Name>
      <Type>cl</Type>
      <Scope>org.springframework.validation.beanvalidation</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/CustomValidatorBean.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CustomValidatorBean()</Name>
      <Type>Constructor</Type>
      <Scope>CustomValidatorBean</Scope>
      <APILanguage>java</APILanguage>
    </TokenIdentifier>
    <Path>api/org/springframework/validation/beanvalidation/CustomValidatorBean.html</Path>
    <Anchor>CustomValidatorBean()</Anchor>
  </Token>
</Tokens>
